import json

# 1. Load d·ªØ li·ªáu ‚Äì gi·∫£ s·ª≠ dataset.json l√† m·ªôt m·∫£ng JSON
with open("dataset.json", "r", encoding="utf-8") as f:
    data = json.load(f)

# N·∫øu data kh√¥ng ph·∫£i list, in ra ki·ªÉu ƒë·ªÉ debug
if not isinstance(data, list):
    raise ValueError(f"Expected a list of examples, but got {type(data)}")

examples = data  # danh s√°ch dict m·ªói m·ª•c

# 2. Kh·ªüi t·∫°o danh s√°ch index
missing_question_idxs = []
empty_question_idxs   = []

# 3. Qu√©t qua t·ª´ng m·ª•c
for i, ex in enumerate(examples):
    # Thi·∫øu key "question"
    if "label" not in ex:
        missing_question_idxs.append(i)
    else:
        q = ex["label"]
        # C√≥ key nh∆∞ng r·ªóng ho·∫∑c ch·ªâ whitespace
        if not isinstance(q, str) or q.strip() == "":
            empty_question_idxs.append(i)

# 4. In t√≥m t·∫Øt k·∫øt qu·∫£
print(f"üîç C√≥ {len(missing_question_idxs)} m·ª•c KH√îNG c√≥ key 'question'.")
print(f"üîç C√≥ {len(empty_question_idxs)} m·ª•c c√≥ 'question' nh∆∞ng r·ªóng ho·∫∑c ch·ªâ whitespace.\n")

# 5. In chi ti·∫øt (t·ªëi ƒëa 10 m·ª•c m·ªói lo·∫°i) ƒë·ªÉ b·∫°n debug
print("=== M·ª•c THI·∫æU 'question' (t·ªëi ƒëa 10) ===")
for idx in missing_question_idxs[:10]:
    print(f"\n--- Index {idx} ---")
    print(examples[idx])

print("\n=== M·ª•c 'question' R·ªñNG (t·ªëi ƒëa 10) ===")
for idx in empty_question_idxs[:10]:
    print(f"\n--- Index {idx} ---")
    print(examples[idx])
