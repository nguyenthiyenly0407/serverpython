[
  {
    "question": "What is a JavaScript closure?",
    "label": "javascript",
    "language": "en",
    "context": "Closure concept in JS",
    "answer": "A closure is a function that retains access to its outer scope variables even after the outer function has returned. This allows private variables and memoization. Example:\n\n```js\nfunction outer() {\n  let count = 0;\n  return function() { return ++count; };\n}\nconst fn = outer();\nconsole.log(fn()); // 1\n```",
    "start_char": 0,
    "end_char": 315
  },
  {
    "question": "What is hoisting in JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "Hoisting behavior",
    "answer": "Hoisting is JS's default behavior of moving declarations to the top of their scope before execution. Variables declared with var are hoisted and initialized with undefined; functions are hoisted with full definition. let/const are hoisted but uninitialized, causing ReferenceError if accessed before declaration.",
    "start_char": 0,
    "end_char": 312
  },
  {
    "question": "What is the prototype in JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "Prototype chain basics",
    "answer": "In JS, every object has a prototype which is another object from which it inherits properties. The prototype chain allows property lookup up the chain. For functions, `Function.prototype` provides methods like call/apply, and `Object.prototype` is at the top of the chain.",
    "start_char": 0,
    "end_char": 272
  },
  {
    "question": "What is the JS event loop?",
    "label": "javascript",
    "language": "en",
    "context": "Event loop mechanism",
    "answer": "The event loop handles asynchronous callbacks. It continuously checks the call stack and task queue, executing queued callbacks when the stack is empty. Promises use a microtask queue which has priority over the task queue, enabling predictable async behavior.",
    "start_char": 0,
    "end_char": 260
  },
  {
    "question": "What is a Promise in JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "Promise basics",
    "answer": "A Promise represents an asynchronous operation that can be in pending, fulfilled, or rejected state. It provides `.then()` and `.catch()` methods to handle results or errors:\n```js\nfetch(url)\n  .then(res => res.json())\n  .catch(err => console.error(err));\n```",
    "start_char": 0,
    "end_char": 259
  },
  {
    "question": "What does 'use strict' do in JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "Strict mode overview",
    "answer": "Strict mode disables problematic JS features and enforces safer coding: throws errors on silent failures (e.g., assigning to undeclared variables), disallows duplicate parameter names, and changes `this` behavior. Enable with `'use strict';` at file or function top.",
    "start_char": 0,
    "end_char": 266
  },
  {
    "question": "What is an arrow function in JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "Arrow function basics",
    "answer": "Arrow functions are concise syntax for functions using `=>`. They inherit `this` from surrounding scope, lack own `arguments` object, and cannot be used as constructors:\n```js\nconst add = (a, b) => a + b;\n```",
    "start_char": 0,
    "end_char": 208
  },
  {
    "question": "What is the difference between localStorage and sessionStorage?",
    "label": "javascript",
    "language": "en",
    "context": "Web Storage basics",
    "answer": "Both store key-value pairs in the browser. `localStorage` persists data across sessions until explicitly cleared. `sessionStorage` data is cleared when the page session ends (e.g., tab closed). Both have ~5MB limit and store strings only.",
    "start_char": 0,
    "end_char": 238
  },
  {
    "question": "How does JavaScript's event delegation work?",
    "label": "javascript",
    "language": "en",
    "context": "Event delegation explanation",
    "answer": "Event delegation uses event bubbling: instead of attaching listeners to many child elements, attach a single listener on a parent, and check `event.target` to handle events from children, improving performance and dynamic content handling.",
    "start_char": 0,
    "end_char": 239
  },
  {
    "question": "Explain how the 'this' keyword works in JavaScript.",
    "label": "javascript",
    "language": "en",
    "context": "this binding rules",
    "answer": "'this' refers to the object context of a function call. In global context, it's the window (non-strict) or undefined (strict). In methods, it's the calling object. In constructors, it's the new instance. Arrow functions inherit 'this' from the enclosing scope.",
    "start_char": 0,
    "end_char": 260
  },
  {
    "question": "Describe how garbage collection works in JavaScript.",
    "label": "javascript",
    "language": "en",
    "context": "Memory management",
    "answer": "JS engines use automatic garbage collection (often mark-and-sweep). They track object references; when no references point to an object, it's eligible for collection. Developers should avoid memory leaks by clearing timers and DOM references.",
    "start_char": 0,
    "end_char": 242
  },
  {
    "question": "Explain the module pattern in JavaScript.",
    "label": "javascript",
    "language": "en",
    "context": "Module pattern overview",
    "answer": "The module pattern uses closures and IIFE to create private and public members:\n```js\nconst Module = (function() {\n  let privateVar;\n  return { publicMethod() { /* ... */ } };\n})();\n```\nThis encapsulates state and exposes an API.",
    "start_char": 0,
    "end_char": 229
  },
  {
    "question": "How does prototypal inheritance differ from classical inheritance?",
    "label": "javascript",
    "language": "en",
    "context": "Inheritance models",
    "answer": "Prototypal inheritance is object-based: objects inherit directly from other objects via prototype chain. Classical inheritance uses classes and instances. JS uses prototypes instead of classes (ES6 classes are syntactic sugar).",
    "start_char": 0,
    "end_char": 227
  },
  {
    "question": "Explain the difference between call, apply, and bind.",
    "label": "javascript",
    "language": "en",
    "context": "Function methods",
    "answer": "`call(thisArg, ...args)` invokes function with given `this` and args. `apply(thisArg, argsArray)` is similar but takes args in array. `bind(thisArg, ...args)` returns a new function permanently bound to `thisArg` and optionally preset arguments.",
    "start_char": 0,
    "end_char": 245
  },
  {
    "question": "Describe how fetch API handles HTTP errors.",
    "label": "javascript",
    "language": "en",
    "context": "Fetch API details",
    "answer": "Fetch resolves the Promise for any HTTP response, even 4xx/5xx; you must check `response.ok` to detect HTTP errors:\n```js\nfetch(url)\n  .then(res => { if (!res.ok) throw new Error(res.status); return res.json(); })\n```",
    "start_char": 0,
    "end_char": 217
  },
  {
    "question": "Explain the concept of currying in JavaScript.",
    "label": "javascript",
    "language": "en",
    "context": "Currying explanation",
    "answer": "Currying transforms a function with multiple arguments into a chain of functions each taking a single argument:\n```js\nfunction add(a) { return b => a + b; }\nconst add5 = add(5);\nconsole.log(add5(3)); // 8\n```\nIt enables partial application.",
    "start_char": 0,
    "end_char": 240
  },
  {
    "question": "Compare var, let, and const in JavaScript.",
    "label": "javascript",
    "language": "en",
    "context": "Variable declarations",
    "answer": "`var` is function-scoped and hoisted with undefined. `let` and `const` are block-scoped and hoisted but uninitialized (TDZ). `const` creates read-only bindings. Use `let` for reassignable variables, `const` for constants.",
    "start_char": 0,
    "end_char": 221
  },
  {
    "question": "Compare == and === in JavaScript.",
    "label": "javascript",
    "language": "en",
    "context": "Equality operators",
    "answer": "`==` compares with type coercion (e.g., `'' == 0` is true). `===` compares without type conversion, requiring same type and value. Prefer `===` to avoid unexpected coercion bugs.",
    "start_char": 0,
    "end_char": 178
  },
  {
    "question": "Compare callbacks and Promises for asynchronous JS.",
    "label": "javascript",
    "language": "en",
    "context": "Async patterns",
    "answer": "Callbacks can lead to callback hell and harder error handling. Promises allow chaining via `.then()` and `.catch()`, are easier to read, and avoid inverted pyramid. They also integrate with async/await.",
    "start_char": 0,
    "end_char": 202
  },
  {
    "question": "Compare forEach and map in JavaScript arrays.",
    "label": "javascript",
    "language": "en",
    "context": "Array iteration methods",
    "answer": "`forEach` executes a callback on each element without returning a new array. `map` returns a new array with results of callback. Use `map` when you need transformed array.",
    "start_char": 0,
    "end_char": 171
  },
  {
    "question": "Compare arrow functions and regular functions.",
    "label": "javascript",
    "language": "en",
    "context": "Function types",
    "answer": "Arrow functions are shorter, inherit `this`, lack `arguments`, and cannot be used as constructors. Regular functions have their own `this` and `arguments`, and can be used with `new`.",
    "start_char": 0,
    "end_char": 183
  },
  {
    "question": "Compare localStorage and cookies.",
    "label": "javascript",
    "language": "en",
    "context": "Client storage",
    "answer": "localStorage stores key-value pairs up to ~5MB, persists until cleared, accessible only via JS. Cookies are ~4KB, sent with every HTTP request, can have expiration and path, and accessible via HTTP and JS.",
    "start_char": 0,
    "end_char": 205
  },
  {
    "question": "Compare Node.js and Deno.",
    "label": "javascript",
    "language": "en",
    "context": "JS runtimes",
    "answer": "Node.js uses CommonJS modules, requires external dependency management, and has larger API. Deno uses ES modules, has built-in TypeScript support, secure by default (permissions), and single executable.",
    "start_char": 0,
    "end_char": 202
  },
  {
    "question": "Compare REST and GraphQL APIs.",
    "label": "javascript",
    "language": "en",
    "context": "API architectures",
    "answer": "REST uses multiple endpoints, returns fixed data structures. GraphQL uses a single endpoint, client-defined queries, reduces over-fetching, but requires schema and resolver setup.",
    "start_char": 0,
    "end_char": 179
  },
  {
    "question": "How to debounce a function in JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "Function optimization",
    "answer": "Debounce delays callback until after a wait period:\n```js\nfunction debounce(fn, wait) {\n  let timer;\n  return function(...args) {\n    clearTimeout(timer);\n    timer = setTimeout(() => fn.apply(this, args), wait);\n  };\n}\n```\nUse to limit rapid event firing.",
    "start_char": 0,
    "end_char": 256
  },
  {
    "question": "How to deep clone an object in JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "Object cloning",
    "answer": "For simple objects, use `JSON.parse(JSON.stringify(obj))`. For functions or prototypes, use structuredClone (modern browsers) or libraries like Lodash's `cloneDeep`:\n```js\nconst clone = structuredClone(obj);\n```",
    "start_char": 0,
    "end_char": 211
  },
  {
    "question": "How to perform AJAX requests in vanilla JavaScript?",
    "label": "javascript",
    "language": "en",
    "context": "XHR vs fetch",
    "answer": "Using fetch:\n```js\nfetch(url)\n  .then(res => res.json())\n  .then(data => console.log(data))\n  .catch(err => console.error(err));\n```\nFor older support, use `XMLHttpRequest` and handle `onreadystatechange`.",
    "start_char": 0,
    "end_char": 205
  },
  {
    "question": "How to handle errors in async/await?",
    "label": "javascript",
    "language": "en",
    "context": "Async error handling",
    "answer": "Wrap await calls in try/catch:\n```js\nasync function fetchData() {\n  try {\n    const res = await fetch(url);\n    if (!res.ok) throw new Error(res.status);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.error('Fetch error:', err);\n  }\n}\n```",
    "start_char": 0,
    "end_char": 273
  },
  {
    "question": "How to add event listeners to multiple elements?",
    "label": "javascript",
    "language": "en",
    "context": "DOM manipulation",
    "answer": "Use `querySelectorAll` and loop:\n```js\ndocument.querySelectorAll('.btn').forEach(btn => {\n  btn.addEventListener('click', e => console.log('clicked', e));\n});\n```",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "How to detect if an object is an array?",
    "label": "javascript",
    "language": "en",
    "context": "Type checking",
    "answer": "Use `Array.isArray(obj)` which returns true for arrays. Alternatively, `obj instanceof Array`, but may fail across iframes.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to create a Promise manually?",
    "label": "javascript",
    "language": "en",
    "context": "Promise creation",
    "answer": "Use the Promise constructor:\n```js\nconst p = new Promise((resolve, reject) => {\n  if (success) resolve(result);\n  else reject(error);\n});\np.then(...).catch(...);\n```",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "How to implement a module loader in the browser?",
    "label": "javascript",
    "language": "en",
    "context": "Module loading",
    "answer": "Use dynamic `import()` for ES modules:\n```js\nimport('./module.js')\n  .then(mod => mod.default())\n  .catch(err => console.error(err));\n```\nOr use AMD loaders like RequireJS for older patterns.",
    "start_char": 0,
    "end_char": 191
  },
  {
    "question": "Why do I get 'Cannot read property \\'foo\\' of undefined'?",
    "label": "javascript",
    "language": "en",
    "context": "Property access error",
    "answer": "This means you're accessing .foo on undefined. Likely the object wasn't initialized or a selector returned null. Check your references and ensure the variable exists before access (e.g., `if (obj) obj.foo`).",
    "start_char": 0,
    "end_char": 207
  },
  {
    "question": "Why am I getting 'Unexpected token < in JSON at position 0'?",
    "label": "javascript",
    "language": "en",
    "context": "JSON parsing error",
    "answer": "This usually occurs when the response isn't valid JSON (often HTML error page). Ensure the server returns JSON and use `res.json()` only for JSON responses.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "Why does 'NaN' appear in my calculations?",
    "label": "javascript",
    "language": "en",
    "context": "Number error",
    "answer": "NaN indicates an invalid or unrepresentable number (e.g., division by zero or parsing non-numeric string). Check inputs and use `Number()` or `parseFloat()` to convert strings.",
    "start_char": 0,
    "end_char": 176
  },
  {
    "question": "Why am I seeing 'Uncaught TypeError: x is not a function'?",
    "label": "javascript",
    "language": "en",
    "context": "TypeError handling",
    "answer": "This happens when you try to invoke something that's not a function. Check if x is defined and is a function, not a variable holding another type.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "Why does my loop not stop? 'RangeError: Maximum call stack size exceeded'",
    "label": "javascript",
    "language": "en",
    "context": "Recursion error",
    "answer": "This means infinite recursion or too deep calls. Check your recursive function's base case and ensure it terminates properly.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Why am I getting 'ReferenceError: event is not defined'?",
    "label": "javascript",
    "language": "en",
    "context": "ReferenceError handling",
    "answer": "In handlers, ensure you define parameters: `element.onclick = function(event) { ... }`. Without `event` param, using `event` reference causes this error.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "Why do I see 'SyntaxError: Unexpected identifier'?",
    "label": "javascript",
    "language": "en",
    "context": "Syntax error",
    "answer": "This happens when JS encounters an identifier where it expects something else (e.g., missing comma, bracket). Check code syntax around the error location.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "Why do I get 'SyntaxError: Unexpected end of input'?",
    "label": "javascript",
    "language": "en",
    "context": "Parsing error",
    "answer": "Usually indicates missing closing bracket, parenthesis, or quote. Ensure all code blocks and strings are properly closed.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Why is my JSON.stringify skipping functions?",
    "label": "javascript",
    "language": "en",
    "context": "JSON serialization",
    "answer": "JSON only supports data types like object, array, number, string, boolean, and null. Functions are ignored. To serialize functions, convert them to strings manually.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "Uncaught TypeError: Cannot read properties of undefined (reading 'map')",
    "label": "javascript",
    "language": "en",
    "context": "Array method error",
    "answer": "This occurs when you call `.map()` on undefined. Ensure the variable is an array. Initialize it `[]` or check `if (Array.isArray(arr))` before mapping.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "Uncaught ReferenceError: React is not defined",
    "label": "javascript",
    "language": "en",
    "context": "React setup error",
    "answer": "Occurs when using JSX without importing React (pre-React 17) or missing import. Add `import React from 'react';` or configure Babel with automatic JSX runtime.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "Uncaught SyntaxError: Unexpected token <",
    "label": "javascript",
    "language": "en",
    "context": "Syntax error in JS",
    "answer": "Often means you're loading an HTML file instead of JS (e.g., incorrect script src). Check the URL and ensure server serves JS, not HTML (404 pages are HTML).",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "Uncaught TypeError: data.json is not a function",
    "label": "javascript",
    "language": "en",
    "context": "Response handling error",
    "answer": "This happens when `data` isn't a Response object. Ensure you're calling `.json()` on the fetch Response: `fetch().then(res => res.json())`, not on the parsed data.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "Uncaught TypeError: Assignment to constant variable.",
    "label": "javascript",
    "language": "en",
    "context": "const reassignment error",
    "answer": "Occurs when you try to reassign a `const` variable. Use `let` instead if reassignment is needed, or avoid reassigning constants.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Uncaught RangeError: Invalid array length",
    "label": "javascript",
    "language": "en",
    "context": "Array constructor error",
    "answer": "Thrown when you pass a negative or non-integer to `Array(n)`. Ensure length is a valid non-negative integer. For variable-length arrays, use `[]` and push items.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "Uncaught URIError: URI malformed",
    "label": "javascript",
    "language": "en",
    "context": "URI encoding error",
    "answer": "This happens when `decodeURI` receives malformed URI sequences. Use `decodeURIComponent` carefully or validate the input string.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Uncaught EvalError: Code generation from strings disallowed",
    "label": "javascript",
    "language": "en",
    "context": "Eval security error",
    "answer": "Some environments disallow `eval`. Avoid using eval for security reasons; use safer alternatives like `new Function()` with caution or proper parsers.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "Uncaught ReferenceError: module is not defined",
    "label": "javascript",
    "language": "en",
    "context": "Module system error",
    "answer": "Occurs when using CommonJS `module.exports` in a browser without bundler. Use ES modules (`export`) or configure bundler like Webpack to handle CommonJS.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "What is Python?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Python overview",
    "answer": "Python is a high-level, interpreted programming language known for its readability and concise syntax. It supports multiple paradigms including procedural, object-oriented, and functional programming, and has a large standard library.",
    "start_char": 0,
    "end_char": 234
  },
  {
    "question": "What is PEP 8?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Coding style",
    "answer": "PEP 8 is the Python Enhancement Proposal that provides guidelines and best practices on how to write Python code for maximum readability. It covers naming conventions, indentation, line length, and more.",
    "start_char": 0,
    "end_char": 203
  },
  {
    "question": "What is a Python list?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Data structures",
    "answer": "A list is an ordered, mutable collection of items in Python that can hold elements of different types. Lists use square brackets, e.g., `my_list = [1, 'a', 3.14]`, and support indexing, slicing, and methods like append(), remove(), and sort().",
    "start_char": 0,
    "end_char": 243
  },
  {
    "question": "What is a Python dictionary?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Data structures",
    "answer": "A dictionary is an unordered, mutable collection of key-value pairs in Python. It uses curly braces, e.g., `my_dict = {'a': 1, 'b': 2}`, and supports methods like keys(), values(), items(), get(), and pop().",
    "start_char": 0,
    "end_char": 207
  },
  {
    "question": "What is a tuple in Python?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Data structures",
    "answer": "A tuple is an ordered, immutable collection of items in Python. Defined with parentheses, e.g., `my_tuple = (1, 2, 3)`, tuples support indexing and slicing but do not support item assignment or methods that modify the structure.",
    "start_char": 0,
    "end_char": 228
  },
  {
    "question": "What is a set in Python?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Data structures",
    "answer": "A set is an unordered collection of unique elements in Python. Defined with curly braces or the set() function, e.g., `my_set = {1, 2, 3}`, it supports operations like union, intersection, and difference.",
    "start_char": 0,
    "end_char": 204
  },
  {
    "question": "What is slicing in Python?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Sequence operations",
    "answer": "Slicing extracts a subsequence from a sequence type (list, tuple, string) using the syntax `sequence[start:stop:step]`. For example, `my_list[1:5:2]` returns elements at indices 1 and 3.",
    "start_char": 0,
    "end_char": 186
  },
  {
    "question": "What is a decorator in Python?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Functions",
    "answer": "A decorator is a function that modifies the behavior of another function or method. Applied with the `@decorator` syntax above a function definition, it wraps the original function with additional logic.",
    "start_char": 0,
    "end_char": 203
  },
  {
    "question": "What is a generator in Python?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Iterators",
    "answer": "A generator is a function that yields values one at a time using the `yield` keyword, returning an iterator. It allows lazy evaluation and efficient memory usage for large sequences.",
    "start_char": 0,
    "end_char": 182
  },
  {
    "question": "What is a context manager in Python?",
    "label": "python",
    "language": "en",
    "context": "Factoid: Resource management",
    "answer": "A context manager is an object that defines `__enter__` and `__exit__` methods, used with the `with` statement to manage resources. For example, `with open('file') as f:` ensures the file is closed afterward.",
    "start_char": 0,
    "end_char": 208
  },
  {
    "question": "How to read a file in Python?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: File I/O",
    "answer": "Use `open()` with a mode, then read methods:\n```python\nwith open('file.txt', 'r') as f:\n    data = f.read()\n```This ensures file is closed automatically.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to write to a file in Python?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: File I/O",
    "answer": "Use `open()` with write mode:\n```python\nwith open('file.txt', 'w') as f:\n    f.write('Hello')\n```Use 'a' mode to append instead of overwrite.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to handle exceptions in Python?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Error handling",
    "answer": "Use try/except/finally:\n```python\ntry:\n    risky_operation()\nexcept ValueError as e:\n    handle(e)\nfinally:\n    cleanup()\n```You can catch multiple exception types in one block.",
    "start_char": 0,
    "end_char": 177
  },
  {
    "question": "How to connect to a SQLite database in Python?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Database access",
    "answer": "Use sqlite3 module:\n```python\nimport sqlite3\nconn = sqlite3.connect('db.sqlite')\ncursor = conn.cursor()\ncursor.execute('SELECT * FROM table')\nrows = cursor.fetchall()\nconn.close()\n```",
    "start_char": 0,
    "end_char": 183
  },
  {
    "question": "How to use pandas to read a CSV file?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Data analysis",
    "answer": "Use `pandas.read_csv()`:\n```python\nimport pandas as pd\ndf = pd.read_csv('data.csv')\nprint(df.head())\n```You can specify delimiters, headers, and dtypes.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "How to send HTTP requests with requests library?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Networking",
    "answer": "Use `requests`:\n```python\nimport requests\nresponse = requests.get('https://api.example.com')\nif response.ok:\n    data = response.json()\n```It supports GET, POST, headers, and timeouts.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "How to parse JSON in Python?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Data parsing",
    "answer": "Use `json` module:\n```python\nimport json\ndata = json.loads(json_string)\n# or from file:\nwith open('file.json') as f:\n    data = json.load(f)\n```",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to create and activate a virtual environment?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Environment management",
    "answer": "Use venv:\n```bash\npython3 -m venv venv\nsource venv/bin/activate  # Linux/macOS\nvenv\\Scripts\\activate    # Windows\n```",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to install packages using pip?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Package management",
    "answer": "Use `pip install`:\n```bash\npip install requests\n```You can specify versions: `pip install django==3.2`. Use `pip freeze` to list installed packages.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to write a simple unit test with unittest?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Testing",
    "answer": "Use `unittest`:\n```python\nimport unittest\nclass TestMath(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(1+1, 2)\nif __name__ == '__main__':\n    unittest.main()\n```",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "How to schedule a task with cron in Python?",
    "label": "python",
    "language": "en",
    "context": "Descriptive: Automation",
    "answer": "Use `cron` with a script or schedule inside Python:\n```bash\n# crontab entry:\n0 0 * * * /usr/bin/python3 /path/to/script.py\n```Or use APScheduler for in-app scheduling.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "Compare list and tuple in Python.",
    "label": "python",
    "language": "en",
    "context": "Comparison: list vs tuple",
    "answer": "Lists are mutable and support methods like append(), while tuples are immutable and slightly faster. Use tuples for fixed collections and lists when you need to modify data.",
    "start_char": 0,
    "end_char": 173
  },
  {
    "question": "Compare list and set in Python.",
    "label": "python",
    "language": "en",
    "context": "Comparison: list vs set",
    "answer": "Lists allow duplicates and preserve order; sets remove duplicates and are unordered. Sets offer fast membership tests (O(1)), while lists use O(n).",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Compare Python 2 and Python 3.",
    "label": "python",
    "language": "en",
    "context": "Comparison: versions",
    "answer": "Python 3 uses Unicode for strings, enforces print() function, and removes old modules. Python 2 reached end-of-life; use Python 3 for modern features and security.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "Compare '==' and 'is' operators in Python.",
    "label": "python",
    "language": "en",
    "context": "Comparison: equality",
    "answer": "`==` checks value equality by calling __eq__, while `is` checks identity (same object in memory). Use `is` for singletons like None.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Compare deep copy and shallow copy in Python.",
    "label": "python",
    "language": "en",
    "context": "Comparison: copying",
    "answer": "Shallow copy (`copy.copy`) copies the top-level object but references nested objects. Deep copy (`copy.deepcopy`) recursively copies all nested objects, creating independent copies.",
    "start_char": 0,
    "end_char": 181
  },
  {
    "question": "Compare dict.get() and dict[] access in Python.",
    "label": "python",
    "language": "en",
    "context": "Comparison: dict access",
    "answer": "`dict[key]` raises KeyError if key missing, while `dict.get(key, default)` returns default (None if not provided), avoiding exceptions.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "Compare for loops and list comprehensions.",
    "label": "python",
    "language": "en",
    "context": "Comparison: loops",
    "answer": "For loops are more verbose and allow multiple statements, while list comprehensions provide concise syntax for creating lists in one expression, often faster.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "Compare %-formatting, format(), and f-strings.",
    "label": "python",
    "language": "en",
    "context": "Comparison: string formatting",
    "answer": "`%` is older C-style formatting, `format()` is more powerful with field names, and f-strings (Python 3.6+) embed expressions directly and are more readable.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "Compare threading and multiprocessing in Python.",
    "label": "python",
    "language": "en",
    "context": "Comparison: concurrency",
    "answer": "Threading shares memory but limited by GIL for CPU-bound tasks; multiprocessing uses separate processes with separate memory, bypassing GIL but with higher overhead.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "Compare range() and xrange() in Python 2 vs Python 3.",
    "label": "python",
    "language": "en",
    "context": "Comparison: iteration",
    "answer": "In Python 2, range() returns a list and xrange() returns a generator. In Python 3, xrange() is removed and range() behaves like Python 2's xrange, returning a lazy sequence.",
    "start_char": 0,
    "end_char": 173
  },
  {
    "question": "How to install Python on Ubuntu?",
    "label": "python",
    "language": "en",
    "context": "How-to: installation",
    "answer": "Use apt:\n```bash\nsudo apt update\nsudo apt install python3 python3-pip\n```Verify with `python3 --version`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to create a virtual environment with venv?",
    "label": "python",
    "language": "en",
    "context": "How-to: environment",
    "answer": "Run:\n```bash\npython3 -m venv myenv\nsource myenv/bin/activate\n```Use `deactivate` to exit.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to write a list comprehension?",
    "label": "python",
    "language": "en",
    "context": "How-to: list comprehension",
    "answer": "Syntax: `[expr for item in iterable if condition]`. E.g., `[x*2 for x in range(5) if x%2==0]` yields `[0,4,8]`.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to implement a binary search in Python?",
    "label": "python",
    "language": "en",
    "context": "How-to: algorithms",
    "answer": "Implement with recursion or loop on a sorted list:\n```python\ndef binary_search(arr, x):\n    lo, hi = 0, len(arr)-1\n    while lo<=hi:\n        mid=(lo+hi)//2\n        if arr[mid]==x: return mid\n        if arr[mid]<x: lo=mid+1\n        else: hi=mid-1\n    return -1\n```",
    "start_char": 0,
    "end_char": 263
  },
  {
    "question": "How to send an email with smtplib?",
    "label": "python",
    "language": "en",
    "context": "How-to: email",
    "answer": "Use smtplib:\n```python\nimport smtplib\nwith smtplib.SMTP('smtp.example.com',587) as smtp:\n    smtp.starttls()\n    smtp.login(user,pass)\n    smtp.sendmail(from_addr, to_addr, msg)\n```",
    "start_char": 0,
    "end_char": 181
  },
  {
    "question": "How to use argparse for CLI arguments?",
    "label": "python",
    "language": "en",
    "context": "How-to: CLI",
    "answer": "Use argparse:\n```python\nimport argparse\nparser=argparse.ArgumentParser()\nparser.add_argument('--count', type=int)\nargs=parser.parse_args()\n```Run script with `--count 5`.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "How to use asyncio for concurrency?",
    "label": "python",
    "language": "en",
    "context": "How-to: async",
    "answer": "Use asyncio:\n```python\nimport asyncio\nasync def main():\n    await asyncio.sleep(1)\nasyncio.run(main())\n```Gather tasks with `asyncio.gather`.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to generate random numbers?",
    "label": "python",
    "language": "en",
    "context": "How-to: random",
    "answer": "Use random module:\n```python\nimport random\nn = random.randint(1,10)\n# for floats:\nf = random.random()\n```",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to create a REST API with Flask?",
    "label": "python",
    "language": "en",
    "context": "How-to: web development",
    "answer": "Install Flask and write:\n```python\nfrom flask import Flask\napp=Flask(__name__)\n@app.route('/')\ndef home(): return 'Hello'\nif __name__=='__main__': app.run()\n```",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "How to parse command output using subprocess?",
    "label": "python",
    "language": "en",
    "context": "How-to: subprocess",
    "answer": "Use subprocess.run:\n```python\nimport subprocess\nres = subprocess.run(['ls','-l'], capture_output=True, text=True)\nprint(res.stdout)\n```",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "NameError: name 'x' is not defined, how to fix?",
    "label": "python",
    "language": "en",
    "context": "Common Error: NameError",
    "answer": "This occurs when variable x is not defined in scope. Ensure x is assigned before use or correct the variable name.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "IndentationError: unexpected indent, how to resolve?",
    "label": "python",
    "language": "en",
    "context": "Common Error: Indentation",
    "answer": "Check code indentation: use spaces consistently (PEP8 recommends 4 spaces), and align blocks properly without mixing tabs and spaces.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "TypeError: 'int' object is not iterable, why and how to fix?",
    "label": "python",
    "language": "en",
    "context": "Common Error: TypeError",
    "answer": "This means you're trying to loop over an int. Ensure the variable is a sequence (list, tuple) or convert it to one.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "TypeError: unsupported operand types for +: 'int' and 'str', how to fix?",
    "label": "python",
    "language": "en",
    "context": "Common Error: TypeError",
    "answer": "This means you're adding an int and str. Convert int to str (`str(num)`) or str to int (`int(str)`) before concatenation or addition.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "AttributeError: 'list' object has no attribute 'foo', what's wrong?",
    "label": "python",
    "language": "en",
    "context": "Common Error: AttributeError",
    "answer": "The list type doesn't have a method 'foo'. Check for typos or use a valid method like append(), pop(), etc.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "ImportError: No module named 'requests', how to solve?",
    "label": "python",
    "language": "en",
    "context": "Common Error: ImportError",
    "answer": "Install the module with `pip install requests` or ensure it's in your PYTHONPATH and virtual environment is activated.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "ValueError: too many values to unpack, what causes this?",
    "label": "python",
    "language": "en",
    "context": "Common Error: ValueError",
    "answer": "Occurs when unpacking expects fewer values. Ensure the number of variables matches elements in the iterable.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "ZeroDivisionError: division by zero, how to prevent?",
    "label": "python",
    "language": "en",
    "context": "Common Error: ZeroDivision",
    "answer": "Check denominator before division or wrap in try/except to handle or avoid dividing by zero.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "KeyError: 'key', why and how to handle?",
    "label": "python",
    "language": "en",
    "context": "Common Error: KeyError",
    "answer": "This means the key is not in the dictionary. Use dict.get('key', default) or check `if key in dict` before access.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "ModuleNotFoundError: No module named 'xyz', what's next?",
    "label": "python",
    "language": "en",
    "context": "Specific Error: ModuleNotFound",
    "answer": "Ensure the module is installed (`pip install xyz`), spelled correctly, and available in the active environment.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "SyntaxError: invalid syntax at line 1, how to debug?",
    "label": "python",
    "language": "en",
    "context": "Specific Error: SyntaxError",
    "answer": "This indicates a syntax mistake. Check for missing colons, parentheses, or incorrect indentation at the indicated line.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "What is Java?",
    "label": "java",
    "language": "en",
    "context": "Factoid: Java overview",
    "answer": "Java is a high-level, class-based, object-oriented programming language designed to have as few implementation dependencies as possible. It runs on the Java Virtual Machine (JVM) and emphasizes portability across platforms.",
    "start_char": 0,
    "end_char": 223
  },
  {
    "question": "What is the JVM?",
    "label": "java",
    "language": "en",
    "context": "Factoid: JVM concept",
    "answer": "The Java Virtual Machine (JVM) is an abstract computing machine that enables Java bytecode to be executed on any device or operating system. It handles memory management, garbage collection, and provides runtime environment.",
    "start_char": 0,
    "end_char": 224
  },
  {
    "question": "What is the JDK?",
    "label": "java",
    "language": "en",
    "context": "Factoid: JDK definition",
    "answer": "The Java Development Kit (JDK) is a software development environment used for developing Java applications. It includes the JRE, compiler (javac), debugger, and various development tools.",
    "start_char": 0,
    "end_char": 187
  },
  {
    "question": "What is the difference between JDK and JRE?",
    "label": "java",
    "language": "en",
    "context": "Factoid: JDK vs JRE",
    "answer": "JDK (Java Development Kit) includes tools for developing Java applications (compiler, debugger, etc.) and the JRE. JRE (Java Runtime Environment) only provides libraries and JVM to run Java programs without development tools.",
    "start_char": 0,
    "end_char": 225
  },
  {
    "question": "What is the JVM garbage collector?",
    "label": "java",
    "language": "en",
    "context": "Factoid: GC in JVM",
    "answer": "The garbage collector (GC) in the JVM automatically manages memory by reclaiming objects that are no longer reachable in the heap, reducing memory leaks and optimizing application performance.",
    "start_char": 0,
    "end_char": 192
  },
  {
    "question": "What is bytecode in Java?",
    "label": "java",
    "language": "en",
    "context": "Factoid: Bytecode explanation",
    "answer": "Java bytecode is an intermediate representation of Java code compiled by javac. The JVM interprets or JIT-compiles bytecode into machine code at runtime, allowing Java programs to run on any platform with a compatible JVM.",
    "start_char": 0,
    "end_char": 222
  },
  {
    "question": "What is a class in Java?",
    "label": "java",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "A class in Java is a blueprint for creating objects. It can contain fields (attributes), methods (behaviors), constructors, and nested classes. Classes enable encapsulation and code reuse.",
    "start_char": 0,
    "end_char": 188
  },
  {
    "question": "What is an object in Java?",
    "label": "java",
    "language": "en",
    "context": "Factoid: Object concept",
    "answer": "An object in Java is an instance of a class that contains state (fields) and behavior (methods). Each object has its own identity and can interact with other objects through method calls.",
    "start_char": 0,
    "end_char": 187
  },
  {
    "question": "How to create a Java class?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Class creation",
    "answer": "Define a class using the `class` keyword:\n```java\npublic class MyClass {\n  private int value;\n  public MyClass(int v) { this.value = v; }\n  public int getValue() { return value; }\n}\n```Compile with `javac MyClass.java`.",
    "start_char": 0,
    "end_char": 219
  },
  {
    "question": "How to handle exceptions in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Exception handling",
    "answer": "Use try-catch-finally:\n```java\ntry {\n  riskyOperation();\n} catch (IOException e) {\n  e.printStackTrace();\n} finally {\n  cleanup();\n}\n```You can catch multiple exceptions with multi-catch.",
    "start_char": 0,
    "end_char": 187
  },
  {
    "question": "How to read a file in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: File I/O",
    "answer": "Use `BufferedReader`:\n```java\ntry (BufferedReader br = new BufferedReader(new FileReader(\"file.txt\"))) {\n  String line;\n  while ((line = br.readLine()) != null) {\n    System.out.println(line);\n  }\n}\n```",
    "start_char": 0,
    "end_char": 202
  },
  {
    "question": "How to write to a file in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: File I/O",
    "answer": "Use `BufferedWriter`:\n```java\ntry (BufferedWriter bw = new BufferedWriter(new FileWriter(\"file.txt\"))) {\n  bw.write(\"Hello Java\");\n}\n```This auto-closes the writer.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "How to connect to MySQL with JDBC?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Database access",
    "answer": "Load driver and use `DriverManager`:\n```java\nClass.forName(\"com.mysql.cj.jdbc.Driver\");\nConnection conn = DriverManager.getConnection(url, user, pass);\nStatement stmt = conn.createStatement();\nResultSet rs = stmt.executeQuery(\"SELECT * FROM table\");\n```",
    "start_char": 0,
    "end_char": 253
  },
  {
    "question": "How to use generics in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Generics",
    "answer": "Define generic types:\n```java\npublic class Box<T> {\n  private T item;\n  public void set(T i) { item = i; }\n  public T get() { return item; }\n}\nBox<String> b = new Box<>();\n```",
    "start_char": 0,
    "end_char": 175
  },
  {
    "question": "How to create a thread in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Multithreading",
    "answer": "Extend `Thread` or implement `Runnable`:\n```java\nThread t = new Thread(() -> System.out.println(\"Run\"));\n t.start();\n```Use `ExecutorService` for thread pools.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "How to use Stream API in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Streams",
    "answer": "Use `stream()` on collections:\n```java\nList<String> list = List.of(\"a\",\"b\");\nlist.stream()\n  .filter(s -> s.length()>0)\n  .forEach(System.out::println);\n```",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to serialize an object in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Serialization",
    "answer": "Implement `Serializable` and use `ObjectOutputStream`:\n```java\ntry(ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"obj.ser\"))) {\n  oos.writeObject(obj);\n}\n```",
    "start_char": 0,
    "end_char": 180
  },
  {
    "question": "How to use annotations in Java?",
    "label": "java",
    "language": "en",
    "context": "Descriptive: Annotations",
    "answer": "Define custom annotation:\n```java\n@interface MyAnno { String value(); }\n```Use on classes/methods and process via reflection with `getAnnotations()`.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "Compare ArrayList and LinkedList.",
    "label": "java",
    "language": "en",
    "context": "Comparison: Collections",
    "answer": "ArrayList offers fast random access (O(1)) but slow insert/delete (O(n)). LinkedList has fast insert/delete (O(1)) but slow access (O(n)). Choose based on access vs modification needs.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "Compare HashMap and TreeMap.",
    "label": "java",
    "language": "en",
    "context": "Comparison: Maps",
    "answer": "HashMap provides O(1) average access, unordered. TreeMap is sorted by keys, O(log n) access. Use TreeMap when order matters.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare == and equals() in Java.",
    "label": "java",
    "language": "en",
    "context": "Comparison: Object equality",
    "answer": "`==` compares reference identity, `equals()` compares object value by implementation. Override `equals()` and `hashCode()` for custom comparisons.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "Compare abstract class and interface.",
    "label": "java",
    "language": "en",
    "context": "Comparison: OOP",
    "answer": "Abstract class can have implemented methods and state; interface (Java 8+) can have default methods but no state. A class can implement multiple interfaces but extend one class.",
    "start_char": 0,
    "end_char": 177
  },
  {
    "question": "Compare checked and unchecked exceptions.",
    "label": "java",
    "language": "en",
    "context": "Comparison: Exceptions",
    "answer": "Checked exceptions must be declared or handled (compile-time), e.g., IOException. Unchecked (RuntimeException) need not be declared and often indicate programming errors.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "Compare HashSet and TreeSet.",
    "label": "java",
    "language": "en",
    "context": "Comparison: Sets",
    "answer": "HashSet offers O(1) operations, unordered. TreeSet is sorted, O(log n) operations. Choose TreeSet for sorted unique elements.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to install Java JDK on Windows?",
    "label": "java",
    "language": "en",
    "context": "How-to: Installation",
    "answer": "Download JDK installer from Oracle or OpenJDK, run the MSI, and follow prompts. Set JAVA_HOME and update PATH environment variable to include `%JAVA_HOME%\\bin`.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "How to compile and run a Java program?",
    "label": "java",
    "language": "en",
    "context": "How-to: Compile & Run",
    "answer": "Save code to `MyApp.java`. Compile: `javac MyApp.java`. Run: `java MyApp`. Ensure class name matches filename and CLASSPATH is set correctly.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to build a JAR file?",
    "label": "java",
    "language": "en",
    "context": "How-to: Packaging",
    "answer": "Use `jar` tool:\n```bash\njar cvf myapp.jar -C classes/ .\n```Include manifest with Main-Class for executable JAR: \n`jar cfm myapp.jar manifest.txt -C classes/ .`",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "How to manage dependencies with Maven?",
    "label": "java",
    "language": "en",
    "context": "How-to: Maven",
    "answer": "Define dependencies in `pom.xml`. Use `mvn install` to download and install them. Run lifecycle phases: `mvn compile`, `mvn test`, `mvn package`.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to parse JSON in Java?",
    "label": "java",
    "language": "en",
    "context": "How-to: JSON parsing",
    "answer": "Use libraries like Jackson:\n```java\nObjectMapper mapper = new ObjectMapper();\nMyClass obj = mapper.readValue(jsonString, MyClass.class);\n```",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to schedule a task with ScheduledExecutorService?",
    "label": "java",
    "language": "en",
    "context": "How-to: Scheduling",
    "answer": "Use:\n```java\nScheduledExecutorService ses = Executors.newScheduledThreadPool(1);\nses.scheduleAtFixedRate(task, 0, 1, TimeUnit.HOURS);\n```",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to deploy a Java web app on Tomcat?",
    "label": "java",
    "language": "en",
    "context": "How-to: Deployment",
    "answer": "Package as WAR and place in `webapps/` folder. Start Tomcat: `bin/startup.sh`. Access at `http://localhost:8080/yourapp`.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to use Lombok to reduce boilerplate?",
    "label": "java",
    "language": "en",
    "context": "How-to: Lombok",
    "answer": "Add Lombok dependency and annotate classes:\n```java\n@Data\n@AllArgsConstructor\npublic class Person { private String name; }\n```IDE plugins enable annotation processing.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "How to enable assertions in Java?",
    "label": "java",
    "language": "en",
    "context": "How-to: Assertions",
    "answer": "Use the `-ea` flag when running: `java -ea MyApp`. Write assertions: `assert x > 0 : \"x must be positive\";`",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to monitor memory usage of a Java application?",
    "label": "java",
    "language": "en",
    "context": "How-to: Monitoring",
    "answer": "Use JVisualVM or jconsole tools included with JDK. You can also enable GC logging with `-Xlog:gc*` flags for detailed memory usage.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "NullPointerException: what causes it?",
    "label": "java",
    "language": "en",
    "context": "Common Error: NPE",
    "answer": "Occurs when calling a method or accessing a field on a null reference. Ensure objects are initialized before use and add null checks.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "ClassNotFoundException: how to resolve?",
    "label": "java",
    "language": "en",
    "context": "Common Error: ClassNotFound",
    "answer": "Thrown when JVM cannot find a class at runtime. Ensure the class is on the CLASSPATH, correct spelling, and JAR dependencies are included.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "OutOfMemoryError: Java heap space, how to fix?",
    "label": "java",
    "language": "en",
    "context": "Common Error: OOME",
    "answer": "Increase heap size with `-Xmx`, optimize code to release references, or use memory profiling to identify leaks.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "NoSuchMethodError: what does it mean?",
    "label": "java",
    "language": "en",
    "context": "Common Error: NoSuchMethod",
    "answer": "Indicates a method signature mismatch between compile-time and runtime versions of a class. Ensure consistent versions of libraries and recompile all modules.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "ArrayIndexOutOfBoundsException: how to prevent?",
    "label": "java",
    "language": "en",
    "context": "Common Error: AIOOBE",
    "answer": "Thrown when accessing array with invalid index. Validate index bounds (0 to length-1) before access.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "IllegalArgumentException: what causes it?",
    "label": "java",
    "language": "en",
    "context": "Common Error: IAE",
    "answer": "Thrown to indicate that a method received an inappropriate or illegal argument. Validate inputs and throw custom messages.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "NumberFormatException: how to handle?",
    "label": "java",
    "language": "en",
    "context": "Common Error: NFE",
    "answer": "Occurs when parsing a string to a number and the string is not a valid representation. Use try-catch or validate the string format first.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "UnsupportedOperationException in Collections, why?",
    "label": "java",
    "language": "en",
    "context": "Common Error: UOE",
    "answer": "Thrown when an unsupported operation is called on a collection (e.g., removing from an unmodifiable list). Use a modifiable collection implementation.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "StackOverflowError: what causes it?",
    "label": "java",
    "language": "en",
    "context": "Specific Error: SOE",
    "answer": "Occurs when the call stack pointer exceeds its limit, often due to deep or infinite recursion. Check recursive calls and add base cases.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Exception in thread \"main\" java.lang.NoClassDefFoundError",
    "label": "java",
    "language": "en",
    "context": "Specific Error: NoClassDefFoundError",
    "answer": "Indicates JVM found class at compile-time but not at runtime. Verify classpath and ensure the class file is present.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "java.lang.IllegalStateException: message, how to debug?",
    "label": "java",
    "language": "en",
    "context": "Specific Error: IllegalState",
    "answer": "Thrown when a method has been invoked at an illegal time or state. Check state transitions and method documentation for proper usage.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "java.lang.UnsupportedOperationException in List.subList()",
    "label": "java",
    "language": "en",
    "context": "Specific Error: UOE subList",
    "answer": "subList returns a view; modifying the view may not support certain operations. Create a new list: `new ArrayList<>(list.subList(...))`.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "java.lang.ArithmeticException: / by zero",
    "label": "java",
    "language": "en",
    "context": "Specific Error: Arithmetic",
    "answer": "Thrown when an integer division by zero occurs. Validate divisor before performing division.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "java.lang.ClassCastException: cannot cast X to Y",
    "label": "java",
    "language": "en",
    "context": "Specific Error: ClassCast",
    "answer": "Occurs when trying to cast an object to a subclass it is not an instance of. Use `instanceof` to check before casting.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "java.lang.ArrayStoreException: how to fix?",
    "label": "java",
    "language": "en",
    "context": "Specific Error: ArrayStore",
    "answer": "Occurs when storing an incompatible object in an array of objects. Ensure the object type matches the array's component type.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "java.lang.NullPointerException at line X",
    "label": "java",
    "language": "en",
    "context": "Specific Error: NPE line",
    "answer": "Stack trace indicates the exact line. Inspect the code at that line for null references and add null checks or ensure initialization.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "What is C#?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: C# overview",
    "answer": "C# is a modern, object-oriented programming language developed by Microsoft as part of the .NET ecosystem. It supports strong typing, garbage collection, LINQ, async/await, and is used for a wide range of applications including web, mobile, and gaming.",
    "start_char": 0,
    "end_char": 252
  },
  {
    "question": "What is the Common Language Runtime (CLR)?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: CLR concept",
    "answer": "CLR is the execution engine for .NET applications, providing services like memory management, type safety, garbage collection, exception handling, and JIT compilation of IL (Intermediate Language) into native code.",
    "start_char": 0,
    "end_char": 214
  },
  {
    "question": "What is an assembly in .NET?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: Assembly definition",
    "answer": "An assembly is a compiled code library used by .NET applications, typically in .DLL or .EXE format. It contains metadata, IL code, and resources, and defines versioning and security scope.",
    "start_char": 0,
    "end_char": 188
  },
  {
    "question": "What is the purpose of the 'using' statement in C#?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: using statement",
    "answer": "The 'using' statement ensures that IDisposable objects (like streams or database connections) are properly disposed of when the block completes, preventing resource leaks by calling Dispose().",
    "start_char": 0,
    "end_char": 192
  },
  {
    "question": "What is LINQ?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: LINQ definition",
    "answer": "LINQ (Language Integrated Query) enables writing SQL-like queries over collections, XML, databases, and more directly in C#. It uses standard query operators like Select, Where, and OrderBy.",
    "start_char": 0,
    "end_char": 190
  },
  {
    "question": "What is the difference between value types and reference types?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: Type categories",
    "answer": "Value types (structs, primitives) are stored on the stack and copy by value. Reference types (classes, arrays) are stored on the heap and copy references, allowing shared access to the same object.",
    "start_char": 0,
    "end_char": 197
  },
  {
    "question": "What is the garbage collector in .NET?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: Garbage collection",
    "answer": "The .NET garbage collector automatically reclaims memory used by objects that are no longer referenced, managing heap allocation and optimizing performance via generational collection.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "What is async/await in C#?",
    "label": "c#",
    "language": "en",
    "context": "Factoid: Async programming",
    "answer": "async/await is syntax for asynchronous programming in C#. Methods marked async can use await to asynchronously wait for Tasks, improving responsiveness without blocking threads.",
    "start_char": 0,
    "end_char": 177
  },
  {
    "question": "How to create a new C# project with dotnet CLI?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: Project creation",
    "answer": "Install .NET SDK, then run:\n```bash\ndotnet new console -n MyApp\ncd MyApp\ndotnet run\n```This creates a console app template and runs it.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to define and use a class in C#?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: Class usage",
    "answer": "Define:\n```csharp\npublic class Person {\n  public string Name { get; set; }\n}\n```\nUse:\n```csharp\nvar p = new Person { Name = \"Alice\" };\nConsole.WriteLine(p.Name);\n```",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "How to handle exceptions in C#?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: Exception handling",
    "answer": "Use try-catch-finally:\n```csharp\ntry {\n  // code\n} catch (Exception ex) {\n  Console.WriteLine(ex.Message);\n} finally {\n  // cleanup\n}\n```",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to read and write files in C#?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: File I/O",
    "answer": "Read:\n```csharp\nvar text = File.ReadAllText(\"file.txt\");\n```\nWrite:\n```csharp\nFile.WriteAllText(\"file.txt\", \"Hello\");\n```",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to connect to SQL Server in C#?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: Database access",
    "answer": "Use SqlConnection:\n```csharp\nusing(var conn = new SqlConnection(connString)) {\n  conn.Open();\n  var cmd = new SqlCommand(\"SELECT * FROM Table\", conn);\n}\n```",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to use async and await in C#?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: Async/await",
    "answer": "Mark method async returning Task:\n```csharp\nasync Task Fetch() {\n  var data = await httpClient.GetStringAsync(url);\n}\n```Use await to asynchronously wait.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to serialize objects to JSON in C#?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: JSON serialization",
    "answer": "Use System.Text.Json:\n```csharp\nvar json = JsonSerializer.Serialize(obj);\nvar obj2 = JsonSerializer.Deserialize<MyClass>(json);\n```",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to use dependency injection in .NET Core?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: DI setup",
    "answer": "In Startup.cs, add services:\n```csharp\nservices.AddTransient<IMyService, MyService>();\n```Inject via constructor: `public MyController(IMyService svc) { ... }`.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "How to configure logging in ASP.NET Core?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: Logging",
    "answer": "Use ILogger<T> injected into controllers. Configure in Program.cs:\n```csharp\nbuilder.Logging.AddConsole();\n```Use `_logger.LogInformation(\"msg\");`.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to publish a .NET Core application?",
    "label": "c#",
    "language": "en",
    "context": "Descriptive: Deployment",
    "answer": "Run:\n```bash\ndotnet publish -c Release -o ./publish\n```This builds a self-contained or framework-dependent deployable.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare string and StringBuilder in C#.",
    "label": "c#",
    "language": "en",
    "context": "Comparison: String types",
    "answer": "string is immutable; concatenation creates new instances. StringBuilder is mutable and efficient for frequent modifications.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare abstract classes and interfaces.",
    "label": "c#",
    "language": "en",
    "context": "Comparison: OOP",
    "answer": "Abstract classes can have fields and implemented methods. Interfaces define contracts. C# 8+ interfaces support default methods but no state.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "Compare Task and Thread in C#.",
    "label": "c#",
    "language": "en",
    "context": "Comparison: Concurrency",
    "answer": "Thread represents OS thread. Task is higher-level abstraction using thread pool, supports continuations and async/await.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare List and Array in C#.",
    "label": "c#",
    "language": "en",
    "context": "Comparison: Data structures",
    "answer": "Array has fixed size and faster access. List<T> is dynamic, resizable, and offers methods like Add and Remove.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare synchronous and asynchronous programming.",
    "label": "c#",
    "language": "en",
    "context": "Comparison: Programming models",
    "answer": "Synchronous blocks calling thread. Asynchronous frees thread while waiting, improves responsiveness using Task and async/await.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare '==' and Equals() in C#.",
    "label": "c#",
    "language": "en",
    "context": "Comparison: Equality",
    "answer": "'==' compares values for primitives or references for objects unless overloaded. Equals() checks value equality and can be overridden.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to implement a singleton pattern in C#?",
    "label": "c#",
    "language": "en",
    "context": "How-to: Design pattern",
    "answer": "Use private constructor and static instance:\n```csharp\npublic class Singleton {\n  public static readonly Singleton Instance = new Singleton();\n  private Singleton() {}\n}\n```",
    "start_char": 0,
    "end_char": 173
  },
  {
    "question": "How to write LINQ queries in C#?",
    "label": "c#",
    "language": "en",
    "context": "How-to: LINQ",
    "answer": "Query syntax:\n```csharp\nvar res = from x in list\n          where x > 5\n          select x * 2;\n```Method syntax uses `list.Where(x=>x>5).Select(x=>x*2)`.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to start a new thread in C#?",
    "label": "c#",
    "language": "en",
    "context": "How-to: Threading",
    "answer": "Use Thread class:\n```csharp\nvar t = new Thread(() => DoWork());\n t.Start();\n```Or use `Task.Run(() => DoWork())` for thread pool.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "How to create a REST API with ASP.NET Core?",
    "label": "c#",
    "language": "en",
    "context": "How-to: Web API",
    "answer": "In Program.cs:\n```csharp\nvar builder = WebApplication.CreateBuilder();\nbuilder.Services.AddControllers();\nvar app = builder.Build();\napp.MapControllers();\napp.Run();\n```",
    "start_char": 0,
    "end_char": 169
  },
  {
    "question": "How to perform unit testing with xUnit?",
    "label": "c#",
    "language": "en",
    "context": "How-to: Testing",
    "answer": "Install xUnit and write tests:\n```csharp\npublic class Tests {\n  [Fact]\n  public void Test1() { Assert.Equal(4, 2+2); }\n}\n```Run with `dotnet test`.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to use Entity Framework Core?",
    "label": "c#",
    "language": "en",
    "context": "How-to: ORM",
    "answer": "Define DbContext and DbSet:\n```csharp\npublic class AppDb : DbContext {\n  public DbSet<User> Users { get; set; }\n}\n```Use `db.Users.ToList()` to query.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to configure CORS in ASP.NET Core?",
    "label": "c#",
    "language": "en",
    "context": "How-to: CORS",
    "answer": "In Program.cs:\n```csharp\nbuilder.Services.AddCors(o=>o.AddPolicy(\"MyPolicy\", p=>p.AllowAnyOrigin()));\napp.UseCors(\"MyPolicy\");\n```",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How to use middleware in ASP.NET Core?",
    "label": "c#",
    "language": "en",
    "context": "How-to: Middleware",
    "answer": "Write:\n```csharp\napp.Use(async (ctx,next) => {\n  // before\n  await next();\n  // after\n});\n```",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to secure an ASP.NET Core app with JWT?",
    "label": "c#",
    "language": "en",
    "context": "How-to: Security",
    "answer": "Install Microsoft.AspNetCore.Authentication.JwtBearer and:\n```csharp\nbuilder.Services.AddAuthentication().AddJwtBearer(options=>{...});\n```Use `[Authorize]` on controllers.",
    "start_char": 0,
    "end_char": 172
  },
  {
    "question": "How to use memory caching in .NET Core?",
    "label": "c#",
    "language": "en",
    "context": "How-to: Caching",
    "answer": "Register:\n```csharp\nbuilder.Services.AddMemoryCache();\n```Inject IMemoryCache:\n```csharp\ncache.Set(\"key\", value);\n```",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "NullReferenceException: object reference not set to an instance of an object, how to fix?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: NullReference",
    "answer": "Occurs when accessing a member on a null reference. Check objects for null before use or use null-conditional operator `?.`.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "IndexOutOfRangeException, what causes it?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: IndexOutOfRange",
    "answer": "Thrown when accessing an array or collection with an invalid index. Validate index against length or use safe methods like ElementAtOrDefault.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "ArgumentNullException in C#, how to handle?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: ArgumentNull",
    "answer": "Occurs when a null argument is passed to a method that does not accept it. Validate parameters and throw custom messages if null.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "InvalidOperationException in LINQ queries, why?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: InvalidOperation",
    "answer": "Thrown when the LINQ operation is invalid (e.g., modifying a collection during enumeration). Ensure collection isn\u2019t changed while iterating.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "SqlException: Cannot open database, how to solve?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: SqlException",
    "answer": "Check connection string, database availability, and user permissions. Ensure SQL Server is running and network connectivity is correct.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "FormatException when parsing numbers, why?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: FormatException",
    "answer": "Occurs when input string is not in a correct format. Use TryParse methods to safely parse without exceptions.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "MissingMethodException in .NET, what does it mean?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: MissingMethod",
    "answer": "Indicates a method signature mismatch between compile-time and runtime assemblies. Ensure all dependencies are updated and recompiled.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "InvalidCastException in C#, how to fix?",
    "label": "c#",
    "language": "en",
    "context": "Common Error: InvalidCast",
    "answer": "Occurs when casting to an incompatible type. Use `is` or `as` operators to check type before casting.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "StackOverflowException in C#, causes and solutions?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: StackOverflow",
    "answer": "Occurs due to infinite or too deep recursion. Add base cases and optimize recursion or convert to iterative approach.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "OutOfMemoryException in .NET, how to resolve?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: OutOfMemory",
    "answer": "Indicates insufficient memory. Reduce memory usage by disposing objects, using streaming for large data, or increasing available memory.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "HttpRequestException in HttpClient, how to debug?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: HttpRequest",
    "answer": "Thrown on request failures. Inspect InnerException for details, check URL, headers, and network connectivity.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "System.Security.SecurityException in C#, what to check?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: SecurityException",
    "answer": "Occurs when code lacks permissions. Check CAS policy, assembly trust levels, and ensure proper security attributes.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "System.IO.IOException when accessing files, how to handle?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: IOException",
    "answer": "Thrown on I/O failures (e.g., file locked). Catch IOException and implement retry logic or ensure file access permissions.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "TaskCanceledException in C#, why?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: TaskCanceled",
    "answer": "Occurs when a Task is canceled via CancellationToken. Handle token and avoid firing cancellation prematurely.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "FileNotFoundException in C#, how to fix?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: FileNotFound",
    "answer": "Thrown when the file path is invalid or file missing. Verify path, use Path.Combine, and ensure file exists before access.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "MissingReferenceException in Unity C#, what causes it?",
    "label": "c#",
    "language": "en",
    "context": "Specific Error: MissingReference",
    "answer": "Occurs when a Unity reference is destroyed but still accessed. Check object lifecycle and nullify references appropriately.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is PHP?",
    "label": "php",
    "language": "en",
    "context": "Factoid: PHP overview",
    "answer": "PHP is a popular open-source server-side scripting language designed for web development. It can be embedded in HTML and is executed on the server to generate dynamic web pages.",
    "start_char": 0,
    "end_char": 177
  },
  {
    "question": "What does PHP stand for?",
    "label": "php",
    "language": "en",
    "context": "Factoid: Acronym",
    "answer": "PHP originally stood for Personal Home Page, but now stands for PHP: Hypertext Preprocessor, reflecting its recursive nature.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "What is a PHP variable?",
    "label": "php",
    "language": "en",
    "context": "Factoid: Variables",
    "answer": "A PHP variable starts with $, followed by a letter or underscore, and is used to store data like strings, numbers, or arrays. Variables are dynamically typed and do not require explicit declaration.",
    "start_char": 0,
    "end_char": 198
  },
  {
    "question": "What is a PHP array?",
    "label": "php",
    "language": "en",
    "context": "Factoid: Arrays",
    "answer": "A PHP array is an ordered map that can hold values indexed by integers or strings. It supports functions like array_merge(), array_push(), and foreach loops for iteration.",
    "start_char": 0,
    "end_char": 171
  },
  {
    "question": "What is a PHP session?",
    "label": "php",
    "language": "en",
    "context": "Factoid: Sessions",
    "answer": "A PHP session allows data to persist across multiple requests by storing session data on the server and using a session ID stored in a cookie or URL parameter.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "What is a PHP namespace?",
    "label": "php",
    "language": "en",
    "context": "Factoid: Namespaces",
    "answer": "Namespaces in PHP provide a way to group related classes, functions, and constants to avoid name collisions. Defined with the namespace keyword at the top of a file.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "What is Composer in PHP?",
    "label": "php",
    "language": "en",
    "context": "Factoid: Dependency manager",
    "answer": "Composer is a dependency management tool for PHP that allows you to declare and install project libraries via a composer.json file and the command composer install.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "What is PDO in PHP?",
    "label": "php",
    "language": "en",
    "context": "Factoid: Database access",
    "answer": "PDO (PHP Data Objects) is a database access layer providing a uniform interface for accessing multiple databases, offering prepared statements and transaction support.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "How to connect to MySQL using mysqli in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: MySQLi connection",
    "answer": "Use mysqli_connect():\n```php\n$conn = mysqli_connect('host','user','pass','db');\nif (!$conn) die('Connection error: '.mysqli_connect_error());\n```Close with mysqli_close($conn).",
    "start_char": 0,
    "end_char": 176
  },
  {
    "question": "How to handle exceptions in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: Exception handling",
    "answer": "Use try-catch:\n```php\ntry {\n  // code\n} catch (Exception $e) {\n  echo 'Error: '.$e->getMessage();\n}\n```You can define custom exception classes.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "How to include files in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: File inclusion",
    "answer": "Use include or require:\n```php\ninclude 'file.php';\nrequire 'file.php';\n```require throws a fatal error if missing; include issues a warning.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to handle form data in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: Form processing",
    "answer": "Access $_GET or $_POST superglobals:\n```php\n$name = htmlspecialchars($_POST['name']);\n```Use filter_input() for validation and sanitization.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to upload files in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: File upload",
    "answer": "Use HTML form with enctype=\"multipart/form-data\" and $_FILES array:\n```php\nmove_uploaded_file($_FILES['file']['tmp_name'], 'uploads/'.$_FILES['file']['name']);\n```Validate file type and size.",
    "start_char": 0,
    "end_char": 191
  },
  {
    "question": "How to start a session in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: Sessions",
    "answer": "Call session_start() at the top of your script before output:\n```php\nsession_start();\n$_SESSION['user']='Alice';\n```Then access $_SESSION on other pages.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to send email in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: Email",
    "answer": "Use mail():\n```php\nmail('to@example.com','Subject','Message','From:me@example.com');\n```For advanced use, use PHPMailer or SwiftMailer.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to use Composer autoload?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: Autoloading",
    "answer": "Require vendor/autoload.php:\n```php\nrequire 'vendor/autoload.php';\n```Then classes follow PSR-4 namespace to file path mapping.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to perform CRUD operations in Laravel?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: Laravel CRUD",
    "answer": "Use Eloquent:\n```php\n$model = Model::find($id);\n$model->update($data);\nModel::create($data);\n$model->delete();\n```Routes and controllers handle requests.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to parse JSON in PHP?",
    "label": "php",
    "language": "en",
    "context": "Descriptive: JSON parsing",
    "answer": "Use json_decode():\n```php\n$data = json_decode($jsonString, true);\n```Set second param true for associative arrays. Use json_last_error() to check errors.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "Compare include and require in PHP.",
    "label": "php",
    "language": "en",
    "context": "Comparison: File inclusion",
    "answer": "include issues a warning and continues if file missing; require throws a fatal error and stops execution. Use require for essential files.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Compare GET and POST methods.",
    "label": "php",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "GET appends data in URL, limited length and visible; POST sends data in request body, unlimited length and more secure for sensitive data.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Compare MySQLi and PDO in PHP.",
    "label": "php",
    "language": "en",
    "context": "Comparison: Database APIs",
    "answer": "MySQLi is specific to MySQL; PDO supports multiple databases. Both support prepared statements, but PDO offers a consistent API across databases.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "Compare == and === in PHP.",
    "label": "php",
    "language": "en",
    "context": "Comparison: Equality operators",
    "answer": "== compares values after type juggling; === compares value and type without conversion. Use === to avoid unexpected coercion.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Compare echo and print in PHP.",
    "label": "php",
    "language": "en",
    "context": "Comparison: Output statements",
    "answer": "echo is a language construct that can output multiple parameters and has no return value; print outputs one argument and returns 1, so can be used in expressions.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "Compare PHP 5 and PHP 7.",
    "label": "php",
    "language": "en",
    "context": "Comparison: Versions",
    "answer": "PHP 7 offers significant performance improvements, scalar type declarations, return type declarations, and null coalescing operator, compared to PHP 5.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "How to install PHP on Ubuntu?",
    "label": "php",
    "language": "en",
    "context": "How-to: Installation",
    "answer": "Run:\n```bash\nsudo apt update\nsudo apt install php libapache2-mod-php php-mysql\n```Restart Apache: `sudo systemctl restart apache2`.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to create a PHP class?",
    "label": "php",
    "language": "en",
    "context": "How-to: Classes",
    "answer": "Define with class keyword:\n```php\nclass Person {\n  public $name;\n  function __construct($name) { $this->name = $name; }\n}\n```Instantiate with `new Person('Alice')`.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "How to use namespaces in PHP?",
    "label": "php",
    "language": "en",
    "context": "How-to: Namespaces",
    "answer": "Declare namespace at top:\n```php\nnamespace App\\Controllers;\nclass HomeController {}\n```Use with `use App\\Controllers\\HomeController;`.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to define and use traits in PHP?",
    "label": "php",
    "language": "en",
    "context": "How-to: Traits",
    "answer": "Define trait:\n```php\ntrait Logger { function log($msg){ echo $msg; }}\nclass App { use Logger; }\n```Then call `$app->log('Hi');`.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to implement PSR-4 autoloader manually?",
    "label": "php",
    "language": "en",
    "context": "How-to: Autoloading",
    "answer": "Register spl_autoload:\n```php\nspl_autoload_register(function($class){\n  include str_replace('\\\\','/', \\$class).'.php';\n});\n```",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to generate an HTML form in PHP?",
    "label": "php",
    "language": "en",
    "context": "How-to: Form generation",
    "answer": "Use echo and HEREDOC:\n```php\necho <<<F\n<form method=\"post\"><input name=\"name\"></form>\nF;\n```Or mix PHP and HTML directly.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to set up a VirtualHost in Apache for PHP?",
    "label": "php",
    "language": "en",
    "context": "How-to: Apache config",
    "answer": "Create config in /etc/apache2/sites-available:\n```xml\n<VirtualHost *:80>\n ServerName example.com\n DocumentRoot /var/www/html\n</VirtualHost>\n```Enable and reload: `a2ensite example`.",
    "start_char": 0,
    "end_char": 181
  },
  {
    "question": "How to use sessions securely in PHP?",
    "label": "php",
    "language": "en",
    "context": "How-to: Session security",
    "answer": "Use session_regenerate_id(), set session.cookie_secure & httponly in php.ini, and store minimal data server-side.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to debug PHP code with Xdebug?",
    "label": "php",
    "language": "en",
    "context": "How-to: Debugging",
    "answer": "Install Xdebug, configure php.ini with xdebug.remote_enable=1, and use an IDE supporting DBGp protocol to set breakpoints.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to use PHP's built-in web server?",
    "label": "php",
    "language": "en",
    "context": "How-to: Built-in server",
    "answer": "Run in project dir:\n```bash\nphp -S localhost:8000\n```It serves files relative to the current directory.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Parse error: unexpected T_STRING, how to fix?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Parse error",
    "answer": "Check for missing semicolons, mismatched quotes or parentheses before the indicated line. Correct syntax errors to resolve.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Warning: undefined variable, why?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Undefined variable",
    "answer": "Occurs when accessing a variable that hasn't been set. Initialize variables before use or use isset() to check.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Notice: undefined index, what causes it?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Undefined index",
    "answer": "Happens when accessing an array key that doesn't exist. Use isset(\\$array['key']) before accessing or provide default value.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Fatal error: call to undefined function, how to resolve?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Undefined function",
    "answer": "Ensure the function is defined or included via require/include. Check spelling and case sensitivity on function name.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Deprecated: mysql_* functions, what to do?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Deprecated functions",
    "answer": "mysql_* functions are removed. Use mysqli or PDO for database interactions to ensure compatibility with PHP 7+.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Warning: headers already sent, how to fix?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Headers sent",
    "answer": "Occurs when output is sent before header() call. Remove whitespace before <?php and use output buffering (ob_start()) if needed.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Warning: cannot modify header information, what causes it?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Header modification",
    "answer": "Similar to headers sent warning. Ensure no output (echo, whitespace) before calling header() or set session_start() earlier.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Fatal error: out of memory, how to resolve?",
    "label": "php",
    "language": "en",
    "context": "Common Error: Out of memory",
    "answer": "Increase memory_limit in php.ini, optimize code to free large arrays, or process data in smaller chunks.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Uncaught Error: Class 'PDO' not found, how to fix?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: Class not found",
    "answer": "Enable PDO extension in php.ini (extension=pdo_mysql), restart the server, and ensure PDO drivers are installed.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "TypeError: Argument 1 passed to function must be of the type string, how to resolve?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: TypeError",
    "answer": "Check the function signature and pass a string. Use (string) cast if needed or validate variable types before calling.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Uncaught Error: Call to a member function on null, why?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: Call on null",
    "answer": "Occurs when calling a method on a null object. Ensure the object is instantiated before use or check with isset().",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Fatal error: Uncaught Error: [] operator not supported for strings, what does it mean?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: String offset",
    "answer": "This error occurs when trying to use [] to append to a string. Use .= operator for string concatenation instead of [] operator.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Warning: file_get_contents() failed to open stream, how to fix?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: File open error",
    "answer": "Verify the file path, ensure file permissions allow read access, and check if allow_url_fopen is enabled in php.ini for remote URLs.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Fatal error: Allowed memory size exhausted, how to handle?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: Memory exhaustion",
    "answer": "Increase memory_limit in php.ini or optimize data processing. Use unset() to free variables and process large data in smaller chunks.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "ArgumentCountError: Too few arguments to function, what to do?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: Argument count",
    "answer": "Check function definition and call matching number of parameters. Provide default values for optional parameters if needed.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Warning: include(): Failed opening 'file.php', how to fix?",
    "label": "php",
    "language": "en",
    "context": "Specific Error: Include failure",
    "answer": "Ensure the file path is correct relative to the script, check file permissions, and use __DIR__ constant for absolute paths.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "What is Android?",
    "label": "android",
    "language": "en",
    "context": "Factoid: Android overview",
    "answer": "Android is a mobile operating system developed by Google, based on a modified Linux kernel. It provides a rich application framework for building apps and supports smartphones, tablets, wearables, and more.",
    "start_char": 0,
    "end_char": 206
  },
  {
    "question": "What is an Activity in Android?",
    "label": "android",
    "language": "en",
    "context": "Factoid: Activity concept",
    "answer": "An Activity represents a single screen with a user interface. It is a subclass of android.app.Activity and manages UI lifecycle events such as onCreate(), onStart(), onResume(), etc.",
    "start_char": 0,
    "end_char": 182
  },
  {
    "question": "What is an Intent in Android?",
    "label": "android",
    "language": "en",
    "context": "Factoid: Intent definition",
    "answer": "An Intent is a messaging object used to request actions from other components, such as starting an Activity or Service. Intents can be explicit (target component specified) or implicit (action and categories).",
    "start_char": 0,
    "end_char": 209
  },
  {
    "question": "What is a Service in Android?",
    "label": "android",
    "language": "en",
    "context": "Factoid: Service overview",
    "answer": "A Service is a component that performs long-running operations in the background without a UI. It can run indefinitely or until a task is complete, and can be started or bound by other components.",
    "start_char": 0,
    "end_char": 196
  },
  {
    "question": "What is a Content Provider?",
    "label": "android",
    "language": "en",
    "context": "Factoid: ContentProvider",
    "answer": "A Content Provider manages access to a structured set of data and enables data sharing between applications. It implements CRUD operations via a URI-based interface.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "What is the AndroidManifest.xml?",
    "label": "android",
    "language": "en",
    "context": "Factoid: Manifest file",
    "answer": "AndroidManifest.xml is the configuration file declaring app components, permissions, minimum SDK version, and other metadata required by the Android system.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "What is a BroadcastReceiver?",
    "label": "android",
    "language": "en",
    "context": "Factoid: BroadcastReceiver",
    "answer": "A BroadcastReceiver listens for system-wide or app-wide broadcast messages (Intents). It reacts to events like boot completed or connectivity changes by executing onReceive().",
    "start_char": 0,
    "end_char": 175
  },
  {
    "question": "What is Gradle in Android?",
    "label": "android",
    "language": "en",
    "context": "Factoid: Build tool",
    "answer": "Gradle is the build system used by Android Studio. It uses build scripts to compile code, manage dependencies, and generate build variants via plugins and tasks.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "How to create a new Activity in Android?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: Activity creation",
    "answer": "Define a subclass of Activity or AppCompatActivity, declare it in AndroidManifest.xml, and start it via Intent:\n```java\nstartActivity(new Intent(this, NewActivity.class));\n```",
    "start_char": 0,
    "end_char": 175
  },
  {
    "question": "How to use RecyclerView?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: RecyclerView setup",
    "answer": "Add RecyclerView to layout, create Adapter and ViewHolder, set LayoutManager, and attach the adapter:\n```java\nrecyclerView.setLayoutManager(new LinearLayoutManager(this));\nrecyclerView.setAdapter(new MyAdapter(data));\n```",
    "start_char": 0,
    "end_char": 221
  },
  {
    "question": "How to make network requests with Retrofit?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: Retrofit usage",
    "answer": "Add Retrofit dependency, define API interface, create Retrofit instance, and call endpoints asynchronously:\n```java\nRetrofit retrofit = new Retrofit.Builder()\n  .baseUrl(url)\n  .addConverterFactory(GsonConverterFactory.create())\n  .build();\n```",
    "start_char": 0,
    "end_char": 244
  },
  {
    "question": "How to handle configuration changes?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: Config changes",
    "answer": "Use onSaveInstanceState() to save UI state, and restore in onCreate(). Alternatively, handle changes in manifest via android:configChanges attribute.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "How to store data in SharedPreferences?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: SharedPreferences",
    "answer": "Get SharedPreferences and use Editor:\n```java\nSharedPreferences prefs = getSharedPreferences(\"prefs\", MODE_PRIVATE);\nSharedPreferences.Editor e = prefs.edit();\ne.putString(\"key\", \"value\");\ne.apply();\n```",
    "start_char": 0,
    "end_char": 203
  },
  {
    "question": "How to use ViewBinding in Android?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: ViewBinding",
    "answer": "Enable viewBinding in module build.gradle, then inflate binding in Activity:\n```java\nbinding = ActivityMainBinding.inflate(getLayoutInflater());\nsetContentView(binding.getRoot());\n```Access views via binding.",
    "start_char": 0,
    "end_char": 208
  },
  {
    "question": "How to implement SQLite database?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: SQLite usage",
    "answer": "Create a subclass of SQLiteOpenHelper, override onCreate() and onUpgrade(), get writable database, and perform CRUD via execSQL or query() methods.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to schedule tasks with WorkManager?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: WorkManager",
    "answer": "Add WorkManager dependency, define a Worker, and enqueue:\n```java\nWorkRequest work = new OneTimeWorkRequest.Builder(MyWorker.class).build();\nWorkManager.getInstance(ctx).enqueue(work);\n```",
    "start_char": 0,
    "end_char": 188
  },
  {
    "question": "How to implement push notifications?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: Notifications",
    "answer": "Use Firebase Cloud Messaging: configure project in Firebase Console, add FCM dependency, implement FirebaseMessagingService, and handle onMessageReceived().",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to use Android Jetpack Navigation?",
    "label": "android",
    "language": "en",
    "context": "Descriptive: Navigation",
    "answer": "Add Navigation component dependencies, create nav_graph.xml, use NavController to navigate:\n```java\nNavHostFragment navHost = (NavHostFragment)getSupportFragmentManager().findFragmentById(R.id.nav_host);\nnavHost.getNavController().navigate(R.id.dest);\n```",
    "start_char": 0,
    "end_char": 255
  },
  {
    "question": "Compare Activity vs Fragment.",
    "label": "android",
    "language": "en",
    "context": "Comparison: Activity vs Fragment",
    "answer": "Activity is a full-screen component with its own lifecycle. Fragment is a reusable UI component within an Activity, sharing the host\u2019s lifecycle and enabling dynamic UIs.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "Compare ListView and RecyclerView.",
    "label": "android",
    "language": "en",
    "context": "Comparison: ListView vs RecyclerView",
    "answer": "RecyclerView is more flexible and efficient, using ViewHolder pattern and LayoutManager. ListView is simpler but less performant for large datasets.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "Compare AsyncTask and Coroutines.",
    "label": "android",
    "language": "en",
    "context": "Comparison: Async patterns",
    "answer": "AsyncTask is deprecated and uses callbacks; Coroutines offer structured concurrency, more readable code, and built-in cancellation via suspend functions.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "Compare LinearLayout vs ConstraintLayout.",
    "label": "android",
    "language": "en",
    "context": "Comparison: Layouts",
    "answer": "LinearLayout arranges views in a single direction and is simpler. ConstraintLayout is more powerful, enabling complex responsive UIs with flat view hierarchies.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "Compare Java vs Kotlin for Android.",
    "label": "android",
    "language": "en",
    "context": "Comparison: Languages",
    "answer": "Kotlin offers concise syntax, null safety, and coroutines, while Java has wider legacy support. Google recommends Kotlin for new Android development.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "Compare SharedPreferences vs Room.",
    "label": "android",
    "language": "en",
    "context": "Comparison: Persistence",
    "answer": "SharedPreferences is for simple key-value pairs. Room is a SQLite object mapping library for complex relational data with type safety and compile-time checks.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "How to request runtime permissions?",
    "label": "android",
    "language": "en",
    "context": "How-to: Permissions",
    "answer": "Call ActivityCompat.requestPermissions(), and handle onRequestPermissionsResult() to check grant results for permissions like CAMERA or LOCATION.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to debug on a real device?",
    "label": "android",
    "language": "en",
    "context": "How-to: Debugging",
    "answer": "Enable USB debugging on device, connect via USB, select the device in Android Studio run configuration, and set breakpoints to debug code.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "How to optimize app startup time?",
    "label": "android",
    "language": "en",
    "context": "How-to: Performance",
    "answer": "Delay initialization of non-critical components, use SplashScreen API, avoid heavy work on onCreate(), and profile with Android Studio CPU and Memory tools.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to handle background work in Oreo+?",
    "label": "android",
    "language": "en",
    "context": "How-to: Background tasks",
    "answer": "Use JobScheduler or WorkManager instead of background Services due to background execution limits introduced in Android Oreo and above.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to implement deep links?",
    "label": "android",
    "language": "en",
    "context": "How-to: Deep links",
    "answer": "Declare intent-filters in manifest with <action android:name=\"android.intent.action.VIEW\"/> and URI patterns, then handle in onCreate() via getIntent().",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "How to use Data Binding?",
    "label": "android",
    "language": "en",
    "context": "How-to: Data Binding",
    "answer": "Enable dataBinding in build.gradle, wrap layout in <layout> tag, and bind data using <variable> and binding.<viewId>.<property> in Activity.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to localize an Android app?",
    "label": "android",
    "language": "en",
    "context": "How-to: Localization",
    "answer": "Create resource directories like values-fr, values-es, and place localized strings.xml. Android selects appropriate resources based on device locale.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "How to use CameraX API?",
    "label": "android",
    "language": "en",
    "context": "How-to: CameraX",
    "answer": "Add CameraX dependencies, bind lifecycle to Preview and ImageCapture use cases, and attach them to ProcessCameraProvider in onCreate().",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to implement authentication with Firebase?",
    "label": "android",
    "language": "en",
    "context": "How-to: Firebase Auth",
    "answer": "Add Firebase Auth SDK, configure project, and call FirebaseAuth.getInstance().signInWithEmailAndPassword() or use Google/Facebook providers.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to profile memory leaks?",
    "label": "android",
    "language": "en",
    "context": "How-to: Memory Profiler",
    "answer": "Use Android Studio Memory Profiler to capture heap dumps, inspect retained objects, and identify leaks. Alternatively, integrate LeakCanary for automatic detection.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "NullPointerException in Android, what causes it?",
    "label": "android",
    "language": "en",
    "context": "Common Error: NPE",
    "answer": "Occurs when calling methods or accessing fields on a null reference, often due to findViewById returning null or uninitialized variables.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "ActivityNotFoundException, why?",
    "label": "android",
    "language": "en",
    "context": "Common Error: ANF",
    "answer": "Thrown when startActivity() uses an Intent with no matching Activity in the manifest or no app can handle the Intent.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "NetworkOnMainThreadException, how to fix?",
    "label": "android",
    "language": "en",
    "context": "Common Error: Network",
    "answer": "Occurs when performing network operations on the main thread. Move network calls to background via AsyncTask, Thread, or use Retrofit with enqueue().",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "IllegalStateException: Fragment not attached, what does it mean?",
    "label": "android",
    "language": "en",
    "context": "Common Error: IllegalState",
    "answer": "Thrown when performing fragment transactions after the host Activity\u2019s state is saved or detached. Use commitAllowingStateLoss() sparingly or check isAdded().",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "InflateException in Android, why?",
    "label": "android",
    "language": "en",
    "context": "Common Error: Inflate",
    "answer": "Occurs when layout XML contains invalid tags or missing attributes. Check the XML structure and ensure custom views are declared with full package name.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "OutOfMemoryError: bitmap size too large, how to handle?",
    "label": "android",
    "language": "en",
    "context": "Common Error: OOM",
    "answer": "Scale down images before loading via BitmapFactory.Options.inSampleSize or use Glide/Picasso with automatic resizing to reduce memory usage.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "Too many open files, how to resolve?",
    "label": "android",
    "language": "en",
    "context": "Common Error: FD leak",
    "answer": "Occurs when FileDescriptor resources are not closed. Always call close() on streams, cursors, and use try-with-resources for automatic closing.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "ANR: Application Not Responding, what triggers it?",
    "label": "android",
    "language": "en",
    "context": "Common Error: ANR",
    "answer": "Happens when main thread is blocked for too long (5 seconds). Avoid heavy work on UI thread and use background threads or handlers.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "SecurityException: Permission denied, how to fix?",
    "label": "android",
    "language": "en",
    "context": "Specific Error: Security",
    "answer": "Thrown when accessing restricted APIs without proper permissions. Request runtime permissions and declare them in manifest.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Resources.NotFoundException, why?",
    "label": "android",
    "language": "en",
    "context": "Specific Error: ResourceNotFound",
    "answer": "Occurs when a resource ID is invalid or missing. Ensure the resource exists in the appropriate folder and clean/rebuild the project.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "IllegalArgumentException: View not attached to window manager",
    "label": "android",
    "language": "en",
    "context": "Specific Error: IllegalArg",
    "answer": "Thrown when trying to remove or manipulate a View not currently attached. Check view lifecycle and perform operations after onWindowAttached().",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "TransactionTooLargeException in Android IPC",
    "label": "android",
    "language": "en",
    "context": "Specific Error: TransactionLarge",
    "answer": "Occurs when transferring large data via Binder. Use files, SQLite, or smaller parcels to avoid exceeding transaction buffer limits.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "ClassCastException in Fragment transactions",
    "label": "android",
    "language": "en",
    "context": "Specific Error: ClassCast",
    "answer": "Thrown when casting a Fragment to the wrong type. Ensure the target Fragment class matches the one added or retrieved by tag/ID.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "ParcelableException: Class not found during unmarshalling",
    "label": "android",
    "language": "en",
    "context": "Specific Error: Parcelable",
    "answer": "Occurs when a Parcelable implementation class is missing or renamed. Ensure the same package and class name are used and ProGuard rules preserve it.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "SQLiteException: no such table",
    "label": "android",
    "language": "en",
    "context": "Specific Error: SQLite",
    "answer": "Thrown when querying a non-existent table. Check database version, migrations, and ensure onCreate() was called to create tables.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "RemoteException: Binder proxy error",
    "label": "android",
    "language": "en",
    "context": "Specific Error: Remote",
    "answer": "Occurs when communicating with a remote Service fails. Check service lifecycle, process boundaries, and ensure AIDL interfaces match on both sides.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is HTML?",
    "label": "html",
    "language": "en",
    "context": "Factoid: HTML overview",
    "answer": "HTML (HyperText Markup Language) is the standard markup language for creating web pages, defining document structure using elements enclosed in tags.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "What does HTML stand for?",
    "label": "html",
    "language": "en",
    "context": "Factoid: Acronym",
    "answer": "HTML stands for HyperText Markup Language.",
    "start_char": 0,
    "end_char": 42
  },
  {
    "question": "What is an HTML element?",
    "label": "html",
    "language": "en",
    "context": "Factoid: Elements",
    "answer": "An HTML element consists of a start tag, content, and an end tag. For example, `<p>Hello</p>` defines a paragraph element containing text 'Hello'.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "What is an HTML tag?",
    "label": "html",
    "language": "en",
    "context": "Factoid: Tags",
    "answer": "An HTML tag is the markup syntax in angle brackets that defines elements, e.g., `<h1>` is a start tag and `</h1>` is the corresponding end tag.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "What is an HTML attribute?",
    "label": "html",
    "language": "en",
    "context": "Factoid: Attributes",
    "answer": "An attribute in HTML provides additional information about an element, specified in the start tag, e.g., `<img src=\"path\" alt=\"desc\">` where src and alt are attributes.",
    "start_char": 0,
    "end_char": 168
  },
  {
    "question": "What is the purpose of the <!DOCTYPE html> declaration?",
    "label": "html",
    "language": "en",
    "context": "Factoid: DOCTYPE",
    "answer": "The `<!DOCTYPE html>` declaration tells the browser to render the page in standards mode using HTML5, ensuring consistent interpretation of markup.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is semantic HTML?",
    "label": "html",
    "language": "en",
    "context": "Factoid: Semantic HTML",
    "answer": "Semantic HTML uses meaningful tags (e.g., `<header>`, `<article>`) to convey content structure and meaning, improving accessibility and SEO.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "What is the difference between HTML and XHTML?",
    "label": "html",
    "language": "en",
    "context": "Factoid: HTML vs XHTML",
    "answer": "HTML is more forgiving of syntax errors, while XHTML is XML-based and requires well-formed markup, including closing all tags and lowercase element names.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to create a basic HTML page structure?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Page structure",
    "answer": "A basic page includes:\n```html\n<!DOCTYPE html>\n<html>\n<head><title>Title</title></head>\n<body>\n</body>\n</html>\n```With correct nesting.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to include CSS in an HTML document?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: CSS inclusion",
    "answer": "Include external CSS with `<link rel=\"stylesheet\" href=\"styles.css\">` in `<head>`, or inline using `<style>` tags.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to add JavaScript to an HTML page?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: JS inclusion",
    "answer": "Add scripts before `</body>` with `<script src=\"script.js\"></script>`, or inline using `<script>/* code */</script>`.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to create hyperlinks in HTML?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Hyperlinks",
    "answer": "Use `<a>` tags: `<a href=\"https://example.com\">Link text</a>`. Add `target=\"_blank\"` to open in new tab.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to create tables in HTML?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Tables",
    "answer": "Use `<table>` with `<tr>` rows and `<th>`/`<td>` cells:\n```html\n<table><tr><th>H</th></tr><tr><td>D</td></tr></table>\n```",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to embed an image in HTML?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Images",
    "answer": "Embed images using `<img src=\"path.jpg\" alt=\"description\">`. Always include `alt` for accessibility.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to create a form in HTML?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Forms",
    "answer": "Use `<form action=\"submit.php\" method=\"post\">` with inputs like `<input>` and `<button>` to collect data.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to use ordered and unordered lists in HTML?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Lists",
    "answer": "Ordered lists use `<ol><li>Item</li></ol>`, unordered use `<ul><li>Item</li></ul>`. Nest lists inside `<li>` for sublists.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to add comments in HTML?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Comments",
    "answer": "Add comments with `<!-- comment text -->`. Comments are ignored by browsers and not rendered.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to add meta tags for SEO in HTML?",
    "label": "html",
    "language": "en",
    "context": "Descriptive: Meta tags",
    "answer": "Include in `<head>`: `<meta name=\"description\" content=\"Page description\">` and `<meta charset=\"UTF-8\">`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare <div> and <span> in HTML.",
    "label": "html",
    "language": "en",
    "context": "Comparison: div vs span",
    "answer": "`<div>` is block-level (new line, full width). `<span>` is inline (only wraps content), used for styling parts of text.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare <section> and <article> tags.",
    "label": "html",
    "language": "en",
    "context": "Comparison: section vs article",
    "answer": "`<section>` groups related content semantically. `<article>` represents a self-contained composition like a blog post.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare ordered lists (<ol>) and unordered lists (<ul>).",
    "label": "html",
    "language": "en",
    "context": "Comparison: ol vs ul",
    "answer": "`<ol>` creates numbered lists; `<ul>` creates bulleted lists. Both use `<li>` for items but differ in markers.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare <b> vs <strong>.",
    "label": "html",
    "language": "en",
    "context": "Comparison: b vs strong",
    "answer": "`<b>` styles text bold without semantic meaning. `<strong>` indicates importance and is rendered bold semantically.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare <i> vs <em>.",
    "label": "html",
    "language": "en",
    "context": "Comparison: i vs em",
    "answer": "`<i>` styles text italic for presentation. `<em>` indicates emphasis and is rendered italic semantically.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare HTML vs XML.",
    "label": "html",
    "language": "en",
    "context": "Comparison: HTML vs XML",
    "answer": "HTML is for web document structure with predefined tags. XML is a flexible markup for custom data with strict syntax.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to make a link open in a new tab?",
    "label": "html",
    "language": "en",
    "context": "How-to: New tab links",
    "answer": "Add `target=\"_blank\"` and `rel=\"noopener\"` to `<a>`: `<a href=\"url\" target=\"_blank\" rel=\"noopener\">Link</a>`.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to embed a YouTube video in HTML?",
    "label": "html",
    "language": "en",
    "context": "How-to: Video embedding",
    "answer": "Use iframe:\n```html\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VIDEO_ID\" allowfullscreen></iframe>\n```",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to add a favicon to an HTML page?",
    "label": "html",
    "language": "en",
    "context": "How-to: Favicon",
    "answer": "Include in `<head>`: `<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">`.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to use HTML5 semantic tags?",
    "label": "html",
    "language": "en",
    "context": "How-to: Semantic tags",
    "answer": "Use tags like `<header>`, `<nav>`, `<main>`, `<footer>` to structure content meaningfully.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to make images responsive using srcset?",
    "label": "html",
    "language": "en",
    "context": "How-to: Responsive images",
    "answer": "Use `srcset`: `<img src=\"small.jpg\" srcset=\"large.jpg 1024w\" sizes=\"(max-width:600px) 100vw, 50vw\">`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to use the <picture> element for responsive images?",
    "label": "html",
    "language": "en",
    "context": "How-to: Picture element",
    "answer": "```html\n<picture>\n  <source media=\"(min-width:600px)\" srcset=\"large.jpg\">\n  <img src=\"small.jpg\" alt=\"desc\">\n</picture>\n```",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to embed audio in HTML5?",
    "label": "html",
    "language": "en",
    "context": "How-to: Audio embedding",
    "answer": "Use `<audio controls><source src=\"audio.mp3\" type=\"audio/mpeg\">Your browser does not support audio.</audio>`.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to embed a Google Map in HTML?",
    "label": "html",
    "language": "en",
    "context": "How-to: Google Maps",
    "answer": "Use iframe:\n```html\n<iframe src=\"https://www.google.com/maps/embed?...\" width=\"600\" height=\"450\"></iframe>\n```",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to create a download link in HTML?",
    "label": "html",
    "language": "en",
    "context": "How-to: Download links",
    "answer": "Add `download` attribute: `<a href=\"file.pdf\" download>Download PDF</a>`.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to validate an HTML document using W3C Validator?",
    "label": "html",
    "language": "en",
    "context": "How-to: Validation",
    "answer": "Paste your HTML into https://validator.w3.org/ or use the CLI tool `vnu.jar` to check for errors.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What causes a missing closing tag error in HTML?",
    "label": "html",
    "language": "en",
    "context": "Common Error: Missing tag",
    "answer": "A missing closing tag occurs when an element lacks a corresponding `</tag>`, causing layout issues or broken markup.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Why does invalid nesting of elements cause issues?",
    "label": "html",
    "language": "en",
    "context": "Common Error: Invalid nesting",
    "answer": "Invalid nesting (e.g., `<p>` inside `<span>`) violates HTML rules and can lead to unexpected rendering.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is an unclosed attribute quote error?",
    "label": "html",
    "language": "en",
    "context": "Common Error: Attribute quotes",
    "answer": "Occurs when an attribute value isn\u2019t enclosed in matching quotes, breaking the parser\u2019s ability to read subsequent markup.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What happens if you use a deprecated HTML tag?",
    "label": "html",
    "language": "en",
    "context": "Common Error: Deprecated tags",
    "answer": "Deprecated tags like `<font>` may still work but are invalid in HTML5 and may lose support over time.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Why does an incorrect DOCTYPE cause quirks mode?",
    "label": "html",
    "language": "en",
    "context": "Common Error: Quirks mode",
    "answer": "An incorrect or missing DOCTYPE triggers quirks mode, where browsers emulate legacy rendering and ignore modern CSS rules.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Why might case-sensitive ID mismatches break CSS selectors?",
    "label": "html",
    "language": "en",
    "context": "Common Error: ID mismatch",
    "answer": "HTML IDs are case-sensitive in CSS selectors; mismatched casing means the selector won\u2019t match the element.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Why does a self-closing tag issue arise in HTML?",
    "label": "html",
    "language": "en",
    "context": "Common Error: Self-closing tags",
    "answer": "Void elements like `<img>` can self-close `<img />`, but non-void elements (e.g., `<div />`) cause parsing errors.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "What happens if you place block-level elements inside inline elements?",
    "label": "html",
    "language": "en",
    "context": "Common Error: Block in inline",
    "answer": "Placing block-level elements (like `<div>`) inside inline elements (like `<span>`) violates HTML specs and disrupts layout.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Parser error: unexpected end of file in HTML.",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Parser",
    "answer": "This error indicates the document ended before all elements were properly closed; check for missing closing tags.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Invalid DOCTYPE error in HTML.",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Invalid DOCTYPE",
    "answer": "Occurs when the DOCTYPE declaration is malformed or not recognized, causing browsers to ignore it and use quirks mode.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Duplicate ID error when using document.getElementById().",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Duplicate ID",
    "answer": "When multiple elements share the same ID, `getElementById()` returns the first found, leading to unexpected behavior.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What causes unsupported attribute warnings in browsers?",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Unsupported attribute",
    "answer": "Using attributes not defined in the HTML specification triggers warnings and are ignored by browsers.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is a mixed content warning on an HTTPS page?",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Mixed content",
    "answer": "A mixed content warning appears when an HTTPS page loads HTTP resources, which are blocked or flagged as insecure.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Why does a broken link (404) occur in HTML?",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Broken link",
    "answer": "A 404 error occurs when the href URL does not point to an existing resource; verify the path and resource availability.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Why does charset encoding mismatch cause gibberish text?",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Encoding mismatch",
    "answer": "When the document\u2019s charset (e.g., UTF-8) doesn\u2019t match the served encoding, characters render incorrectly as gibberish.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Why does form submission fail without a name attribute?",
    "label": "html",
    "language": "en",
    "context": "Specific Error: Form submission",
    "answer": "Inputs without a `name` attribute aren\u2019t included in the form data, so the server doesn\u2019t receive their values.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: jQuery overview",
    "answer": "jQuery is a lightweight JavaScript library that simplifies HTML DOM traversal, event handling, animation, and AJAX interactions with an easy-to-use API compatible across browsers.",
    "start_char": 0,
    "end_char": 179
  },
  {
    "question": "Who created jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: jQuery history",
    "answer": "jQuery was created by John Resig and released in January 2006 as an open-source project to simplify JavaScript programming and improve cross-browser compatibility.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "What is the latest stable version of jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: Version info",
    "answer": "As of late 2023, jQuery 3.6.4 is the latest stable release, featuring security fixes and minor improvements. Always check jquery.com for the most current version.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "What does the $ symbol represent in jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: $ alias",
    "answer": "In jQuery, the $ symbol is an alias for the jQuery function, used to select DOM elements and perform operations, e.g., $('selector').method(). It can be overridden to avoid conflicts.",
    "start_char": 0,
    "end_char": 183
  },
  {
    "question": "What is the jQuery CDN?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: CDN usage",
    "answer": "A jQuery CDN is a content delivery network (like Google or Cloudflare) hosting jQuery files. Using a CDN can improve load times and leverage browser caching across sites.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "What is chaining in jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: Method chaining",
    "answer": "Chaining in jQuery allows multiple methods to be called on the same set of elements in one statement, e.g., $('#id').addClass('cls').hide().fadeIn()",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How does jQuery handle events?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: Event handling",
    "answer": "jQuery provides methods like .on(), .click(), and .hover() to attach event handlers. It normalizes event object differences across browsers for consistent behavior.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "What is the jQuery selector engine?",
    "label": "jquery",
    "language": "en",
    "context": "Factoid: Selectors",
    "answer": "jQuery uses the Sizzle selector engine to perform fast and flexible DOM selection with CSS-style selectors, supporting IDs, classes, attributes, pseudoclasses, and more.",
    "start_char": 0,
    "end_char": 169
  },
  {
    "question": "How to include jQuery in a webpage?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: Inclusion",
    "answer": "Include jQuery by adding `<script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>` in your HTML before other scripts that depend on it.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to hide and show elements with jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: Show/hide",
    "answer": "Use .hide() to hide elements, .show() to display them. For animations, use .fadeIn(), .fadeOut(), .slideUp(), and .slideDown().",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to perform AJAX GET requests?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: AJAX GET",
    "answer": "Use `$.get(url, data, success)` or `$.ajax({ url, method: 'GET', success })`. These methods fetch data asynchronously without reloading the page.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to add and remove classes?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: Class manipulation",
    "answer": "Use .addClass('className') to add and .removeClass('className') to remove classes. Toggle class with .toggleClass('className').",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to traverse the DOM?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: DOM traversal",
    "answer": "Use methods like .parent(), .children(), .find(), .siblings(), and .closest() to navigate through DOM elements relative to a selected element.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "How to get and set element text?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: Text manipulation",
    "answer": "Use `.text()` to get inner text and `.text('new text')` to set it. Use `.html()` to get or set HTML content including tags.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to traverse form inputs and serialize?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: Form serialization",
    "answer": "Use .serialize() on a form to encode input values as a query string (e.g., `$('#form').serialize()`) for AJAX submission.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to handle JSON responses?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: JSON parsing",
    "answer": "If you specify dataType: 'json' in $.ajax or use $.getJSON(), jQuery parses JSON into JavaScript objects automatically.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to bind multiple events?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: Multiple events",
    "answer": "Use .on('click mouseenter', handler) to bind the same handler to multiple events separated by spaces.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to use plugins in jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "Descriptive: Plugins",
    "answer": "Include the plugin script after jQuery, then call its methods on jQuery objects (e.g., `$('selector').pluginMethod(options)`).",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Compare .hide() vs .css('display','none')",
    "label": "jquery",
    "language": "en",
    "context": "Comparison: Hide vs CSS",
    "answer": ".hide() hides with optional animation and sets display:none. css('display','none') instantly hides without animation.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare $.ajax() vs $.get()/$.post()",
    "label": "jquery",
    "language": "en",
    "context": "Comparison: AJAX methods",
    "answer": "$.ajax() is more configurable (headers, dataType), while $.get() and $.post() are shorthand methods for simple GET/POST requests.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Compare .on() vs .click()",
    "label": "jquery",
    "language": "en",
    "context": "Comparison: Event binding",
    "answer": ".on() binds events to current and future elements (delegation), while .click() only binds to existing elements and is shorthand for .on('click').",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "Compare each() vs map()",
    "label": "jquery",
    "language": "en",
    "context": "Comparison: Iteration",
    "answer": "each() iterates through elements and returns the original jQuery object, while map() builds a new jQuery object from returned values.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "Compare attr() vs prop()",
    "label": "jquery",
    "language": "en",
    "context": "Comparison: Attributes vs properties",
    "answer": "attr() gets/sets HTML attributes, prop() gets/sets DOM properties like checked or selected for form elements.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare delegated vs direct event binding",
    "label": "jquery",
    "language": "en",
    "context": "Comparison: Event binding",
    "answer": "Delegated binding (`.on(event, selector, handler)`) works for future elements. Direct binding (`.on(event, handler)`) only for current elements.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to initialize a document ready handler?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: Document ready",
    "answer": "Use `$(document).ready(function(){ /* code */ })` or shorthand `$(function(){ /* code */ })` to run code after DOM is ready.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to perform POST request with $.post()",
    "label": "jquery",
    "language": "en",
    "context": "How-to: POST AJAX",
    "answer": "Use `$.post(url, {key: val}, function(response){ /* handle */ })` to send data via POST and process response in callback.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to debounce user input in jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: Debounce",
    "answer": "Implement manual debounce:\n```js\nlet timer;\n$('#input').on('input', ()=>{\n clearTimeout(timer);\n timer=setTimeout(handler,300);\n});\n```",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to intercept AJAX errors globally?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: AJAX error handling",
    "answer": "Use `$(document).ajaxError(function(event, jqxhr){ /* handle */ })` to catch all AJAX errors in one place.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to chain animations sequentially?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: Animation chaining",
    "answer": "`$('#el').slideUp().fadeIn().animate({opacity:0.5});` jQuery queues animations so they run one after another.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to throttle scroll events in jQuery?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: Throttle",
    "answer": "Use setTimeout to limit calls:\n```js\nlet last;\n$(window).on('scroll',()=>{\n if(!last || Date.now()-last>200){ handler(); last=Date.now(); }\n});\n```",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to use jQuery UI components?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: jQuery UI",
    "answer": "Include jQuery UI CSS/JS, then call widgets like `$('#el').datepicker()` or `$('#dialog').dialog()` for enhanced UI.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to perform JSONP requests?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: JSONP",
    "answer": "Use `$.ajax({ url, dataType:'jsonp', success })` to fetch cross-domain JSON using padding callbacks.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to measure element dimensions?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: Dimensions",
    "answer": "Use `.width()`, `.height()`, `.outerWidth(true)`, and `.outerHeight(true)` to get content and border/padding dimensions.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to remove elements from DOM?",
    "label": "jquery",
    "language": "en",
    "context": "How-to: Removal",
    "answer": "Use `.remove()` to remove elements and their data/events, or `.detach()` to remove but keep data for reinsert.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Uncaught TypeError: $ is not a function, why?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: $ not function",
    "answer": "Occurs when jQuery isn't loaded or $ is overwritten by another library. Ensure jQuery script is included before your code and use noConflict() if needed.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "jQuery selector returns empty set, what happened?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: Empty selection",
    "answer": "The selector didn\u2019t match any elements or code ran before DOM ready. Verify selector and wrap code in document ready handler.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Chaining methods breaking on undefined, why?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: Method chain",
    "answer": "A previous method returned undefined instead of a jQuery object. Ensure you\u2019re chaining jQuery methods, not vanilla DOM methods.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "AJAX request not sending cookies, why?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: AJAX cookies",
    "answer": "By default, cross-domain AJAX doesn\u2019t send cookies. Set `xhrFields: { withCredentials: true }` and server must allow credentials.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Event handler not firing, what to check?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: Event",
    "answer": "Ensure correct selector, code within document ready, and not binding before element is added. For dynamic elements use delegated events.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "fadeIn()/fadeOut() not working, why?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: Animation",
    "answer": "The element might have display:none set via CSS. Use .show() first or ensure element is in the DOM and visible to animate.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "ajaxError not catching error, why?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: ajaxError",
    "answer": "ajaxError must be bound on document before any AJAX calls. Place the handler code before your AJAX requests.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Accessing data returned by $.getJSON(), how?",
    "label": "jquery",
    "language": "en",
    "context": "Common Error: JSON data",
    "answer": "Use callback: `$.getJSON(url, function(data){ console.log(data.property); });` Data is available only within the callback.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "SyntaxError: Unexpected token < in JSON",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: JSON parse",
    "answer": "Occurs when response isn\u2019t valid JSON (often HTML). Ensure server returns proper JSON and use dataType:'json' in AJAX options.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Cross-Origin Request blocked by CORS",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: CORS",
    "answer": "The server hasn\u2019t allowed your origin. Configure server to send Access-Control-Allow-Origin header or use JSONP for workarounds.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "abort not firing on AJAX requests",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: AJAX abort",
    "answer": "Calling .abort() on the jqXHR object returned by $.ajax() should stop the request. Ensure you store the returned object and call abort() on it.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "Deferred pipe() is removed, what is replacement?",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: Deferred",
    "answer": "pipe() was replaced by then(). Use promise.then(doneFilter, failFilter) for transforming promises.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "error callback not invoked on HTTP 204",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: AJAX status",
    "answer": "HTTP 204 (No Content) is considered success by jQuery. Use statusCode: {204: handler} to handle it separately.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Cannot read property 'offsetWidth' of undefined",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: OffsetWidth",
    "answer": "The element selection returned empty. Check selector and ensure element exists before accessing DOM properties.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "$(...).dialog is not a function",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: Dialog",
    "answer": "Occurs when jQuery UI isn\u2019t loaded or loaded before jQuery. Include jQuery UI script after jQuery library.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "$.fn.load() removed in jQuery 3",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: load() deprecation",
    "answer": "The shortcut for AJAX load is removed. Use $.ajax() or $(selector).on('load', handler) directly for load events.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Uncaught TypeError: Cannot set property 'innerHTML' of null",
    "label": "jquery",
    "language": "en",
    "context": "Specific Error: innerHTML",
    "answer": "Trying to set innerHTML on a null element returned by jQuery requires .html() on a valid jQuery object instead.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is C++?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: C++ overview",
    "answer": "C++ is a high-performance, compiled, general-purpose language supporting procedural, object-oriented, and generic programming, extending C with classes, templates, and exception handling.",
    "start_char": 0,
    "end_char": 187
  },
  {
    "question": "What is a pointer in C++?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: Pointer concept",
    "answer": "A pointer holds the memory address of another variable. Declare with `T* ptr`, use `*ptr` to access value, and `&var` to get an address.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "What is a reference in C++?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: Reference concept",
    "answer": "A reference is an alias for a variable declared with `T& ref = var;`. It must be initialized, cannot be null, and cannot be reseated.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "What is RAII?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: RAII pattern",
    "answer": "Resource Acquisition Is Initialization ties resource lifetime to object lifetime: constructor acquires and destructor releases resources, preventing leaks.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "What is the STL?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: Standard Template Library",
    "answer": "STL provides generic containers (vector, list, map), algorithms (sort, find), and iterators for reusable data structures and operations.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "What is a namespace in C++?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: Namespace",
    "answer": "A namespace groups declarations to avoid name collisions. Declare with `namespace ns { ... }` and use via `ns::identifier`.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is a header file?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: Header files",
    "answer": "Header files (.h/.hpp) contain declarations of functions, classes, and templates. Included via `#include` to separate interface from implementation.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "What is operator overloading?",
    "label": "c++",
    "language": "en",
    "context": "Factoid: Operator overloading",
    "answer": "Operator overloading defines custom behavior for operators (e.g., +, ==) on types by implementing functions like `T operator+(const T&)`.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to declare a class in C++?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Class declaration",
    "answer": "Use `class MyClass { public: MyClass(); void method(); private: int data; };` then implement methods in a .cpp file.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to use templates?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Templates",
    "answer": "Define `template<typename T> T add(T a, T b) { return a + b; }`. Instantiate with `add<int>(1,2)` or let compiler deduce types.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to handle exceptions in C++?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Exception handling",
    "answer": "Use try-catch: `try { risky(); } catch (const std::exception& e) { std::cerr<<e.what(); }`. Throw custom exceptions as needed.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to read and write files?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: File I/O",
    "answer": "Include `<fstream>`: `std::ifstream in(\"file.txt\"); std::ofstream out(\"out.txt\"); std::string line; while(std::getline(in,line)){} out<<\"text\";`",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to use smart pointers?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Smart pointers",
    "answer": "Use `std::unique_ptr<T>` for exclusive ownership and `std::shared_ptr<T>` for shared ownership; they free memory automatically.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to implement a move constructor?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Move semantics",
    "answer": "Define `MyClass(MyClass&& other) noexcept { data = other.data; other.data = nullptr; }` to transfer resources efficiently.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to use std::vector?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: std::vector",
    "answer": "Include `<vector>` and use `std::vector<int> v; v.push_back(1); for(auto& x: v){}` for dynamic array with random access.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to use iterators?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Iterators",
    "answer": "Use `auto it = container.begin(); it != container.end(); ++it` or range-for to traverse container elements.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to use threading with std::thread?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Multithreading",
    "answer": "Include `<thread>`: `std::thread t([](){ work(); }); t.join();`. Use `<mutex>` for safe shared access.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to use CMake for building?",
    "label": "c++",
    "language": "en",
    "context": "Descriptive: Build system",
    "answer": "Write `CMakeLists.txt` with `cmake_minimum_required(VERSION 3.10)` and `add_executable(app main.cpp)`, then run `cmake .` and `make`.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "Compare pointers vs references.",
    "label": "c++",
    "language": "en",
    "context": "Comparison: pointers vs references",
    "answer": "Pointers can be null, reseated, and support arithmetic. References must alias an object, cannot be null or changed.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare std::vector vs std::list.",
    "label": "c++",
    "language": "en",
    "context": "Comparison: container types",
    "answer": "vector has contiguous storage and O(1) access but O(n) insert/delete. list is linked, O(1) insert/delete but no random access.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Compare new/delete vs malloc/free.",
    "label": "c++",
    "language": "en",
    "context": "Comparison: memory allocation",
    "answer": "new/delete call constructors/destructors and are type-safe. malloc/free don\u2019t call constructors and require manual size.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare function overloading vs template specialization.",
    "label": "c++",
    "language": "en",
    "context": "Comparison: resolution",
    "answer": "Overloading selects based on parameter types; template specialization customizes a template for specific types.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare std::string vs char*.",
    "label": "c++",
    "language": "en",
    "context": "Comparison: string types",
    "answer": "std::string manages memory and methods; char* is raw C-string prone to overflow and manual management.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare stack vs heap allocation.",
    "label": "c++",
    "language": "en",
    "context": "Comparison: allocation",
    "answer": "Stack allocation is fast and auto-freed at scope end. Heap allocation via new/delete is dynamic and needs manual management.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to compile C++ code with g++?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Compilation",
    "answer": "Use `g++ -std=c++17 main.cpp -o app`. Add `-O2` for optimization and `-Wall` for warnings.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to debug with gdb?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Debugging",
    "answer": "Compile with `-g`, run `gdb ./app`, use `break main`, `run`, `backtrace`, and commands like `next`, `print`.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to use valgrind to detect memory leaks?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Memory analysis",
    "answer": "Run `valgrind --leak-check=full ./app` to report unfreed blocks and errors.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to manage memory leaks?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Leak prevention",
    "answer": "Use RAII and smart pointers (`unique_ptr`, `shared_ptr`) to ensure automatic cleanup of resources.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to use preprocessor directives?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Preprocessor",
    "answer": "Use `#define`, `#include`, and `#ifdef` for macros and conditional compilation before actual compilation.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to include header guards?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Header guards",
    "answer": "Wrap header: `#ifndef HEADER_H`, `#define HEADER_H`, declarations, `#endif` to avoid multiple inclusion.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to link multiple source files?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Linking",
    "answer": "Compile each: `g++ -c a.cpp`, `g++ -c b.cpp`, then link: `g++ a.o b.o -o app`.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to define macros?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Macros",
    "answer": "Use `#define NAME(value)` to create compile-time constants or simple inline functions.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to create a namespace?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Namespace",
    "answer": "Use `namespace MyNS { void func(); }` and call `MyNS::func()` to group related code.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to use lambda expressions?",
    "label": "c++",
    "language": "en",
    "context": "How-to: Lambdas",
    "answer": "Use `[ ](params){ body; }` syntax: `auto f = [](int x){ return x*2; };` for inline function objects.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What causes segmentation faults?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Segfault",
    "answer": "Dereferencing null or out-of-bounds pointers, or invalid memory access, leads to segmentation faults.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Undefined reference linker error, why?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Linker",
    "answer": "Occurs when declarations lack definitions or object files/libraries are not linked.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Missing semicolon error, how to fix?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Syntax",
    "answer": "Add a semicolon at the indicated line end to terminate statements or declarations.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Use of incomplete type error, what is it?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Incomplete type",
    "answer": "Occurs when referencing a class before its full declaration; include the proper header file.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "No matching constructor, why?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Constructor",
    "answer": "Arguments passed to instantiate don\u2019t match any constructor signature; check types and parameters.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Template instantiation errors, how to debug?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Templates",
    "answer": "Simplify template parameters, ensure type requirements, and inspect verbose compiler messages.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Memory leaks causes in C++?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Memory leaks",
    "answer": "Failing to free dynamically allocated memory or circular references in shared_ptr can cause leaks.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Use of uninitialized variable, what happens?",
    "label": "c++",
    "language": "en",
    "context": "Common Error: Uninitialized",
    "answer": "Reading uninitialized variables yields undefined behavior, often producing random values.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "std::bad_alloc exception, when thrown?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: bad_alloc",
    "answer": "Thrown by operator new when memory allocation fails due to insufficient memory.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "std::out_of_range in std::vector, why?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: out_of_range",
    "answer": "Thrown by vector.at(index) when index is outside valid range [0, size()).",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "Pure virtual method called error, what does it mean?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: pure virtual",
    "answer": "Occurs when a pure virtual function is called before derived override is constructed, typically in base ctor/dtor.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Stack overflow due to recursion, how to fix?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: stack overflow",
    "answer": "Infinite or deep recursion exhausts call stack; add base cases or convert to iterative approach.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "std::length_error from std::string, why?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: length_error",
    "answer": "Thrown when string operations exceed maximum allowed size.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "Invalid conversion error, what causes it?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: conversion",
    "answer": "Compiler can\u2019t implicitly convert between incompatible types; use static_cast or correct function overload.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Use of 'this' in initializer list error, why?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: initializer list",
    "answer": "You cannot use 'this' to initialize members; the object isn\u2019t fully constructed yet.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error C2664: cannot convert parameter, how to resolve?",
    "label": "c++",
    "language": "en",
    "context": "Specific Error: C2664",
    "answer": "Parameter type mismatch; adjust argument types or use proper casts to match function signature.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is CSS?",
    "label": "css",
    "language": "en",
    "context": "Factoid: CSS overview",
    "answer": "CSS (Cascading Style Sheets) is the language used to describe the presentation of HTML documents. It controls layout, colors, fonts, and visual styling of web pages.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "What does CSS stand for?",
    "label": "css",
    "language": "en",
    "context": "Factoid: Acronym",
    "answer": "CSS stands for Cascading Style Sheets.",
    "start_char": 0,
    "end_char": 38
  },
  {
    "question": "What is a CSS selector?",
    "label": "css",
    "language": "en",
    "context": "Factoid: Selectors",
    "answer": "A CSS selector targets HTML elements to apply styles. Examples include element selectors (`div`), class selectors (`.class`), ID selectors (`#id`), and attribute selectors (`[type=\"text\"]`).",
    "start_char": 0,
    "end_char": 190
  },
  {
    "question": "What is the CSS box model?",
    "label": "css",
    "language": "en",
    "context": "Factoid: Box model",
    "answer": "The box model describes how elements are rendered: content box surrounded by padding, border, and margin. Width/height apply to content box, and total size includes padding and border.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "What is specificity in CSS?",
    "label": "css",
    "language": "en",
    "context": "Factoid: Specificity",
    "answer": "Specificity determines which CSS rule applies when multiple rules match. It's calculated as a+ b+ c where a=ID selectors, b=class/attribute/pseudo-class, c=element/pseudo-element.",
    "start_char": 0,
    "end_char": 179
  },
  {
    "question": "What is Flexbox?",
    "label": "css",
    "language": "en",
    "context": "Factoid: Flexbox",
    "answer": "Flexbox is a one-dimensional layout model that arranges items in rows or columns with properties like `justify-content`, `align-items`, and `flex` for flexible sizing.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "What is CSS Grid?",
    "label": "css",
    "language": "en",
    "context": "Factoid: Grid",
    "answer": "CSS Grid is a two-dimensional layout system using rows and columns. It provides `grid-template-rows`, `grid-template-columns`, and grid-area to position items precisely.",
    "start_char": 0,
    "end_char": 169
  },
  {
    "question": "What is a pseudo-class?",
    "label": "css",
    "language": "en",
    "context": "Factoid: Pseudo-classes",
    "answer": "A pseudo-class targets elements in a specific state, such as `:hover`, `:active`, `:nth-child()`, or `:focus`, to apply styles when that state occurs.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to include CSS in an HTML document?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Inclusion methods",
    "answer": "Use `<link rel=\"stylesheet\" href=\"styles.css\">` in the `<head>`, `<style>` tags inside `<head>`, or inline via `style=\"\"` on elements.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to center a div horizontally?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Centering",
    "answer": "Set `margin: 0 auto;` on a block element with a defined width. Alternatively, use Flexbox: `display: flex; justify-content: center;` on its container.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to create a flex container?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Flex setup",
    "answer": "Apply `display: flex;` to a parent. Control layout with `flex-direction`, `justify-content`, `align-items`, and set `flex` on children for sizing.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to create a grid layout?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Grid setup",
    "answer": "Apply `display: grid;` on container. Define tracks with `grid-template-columns: repeat(3, 1fr);` and `grid-template-rows`, then place items in grid cells.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to use media queries?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Responsive design",
    "answer": "Use `@media` rules: `@media (max-width: 600px) { .class { property: value; } }` to apply styles on different viewport sizes.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to implement responsive design?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Responsive",
    "answer": "Combine fluid layouts (percentages), media queries, and flexible images (max-width: 100%) to adapt design across device sizes.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to use CSS variables?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Custom properties",
    "answer": "Define variables: `:root { --main-color: #06c; }` then use `color: var(--main-color);`. Variables cascade and can be overridden per scope.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "How to use pseudo-elements?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Pseudo-elements",
    "answer": "Use `::before` and `::after` to insert content: `.elem::before { content: \"*\"; }` and style it for decorative effects.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to apply CSS animations?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Animations",
    "answer": "Define `@keyframes name { from { } to { } }` then on element: `animation: name 2s ease-in-out infinite;` to run the animation.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to set up a CSS reset?",
    "label": "css",
    "language": "en",
    "context": "Descriptive: Reset styles",
    "answer": "Include a reset or normalize stylesheet like `normalize.css` to remove browser defaults, or use `* { margin:0; padding:0; box-sizing:border-box; }`.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "Compare class selector vs ID selector.",
    "label": "css",
    "language": "en",
    "context": "Comparison: Selectors",
    "answer": "Class selectors `.class` can apply to multiple elements; ID selectors `#id` are unique and have higher specificity.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare margin vs padding.",
    "label": "css",
    "language": "en",
    "context": "Comparison: Box model",
    "answer": "Margin is space outside the border, affecting element separation. Padding is space inside the border, affecting content spacing.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Compare inline vs block elements.",
    "label": "css",
    "language": "en",
    "context": "Comparison: Display types",
    "answer": "Inline elements do not start on a new line and only take necessary width. Block elements start on a new line and take full available width.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Compare Flexbox vs Grid.",
    "label": "css",
    "language": "en",
    "context": "Comparison: Layout systems",
    "answer": "Flexbox is for one-dimensional layouts (row or column). Grid is for two-dimensional layouts with rows and columns.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare relative vs absolute positioning.",
    "label": "css",
    "language": "en",
    "context": "Comparison: Positioning",
    "answer": "Relative positioning offsets element from its normal flow. Absolute positioning removes element from flow and positions relative to nearest positioned ancestor.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "Compare em vs rem units.",
    "label": "css",
    "language": "en",
    "context": "Comparison: Units",
    "answer": "`em` is relative to parent\u2019s font-size. `rem` is relative to root (`html`) font-size, providing consistent sizing across components.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to change text color?",
    "label": "css",
    "language": "en",
    "context": "How-to: Text styling",
    "answer": "Use `color: #ff0000;` on the selector to set text color to red.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "How to change font-size?",
    "label": "css",
    "language": "en",
    "context": "How-to: Typography",
    "answer": "Use `font-size: 16px;` or relative units like `1rem` on the selector to adjust text size.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to style a link on hover?",
    "label": "css",
    "language": "en",
    "context": "How-to: Pseudo-class",
    "answer": "Use `a:hover { text-decoration: underline; color: blue; }` to change link style when the mouse hovers.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to hide an element?",
    "label": "css",
    "language": "en",
    "context": "How-to: Visibility",
    "answer": "Use `display: none;` to remove element from layout, or `visibility: hidden;` to hide but keep its space.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to make element responsive width?",
    "label": "css",
    "language": "en",
    "context": "How-to: Responsive",
    "answer": "Use `width: 100%; max-width: 600px;` to allow element to scale and cap at a maximum width.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to apply a box shadow?",
    "label": "css",
    "language": "en",
    "context": "How-to: Effects",
    "answer": "Use `box-shadow: 0 4px 8px rgba(0,0,0,0.2);` to add a shadow with horizontal, vertical offset, blur, and color.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to create rounded corners?",
    "label": "css",
    "language": "en",
    "context": "How-to: Borders",
    "answer": "Use `border-radius: 8px;` on the selector to round corners by specified radius.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to vertically center content?",
    "label": "css",
    "language": "en",
    "context": "How-to: Centering",
    "answer": "Use Flexbox: `display: flex; align-items: center;` on container to center children vertically.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to create a sticky footer?",
    "label": "css",
    "language": "en",
    "context": "How-to: Layout",
    "answer": "Use `min-height: 100vh; display: flex; flex-direction: column;` on body, then `margin-top: auto;` on footer.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to create a dropdown menu?",
    "label": "css",
    "language": "en",
    "context": "How-to: Navigation",
    "answer": "Use `position: relative;` on container, `position: absolute; display: none;` on menu, then `:hover` to `display: block;`.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Why is my CSS not applied?",
    "label": "css",
    "language": "en",
    "context": "Common Error: Not applied",
    "answer": "Ensure correct selector specificity, linked stylesheet path, and that no inline styles or browser cache are overriding your rules.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Why are margins collapsing?",
    "label": "css",
    "language": "en",
    "context": "Common Error: Margin collapse",
    "answer": "Adjacent vertical margins of block elements can collapse into one margin equal to the larger value.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Why is my media query not working?",
    "label": "css",
    "language": "en",
    "context": "Common Error: Media query",
    "answer": "Check viewport meta tag in HTML, correct `@media` syntax, and ensure queries are ordered from narrow to wide (mobile-first).",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Why are floats not clearing?",
    "label": "css",
    "language": "en",
    "context": "Common Error: Clearfix",
    "answer": "A container of floated children collapses height. Use clearfix: `.clearfix::after { content: \"\"; display: table; clear: both; }`.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Why is my background image not showing?",
    "label": "css",
    "language": "en",
    "context": "Common Error: Background",
    "answer": "Check correct URL path, ensure element has size, and that `background-repeat` or `background-size` aren\u2019t preventing visibility.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Why are CSS variables undefined?",
    "label": "css",
    "language": "en",
    "context": "Common Error: Variables",
    "answer": "Custom properties must be defined in a parent scope (e.g., `:root`) and accessed with `var(--name)`. Check spelling and scope.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Why is z-index not working?",
    "label": "css",
    "language": "en",
    "context": "Common Error: z-index",
    "answer": "z-index only works on positioned elements (`position` not `static`). Also stacking context from parents can affect layering.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Why is my font-face not loading?",
    "label": "css",
    "language": "en",
    "context": "Common Error: @font-face",
    "answer": "Check correct `src` paths, CORS on font files, and correct `format()` declarations in `@font-face` rule.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "SyntaxError: unexpected token '}' in CSS",
    "label": "css",
    "language": "en",
    "context": "Specific Error: Syntax",
    "answer": "Occurs when a closing brace has no matching opening brace. Check for missing `{` or extra `}`.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Invalid property value error",
    "label": "css",
    "language": "en",
    "context": "Specific Error: Property value",
    "answer": "Occurs when a CSS property is assigned a value outside its accepted range or units (e.g., `width: abc;`).",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Unknown property warning",
    "label": "css",
    "language": "en",
    "context": "Specific Error: Unknown property",
    "answer": "Browser ignores unrecognized properties. Check spelling and vendor prefixes if needed (e.g., `-webkit-`).",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Circular reference in @import",
    "label": "css",
    "language": "en",
    "context": "Specific Error: @import",
    "answer": "Occurs when two CSS files import each other, causing endless loop. Remove or reorganize imports to break the cycle.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Infinite loop in keyframes",
    "label": "css",
    "language": "en",
    "context": "Specific Error: Keyframes",
    "answer": "Defining `animation-iteration-count: infinite;` with identical from/to values may create no visible change but loops forever.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Selector expected parse error",
    "label": "css",
    "language": "en",
    "context": "Specific Error: Selector",
    "answer": "Occurs when a selector is malformed (e.g., missing comma or bracket). Check selector syntax for typos.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Invalid pseudo-element",
    "label": "css",
    "language": "en",
    "context": "Specific Error: Pseudo-element",
    "answer": "Occurs when using single colon with pseudo-element (e.g., `:before`) in CSS3. Use double colon `::before` for modern standards.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Font-family parsing error",
    "label": "css",
    "language": "en",
    "context": "Specific Error: Font-family",
    "answer": "Occurs when font names with spaces aren\u2019t quoted (e.g., `font-family: Arial Black;`). Use quotes: `\"Arial Black\"`.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "What is SQL?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: SQL overview",
    "answer": "SQL (Structured Query Language) is a standard programming language for managing and manipulating relational databases. It supports querying, updating, and managing data through statements like SELECT, INSERT, UPDATE, and DELETE.",
    "start_char": 0,
    "end_char": 228
  },
  {
    "question": "What is a primary key?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: Primary key",
    "answer": "A primary key is a column or set of columns that uniquely identifies each row in a table. It cannot contain NULL values and must be unique across the table.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "What is a foreign key?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: Foreign key",
    "answer": "A foreign key is a column or combination of columns that establishes a link between data in two tables by referencing the primary key of another table, enforcing referential integrity.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "What is normalization?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: Normalization",
    "answer": "Normalization is the process of organizing database tables to reduce redundancy and dependency by dividing data into related tables and defining relationships using keys.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "What is a SQL JOIN?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: JOIN",
    "answer": "A JOIN clause combines rows from two or more tables based on a related column between them. Types include INNER JOIN, LEFT JOIN, RIGHT JOIN, and FULL OUTER JOIN.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "What is a view?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: View",
    "answer": "A view is a virtual table defined by a SQL query. It does not store data physically but provides a way to simplify complex queries and restrict data access.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "What is an index?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: Index",
    "answer": "An index is a database structure that improves the speed of data retrieval on a table at the cost of additional storage and slower writes. It is created on one or more columns.",
    "start_char": 0,
    "end_char": 176
  },
  {
    "question": "What is a transaction?",
    "label": "sql",
    "language": "en",
    "context": "Factoid: Transaction",
    "answer": "A transaction is a sequence of SQL operations treated as a single unit, ensuring ACID properties. It is committed with COMMIT or undone with ROLLBACK on error.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "How to create a table in SQL?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: CREATE TABLE",
    "answer": "Use CREATE TABLE syntax:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  name VARCHAR(100),\n  email VARCHAR(100) UNIQUE\n);\n```Defines columns and constraints.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "How to insert data into a table?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: INSERT",
    "answer": "Use INSERT INTO:\n```sql\nINSERT INTO users (id, name, email)\nVALUES (1, 'Alice', 'alice@example.com');\n```Multiple rows can be inserted in one statement.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "How to update data in SQL?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: UPDATE",
    "answer": "Use UPDATE with WHERE:\n```sql\nUPDATE users\nSET email = 'new@example.com'\nWHERE id = 1;\n```Always include WHERE to avoid updating all rows.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "How to delete data from a table?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: DELETE",
    "answer": "Use DELETE with WHERE:\n```sql\nDELETE FROM users\nWHERE id = 1;\n```Ommit WHERE to delete all rows. Use TRUNCATE for fast deletion without logging.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to use the WHERE clause?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: WHERE",
    "answer": "WHERE filters rows: `SELECT * FROM users WHERE age > 18 AND status = 'active';` Supports comparisons, LIKE, IN, BETWEEN, and logical operators.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "How to group data with GROUP BY?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: GROUP BY",
    "answer": "Use GROUP BY to aggregate: `SELECT department, COUNT(*) FROM employees GROUP BY department;` Combine with HAVING to filter groups.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How to use aggregate functions?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: Aggregates",
    "answer": "Functions like COUNT(), SUM(), AVG(), MIN(), MAX() compute values over groups or entire result set, often used with GROUP BY.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to alter a table structure?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: ALTER TABLE",
    "answer": "Use ALTER TABLE:\n```sql\nALTER TABLE users\nADD COLUMN created_at TIMESTAMP;\n```Also supports DROP COLUMN, MODIFY COLUMN, and renaming tables or columns.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "How to drop a table safely?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: DROP TABLE",
    "answer": "Use DROP TABLE:\n```sql\nDROP TABLE IF EXISTS users;\n```This deletes table and data. Use with caution or backup data first.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to use subqueries?",
    "label": "sql",
    "language": "en",
    "context": "Descriptive: Subqueries",
    "answer": "Embed queries: `SELECT name FROM users WHERE id IN (SELECT user_id FROM orders WHERE total > 100);` Subqueries can be in SELECT, FROM, or WHERE.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "Compare INNER JOIN vs LEFT JOIN.",
    "label": "sql",
    "language": "en",
    "context": "Comparison: JOIN types",
    "answer": "INNER JOIN returns rows with matching keys in both tables. LEFT JOIN returns all rows from left table and matched rows from right, filling NULL if no match.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "Compare WHERE vs HAVING.",
    "label": "sql",
    "language": "en",
    "context": "Comparison: Filtering",
    "answer": "WHERE filters rows before aggregation. HAVING filters groups after GROUP BY, often used with aggregate functions.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare CHAR vs VARCHAR.",
    "label": "sql",
    "language": "en",
    "context": "Comparison: Data types",
    "answer": "CHAR(n) is fixed-length, pads with spaces. VARCHAR(n) is variable-length up to n, saving space but may have slight overhead.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare OLTP vs OLAP.",
    "label": "sql",
    "language": "en",
    "context": "Comparison: Database types",
    "answer": "OLTP systems handle transactional operations (INSERT/UPDATE) optimized for speed and concurrency. OLAP systems handle analytical queries optimized for complex aggregations.",
    "start_char": 0,
    "end_char": 172
  },
  {
    "question": "Compare DELETE vs TRUNCATE.",
    "label": "sql",
    "language": "en",
    "context": "Comparison: Deletion",
    "answer": "DELETE logs each row deletion and can use WHERE. TRUNCATE is faster, deallocates pages, and cannot be rolled back in some systems.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Compare clustered vs non-clustered index.",
    "label": "sql",
    "language": "en",
    "context": "Comparison: Index types",
    "answer": "Clustered index defines physical order of data rows. Non-clustered index stores a separate structure with pointers to data.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to use transactions?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Transactions",
    "answer": "Begin a transaction: `BEGIN;` Execute statements, then `COMMIT;` to save or `ROLLBACK;` to undo on error, ensuring atomic operations.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to backup a database?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Backup",
    "answer": "Use tools: `pg_dump mydb > backup.sql` for PostgreSQL or `mysqldump -u user -p db > backup.sql` for MySQL to export schema and data.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to restore a database from backup?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Restore",
    "answer": "Use import: `psql mydb < backup.sql` for PostgreSQL or `mysql -u user -p db < backup.sql` for MySQL to recreate schema and data.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to optimize a query?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Optimization",
    "answer": "Use EXPLAIN to analyze execution plan, add indexes on filtered/joined columns, avoid SELECT *, and rewrite subqueries or joins for efficiency.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "How to create a stored procedure?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Stored procedure",
    "answer": "Use CREATE PROCEDURE:\n```sql\nCREATE PROCEDURE AddUser(IN name VARCHAR(100))\nBEGIN\n  INSERT INTO users (name) VALUES (name);\nEND;\n```Call with `CALL AddUser('Bob');`",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "How to use prepared statements?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Prepared statements",
    "answer": "PREPARE stmt FROM 'SELECT * FROM users WHERE id = ?'; SET @id=1; EXECUTE stmt USING @id; DEALLOCATE PREPARE stmt; Improves security and performance.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to create a trigger?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Triggers",
    "answer": "Use CREATE TRIGGER:\n```sql\nCREATE TRIGGER log_insert\nAFTER INSERT ON orders\nFOR EACH ROW\nBEGIN\n  INSERT INTO audit (msg) VALUES('Inserted');\nEND;\n```",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "How to implement pagination?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Pagination",
    "answer": "Use LIMIT and OFFSET: `SELECT * FROM users ORDER BY id LIMIT 10 OFFSET 20;` to fetch pages of rows.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to prevent SQL injection?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Security",
    "answer": "Use prepared statements or parameterized queries, validate and sanitize user inputs, and limit database permissions.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to perform a full-text search?",
    "label": "sql",
    "language": "en",
    "context": "How-to: Full-text search",
    "answer": "Create a full-text index: `CREATE FULLTEXT INDEX idx ON articles(body);` Query with MATCH(): `SELECT * FROM articles WHERE MATCH(body) AGAINST('keyword');`",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "Syntax error near unexpected token",
    "label": "sql",
    "language": "en",
    "context": "Common Error: Syntax error",
    "answer": "Occurs when SQL syntax is invalid. Check for missing commas, parentheses, or incorrect keywords near the reported location.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Unknown column in 'field list'",
    "label": "sql",
    "language": "en",
    "context": "Common Error: Unknown column",
    "answer": "Column name is misspelled or not present in the table. Verify column names and table aliases.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Duplicate column name error",
    "label": "sql",
    "language": "en",
    "context": "Common Error: Duplicate column",
    "answer": "Occurs when selecting or creating columns with the same name. Use DISTINCT aliases or avoid duplicate definitions.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Column not found error",
    "label": "sql",
    "language": "en",
    "context": "Common Error: Column not found",
    "answer": "Similar to unknown column; ensure column exists and correct table context or alias is used in the query.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Invalid default value error",
    "label": "sql",
    "language": "en",
    "context": "Common Error: Default value",
    "answer": "Default value for column is incompatible with its data type. Use a valid literal or expression matching column type.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Cannot add foreign key constraint",
    "label": "sql",
    "language": "en",
    "context": "Common Error: FK constraint",
    "answer": "Occurs when referenced table or column doesn\u2019t exist or types don\u2019t match. Verify referenced keys and types.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Data too long for column",
    "label": "sql",
    "language": "en",
    "context": "Common Error: Data too long",
    "answer": "String or data exceeds column size limit. Increase column length or truncate data before insert.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Division by zero error",
    "label": "sql",
    "language": "en",
    "context": "Common Error: Division by zero",
    "answer": "Occurs when divisor is zero. Add a WHERE clause to exclude zero or use NULLIF(divisor,0) to avoid division by zero.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "ORA-00942: table or view does not exist",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: ORACLE",
    "answer": "Raised when referencing a table or view not found in the current schema. Check object name and schema.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "ER_DUP_ENTRY: Duplicate entry",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: MySQL",
    "answer": "MySQL error thrown when inserting a row that violates a UNIQUE or PRIMARY KEY constraint.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "SQLSTATE[23000]: Integrity constraint violation",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: Integrity",
    "answer": "Generic SQL state for foreign key or unique constraint violations across various DBMS.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "ERROR: relation \"table\" does not exist",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: PostgreSQL",
    "answer": "PostgreSQL error when the specified relation (table) is not found in the search path. Verify table name and schema.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "SQLite3::ConstraintException",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: SQLite",
    "answer": "Thrown when a constraint (e.g., NOT NULL, UNIQUE) is violated during insert or update in SQLite.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "MySQL server has gone away",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: Connection",
    "answer": "Indicates lost connection to MySQL server, often due to timeout or large packet size. Adjust server configs or packet size.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "SQL error: no such column: ...",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: SQLite",
    "answer": "Raised by SQLite when querying a non-existent column. Check column names and table aliases.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Lock wait timeout exceeded; try restarting transaction",
    "label": "sql",
    "language": "en",
    "context": "Specific Error: Deadlock",
    "answer": "MySQL error when a transaction waits too long for a lock. Reduce transaction scope or handle retries.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is MySQL?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: MySQL overview",
    "answer": "MySQL is an open-source relational database management system (RDBMS) that uses SQL for accessing, adding, and managing data. It is widely used for web applications and supports multiple storage engines.",
    "start_char": 0,
    "end_char": 203
  },
  {
    "question": "What is a MySQL storage engine?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: Storage engines",
    "answer": "A storage engine in MySQL handles how data is stored, indexed, and retrieved. Common engines include InnoDB (supports transactions) and MyISAM (simple, fast reads).",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "What is InnoDB?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: InnoDB engine",
    "answer": "InnoDB is the default storage engine in MySQL, providing ACID-compliant transactions, foreign key support, row-level locking, and crash recovery.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "What is MyISAM?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: MyISAM engine",
    "answer": "MyISAM is a non-transactional storage engine optimized for read-heavy workloads. It uses table-level locking and has smaller footprint but lacks foreign keys and transactions.",
    "start_char": 0,
    "end_char": 175
  },
  {
    "question": "What is a MySQL schema?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: Schema definition",
    "answer": "A schema in MySQL is a logical container for database objects like tables, views, and procedures. It is synonymous with database in MySQL.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "What is a MySQL user?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: User accounts",
    "answer": "A MySQL user is an account defined with a username and host, having privileges to perform operations on databases and tables.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "What is the MySQL command-line client?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: CLI client",
    "answer": "The mysql command-line client is a console program that allows issuing SQL statements and managing the MySQL server directly from the terminal.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "What is a MySQL variable?",
    "label": "mysql",
    "language": "en",
    "context": "Factoid: MySQL variables",
    "answer": "MySQL variables are configuration settings that control server behavior. Session variables apply to current connection, global variables affect the server instance.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "How to install MySQL on Ubuntu?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: Installation",
    "answer": "Run `sudo apt update` then `sudo apt install mysql-server`. Secure installation with `sudo mysql_secure_installation` to set root password and remove test databases.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "How to create a database in MySQL?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: CREATE DATABASE",
    "answer": "Use `CREATE DATABASE dbname;` in the mysql client or GUI. You can specify character set: `CREATE DATABASE dbname CHARACTER SET utf8mb4;`.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to create a table in MySQL?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: CREATE TABLE",
    "answer": "Use `CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), created DATETIME DEFAULT CURRENT_TIMESTAMP);` to define columns and constraints.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "How to insert data in MySQL?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: INSERT",
    "answer": "Use `INSERT INTO users (name) VALUES ('Alice');`. For multiple rows: `INSERT INTO users (name) VALUES ('Bob'),('Carol');`.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to update rows in MySQL?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: UPDATE",
    "answer": "Use `UPDATE users SET name = 'Alice Smith' WHERE id = 1;`. Always include WHERE to limit affected rows.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to delete rows in MySQL?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: DELETE",
    "answer": "Use `DELETE FROM users WHERE id = 1;`. Omitting WHERE deletes all rows. Use `TRUNCATE TABLE users;` for fast deletion without logging each row.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "How to grant privileges in MySQL?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: GRANT",
    "answer": "Use `GRANT SELECT, INSERT ON dbname.* TO 'user'@'host';` then `FLUSH PRIVILEGES;` to apply changes to user permissions.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to backup a MySQL database?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: Backup",
    "answer": "Use `mysqldump -u user -p dbname > backup.sql`. Include `--routines` and `--triggers` to export procedures and triggers.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to restore a MySQL backup?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: Restore",
    "answer": "Use `mysql -u user -p dbname < backup.sql` to import tables, data, routines, and triggers from the dump file.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to change MySQL user password?",
    "label": "mysql",
    "language": "en",
    "context": "Descriptive: Password change",
    "answer": "Use `ALTER USER 'user'@'host' IDENTIFIED BY 'newpass';` then `FLUSH PRIVILEGES;`. For older versions: `SET PASSWORD FOR 'user'@'host' = PASSWORD('newpass');`.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "Compare InnoDB vs MyISAM.",
    "label": "mysql",
    "language": "en",
    "context": "Comparison: engines",
    "answer": "InnoDB supports transactions, foreign keys, and row-level locking. MyISAM lacks transactions and uses table-level locking, but may be faster for read-heavy loads.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "Compare MySQL vs MariaDB.",
    "label": "mysql",
    "language": "en",
    "context": "Comparison: forks",
    "answer": "MariaDB is a fork of MySQL with extra storage engines and features. It is community-driven while MySQL is backed by Oracle.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare VARCHAR vs TEXT in MySQL.",
    "label": "mysql",
    "language": "en",
    "context": "Comparison: data types",
    "answer": "VARCHAR(n) stores up to n characters inline with table row. TEXT stores larger strings off-page with pointer overhead.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare CHAR vs VARCHAR in MySQL.",
    "label": "mysql",
    "language": "en",
    "context": "Comparison: data types",
    "answer": "CHAR is fixed-length, pads with spaces. VARCHAR is variable-length, saves space but has slight storage overhead.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare UNION vs UNION ALL.",
    "label": "mysql",
    "language": "en",
    "context": "Comparison: set operations",
    "answer": "UNION removes duplicate rows between queries. UNION ALL returns all rows including duplicates, often faster.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare WHERE vs HAVING in MySQL.",
    "label": "mysql",
    "language": "en",
    "context": "Comparison: filtering",
    "answer": "WHERE filters rows before grouping. HAVING filters groups after GROUP BY and can use aggregate functions.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to enable Slow Query Log?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: logging",
    "answer": "In my.cnf set `slow_query_log=ON`, `slow_query_log_file=/var/log/mysql/slow.log`, and `long_query_time=1` to log queries >1s.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to view running queries?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: monitoring",
    "answer": "Use `SHOW PROCESSLIST;` in mysql client or `SHOW FULL PROCESSLIST;` to see currently executing queries and their status.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to optimize a MySQL query?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: optimization",
    "answer": "Use `EXPLAIN` to analyze execution plan, add appropriate indexes, avoid SELECT *, and rewrite joins or subqueries for efficiency.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "How to enable foreign key checks?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: constraints",
    "answer": "Use `SET FOREIGN_KEY_CHECKS=1;`. Disable with `SET FOREIGN_KEY_CHECKS=0;` during bulk operations, then re-enable.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to flush MySQL privileges?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: privileges",
    "answer": "Use `FLUSH PRIVILEGES;` after GRANT, REVOKE, or direct changes to mysql.user to reload privilege tables.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to change MySQL port?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: configuration",
    "answer": "In my.cnf under [mysqld] set `port=3307`. Restart the server to apply the new port.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to enable remote access?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: access",
    "answer": "Bind to 0.0.0.0 in my.cnf (`bind-address`), grant privileges: `GRANT ALL ON db.* TO 'user'@'%';` and open port in firewall.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to reset root password?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: security",
    "answer": "Start server with `--skip-grant-tables`, connect and `ALTER USER 'root'@'localhost' IDENTIFIED BY 'newpass';`, then restart normally.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to replicate MySQL master-slave?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: replication",
    "answer": "Configure master with `log_bin`, record `MASTER_LOG_FILE` and `MASTER_LOG_POS`, then on slave use `CHANGE MASTER TO ...` and `START SLAVE;`.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to install MySQL Workbench?",
    "label": "mysql",
    "language": "en",
    "context": "How-to: GUI tool",
    "answer": "Download from dev.mysql.com, install via package manager or installer, then connect using host, port, user, and password.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "ERROR 1045: Access denied for user",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: Access denied",
    "answer": "Occurs when authentication fails. Check username, host, and password, and ensure proper GRANT privileges.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "ERROR 1064: You have an error in your SQL syntax",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: Syntax error",
    "answer": "MySQL reports a syntax issue. Review the SQL query near the indicated token for typos or missing keywords.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "ERROR 1146: Table doesn't exist",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: Missing table",
    "answer": "Occurs when referencing a non-existent table. Verify database name, table name, and current schema.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "ERROR 1215: Cannot add foreign key constraint",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: FK constraint",
    "answer": "Foreign key creation failed due to mismatched data types, missing indexes, or engine differences. Check table definitions.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "ERROR 2002: Can't connect to MySQL server",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: Connection",
    "answer": "Client cannot connect. Ensure server is running, correct socket or port, and firewall rules allow connection.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "ERROR 2013: Lost connection to MySQL server during query",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: Connection lost",
    "answer": "Connection dropped due to timeout or large packet. Increase `net_read_timeout` or `max_allowed_packet` in configuration.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "ERROR 1364: Field doesn't have a default value",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: No default",
    "answer": "Occurs when inserting a row without specifying a NOT NULL column lacking a default. Provide a value or set a default.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "ERROR 1226: User has exceeded the maximum number of connections",
    "label": "mysql",
    "language": "en",
    "context": "Common Error: Connections",
    "answer": "User reached `max_user_connections`. Increase limits or close idle connections.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "ERROR 1451: Cannot delete or update a parent row: a foreign key constraint fails",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: FK delete",
    "answer": "Raised when attempting to delete a parent row referenced by a child. Remove or update child rows first or use ON DELETE CASCADE.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "ERROR 1216: Cannot add or update a child row: a foreign key constraint fails",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: FK insert",
    "answer": "Occurs when inserting/updating child rows with non-existent parent key. Ensure parent key exists before insertion.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "ERROR 1030: Got error writing file",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: File write",
    "answer": "MySQL cannot write to disk due to permissions or full filesystem. Check directory permissions and free space.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "ERROR 1049: Unknown database",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: Unknown DB",
    "answer": "Specified database does not exist. Verify database name spelling and that it has been created.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "ERROR 1205: Lock wait timeout exceeded",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: Lock timeout",
    "answer": "Transaction waited too long for a lock. Shorten transactions or increase `innodb_lock_wait_timeout`.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "ERROR 1206: The total number of locks exceeds the lock table size",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: Lock table",
    "answer": "Too many row locks in InnoDB. Increase `innodb_buffer_pool_size` or split transactions into smaller batches.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "ERROR 1044: Access denied for user to database",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: DB access",
    "answer": "User lacks privileges on the database. Grant proper permissions or connect with a user having required rights.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "ERROR 1051: Unknown table",
    "label": "mysql",
    "language": "en",
    "context": "Specific Error: Unknown table",
    "answer": "Dropping or altering a non-existent table. Verify table name and schema.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "What is R?",
    "label": "r",
    "language": "en",
    "context": "Factoid: R overview",
    "answer": "R is a programming language and environment for statistical computing and graphics. It provides data manipulation, calculation, and graphical display capabilities through a rich ecosystem of packages.",
    "start_char": 0,
    "end_char": 200
  },
  {
    "question": "What does CRAN stand for?",
    "label": "r",
    "language": "en",
    "context": "Factoid: CRAN acronym",
    "answer": "CRAN stands for the Comprehensive R Archive Network, a repository of R packages, source code, and documentation maintained by R project volunteers.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is a data.frame in R?",
    "label": "r",
    "language": "en",
    "context": "Factoid: Data frame",
    "answer": "A data.frame is a table-like structure in R that holds data in rows and columns. Each column can contain different types (numeric, character, factor), and all columns have equal length.",
    "start_char": 0,
    "end_char": 185
  },
  {
    "question": "What is the difference between R and RStudio?",
    "label": "r",
    "language": "en",
    "context": "Factoid: R vs RStudio",
    "answer": "R is the statistical computing language and runtime. RStudio is an integrated development environment (IDE) that provides a user-friendly interface with editors, consoles, and tools for R.",
    "start_char": 0,
    "end_char": 188
  },
  {
    "question": "What is a vector in R?",
    "label": "r",
    "language": "en",
    "context": "Factoid: Vector",
    "answer": "A vector is the basic data structure in R that holds elements of the same type (numeric, character, or logical) in a 1-dimensional sequence.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "What is a list in R?",
    "label": "r",
    "language": "en",
    "context": "Factoid: List",
    "answer": "A list is an R object that can contain elements of different types, including vectors, data.frames, and even other lists, allowing complex data structures.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "What is a factor in R?",
    "label": "r",
    "language": "en",
    "context": "Factoid: Factor",
    "answer": "A factor is a data structure for categorical data in R. It stores values as integer codes with associated labels (levels) for efficient storage and analysis.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "What is the apply() family of functions?",
    "label": "r",
    "language": "en",
    "context": "Factoid: apply functions",
    "answer": "The apply() family (apply, lapply, sapply, vapply, tapply, mapply) provides functions for applying operations to elements of arrays, lists, or data.frames without explicit loops.",
    "start_char": 0,
    "end_char": 178
  },
  {
    "question": "How to install a package in R?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Package installation",
    "answer": "Use `install.packages(\"pkgname\")` to download from CRAN. Then load with `library(pkgname)`. Specify dependencies and repos if needed.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to import a CSV file?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: CSV import",
    "answer": "Use `read.csv(\"file.csv\", header=TRUE, stringsAsFactors=FALSE)` or `readr::read_csv(\"file.csv\")` for faster parsing and more control.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to filter rows in a data.frame?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Data filtering",
    "answer": "Use base R: `df[df$column > value, ]`. Or dplyr: `library(dplyr); df %>% filter(column > value)` for readable pipelines.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to create a plot with ggplot2?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: ggplot2 basics",
    "answer": "Load ggplot2 and use `ggplot(data, aes(x, y)) + geom_point()`. Add layers like `+ geom_line()` or themes for customization.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to merge two data.frames?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Data merge",
    "answer": "Use `merge(df1, df2, by=\"key\", all=FALSE)` for inner join. Or dplyr: `df1 %>% inner_join(df2, by=\"key\")` and variants for left/right/full joins.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to write a function in R?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Function definition",
    "answer": "Use `myfunc <- function(arg1, arg2) { result <- arg1 + arg2; return(result) }`. Call with `myfunc(1, 2)`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to reshape data using tidyr?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Data reshaping",
    "answer": "Use `tidyr` functions: `pivot_longer(df, cols, names_to, values_to)` or `pivot_wider(df, names_from, values_from)` for wide-long transformations.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to handle missing values?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Missing data",
    "answer": "Use `is.na()` to detect. Remove rows: `na.omit(df)`. Impute with `replace(df, is.na(df), value)` or packages like mice for advanced imputation.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "How to perform linear regression?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Regression",
    "answer": "Use `model <- lm(y ~ x1 + x2, data=df)` and view summary with `summary(model)`. Extract coefficients and diagnostics from the model object.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "How to work with dates?",
    "label": "r",
    "language": "en",
    "context": "Descriptive: Date handling",
    "answer": "Use `as.Date(\"2020-01-01\")` for base dates. Or lubridate: `ymd(\"20200101\")`, `floor_date`, `wday` for parsing and manipulation.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare R and Python for data analysis.",
    "label": "r",
    "language": "en",
    "context": "Comparison: R vs Python",
    "answer": "R has specialized statistical packages and interactive plotting. Python offers general-purpose coding and libraries like pandas and matplotlib. Choice depends on ecosystem and performance.",
    "start_char": 0,
    "end_char": 188
  },
  {
    "question": "Compare data.frame vs tibble.",
    "label": "r",
    "language": "en",
    "context": "Comparison: Data structures",
    "answer": "data.frame is base R with automatic conversion of strings to factors by default. tibble (tibble package) prints neatly, doesn\u2019t convert strings by default, and is more user-friendly.",
    "start_char": 0,
    "end_char": 182
  },
  {
    "question": "Compare apply() vs lapply().",
    "label": "r",
    "language": "en",
    "context": "Comparison: Functions",
    "answer": "apply() works on matrices/arrays and returns a vector or array. lapply() applies a function over list elements and returns a list.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Compare matrix vs array.",
    "label": "r",
    "language": "en",
    "context": "Comparison: Data types",
    "answer": "matrix is a 2-dimensional vector with rows and columns. array can have more than two dimensions for multi-dimensional data.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare t-test vs ANOVA.",
    "label": "r",
    "language": "en",
    "context": "Comparison: Statistical tests",
    "answer": "t-test compares means of two groups. ANOVA compares means across three or more groups and tests for overall differences.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare base plotting vs ggplot2.",
    "label": "r",
    "language": "en",
    "context": "Comparison: Plotting systems",
    "answer": "Base plotting uses low-level functions and is flexible but verbose. ggplot2 uses a grammar of graphics with layered approach for declarative plots.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to create a Shiny app?",
    "label": "r",
    "language": "en",
    "context": "How-to: Shiny",
    "answer": "Install shiny and create ui.R and server.R files. In ui.R define UI layout, in server.R define reactive logic, then run `shiny::runApp()`.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "How to use dplyr to group and summarize?",
    "label": "r",
    "language": "en",
    "context": "How-to: dplyr",
    "answer": "Use `df %>% group_by(group_var) %>% summarize(count = n(), mean_val = mean(value, na.rm=TRUE))` to aggregate data by groups.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to pivot data from wide to long?",
    "label": "r",
    "language": "en",
    "context": "How-to: tidyr",
    "answer": "Use `pivot_longer(df, cols = c(col1, col2), names_to = 'key', values_to = 'value')` to transform wide-format data into long-format.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to install multiple packages?",
    "label": "r",
    "language": "en",
    "context": "How-to: Package management",
    "answer": "Use `install.packages(c('dplyr','ggplot2','tidyr'))` to install multiple packages in one command.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to use source() function?",
    "label": "r",
    "language": "en",
    "context": "How-to: Script sourcing",
    "answer": "Use `source('script.R')` to run R code from an external file in the current session.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to save data to CSV?",
    "label": "r",
    "language": "en",
    "context": "How-to: CSV export",
    "answer": "Use `write.csv(df, 'file.csv', row.names=FALSE)` or `readr::write_csv(df, 'file.csv')` for faster writes without row names.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to randomize data sampling?",
    "label": "r",
    "language": "en",
    "context": "How-to: Sampling",
    "answer": "Use `sample_n(df, 100)` from dplyr or `df[sample(nrow(df), 100), ]` in base R to select random rows.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to create an R Markdown report?",
    "label": "r",
    "language": "en",
    "context": "How-to: R Markdown",
    "answer": "Use RStudio to create a .Rmd file, write markdown and R code chunks, then click 'Knit' or use `rmarkdown::render('report.Rmd')`.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to optimize R code performance?",
    "label": "r",
    "language": "en",
    "context": "How-to: Performance",
    "answer": "Vectorize operations, avoid growing objects in loops, use data.table for large datasets, and profile code with `profvis`.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to connect to a MySQL database?",
    "label": "r",
    "language": "en",
    "context": "How-to: Database connection",
    "answer": "Install RMySQL, then `con <- DBI::dbConnect(RMySQL::MySQL(), dbname='db', host='host', user='user', password='pw')`.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Error in library(): there is no package called",
    "label": "r",
    "language": "en",
    "context": "Common Error: Missing package",
    "answer": "Occurs when you try to load a package that isn't installed. Install with `install.packages('pkgname')` before using `library()`.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Error: object 'x' not found",
    "label": "r",
    "language": "en",
    "context": "Common Error: Object not found",
    "answer": "Occurs when a variable or function isn't defined in the current environment. Check spelling and ensure the object is created before use.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Error: subscript out of bounds",
    "label": "r",
    "language": "en",
    "context": "Common Error: Indexing",
    "answer": "Occurs when indexing beyond the length of a vector or the dimensions of a data.frame. Verify index values are within valid ranges.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Error: non-numeric argument to binary operator",
    "label": "r",
    "language": "en",
    "context": "Common Error: Type mismatch",
    "answer": "Occurs when applying mathematical operators to non-numeric values. Convert data types with `as.numeric()` where appropriate.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Error in plot(): need finite 'xlim' values",
    "label": "r",
    "language": "en",
    "context": "Common Error: Plotting",
    "answer": "Occurs when plotting data that contains NA or non-finite values. Remove or impute missing values before plotting.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Error: could not find function 'ggplot'",
    "label": "r",
    "language": "en",
    "context": "Common Error: Missing function",
    "answer": "Occurs when ggplot2 isn't loaded. Install and load with `install.packages('ggplot2'); library(ggplot2)`.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: replacement has length zero",
    "label": "r",
    "language": "en",
    "context": "Common Error: Replacement",
    "answer": "Occurs when assigning a zero-length vector to a subset of an object. Ensure the replacement vector has appropriate length.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Error: unused argument (data)",
    "label": "r",
    "language": "en",
    "context": "Common Error: Unused argument",
    "answer": "Occurs when passing an argument not expected by the function. Check function signature and correct argument names or order.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Error: cannot open file",
    "label": "r",
    "language": "en",
    "context": "Common Error: File access",
    "answer": "Occurs when the specified file path is invalid or permissions are insufficient. Verify path and file permissions.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Error: package or namespace load failed",
    "label": "r",
    "language": "en",
    "context": "Specific Error: Load failure",
    "answer": "Occurs when a package fails to load due to missing dependencies or version conflicts. Reinstall or update packages and dependencies.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Error: unexpected '}' in R script",
    "label": "r",
    "language": "en",
    "context": "Specific Error: Syntax",
    "answer": "Occurs when there is a mismatched or extra brace. Check code for matching `{` and `}` pairs.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: cannot allocate vector of size",
    "label": "r",
    "language": "en",
    "context": "Specific Error: Memory",
    "answer": "Occurs when R runs out of memory. Remove unused objects, increase memory limit, or use data.table for large datasets.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Error: evaluation nested too deeply: infinite recursion",
    "label": "r",
    "language": "en",
    "context": "Specific Error: Recursion",
    "answer": "Occurs when a recursive function has no proper base case. Ensure your function terminates by defining a stopping condition.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Warning: partial argument matching",
    "label": "r",
    "language": "en",
    "context": "Specific Error: Partial matching",
    "answer": "Occurs when an argument name is matched partially. Use full argument names to avoid ambiguity.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Warning: NAs introduced by coercion",
    "label": "r",
    "language": "en",
    "context": "Specific Error: Coercion",
    "answer": "Occurs when coercing strings to numeric or factor levels. Check input values and clean data before conversion.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Error: cannot open file '...': No such file or directory",
    "label": "r",
    "language": "en",
    "context": "Specific Error: File not found",
    "answer": "Occurs when specifying a non-existent file path. Verify working directory and file name.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: unexpected EOF in filter expression",
    "label": "r",
    "language": "en",
    "context": "Specific Error: EOF",
    "answer": "Occurs when a filter expression is incomplete. Check for missing parentheses or operators in the expression.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is ReactJS?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: React overview",
    "answer": "ReactJS is a JavaScript library for building user interfaces. Developed by Facebook, it uses a component-based architecture and a virtual DOM for efficient UI updates.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "What is JSX?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: JSX syntax",
    "answer": "JSX is a syntax extension for JavaScript that looks like HTML. It is used in React to describe UI structure and is compiled to React.createElement calls.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "What are components in React?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: Components",
    "answer": "Components are reusable, self-contained UI units in React. They can be functional (functions returning JSX) or class-based (ES6 classes extending React.Component).",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "What is state in React?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: State management",
    "answer": "State is an object managed within a component that holds data influencing its rendered output. Updating state triggers a re-render of the component.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "What are props in React?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: Props",
    "answer": "Props (properties) are read-only inputs passed from parent to child components. They allow data flow and configuration of component behavior.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "What is the virtual DOM?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: Virtual DOM",
    "answer": "The virtual DOM is an in-memory tree of UI elements. React diffs updates to this tree and applies minimal changes to the real DOM for performance.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "What is React Fiber?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: React Fiber",
    "answer": "React Fiber is the rewrite of React\u2019s core algorithm introduced in v16, enabling incremental rendering and better handling of complex app updates.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "What are React hooks?",
    "label": "reactjs",
    "language": "en",
    "context": "Factoid: Hooks",
    "answer": "Hooks are functions like useState or useEffect that let functional components use state and lifecycle features without classes.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to create a new React app?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: App setup",
    "answer": "Use Create React App: `npx create-react-app my-app`. It sets up tooling, build scripts, and project structure for a React application.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to use useState hook?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: useState",
    "answer": "Import `useState` from React: `const [state, setState] = useState(initialValue);`. Call setState to update and trigger a re-render.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to pass props to a component?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: Props passing",
    "answer": "Specify attributes on the JSX tag: `<MyComponent title=\"Hello\" />`, then access via function parameters or `this.props.title` in class components.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to handle events in React?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: Event handling",
    "answer": "Use camelCase event props: `<button onClick={handleClick}>Click</button>`. Pass a function reference; avoid parentheses to prevent immediate execution.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "How to fetch data in a functional component?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: Data fetching",
    "answer": "Use `useEffect`:\n```js\nuseEffect(() => {\n  fetch(url).then(r => r.json()).then(setData);\n}, []);\n```The empty array runs effect once on mount.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "How to use useEffect hook?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: useEffect",
    "answer": "useEffect runs side effects. Pass a dependency array: `useEffect(effect, [deps])`. Cleanup can be returned: `return () => cleanup();`.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to style React components?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: Styling",
    "answer": "Use CSS files imported in JS, CSS modules, styled-components, or inline styles with JS objects: `<div style={{ color: 'red' }}></div>`.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to manage forms in React?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: Forms",
    "answer": "Use controlled components: bind input value to state and handle onChange to update state. On submit, read state values.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to lift state up?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: State lifting",
    "answer": "Move shared state to their closest common parent and pass state and setters as props down to child components.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use Context API?",
    "label": "reactjs",
    "language": "en",
    "context": "Descriptive: Context",
    "answer": "Create context: `const C = React.createContext()`. Wrap provider: `<C.Provider value={data}>`. Consume via `useContext(C)` or <C.Consumer>.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Compare class vs functional components.",
    "label": "reactjs",
    "language": "en",
    "context": "Comparison: Components",
    "answer": "Class components use ES6 classes and lifecycle methods. Functional components use functions and hooks for state and side effects, resulting in cleaner code.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "Compare useState vs useReducer.",
    "label": "reactjs",
    "language": "en",
    "context": "Comparison: State hooks",
    "answer": "useState is simpler for local state. useReducer is better for complex state logic, offering a reducer function pattern similar to Redux.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Compare useEffect vs lifecycle methods.",
    "label": "reactjs",
    "language": "en",
    "context": "Comparison: Effects vs lifecycle",
    "answer": "useEffect replaces componentDidMount, componentDidUpdate, and componentWillUnmount by combining setup and cleanup in one API.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Compare React Router vs BrowserRouter.",
    "label": "reactjs",
    "language": "en",
    "context": "Comparison: Routing",
    "answer": "BrowserRouter uses HTML5 history API for clean URLs. HashRouter uses URL hash portion. BrowserRouter is preferred for SEO and cleaner paths.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "Compare React vs Angular.",
    "label": "reactjs",
    "language": "en",
    "context": "Comparison: Framework vs library",
    "answer": "React is a UI library focusing on view layer. Angular is a full framework with built-in routing, forms, and DI. React offers more flexibility.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "Compare controlled vs uncontrolled components.",
    "label": "reactjs",
    "language": "en",
    "context": "Comparison: Form inputs",
    "answer": "Controlled components have form data driven by React state. Uncontrolled components rely on DOM refs to access input values.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to install React with npm?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Installation",
    "answer": "Run `npm install react react-dom` or use Create React App which installs dependencies automatically.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to create a functional component?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Functional component",
    "answer": "Define a function returning JSX: `function MyComp(props) { return <div>{props.children}</div>; }` then use `<MyComp>Content</MyComp>`.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to create a class component?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Class component",
    "answer": "Extend React.Component: `class MyComp extends React.Component { render() { return <div>Hello</div>; } }` and use `<MyComp/>` in JSX.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to update state correctly?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: State update",
    "answer": "Use setter from useState: `setCount(prev => prev + 1)`. Or in class: `this.setState({key: value})`, ensuring not to mutate state directly.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "How to implement conditional rendering?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Conditional rendering",
    "answer": "Use ternary: `{condition ? <A/> : <B/>}` or logical: `{condition && <A/>}` within JSX to render based on state or props.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to render lists in React?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Lists",
    "answer": "Map over arrays: `{items.map(item => <li key={item.id}>{item.name}</li>)}`. Include unique key prop for list items.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to use React Router for routing?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Routing",
    "answer": "Install `react-router-dom`, wrap app in `<BrowserRouter>`, define `<Route path=\"/\" component={Home}/>` and use `<Link>` for navigation.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to optimize performance with React.memo?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Performance",
    "answer": "Wrap functional components with `React.memo` to skip re-renders when props haven\u2019t changed, improving performance.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to use PropTypes for type checking?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: PropTypes",
    "answer": "Install `prop-types`, define `MyComp.propTypes = { name: PropTypes.string.isRequired };` to enforce types for props at runtime.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to integrate Redux with React?",
    "label": "reactjs",
    "language": "en",
    "context": "How-to: Redux integration",
    "answer": "Install `react-redux`, wrap app in `<Provider store={store}>`, use `connect` or `useSelector` and `useDispatch` to access state and dispatch actions.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "Invariant Violation: Invalid hook call",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: Invalid hook call",
    "answer": "Occurs when hooks are called inside loops, conditions, or outside a React function component. Hooks must be called unconditionally at top level.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "Cannot read property 'map' of undefined",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: map of undefined",
    "answer": "Occurs when attempting to map over a variable that is undefined. Ensure data is initialized as an array before mapping.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "A component is changing an uncontrolled input to controlled",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: Controlled vs uncontrolled",
    "answer": "Happens when input value changes between undefined and defined. Initialize state value to empty string to keep it controlled.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Too many re-renders (Infinite loop)",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: Infinite renders",
    "answer": "Occurs when state is updated unconditionally in component body or useEffect without correct dependencies, causing continuous re-renders.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "JSX expressions must have one parent element",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: JSX parent",
    "answer": "JSX needs a single root element. Wrap siblings in a <div> or <React.Fragment></React.Fragment> to satisfy this requirement.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Each child in a list should have a unique key",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: Unique key",
    "answer": "React uses keys to track list items. Ensure each list item has a unique key prop, like array index or unique id.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Cannot update a component while rendering another",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: State update",
    "answer": "Happens if you set state in the body of a component instead of an event or effect. Move setState calls to event handlers or useEffect.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "ReactDOM.render is no longer supported in React 18",
    "label": "reactjs",
    "language": "en",
    "context": "Common Error: ReactDOM.render",
    "answer": "In React 18+, use `createRoot` from 'react-dom/client': `const root = createRoot(domNode); root.render(<App/>);`.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "React Hook \"useEffect\" has missing dependencies",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: hook dependencies",
    "answer": "ESLint warns when dependencies are omitted in useEffect. Include all variables used inside effect or disable the rule intentionally.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Cannot perform a React state update on an unmounted component",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: state update unmounted",
    "answer": "Occurs when async operations call setState after component unmounted. Cancel subscriptions or checks in cleanup of useEffect.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Objects are not valid as a React child",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: Invalid child",
    "answer": "Happens when rendering an object directly in JSX. Convert objects to strings or render their properties individually.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Expected corresponding JSX closing tag",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: JSX closing tag",
    "answer": "Occurs when JSX tags are mismatched or not closed properly. Ensure every opening tag has a matching closing tag.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Warning: validateDOMNesting",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: DOM nesting",
    "answer": "React warns when invalid HTML nesting occurs, like <p> within <button>. Fix markup to follow HTML nesting rules.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Module not found: Can't resolve 'react-router-dom'",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: Module not found",
    "answer": "Occurs when 'react-router-dom' isn't installed or misspelled. Install with `npm install react-router-dom` or check import path.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Refs cannot be attached to functional components",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: Refs on functional",
    "answer": "By default, refs work on DOM elements or class components. Wrap functional component with forwardRef to pass refs.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Unhandled Rejection (TypeError): Failed to fetch",
    "label": "reactjs",
    "language": "en",
    "context": "Specific Error: Fetch failure",
    "answer": "Occurs when fetch network request fails. Check URL, network connectivity, and handle errors with catch.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is Node.js?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: Node.js overview",
    "answer": "Node.js is a JavaScript runtime built on Chrome's V8 engine that allows executing JS on the server. It uses an event-driven, non-blocking I/O model for scalable network applications.",
    "start_char": 0,
    "end_char": 182
  },
  {
    "question": "What is npm?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: npm definition",
    "answer": "npm (Node Package Manager) is the default package manager for Node.js, used to install, share, and manage dependencies of JavaScript projects.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "What is a callback in Node.js?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: Callback concept",
    "answer": "A callback is a function passed as an argument to another function, invoked after an asynchronous operation completes (e.g., file read or HTTP request).",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "What is an event loop?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: Event loop",
    "answer": "The event loop is Node.js's mechanism for handling asynchronous operations. It picks tasks from the event queue and executes their callbacks when resources are available.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "What is a stream?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: Streams",
    "answer": "Streams are objects for reading or writing data piece by piece. Types include Readable, Writable, Duplex, and Transform streams for efficient I/O.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "What is middleware in Express?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: Express middleware",
    "answer": "Middleware functions in Express are functions that have access to req, res, and next. They process requests before reaching route handlers or after.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "What is REPL in Node.js?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: REPL",
    "answer": "REPL (Read-Eval-Print Loop) is an interactive shell for running Node.js commands, evaluating expressions, and inspecting objects in real time.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "What is a module in Node.js?",
    "label": "node.js",
    "language": "en",
    "context": "Factoid: Modules",
    "answer": "Modules are reusable JavaScript files. Node.js supports CommonJS modules (`require`/`module.exports`) and ES Modules (`import`/`export`).",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to create a simple HTTP server?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: HTTP server",
    "answer": "Use the http module:\n```js\nconst http = require('http');\nhttp.createServer((req,res) => {res.end('Hello');}).listen(3000);\n```",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to read a file asynchronously?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: FS read",
    "answer": "Use fs.readFile:\n```js\nconst fs = require('fs');\nfs.readFile('file.txt','utf8',(err,data)=>{if(err) throw err; console.log(data);});\n```",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "How to use Express for routing?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: Express routing",
    "answer": "Install Express and define routes:\n```js\nconst app = require('express')();\napp.get('/', (req,res)=>res.send('Home'));\napp.listen(3000);\n```",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "How to parse JSON request body in Express?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: Body parsing",
    "answer": "Use built-in middleware:\n```js\napp.use(express.json());\napp.post('/', (req,res)=>{console.log(req.body);});\n```",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to handle errors in async functions?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: Async error handling",
    "answer": "Use try-catch inside async functions:\n```js\napp.get('/', async (req,res)=>{try{await do();}catch(e){res.status(500).send(e.message);}});\n```",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to connect to MongoDB with Mongoose?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: Mongoose",
    "answer": "Install mongoose and:\n```js\nconst mongoose = require('mongoose');\nmongoose.connect(uri).then(()=>console.log('Connected'));\n```",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to emit and listen to events?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: EventEmitter",
    "answer": "Use EventEmitter:\n```js\nconst {EventEmitter} = require('events');\nconst em = new EventEmitter();\nem.on('evt', data=>{});\nem.emit('evt', payload);\n```",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "How to use environment variables?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: Env vars",
    "answer": "Access via process.env:\n```js\nconsole.log(process.env.PORT);\n```Use dotenv package to load from .env file.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to schedule tasks with node-cron?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: Scheduling",
    "answer": "Install node-cron and:\n```js\nconst cron = require('node-cron');\ncron.schedule('* * * * *', ()=>{console.log('Every minute');});\n```",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to debug Node.js code?",
    "label": "node.js",
    "language": "en",
    "context": "Descriptive: Debugging",
    "answer": "Run with `node --inspect` and open chrome://inspect in Chrome. Use breakpoints and console in DevTools.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare callbacks vs promises.",
    "label": "node.js",
    "language": "en",
    "context": "Comparison: Async patterns",
    "answer": "Callbacks can lead to nested code (callback hell). Promises chain operations and improve readability, handling success and errors with .then/.catch.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "Compare promises vs async/await.",
    "label": "node.js",
    "language": "en",
    "context": "Comparison: Promise vs async",
    "answer": "Promises use .then() chains. async/await provides synchronous style code for Promises with try-catch for error handling.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare require() vs import.",
    "label": "node.js",
    "language": "en",
    "context": "Comparison: Modules",
    "answer": "require() is CommonJS synchronous loader. import is ES Module syntax, supports static analysis and must run in module contexts.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare process.nextTick vs setImmediate.",
    "label": "node.js",
    "language": "en",
    "context": "Comparison: NextTick vs Immediate",
    "answer": "process.nextTick() queues callback before next event loop iteration. setImmediate() queues after I/O events callbacks.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare readFile vs createReadStream.",
    "label": "node.js",
    "language": "en",
    "context": "Comparison: FS methods",
    "answer": "readFile loads entire file into memory before callback. createReadStream reads chunks using streams, efficient for large files.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare cluster vs worker_threads.",
    "label": "node.js",
    "language": "en",
    "context": "Comparison: Parallelism",
    "answer": "cluster spawns separate processes sharing ports. worker_threads run threads within same process, sharing memory with MessageChannel.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to install dependencies?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: Installing",
    "answer": "Run `npm install` to install dependencies listed in package.json. Use `npm install pkg --save` to add a new dependency.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to initialize a package.json?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: npm init",
    "answer": "Run `npm init` for interactive setup or `npm init -y` to generate with defaults.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to run a script from package.json?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: npm scripts",
    "answer": "Define scripts in package.json under \"scripts\" and run with `npm run scriptName`.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to use nodemon for auto-restart?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: Auto-restart",
    "answer": "Install nodemon globally or dev: `npm install -g nodemon`, then run `nodemon app.js` to restart on file changes.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to handle uncaught exceptions?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: Exception handling",
    "answer": "Listen on process:\n```js\nprocess.on('uncaughtException', err=>{console.error(err); process.exit(1);});\n```",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to log with Winston?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: Logging",
    "answer": "Install winston and:\n```js\nconst winston = require('winston');\nconst logger = winston.createLogger({ transports:[new winston.transports.Console()] });\n```",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to secure Express app?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: Security",
    "answer": "Use helmet middleware: `const helmet = require('helmet'); app.use(helmet());` to set HTTP headers for security.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to enable CORS?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: CORS",
    "answer": "Install cors and `app.use(require('cors')());` or configure options for specific origins.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to connect to Redis?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: Redis",
    "answer": "Install ioredis and:\n```js\nconst Redis = require('ioredis');\nconst client = new Redis();\n```",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to send email with Nodemailer?",
    "label": "node.js",
    "language": "en",
    "context": "How-to: Email",
    "answer": "Install nodemailer and:\n```js\nconst nodemailer = require('nodemailer');\nconst t = nodemailer.createTransport({service:'Gmail',auth:{...}});\nt.sendMail({...});\n```",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "Error: Cannot find module",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Module not found",
    "answer": "Occurs when require cannot locate the module. Check module name, installation, and NODE_PATH or relative path correctness.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Callback called multiple times error",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Callback multiple calls",
    "answer": "Happens when a callback is invoked more than once in async code. Ensure each code path calls it exactly once.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "UnhandledPromiseRejectionWarning",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Promise rejection",
    "answer": "Occurs when a promise is rejected and no .catch() handler is attached. Attach .catch() or use try-catch in async functions.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Error: listen EADDRINUSE",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Address in use",
    "answer": "Occurs when server tries to listen on a port already in use. Change port or stop the process using that port.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "TypeError: callback is not a function",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Callback type",
    "answer": "Happens when a callback argument is undefined or not a function. Check function signature and argument passed.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "RangeError: Maximum call stack size exceeded",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Stack overflow",
    "answer": "Occurs due to infinite recursion or too deep nested calls. Refactor code to reduce recursion depth.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: NJS-PROMISE-LISTENER",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Promise listener",
    "answer": "Indicates too many listeners for promise events. Use EventEmitter.setMaxListeners() or remove unnecessary listeners.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Error: ECONNREFUSED",
    "label": "node.js",
    "language": "en",
    "context": "Common Error: Connection refused",
    "answer": "Occurs when a network connection is refused by the target server. Check server availability and correct host/port.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Error: EPERM operation not permitted",
    "label": "node.js",
    "language": "en",
    "context": "Specific Error: EPERM",
    "answer": "Th\u2026 (truncated)",
    "start_char": 0,
    "end_char": 15
  },
  {
    "question": "Error: EACCES permission denied",
    "label": "node.js",
    "language": "en",
    "context": "Specific Error: EACCES",
    "answer": "Occurs when Node.js process lacks permissions to access file or directory. Adjust file permissions or run with appropriate privileges.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "Error: ECONNRESET",
    "label": "node.js",
    "language": "en",
    "context": "Specific Error: Connection reset",
    "answer": "Occurs when the peer resets the connection. Handle errors in request and retry or check server health.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "SyntaxError: Unexpected token",
    "label": "node.js",
    "language": "en",
    "context": "Specific Error: Syntax",
    "answer": "Indicates invalid JavaScript syntax in code. Check the line and correct missing braces or invalid tokens.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: ERR_HTTP_HEADERS_SENT",
    "label": "node.js",
    "language": "en",
    "context": "Specific Error: Headers sent",
    "answer": "Occurs when response headers are written after they are already sent. Ensure res.send or res.end is called only once.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Error: UNHANDLED REJECTION",
    "label": "node.js",
    "language": "en",
    "context": "Specific Error: Unhandled rejection",
    "answer": "Thrown when a rejected promise is not handled. Always attach .catch() to promises or use try-catch with async/await.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Error: ERR_PACKAGE_PATH_NOT_EXPORTED",
    "label": "node.js",
    "language": "en",
    "context": "Specific Error: Path not exported",
    "answer": "Occurs when importing a path not specified in package exports. Use the package's main entry or update exports in package.json.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is an array?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Array definition",
    "answer": "An array is a collection of elements of the same type stored in contiguous memory locations, allowing indexed access to each element.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "What is the time complexity of accessing an array element?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Access complexity",
    "answer": "Accessing an array element by index is O(1) time, since it directly computes the memory address using the base pointer and offset.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "What is a multidimensional array?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Multidimensional arrays",
    "answer": "A multidimensional array is an array of arrays, allowing storage and indexed access in two or more dimensions, e.g., a matrix.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is a jagged array?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Jagged arrays",
    "answer": "A jagged array is an array whose elements are arrays of varying lengths, creating rows of different sizes in a 2D structure.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "What is static vs dynamic array?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Static vs dynamic",
    "answer": "Static arrays have fixed size at compile time. Dynamic arrays can grow or shrink at runtime using operations like append or realloc.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "What is array indexing?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Indexing",
    "answer": "Array indexing is the process of accessing an element by its position using an index, typically zero-based in most languages.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "What is contiguous memory?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Memory layout",
    "answer": "Contiguous memory means elements are stored sequentially in one block, enabling pointer arithmetic and efficient traversal.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is a slice (in Go/Python)?",
    "label": "arrays",
    "language": "en",
    "context": "Factoid: Slices",
    "answer": "A slice is a view or dynamic wrapper over an array, allowing flexible resizing and referencing subsets without copying data.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to initialize an array in Java?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Java initialization",
    "answer": "Use `int[] arr = new int[5];` for fixed size or `int[] arr = {1,2,3,4,5};` for literal initialization.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to iterate over an array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Iteration",
    "answer": "Use a for-loop: `for(int i=0;i<arr.length;i++){}`; enhanced for: `for(int v:arr){}`; or array.forEach in JS.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to copy an array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Copying arrays",
    "answer": "In Java use `Arrays.copyOf(arr, newLength)`. In Python `new = arr[:]`. In C `memcpy(dest, src, n*sizeof(type))`.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to resize an array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Resizing",
    "answer": "Static arrays cannot resize. Use dynamic arrays (ArrayList in Java, vector in C++) or allocate new array and copy elements.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to merge two arrays?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Merging",
    "answer": "Concatenate arrays: in Python `arr1+arr2`. In Java use `System.arraycopy`. In JS use `arr1.concat(arr2)`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to reverse an array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Reverse",
    "answer": "In-place: swap elements at i and n-1-i. Utilities: `Collections.reverse(list)` in Java or `arr.reverse()` in JS.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to sort an array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Sorting",
    "answer": "Use built-in: `Arrays.sort(arr)` in Java, `sorted(arr)` in Python, or `arr.sort()` in JS. They use efficient algorithms like Timsort or QuickSort.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to search in an array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Searching",
    "answer": "Linear search O(n): scan each. For sorted arrays use binary search O(log n): `Arrays.binarySearch(arr, key)`, or custom implementation.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to remove duplicates from an array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Deduplication",
    "answer": "Use a set to filter unique values: Python `list(set(arr))`, Java `new HashSet<>(Arrays.asList(arr))`, or lodash `_.uniq(arr)`.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to flatten a multidimensional array?",
    "label": "arrays",
    "language": "en",
    "context": "Descriptive: Flattening",
    "answer": "Recursively concatenate elements: Python `itertools.chain.from_iterable`, JS `arr.flat()`, or custom recursion.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare arrays vs linked lists.",
    "label": "arrays",
    "language": "en",
    "context": "Comparison: Array vs Linked List",
    "answer": "Arrays have O(1) access but O(n) insertion/deletion. Linked lists have O(1) insertion/deletion but O(n) access.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare static vs dynamic arrays.",
    "label": "arrays",
    "language": "en",
    "context": "Comparison: Static vs Dynamic",
    "answer": "Static arrays fixed size at compile time. Dynamic arrays allocate memory at runtime and resize automatically.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare arrays vs slices in Go.",
    "label": "arrays",
    "language": "en",
    "context": "Comparison: Go arrays vs slices",
    "answer": "Arrays have fixed length and value semantics. Slices are dynamic, reference underlying array, and can grow.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare arrays vs vectors in C++.",
    "label": "arrays",
    "language": "en",
    "context": "Comparison: C++ array vs vector",
    "answer": "C arrays fixed size, no bounds checking. std::vector dynamic size, manages memory, and provides methods.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare Python list vs array.",
    "label": "arrays",
    "language": "en",
    "context": "Comparison: Python list vs array",
    "answer": "list is a dynamic array of objects. array module provides fixed-type arrays of numeric data for efficiency.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare arrays vs ArrayList in Java.",
    "label": "arrays",
    "language": "en",
    "context": "Comparison: Java array vs ArrayList",
    "answer": "Arrays have fixed length and fast access. ArrayList is dynamic, resizable, but has overhead for boxing/unboxing.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to declare an array literal in JavaScript?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: JS array literal",
    "answer": "Use `[1,2,3]` or `new Array(3)` for empty slots. Prefer literals for readability.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to get array length?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Length",
    "answer": "Use `.length` property: `arr.length` in JS and Java; `len(arr)` in Python; `array.length` in C#.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to append to an array?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Append",
    "answer": "JS `arr.push(val)`, Python `arr.append(val)`, Java `Arrays.copyOf()` or use ArrayList `add()`, C++ `vector.push_back()`.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to check if element exists?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Contains",
    "answer": "JS `arr.includes(val)`, Java `Arrays.asList(arr).contains(val)`, Python `val in arr`, C++ `find(begin,end,val)!=end`.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to map over an array?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Map",
    "answer": "JS `arr.map(fn)`, Python `list(map(fn, arr))`, Java Streams `Arrays.stream(arr).map(...)`, C# `arr.Select(fn)`.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to filter an array?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Filter",
    "answer": "JS `arr.filter(fn)`, Python `[x for x in arr if cond]`, Java Streams `filter()`, C# `arr.Where(fn)`.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to reduce an array?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Reduce",
    "answer": "JS `arr.reduce((acc, x)=>acc+x, 0)`, Python `functools.reduce`, Java Streams `reduce()`, C# `arr.Aggregate()`.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to slice an array?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Slice",
    "answer": "JS `arr.slice(start,end)`, Python `arr[start:end]`, Java `Arrays.copyOfRange(arr,start,end)`.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to join an array into string?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Join",
    "answer": "JS `arr.join(',')`, Python `','.join(map(str, arr))`, Java `String.join(',', Arrays.stream(arr)... )`.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to clear an array?",
    "label": "arrays",
    "language": "en",
    "context": "How-to: Clear",
    "answer": "JS `arr.length=0`, Python `arr.clear()`, Java `Arrays.fill(arr,null)` or use `list.clear()`, C++ `vector.clear()`.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "ArrayIndexOutOfBoundsException, what causes it?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: Java index",
    "answer": "Occurs when accessing an index outside [0, length-1] in Java arrays.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "IndexError in Python arrays, why?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: Python index",
    "answer": "Raised when accessing an element at an invalid index, negative beyond range, or out-of-bounds.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "TypeError: arr.map is not a function, what happened?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: JS map",
    "answer": "Occurs when `arr` is not an array or is undefined/null. Ensure the variable is initialized as an array.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Cannot read property 'length' of undefined, why?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: Undefined length",
    "answer": "Happens when the array reference is undefined or null before accessing `.length`.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Segmentation fault on array access in C, why?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: C segmentation",
    "answer": "Accessing memory out-of-bounds or uninitialized pointer leads to segmentation fault.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "std::out_of_range with vector.at(), what causes it?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: C++ vector",
    "answer": "Thrown when using `.at(index)` with an index outside valid range.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "PHP Warning: Undefined offset, what does it mean?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: PHP offset",
    "answer": "Occurs when accessing an array element with a key or index that doesn\u2019t exist.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "What is off-by-one error in loops?",
    "label": "arrays",
    "language": "en",
    "context": "Common Error: Off-by-one",
    "answer": "Occurs when loop boundaries are incorrect, causing one extra or one fewer iteration than intended.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "ERROR: Subscript out of bounds in R arrays",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: R subscript",
    "answer": "Raised when indexing an R array or vector outside its bounds.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "CVE vulnerability in array handling, example?",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: CVE",
    "answer": "Buffer overflow in C arrays can lead to CVE-2019-...</answer>",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "TypeError: arr.push is not a function in JS",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: JS push",
    "answer": "Occurs when `arr` is not an array but another type, lacking `push` method.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "ArrayStoreException in Java, what causes it?",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: Java ArrayStore",
    "answer": "Thrown when storing wrong type into an array of objects, violating type safety.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Visual Basic run-time error 9 subscript out of range",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: VB subscript",
    "answer": "Occurs when accessing array index outside its defined range in VB.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "MATLAB Index exceeds matrix dimensions",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: MATLAB index",
    "answer": "Raised when referencing matrix element with row/column index exceeding size.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Swift: Index out of range in Array",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: Swift index",
    "answer": "Occurs when accessing Swift Array element with invalid index.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "Ruby: IndexError array index out of range",
    "label": "arrays",
    "language": "en",
    "context": "Specific Error: Ruby index",
    "answer": "Raised when array index is negative beyond range or exceeds size.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "What is C?",
    "label": "c",
    "language": "en",
    "context": "Factoid: C overview",
    "answer": "C is a general-purpose, procedural programming language developed in the early 1970s. It provides low-level memory access, a simple set of keywords, and a clean style, making it suitable for system programming.",
    "start_char": 0,
    "end_char": 210
  },
  {
    "question": "What does C stand for?",
    "label": "c",
    "language": "en",
    "context": "Factoid: Acronym",
    "answer": "The name 'C' has no acronym; it was chosen as the successor to the language 'B' developed by Ken Thompson.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is a pointer in C?",
    "label": "c",
    "language": "en",
    "context": "Factoid: Pointer concept",
    "answer": "A pointer is a variable that stores the memory address of another variable. Declared with `type *ptr;`, it allows indirect access and dynamic memory manipulation.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "What is a function in C?",
    "label": "c",
    "language": "en",
    "context": "Factoid: Function definition",
    "answer": "A function is a reusable block of code that performs a specific task. Defined with syntax `return_type name(parameters) { body }`, it can be called with arguments.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "What is stdio.h?",
    "label": "c",
    "language": "en",
    "context": "Factoid: Header file",
    "answer": "`stdio.h` is the standard I/O header providing functions like `printf`, `scanf`, `fopen`, `fclose` for input and output operations.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "What is a header file?",
    "label": "c",
    "language": "en",
    "context": "Factoid: Header files",
    "answer": "A header file (`.h`) contains declarations of functions, macros, and types to share interfaces between source files via `#include`.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "What is the difference between compilation and linking?",
    "label": "c",
    "language": "en",
    "context": "Factoid: Build process",
    "answer": "Compilation translates source code to object files. Linking combines object files and libraries to produce an executable.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "What is the C preprocessor?",
    "label": "c",
    "language": "en",
    "context": "Factoid: Preprocessing",
    "answer": "The preprocessor handles directives (`#include`, `#define`) before compilation, performing file inclusion and macro expansion.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to declare a variable in C?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Variable declaration",
    "answer": "Use syntax `type name;` (e.g., `int x;`). Initialize with `type name = value;` (e.g., `int x = 5;`).",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to write a for loop in C?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Loop",
    "answer": "Use `for(initialization; condition; increment) { body }`, e.g., `for(int i=0;i<10;i++){ printf(\"%d\",i); }`.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to include a header file?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Include directive",
    "answer": "Use `#include <header.h>` for system headers or `#include \"file.h\"` for local headers.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to compile a C program?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Compilation",
    "answer": "Use a compiler like GCC: `gcc source.c -o program`. Add flags like `-Wall` for warnings and `-O2` for optimization.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to use printf?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Output",
    "answer": "Use `printf(\"format\", args);` with format specifiers (e.g., `%d`, `%s`). Include `stdio.h` for declaration.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to allocate dynamic memory?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Dynamic allocation",
    "answer": "Use `malloc(size)` to allocate and `free(ptr)` to deallocate. Include `stdlib.h`.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to read input with scanf?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Input",
    "answer": "Use `scanf(\"%d\", &x);` with format specifiers and address-of operator. Check return value for success.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to define a macro?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Macro definition",
    "answer": "Use `#define NAME value` or function-like macros `#define SQR(x) ((x)*(x))`.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to handle command line arguments?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: CLI args",
    "answer": "Define `main(int argc, char *argv[])`, where `argc` is argument count and `argv` is array of argument strings.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to declare a struct?",
    "label": "c",
    "language": "en",
    "context": "Descriptive: Structs",
    "answer": "Use `struct Name { type member; ... };` and declare instances with `struct Name var;`.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Compare malloc vs calloc.",
    "label": "c",
    "language": "en",
    "context": "Comparison: Allocation",
    "answer": "`malloc` allocates uninitialized memory. `calloc` allocates zero-initialized memory and takes count and size arguments.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare while vs do-while.",
    "label": "c",
    "language": "en",
    "context": "Comparison: Loops",
    "answer": "`while` tests condition before body. `do-while` tests after body, so executes at least once.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare array vs pointer.",
    "label": "c",
    "language": "en",
    "context": "Comparison: Data structures",
    "answer": "Arrays have fixed size and storage. Pointers can be reassigned and manipulated with arithmetic.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare struct vs union.",
    "label": "c",
    "language": "en",
    "context": "Comparison: Composite types",
    "answer": "Struct allocates space for all members. Union shares memory among members, storing only one at a time.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare static vs dynamic linking.",
    "label": "c",
    "language": "en",
    "context": "Comparison: Linking",
    "answer": "Static linking embeds libraries into executable. Dynamic linking loads libraries at runtime, reducing binary size.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare local vs global variables.",
    "label": "c",
    "language": "en",
    "context": "Comparison: Scope",
    "answer": "Local variables exist within a function or block. Global variables exist for program lifetime and are accessible anywhere.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to use pointers to access array elements?",
    "label": "c",
    "language": "en",
    "context": "How-to: Pointers & arrays",
    "answer": "Elements at index i: `*(arr + i)` is equivalent to `arr[i]`.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to pass pointers to functions?",
    "label": "c",
    "language": "en",
    "context": "How-to: Pointer parameters",
    "answer": "Declare function `void f(int *p)` and call with `f(&x)` to modify original variable.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to open and close files?",
    "label": "c",
    "language": "en",
    "context": "How-to: File I/O",
    "answer": "Use `FILE *f = fopen(\"file.txt\",\"r\");` and `fclose(f);`.",
    "start_char": 0,
    "end_char": 56
  },
  {
    "question": "How to write to a file?",
    "label": "c",
    "language": "en",
    "context": "How-to: File write",
    "answer": "Use `fprintf(f, \"format\", args);` or `fwrite(buffer, size, count, f);`.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to create and use header guards?",
    "label": "c",
    "language": "en",
    "context": "How-to: Header guards",
    "answer": "Use `#ifndef HEADER_H`, `#define HEADER_H`, declarations, `#endif` to prevent multiple inclusion.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to use typedef?",
    "label": "c",
    "language": "en",
    "context": "How-to: Typedef",
    "answer": "Use `typedef existing_type new_name;` to create alias, e.g., `typedef unsigned long ul;`.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to use bitwise operators?",
    "label": "c",
    "language": "en",
    "context": "How-to: Bitwise",
    "answer": "Operators: `&` (AND), `|` (OR), `^` (XOR), `~` (NOT), `<<` (left shift), `>>` (right shift).",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to use enum?",
    "label": "c",
    "language": "en",
    "context": "How-to: Enum",
    "answer": "Define `enum Color {RED, GREEN, BLUE};` and use `enum Color c = RED;` for named constants.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to handle signals?",
    "label": "c",
    "language": "en",
    "context": "How-to: Signals",
    "answer": "Include `<signal.h>` and use `signal(SIGINT, handler);` to catch signals.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to use a makefile?",
    "label": "c",
    "language": "en",
    "context": "How-to: Build automation",
    "answer": "Write rules: `target: dependencies\n\tcommands`, then run `make target` to compile.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Segmentation fault, what causes it?",
    "label": "c",
    "language": "en",
    "context": "Common Error: Segfault",
    "answer": "Occurs when accessing invalid memory, such as dereferencing null or out-of-bounds pointers.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Warning: implicit declaration, why?",
    "label": "c",
    "language": "en",
    "context": "Common Error: Implicit declaration",
    "answer": "Function used without prototype; pre-C99, compiler assumes return int. Add proper function declaration.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Undefined reference error, cause?",
    "label": "c",
    "language": "en",
    "context": "Common Error: Linker",
    "answer": "Linker cannot find symbol definition. Ensure functions are defined and object files are linked.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Warning: incompatible pointer types",
    "label": "c",
    "language": "en",
    "context": "Common Error: Pointer type",
    "answer": "Occurs when assigning between different pointer types without cast. Use proper type or cast explicitly.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Warning: deprecated declaration",
    "label": "c",
    "language": "en",
    "context": "Common Error: Deprecated",
    "answer": "Function or feature marked deprecated. Update code to use recommended alternatives.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: expected ';' before '}'",
    "label": "c",
    "language": "en",
    "context": "Common Error: Syntax",
    "answer": "Missing semicolon before closing brace. Add ';' at end of previous statement.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error: stray '\\342' in program",
    "label": "c",
    "language": "en",
    "context": "Common Error: Stray character",
    "answer": "Non-ASCII character in source. Remove or replace with valid ASCII.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "Warning: comparison between signed and unsigned",
    "label": "c",
    "language": "en",
    "context": "Common Error: Comparison",
    "answer": "Comparing signed and unsigned types can produce unexpected results. Cast to same type to avoid warning.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Warning: format '%d' expects int but argument is float",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Format mismatch",
    "answer": "Mismatched printf format and argument type. Use correct specifier (e.g., '%f' for float).",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: storage size of 'arr' isn't known",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Incomplete type",
    "answer": "Declaring array of incomplete type (e.g., `extern int arr[];` without size). Provide size or definition.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: array subscript is above array bounds",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Bounds",
    "answer": "Compiling with bounds checking warns index exceeds declared array size. Ensure index < size.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Warning: initializer element is not constant",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Initializer",
    "answer": "Array or global variable initialized with non-constant. Use constant expression or assign at runtime.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: taking address of register variable",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Register",
    "answer": "Cannot take address of variable declared with `register`. Remove register qualifier.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: function declaration isn't a prototype",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Declaration",
    "answer": "Function declared without parameter types (old-style). Provide prototype with types.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: called object is not a function",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Not a function",
    "answer": "Attempting to call a non-function (e.g., variable) as function. Check correct identifier.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Warning: implicit int return type",
    "label": "c",
    "language": "en",
    "context": "Specific Error: Implicit int",
    "answer": "Function defined without return type defaults to int in old C. Specify return type explicitly.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is ASP.NET?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: ASP.NET overview",
    "answer": "ASP.NET is an open-source web framework developed by Microsoft for building modern web apps on the .NET platform. It supports Web Forms, MVC, Web API, and Razor Pages.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "What is the difference between ASP.NET and ASP.NET Core?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: Framework comparison",
    "answer": "ASP.NET Core is a cross-platform, high-performance redesign of ASP.NET that runs on Windows, Linux, and macOS, with modular architecture and built-in dependency injection.",
    "start_char": 0,
    "end_char": 171
  },
  {
    "question": "What is IIS?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: Hosting",
    "answer": "IIS (Internet Information Services) is Microsoft's web server for hosting ASP.NET applications, providing request handling, security, and administration features.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "What is a Web Form in ASP.NET?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: Web Forms",
    "answer": "ASP.NET Web Forms is an event-driven model for building UI with server controls, view state, and postbacks, abstracting HTML and HTTP details.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "What is MVC in ASP.NET?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: MVC pattern",
    "answer": "ASP.NET MVC is a framework implementing the Model-View-Controller pattern, providing separation of concerns, testability, and full control over HTML and HTTP.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "What is Razor syntax?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: Razor",
    "answer": "Razor is a markup syntax for embedding server-based code (C#) into HTML views in ASP.NET MVC and Razor Pages, using @ to switch contexts.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "What is Web API in ASP.NET?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: Web API",
    "answer": "ASP.NET Web API is a framework for building HTTP services that can be consumed by browsers, mobile devices, and other clients using RESTful principles.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "What is a middleware in ASP.NET Core?",
    "label": "asp.net",
    "language": "en",
    "context": "Factoid: Middleware",
    "answer": "Middleware are components in the HTTP request pipeline in ASP.NET Core that process requests and responses, each invoking the next in sequence.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "How to create a new ASP.NET MVC project in Visual Studio?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: Project setup",
    "answer": "In Visual Studio, select File > New > Project, choose ASP.NET Web Application, pick MVC template, configure authentication, and click Create to scaffold the project.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "How to configure routing in ASP.NET MVC?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: Routing",
    "answer": "Define routes in RouteConfig.cs: use routes.MapRoute with name, URL pattern, and defaults like controller, action, and id parameters.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to set up a connection string in web.config?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: Configuration",
    "answer": "In web.config under <connectionStrings>, add <add name=\"DefaultConnection\" connectionString=\"...\" providerName=\"System.Data.SqlClient\" />.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "How to use Entity Framework with ASP.NET?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: ORM integration",
    "answer": "Install EF NuGet package, define DbContext and entity classes, add connection string, then use context.Set<TEntity>() or DbSets for CRUD operations.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to handle sessions in ASP.NET?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: Session state",
    "answer": "Enable sessionState in web.config, then use HttpContext.Session in controllers to set and get key-value pairs for user-specific data.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to deploy an ASP.NET application to IIS?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: Deployment",
    "answer": "Publish from Visual Studio to a folder, configure IIS site pointing to that folder, set application pool .NET version, and grant proper permissions.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to implement authentication in ASP.NET Core?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: Authentication",
    "answer": "Use AddAuthentication and AddCookie/ AddJwtBearer in Startup.ConfigureServices, then enable UseAuthentication and UseAuthorization in Configure.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to implement authorization with roles?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: Authorization",
    "answer": "Decorate controllers/actions with [Authorize(Roles = \"Admin,User\")], configure role claims during user sign-in, and define policies if needed.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "How to configure CORS in ASP.NET Web API?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: CORS",
    "answer": "Install Microsoft.AspNet.WebApi.Cors, enable with config.EnableCors(), and decorate controllers with [EnableCors(origins, headers, methods)].",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to use dependency injection in ASP.NET Core?",
    "label": "asp.net",
    "language": "en",
    "context": "Descriptive: DI",
    "answer": "Register services with services.AddSingleton/AddScoped/AddTransient in ConfigureServices, then request via constructor injection in controllers.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "Compare ASP.NET Web Forms vs MVC.",
    "label": "asp.net",
    "language": "en",
    "context": "Comparison: Web Forms vs MVC",
    "answer": "Web Forms use event-driven UI with view state; MVC uses clear separation of concerns, full control over HTML, and stateless request handling.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "Compare ASP.NET MVC vs ASP.NET Core MVC.",
    "label": "asp.net",
    "language": "en",
    "context": "Comparison: MVC versions",
    "answer": "ASP.NET Core MVC is cross-platform, faster, and unified with Web API. ASP.NET MVC runs on .NET Framework on Windows only.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare Web API vs WCF.",
    "label": "asp.net",
    "language": "en",
    "context": "Comparison: Service frameworks",
    "answer": "Web API is lightweight RESTful HTTP services; WCF supports multiple protocols (SOAP, TCP) and advanced bindings for enterprise scenarios.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "Compare appsettings.json vs web.config.",
    "label": "asp.net",
    "language": "en",
    "context": "Comparison: Configuration files",
    "answer": "appsettings.json is JSON-based used in ASP.NET Core; web.config is XML-based used in classic ASP.NET on .NET Framework.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare in-process vs out-of-process hosting.",
    "label": "asp.net",
    "language": "en",
    "context": "Comparison: Hosting models",
    "answer": "In-process runs the app in the IIS worker process for better performance; out-of-process uses Kestrel and reverse proxy, allowing isolation.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "Compare synchronous vs asynchronous controllers.",
    "label": "asp.net",
    "language": "en",
    "context": "Comparison: Sync vs Async",
    "answer": "Synchronous controllers block threads per request; async controllers use async/await to free threads, improving scalability under I/O-bound loads.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to add a NuGet package to an ASP.NET project?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: NuGet",
    "answer": "Right-click project > Manage NuGet Packages, search package, click Install, or use `Install-Package PackageName` in Package Manager Console.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to use Tag Helpers in Razor?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: Tag Helpers",
    "answer": "Enable in _ViewImports.cshtml, then use `<a asp-controller=\"Home\" asp-action=\"Index\">` instead of HTML helpers in Razor views.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to use View Components?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: View Components",
    "answer": "Create a class deriving from ViewComponent, implement Invoke/InvokeAsync, and call in view with `@Component.InvokeAsync(\"Name\", args)`.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to implement response caching?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: Caching",
    "answer": "Use `services.AddResponseCaching()` in ConfigureServices and `[ResponseCache(Duration=60)]` on controllers or actions.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to handle global exceptions?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: Error handling",
    "answer": "In ASP.NET Core, use `app.UseExceptionHandler(\"/Error\")` and configure an ErrorController or Error page to handle exceptions globally.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to validate model data in MVC?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: Model validation",
    "answer": "Use data annotations like [Required], check ModelState.IsValid in controller, and display validation messages in views with Tag Helpers.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "How to call JavaScript from code-behind in Web Forms?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: JS interop",
    "answer": "Use `ClientScript.RegisterStartupScript(this.GetType(),\"key\",\"alert('Hi');\", true);` in code-behind to inject JS into the page.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to upload files in ASP.NET Core?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: File upload",
    "answer": "Use IFormFile in action: `public IActionResult Upload(IFormFile file){ using var stream = new FileStream(path, FileMode.Create); file.CopyTo(stream); }`.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to configure HTTPS redirection?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: HTTPS",
    "answer": "Use `app.UseHttpsRedirection()` in Configure and set `options.HttpsPort` in CreateDefaultBuilder or launchSettings.json.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to configure logging providers?",
    "label": "asp.net",
    "language": "en",
    "context": "How-to: Logging",
    "answer": "In Program.cs, use `builder.Logging.AddConsole().AddDebug()` or configure logging in appsettings.json under Logging section.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "HTTP Error 500.19 - Cannot read configuration.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: 500.19",
    "answer": "Occurs when IIS cannot read web.config due to malformed XML or permission issues. Check config syntax and file access rights.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Could not load file or assembly 'Newtonsoft.Json'.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: Assembly load",
    "answer": "Occurs when assembly version mismatches or missing in bin folder. Ensure correct NuGet version and clean/rebuild the project.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "HTTP Error 404.17 - Handler 'PageHandlerFactory' has a bad module.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: 404.17",
    "answer": "Occurs when ASP.NET is not registered in IIS. Run aspnet_regiis.exe or enable ASP.NET feature in Windows Features.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "The resource cannot be found.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: 404",
    "answer": "Occurs when requested URL doesn't match any route or file. Verify routing configuration and file paths.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "CS0505: cannot perform runtime binding on a value of type.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: Runtime binding",
    "answer": "Occurs when using dynamic and missing required properties. Ensure object has the expected members at runtime.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Validation of viewstate MAC failed.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: ViewState",
    "answer": "Occurs when machineKey configuration changes between requests or encryption/decryption fails. Ensure consistent keys in web.config.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Object reference not set to an instance of an object.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: Null reference",
    "answer": "Occurs when accessing a null object. Check for null before using object or ensure proper initialization.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Unable to resolve service for type 'ILogger'.",
    "label": "asp.net",
    "language": "en",
    "context": "Common Error: DI",
    "answer": "Occurs when a service is not registered in DI container. Register ILogger<T> or the missing service in ConfigureServices.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "InvalidOperationException: No service for type 'ILogger' has been registered.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: DI",
    "answer": "Occurs when constructor requests ILogger<T> but logging provider not added. Call builder.Logging.AddConsole() or similar.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "FormatException: Input string was not in a correct format.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: Format",
    "answer": "Occurs when parsing values (e.g., int.Parse) with invalid input. Use TryParse or validate input before parsing.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "SqlException: Timeout expired.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: SQL",
    "answer": "Occurs when DB query exceeds CommandTimeout. Increase timeout or optimize query and indexes.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "DbUpdateConcurrencyException in EF Core.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: EF Core",
    "answer": "Thrown when concurrent updates conflict. Handle by catching exception and resolving concurrency tokens or reloading entities.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "InvalidOperationException: Sequence contains no elements.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: LINQ",
    "answer": "Occurs when LINQ methods like First() have no matching elements. Use FirstOrDefault() and check for null.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "NotSupportedException: Synchronous operations are disallowed.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: Sync IO",
    "answer": "Occurs when calling synchronous IO in ASP.NET Core by default. Enable sync IO in options or use async methods.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "SecurityException: Request validation has detected a potentially dangerous value.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: Security",
    "answer": "Occurs when posting HTML or scripts. Disable request validation per action or encode content safely.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "InvalidOperationException: The view 'Index' or its master was not found.",
    "label": "asp.net",
    "language": "en",
    "context": "Specific Error: View",
    "answer": "Occurs when view file is missing or path incorrect. Ensure .cshtml file exists in Views/Controller folder and naming matches.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "What is JSON?",
    "label": "json",
    "language": "en",
    "context": "Factoid: JSON overview",
    "answer": "JSON (JavaScript Object Notation) is a lightweight data-interchange format using key-value pairs and arrays, based on a subset of JavaScript syntax. It is text-based and language-independent.",
    "start_char": 0,
    "end_char": 191
  },
  {
    "question": "What does JSON stand for?",
    "label": "json",
    "language": "en",
    "context": "Factoid: Acronym",
    "answer": "JSON stands for JavaScript Object Notation.",
    "start_char": 0,
    "end_char": 43
  },
  {
    "question": "What data types does JSON support?",
    "label": "json",
    "language": "en",
    "context": "Factoid: Supported types",
    "answer": "JSON supports strings, numbers, objects (key-value), arrays, booleans (true/false), and null values.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is a JSON object?",
    "label": "json",
    "language": "en",
    "context": "Factoid: Object",
    "answer": "A JSON object is an unordered set of name/value pairs enclosed in curly braces: { \"key\": \"value\", \"num\": 1 }.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is a JSON array?",
    "label": "json",
    "language": "en",
    "context": "Factoid: Array",
    "answer": "A JSON array is an ordered collection of values enclosed in square brackets: [\"value1\", 2, true, null].",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What MIME type is used for JSON?",
    "label": "json",
    "language": "en",
    "context": "Factoid: MIME type",
    "answer": "The MIME type for JSON is application/json.",
    "start_char": 0,
    "end_char": 43
  },
  {
    "question": "Is JSON human-readable?",
    "label": "json",
    "language": "en",
    "context": "Factoid: Readability",
    "answer": "Yes, JSON is human-readable and can be formatted with indentation and line breaks for clarity.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is JSON Schema?",
    "label": "json",
    "language": "en",
    "context": "Factoid: Schema",
    "answer": "JSON Schema is a vocabulary for validating and describing the structure of JSON data, specifying required properties, types, and formats.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to parse JSON in JavaScript?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Parsing in JS",
    "answer": "Use `JSON.parse(jsonString)` to convert a JSON string into a JavaScript object or array.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to stringify an object to JSON in JavaScript?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Stringify in JS",
    "answer": "Use `JSON.stringify(value)` to convert JavaScript objects or arrays into a JSON string.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to pretty-print JSON?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Pretty print",
    "answer": "Use `JSON.stringify(obj, null, 2)` where the third argument is the number of spaces for indentation.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to validate JSON syntax?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Validation",
    "answer": "Use a JSON parser or online validator that checks for proper syntax like matching braces, quotes, and commas.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to read JSON from a file in Python?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Reading in Python",
    "answer": "Use `import json` then `data = json.load(open('file.json'))` to parse file contents into Python dicts and lists.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to write JSON to a file in Python?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Writing in Python",
    "answer": "Use `json.dump(obj, open('file.json','w'), indent=2)` to write Python objects to a JSON file with indentation.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to fetch JSON via HTTP in JavaScript?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Fetch API",
    "answer": "Use `fetch(url).then(res=>res.json()).then(data=>console.log(data))` to retrieve and parse JSON from a server.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to handle JSON in Java?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Java JSON libraries",
    "answer": "Use libraries like Jackson (`new ObjectMapper().readValue(json, Class)`) or Gson (`new Gson().fromJson(json, Class.class)`).",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to merge two JSON objects?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: Merging",
    "answer": "In JS use `Object.assign({}, obj1, obj2)` or spread: `{...obj1, ...obj2}`. In Python use `{**d1, **d2}`.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to load JSON in C#?",
    "label": "json",
    "language": "en",
    "context": "Descriptive: C# JSON",
    "answer": "Use `JsonSerializer.Deserialize<MyType>(jsonString)` in System.Text.Json or `JsonConvert.DeserializeObject<MyType>(json)` in Newtonsoft.Json.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "Compare JSON vs XML.",
    "label": "json",
    "language": "en",
    "context": "Comparison: JSON vs XML",
    "answer": "JSON is lighter and easier to parse in JavaScript. XML is more verbose, supports attributes, and has schemas like XSD.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare JSON.parse vs eval in JS.",
    "label": "json",
    "language": "en",
    "context": "Comparison: Parsing methods",
    "answer": "JSON.parse safely parses JSON. eval executes code and can introduce security risks if input is untrusted.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare JSON.stringify replacer vs serializer functions.",
    "label": "json",
    "language": "en",
    "context": "Comparison: Stringify options",
    "answer": "Replacer array filters properties. Replacer function customizes values. Both passed as second argument to JSON.stringify.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare JSON vs YAML.",
    "label": "json",
    "language": "en",
    "context": "Comparison: Data formats",
    "answer": "YAML is more human-friendly with indentation syntax. JSON is stricter but more widely supported in programming languages.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare synchronous vs asynchronous JSON parsing.",
    "label": "json",
    "language": "en",
    "context": "Comparison: Parsing modes",
    "answer": "Synchronous parsing blocks execution (JSON.parse). Asynchronous can use streaming parsers or web workers to avoid blocking.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare JSON Schema vs OpenAPI.",
    "label": "json",
    "language": "en",
    "context": "Comparison: Specifications",
    "answer": "JSON Schema defines data structure validation. OpenAPI describes RESTful APIs including paths, operations, parameters, and schemas.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to escape characters in JSON?",
    "label": "json",
    "language": "en",
    "context": "How-to: Escaping",
    "answer": "Use backslash `\\` before characters: `\\\"`, `\\\\`, `\\n`, `\\t`. Only '\"', '\\\\', '/', 'b', 'f', 'n', 'r', 't', and 'uXXXX' are allowed.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to validate JSON against a schema?",
    "label": "json",
    "language": "en",
    "context": "How-to: Schema validation",
    "answer": "Use validation libraries like Ajv in JS (`ajv.validate(schema, data)`) or jsonschema in Python (`validate(instance, schema)`).",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to parse large JSON files without loading into memory?",
    "label": "json",
    "language": "en",
    "context": "How-to: Streaming",
    "answer": "Use streaming parsers: in Node.js use JSONStream, in Python use ijson to parse incrementally.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to remove keys with null values from JSON?",
    "label": "json",
    "language": "en",
    "context": "How-to: Cleaning",
    "answer": "In JS use `Object.fromEntries(Object.entries(obj).filter(([,v])=>v!=null))`. Similar filtering in other languages.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to merge JSON arrays?",
    "label": "json",
    "language": "en",
    "context": "How-to: Array merge",
    "answer": "Concatenate arrays: JS `arr1.concat(arr2)`, Python `list1 + list2`, or use spread: `[...arr1,...arr2]`.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to convert JSON keys to camelCase?",
    "label": "json",
    "language": "en",
    "context": "How-to: Key transformation",
    "answer": "Use a function to map keys: JS `Object.keys(obj).reduce((o,k)=>({...o,[camelCase(k)]:obj[k]}),{})`.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to pretty-print JSON in Python?",
    "label": "json",
    "language": "en",
    "context": "How-to: Pretty print in Python",
    "answer": "Use `json.dumps(obj, indent=4)` to generate a formatted JSON string.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to detect JSON content type in HTTP request?",
    "label": "json",
    "language": "en",
    "context": "How-to: Content type",
    "answer": "Check `Content-Type` header equals `application/json` before parsing request body.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to convert XML to JSON?",
    "label": "json",
    "language": "en",
    "context": "How-to: Format conversion",
    "answer": "Use libraries like xml2js in Node.js (`xml2js.parseString(xml, callback)`) or xmltodict in Python (`xmltodict.parse(xml)` then json.dumps).",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "How to handle trailing commas in JSON?",
    "label": "json",
    "language": "en",
    "context": "How-to: Trailing commas",
    "answer": "Strict JSON disallows trailing commas. Use tolerant parsers (e.g., JSON5) or preprocess to remove them before parsing.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Unexpected token in JSON at position X",
    "label": "json",
    "language": "en",
    "context": "Common Error: Syntax",
    "answer": "Indicates invalid character or malformed JSON at the given position. Check quotes, commas, and brackets near that offset.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "JSON.parse throws on large input, why?",
    "label": "json",
    "language": "en",
    "context": "Common Error: Memory",
    "answer": "Parsing very large JSON strings may exceed memory limits or stack size. Use streaming parsers for large data.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "TypeError: JSON is undefined in JS",
    "label": "json",
    "language": "en",
    "context": "Common Error: Global",
    "answer": "Occurs in environments without global JSON (e.g., very old browsers). Polyfill JSON or include a library.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Invalid JSON in web response, how to debug?",
    "label": "json",
    "language": "en",
    "context": "Common Error: Response format",
    "answer": "Inspect network response, ensure server sets correct headers and returns valid JSON without HTML or extra characters.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "EOF while parsing a value",
    "label": "json",
    "language": "en",
    "context": "Common Error: Unexpected EOF",
    "answer": "Occurs when JSON ends prematurely. Check for missing closing brackets or quotes.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "JSON serialization circular reference error",
    "label": "json",
    "language": "en",
    "context": "Common Error: Circular reference",
    "answer": "JSON.stringify fails on circular objects. Use replacer or libraries like flatted to handle references.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Invalid value undefined in JSON",
    "label": "json",
    "language": "en",
    "context": "Common Error: Unsupported type",
    "answer": "JSON does not support `undefined`. Property values must be null or valid JSON types; omit undefined properties before stringifying.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Extra data after JSON document",
    "label": "json",
    "language": "en",
    "context": "Common Error: Extra data",
    "answer": "Parser encountered data after a complete JSON value. Remove trailing characters or parse arrays of values instead.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "JSONException: Unexpected character at position X in Java",
    "label": "json",
    "language": "en",
    "context": "Specific Error: Java JSON",
    "answer": "Java parser found invalid character. Check encoding, escape sequences, and ensure valid JSON format.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Gson com.google.gson.stream.MalformedJsonException",
    "label": "json",
    "language": "en",
    "context": "Specific Error: Gson",
    "answer": "Thrown when JSON is not well-formed. Contains position info; inspect JSON near indicated line/column.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "JSONDecodeError: Expecting property name enclosed in double quotes",
    "label": "json",
    "language": "en",
    "context": "Specific Error: Python JSON",
    "answer": "JSON requires keys in double quotes. Replace single quotes or unquoted keys with valid JSON keys.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Uncaught SyntaxError: Unexpected end of JSON input",
    "label": "json",
    "language": "en",
    "context": "Specific Error: JS JSON",
    "answer": "Thrown by JSON.parse when input ends before completing value. Ensure complete JSON string is passed.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Newtonsoft.Json.JsonReaderException",
    "label": "json",
    "language": "en",
    "context": "Specific Error: Newtonsoft.Json",
    "answer": "Indicates malformed JSON or unexpected token. Contains path and line number in exception message.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "org.json.JSONException: Value X of type Y cannot be converted to Z",
    "label": "json",
    "language": "en",
    "context": "Specific Error: org.json",
    "answer": "Parser or getter found a type mismatch. Use correct getter method or cast value appropriately.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "RapidJSON assert: IsObject() failed",
    "label": "json",
    "language": "en",
    "context": "Specific Error: RapidJSON",
    "answer": "Occurs when expecting an object but JSON value is not an object. Validate JSON structure before accessing.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "TypeError: Converting circular structure to JSON",
    "label": "json",
    "language": "en",
    "context": "Specific Error: JS circular",
    "answer": "Same as circular reference error; break cycles or use custom replacer to handle references.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is .NET?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: .NET overview",
    "answer": ".NET is a free, cross-platform developer platform from Microsoft for building applications for web, mobile, desktop, gaming, and IoT using languages like C#, F#, and VB.NET.",
    "start_char": 0,
    "end_char": 173
  },
  {
    "question": "What is the Common Language Runtime (CLR)?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: CLR",
    "answer": "The CLR is the execution engine of .NET, managing code execution, memory, type safety, garbage collection, and interoperability.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "What is the .NET Framework vs .NET Core?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: Framework comparison",
    "answer": ".NET Framework is Windows-only, mature platform. .NET Core (now .NET 5+) is cross-platform, modular, and optimized for cloud and microservices.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "What is C#?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: Language",
    "answer": "C# is a modern, object-oriented programming language developed by Microsoft for the .NET ecosystem, supporting strong typing and advanced features like LINQ and async/await.",
    "start_char": 0,
    "end_char": 173
  },
  {
    "question": "What is ASP.NET?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: Web framework",
    "answer": "ASP.NET is a web framework for building dynamic web apps and APIs on .NET, using MVC, Razor Pages, Blazor, and Web API models.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is NuGet?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: Package manager",
    "answer": "NuGet is the package manager for .NET, used to create, share, and consume libraries and tools as NuGet packages.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "What is Entity Framework?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: ORM",
    "answer": "Entity Framework is an object-relational mapper for .NET that enables developers to work with a database using .NET objects, eliminating most data-access code.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "What is Blazor?",
    "label": ".net",
    "language": "en",
    "context": "Factoid: Blazor",
    "answer": "Blazor is a .NET framework for building interactive web UIs using C# instead of JavaScript, running client-side via WebAssembly or server-side in ASP.NET.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to install .NET SDK?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: SDK installation",
    "answer": "Download the installer from dotnet.microsoft.com and run for your OS, or use package managers like apt, yum, or Homebrew to install the .NET SDK.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to create a new .NET console app?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Console app",
    "answer": "Run `dotnet new console -n MyApp` in a terminal to scaffold a new C# console project named MyApp.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to run a .NET application?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Run app",
    "answer": "Navigate to the project folder and execute `dotnet run`, which builds and runs the application in one step.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to add a NuGet package?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Package add",
    "answer": "Use `dotnet add package PackageName` or add `<PackageReference Include=\"PackageName\" Version=\"x.x.x\" />` in the .csproj file.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to build a .NET project?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Build",
    "answer": "Run `dotnet build` in the project directory to compile code and dependencies, producing assemblies in the output folder.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to publish a .NET app?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Publish",
    "answer": "Use `dotnet publish -c Release -o ./publish` to compile and package the app for deployment, including runtime if self-contained.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to create a web API?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Web API",
    "answer": "Run `dotnet new webapi -n MyApi` to scaffold an ASP.NET Core Web API project with controllers and Swagger setup.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to enable Swagger?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Swagger",
    "answer": "Add Swashbuckle.AspNetCore package, call `services.AddSwaggerGen()` in Program.cs and `app.UseSwagger()` and `app.UseSwaggerUI()` in middleware.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to connect to SQL Server?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: Database connection",
    "answer": "Configure a connection string in appsettings.json and use `services.AddDbContext<MyContext>(options => options.UseSqlServer(connectionString));`.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to do dependency injection?",
    "label": ".net",
    "language": "en",
    "context": "Descriptive: DI",
    "answer": "Register services with `builder.Services.AddSingleton/Scoped/Transient<IService, Service>()` and consume via constructor injection in classes.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "Compare .NET Framework vs .NET 5+",
    "label": ".net",
    "language": "en",
    "context": "Comparison: .NET versions",
    "answer": ".NET Framework is Windows-only with older APIs. .NET 5+ is cross-platform, unified, and has performance improvements and modern features.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "Compare ASP.NET MVC vs Razor Pages",
    "label": ".net",
    "language": "en",
    "context": "Comparison: Web models",
    "answer": "MVC separates controller, view, and model; Razor Pages use page-centric model with handlers and simpler routing for page-focused scenarios.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Compare Entity Framework vs Dapper",
    "label": ".net",
    "language": "en",
    "context": "Comparison: ORM vs micro-ORM",
    "answer": "Entity Framework is a full-featured ORM with change tracking; Dapper is a lightweight micro-ORM focused on raw SQL performance.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare synchronous vs asynchronous methods",
    "label": ".net",
    "language": "en",
    "context": "Comparison: Sync vs Async",
    "answer": "Synchronous methods block threads; asynchronous methods using async/await free threads while awaiting I/O, improving scalability.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Compare console vs worker service",
    "label": ".net",
    "language": "en",
    "context": "Comparison: App types",
    "answer": "Console apps run interactively; worker services run background tasks as long-running services, ideal for microservices and daemons.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Compare Blazor Server vs Blazor WebAssembly",
    "label": ".net",
    "language": "en",
    "context": "Comparison: Blazor hosting",
    "answer": "Blazor Server runs on server with SignalR updates; WebAssembly runs client-side in browser for offline and reduced server load.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to use IConfiguration?",
    "label": ".net",
    "language": "en",
    "context": "How-to: Configuration",
    "answer": "Inject `IConfiguration` into classes and call `Configuration[\"Key\"]` to read values from appsettings.json or environment variables.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to use ILogger?",
    "label": ".net",
    "language": "en",
    "context": "How-to: Logging",
    "answer": "Inject `ILogger<T>` into classes and call `logger.LogInformation(\"msg\")`, with providers configured in Program.cs.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to schedule background tasks?",
    "label": ".net",
    "language": "en",
    "context": "How-to: Background tasks",
    "answer": "Implement `BackgroundService`, register with `AddHostedService<Worker>()`, and write task logic in `ExecuteAsync` method.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to handle exceptions globally?",
    "label": ".net",
    "language": "en",
    "context": "How-to: Exception handling",
    "answer": "Use `app.UseExceptionHandler(\"/Error\")` middleware or configure `UseDeveloperExceptionPage` in development environment.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to use health checks?",
    "label": ".net",
    "language": "en",
    "context": "How-to: Health checks",
    "answer": "Add `services.AddHealthChecks()` and `app.MapHealthChecks(\"/health\")` to expose a health endpoint for monitoring.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to enable CORS?",
    "label": ".net",
    "language": "en",
    "context": "How-to: CORS",
    "answer": "Call `services.AddCors(options=>options.AddPolicy(\"AllowAll\",p=>p.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader()));` and `app.UseCors(\"AllowAll\");`.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "How to call gRPC service from .NET?",
    "label": ".net",
    "language": "en",
    "context": "How-to: gRPC",
    "answer": "Add Grpc.Net.Client package, create `var channel = GrpcChannel.ForAddress(\"https://localhost:5001\");` and `var client = new Greeter.GreeterClient(channel);`.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "How to use MediatR?",
    "label": ".net",
    "language": "en",
    "context": "How-to: CQRS",
    "answer": "Install MediatR packages, register `services.AddMediatR()`, define request and handler classes, then `mediator.Send(request)`.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to migrate EF Core database?",
    "label": ".net",
    "language": "en",
    "context": "How-to: EF Migrations",
    "answer": "Run `dotnet ef migrations add InitialCreate` and `dotnet ef database update` to create and apply migrations to the database.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to use SignalR in .NET?",
    "label": ".net",
    "language": "en",
    "context": "How-to: Real-time",
    "answer": "Add Microsoft.AspNetCore.SignalR package, call `services.AddSignalR()`, map hubs with `app.MapHub<ChatHub>(\"/chatHub\")`, and use JS client.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Unhandled exception in .NET app, what to check?",
    "label": ".net",
    "language": "en",
    "context": "Common Error: Unhandled exception",
    "answer": "Check exception stack trace, ensure proper try-catch or global handler with `UseExceptionHandler`, and logging configuration.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Could not load file or assembly, why?",
    "label": ".net",
    "language": "en",
    "context": "Common Error: Assembly load",
    "answer": "Occurs when a referenced assembly is missing or version mismatched. Verify package references and runtime identifiers.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "HTTP Error 500.30 - ANCM In-Process Start Failure",
    "label": ".net",
    "language": "en",
    "context": "Common Error: Hosting",
    "answer": "Check application logs for exceptions on startup, ensure correct .NET runtime installed and web.config ancmVersion matches.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "EF Core model mismatch, what causes it?",
    "label": ".net",
    "language": "en",
    "context": "Common Error: EF Core",
    "answer": "Occurs when the database schema and EF model differ. Add or remove migrations and update the database to sync.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "JSON serialization loops, how to fix?",
    "label": ".net",
    "language": "en",
    "context": "Common Error: JSON loops",
    "answer": "Use `[JsonIgnore]` or configure serializer reference handling like `options.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.Preserve;`.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "Invalid operation exception in async methods",
    "label": ".net",
    "language": "en",
    "context": "Common Error: Async",
    "answer": "Ensure async methods return Task/Task<T> and use `await` correctly. Avoid blocking calls like `.Result` or `.Wait()`.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Request body too large error, how to configure?",
    "label": ".net",
    "language": "en",
    "context": "Common Error: Body size",
    "answer": "Configure `options.Limits.MaxRequestBodySize` in Kestrel or IIS to increase allowed request size.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "SignalR connection not established, why?",
    "label": ".net",
    "language": "en",
    "context": "Common Error: SignalR",
    "answer": "Check CORS, correct hub route, and that client and server use matching SignalR versions.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "CryptographicException: Key not valid for use in specified state",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: Crypto",
    "answer": "Occurs when using invalid or mismatched encryption key or incorrect key format. Verify key import and algorithm compatibility.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "SqlException: Login failed for user",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: SQL login",
    "answer": "Indicates invalid credentials or insufficient permissions. Check connection string and SQL Server authentication mode.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "InvalidOperationException: Cannot read configuration section",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: Configuration",
    "answer": "Occurs when appsettings.json is malformed or missing. Validate JSON and ensure file copy to output.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "TypeInitializationException in .NET",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: Type init",
    "answer": "Thrown when a static constructor throws an exception. Inspect InnerException for root cause.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "System.IO.FileNotFoundException: Could not find file",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: File not found",
    "answer": "Occurs when attempting to read a missing file. Verify path, ensure file is deployed, and check working directory.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "PlatformNotSupportedException",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: Unsupported platform",
    "answer": "Thrown when using APIs not supported on the current OS or runtime. Check API compatibility and target frameworks.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "HttpRequestException: No connection could be made",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: HTTP",
    "answer": "Occurs when HTTP client cannot reach server. Check URL, network connectivity, and proxy settings.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "ReflectionTypeLoadException when loading assemblies",
    "label": ".net",
    "language": "en",
    "context": "Specific Error: Reflection",
    "answer": "One or more dependent assemblies failed to load. Inspect `LoaderExceptions` property to identify missing dependencies.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is Ruby on Rails?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: Rails overview",
    "answer": "Ruby on Rails is a server-side web application framework written in Ruby, following the MVC pattern, emphasizing convention over configuration and rapid development.",
    "start_char": 0,
    "end_char": 178
  },
  {
    "question": "What is MVC in Rails?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: MVC pattern",
    "answer": "MVC stands for Model-View-Controller, the architectural pattern Rails uses: models handle data, views handle presentation, and controllers handle requests.",
    "start_char": 0,
    "end_char": 179
  },
  {
    "question": "What is ActiveRecord?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: ORM",
    "answer": "ActiveRecord is Rails' Object-Relational Mapping (ORM) layer, mapping database tables to Ruby classes and providing query and persistence methods.",
    "start_char": 0,
    "end_char": 168
  },
  {
    "question": "What is a migration?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: Database migration",
    "answer": "A migration is a Ruby class that defines schema changes (create tables, add columns) in a database-agnostic way using ActiveRecord DSL.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "What is a Gem?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: Package",
    "answer": "A gem is a packaged Ruby library or application, distributed via RubyGems.org, used to extend Rails functionality or provide standalone utilities.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "What is a Rails controller?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: Controller",
    "answer": "A controller is a Ruby class inheriting from ApplicationController that processes HTTP requests, interacts with models, and renders views or redirects.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "What is a Rails view?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: View",
    "answer": "A view is a template file (ERB, Haml, etc.) that contains HTML and embedded Ruby code to render data passed from controllers.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "What is routing in Rails?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Factoid: Routing",
    "answer": "Routing maps HTTP requests to controller actions, defined in config/routes.rb using methods like `get`, `resources`, and `namespace`.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "How to create a new Rails project?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Project setup",
    "answer": "Run `rails new my_app` to generate a new Rails application with default directory structure, Gemfile, and configuration.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to generate a scaffold?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Scaffold",
    "answer": "Use `rails generate scaffold Post title:string body:text` to create model, controller, views, and related migrations for a Post resource.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to set up database configuration?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: DB config",
    "answer": "Edit config/database.yml to specify adapter, database name, username, and password for development, test, and production environments.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "How to run migrations?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Run migrations",
    "answer": "Execute `rails db:migrate` to apply pending migrations and update the database schema to the latest version.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to use the Rails console?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Console",
    "answer": "Run `rails console` (or `rails c`) to open an interactive Ruby session with application environment loaded for querying models.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to seed the database?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Seeding",
    "answer": "Add data creation code in db/seeds.rb and run `rails db:seed` to populate the database with initial or test data.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to create a model with associations?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Model associations",
    "answer": "Generate model and add associations: `rails g model Comment content:text post:references`, then define `belongs_to :post` and `has_many :comments`.",
    "start_char": 0,
    "end_char": 172
  },
  {
    "question": "How to add validations?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Validations",
    "answer": "In the model, use ActiveRecord validators: `validates :name, presence: true, length: { maximum: 50 }` to enforce data rules.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to use partials in views?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Partials",
    "answer": "Create `_form.html.erb` under views and render with `<%= render 'form', object: @post %>` to reuse view snippets.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to serve static assets?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Descriptive: Assets",
    "answer": "Place files in app/assets, lib/assets, or vendor/assets. Use the asset pipeline helpers like `javascript_pack_tag` or `stylesheet_link_tag`.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "Compare Rails vs Django.",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Comparison: Frameworks",
    "answer": "Rails is Ruby-based with Convention over Configuration; Django is Python-based with explicit settings. Both follow MVC-like patterns and provide ORM and templates.",
    "start_char": 0,
    "end_char": 173
  },
  {
    "question": "Compare belongs_to vs has_many.",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Comparison: Associations",
    "answer": "`belongs_to` sets up a one-to-one connection and foreign key on the model. `has_many` sets up one-to-many and provides collection methods.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "Compare render vs redirect_to.",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Comparison: Controller responses",
    "answer": "`render` displays a template without changing the URL; `redirect_to` issues an HTTP redirect, causing the browser to issue a new request.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "Compare STI vs polymorphic associations.",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Comparison: Inheritance vs polymorphism",
    "answer": "STI uses one table for subclass data with a type column. Polymorphic associations use a pair of columns to reference multiple models dynamically.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "Compare scope vs class method for queries.",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Comparison: Query definitions",
    "answer": "Scopes are class methods defined with `scope :name, -> { }` for chaining. Class methods use `def self.method` and offer more flexibility.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "Compare Rails 5 vs Rails 6.",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Comparison: Version features",
    "answer": "Rails 6 introduced Action Text and Webpacker by default, parallel testing, multiple DB support, and Zeitwerk code loader over Rails 5.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "How to implement authentication with Devise?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Devise",
    "answer": "Add `devise` gem, run `rails generate devise:install`, configure mailer, then `rails generate devise User` and run migrations.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to paginate records?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Pagination",
    "answer": "Use gems like Kaminari: add `kaminari` gem, use `@posts = Post.page(params[:page]).per(10)`, and render pagination links in view.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "How to send emails with Action Mailer?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Mailer",
    "answer": "Generate mailer `rails g mailer UserMailer`, define methods and views, configure SMTP in config/environments, and call `UserMailer.welcome(@user).deliver_now`.",
    "start_char": 0,
    "end_char": 178
  },
  {
    "question": "How to handle file uploads with Active Storage?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: File upload",
    "answer": "Install Active Storage, run `rails active_storage:install`, associate `has_one_attached :avatar` in model, and use form file field.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to test models with RSpec?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Model testing",
    "answer": "Add `rspec-rails` gem, run `rails generate rspec:install`, write specs in spec/models with `describe Model` and use factories or fixtures.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "How to write feature tests with Capybara?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Feature testing",
    "answer": "In spec/features, use `visit path`, `fill_in`, `click_button`, and `expect(page).to have_content` to simulate user interactions.",
    "start_char": 0,
    "end_char": 189
  },
  {
    "question": "How to optimize N+1 queries?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Query optimization",
    "answer": "Use `includes` or `preload` on associations, e.g., `Post.includes(:comments)` to eager-load related records in a single query.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "How to configure CORS?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: CORS",
    "answer": "Add `rack-cors` gem, configure `config.middleware.insert_before 0, Rack::Cors` in application.rb, and set allowed origins and resources.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "How to set up Webpacker?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Webpacker",
    "answer": "Rails 6 includes Webpacker. Use `bin/webpack-dev-server` for hot reloading, configure packs in app/javascript/packs, and include with `javascript_pack_tag`.",
    "start_char": 0,
    "end_char": 183
  },
  {
    "question": "How to deploy Rails app to Heroku?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "How-to: Deployment",
    "answer": "Install Heroku CLI, `heroku create`, set `rails db:migrate`, push via `git push heroku main`, and configure ENV vars on Heroku dashboard.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "uninitialized constant error, what causes it?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: Constant",
    "answer": "Occurs when Rails cannot autoload a class or module, often due to incorrect file naming or namespace mismatches.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "NoMethodError undefined method, why?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: NoMethodError",
    "answer": "Raised when calling a method that doesn't exist on an object, possibly due to typos or missing associations.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "ActionController::RoutingError, when does it occur?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: Routing",
    "answer": "Occurs when no route matches the incoming request path and HTTP method.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "ActiveRecord::RecordNotFound, what triggers it?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: Record not found",
    "answer": "Raised when `find` cannot locate a record by the given id, often returning 404 in controllers.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "PG::ConnectionBad, why happen?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: DB connection",
    "answer": "Indicates database connection failure due to wrong credentials, server down, or network issues.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Asset not precompiled, how to fix?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: Assets",
    "answer": "Run `rails assets:precompile` or verify pipeline settings to ensure CSS, JS, and images are compiled and available.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "ArgumentError wrong number of args, cause?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: ArgumentError",
    "answer": "Raised when a method is called with incorrect number of arguments compared to its definition.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "NameError wrong constant name, what is it?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Common Error: NameError",
    "answer": "Occurs when defining or referencing a constant with an invalid name (not starting with uppercase letter).",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "ActiveRecord::StatementInvalid error, what does it mean?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: StatementInvalid",
    "answer": "Raised when the database returns an error executing a SQL statement, often due to syntax or constraint violations.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "BootError: Could not find gem, why?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: BootError",
    "answer": "Occurs when a gem listed in Gemfile.lock is missing or version mismatch; run `bundle install` to resolve.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "No route matches error, how to resolve?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Routing",
    "answer": "Ensure the route is defined in config/routes.rb and restart the server to reload routing configuration.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "ActionView::Template::Error, what triggers it?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: TemplateError",
    "answer": "Occurs during rendering when a view template has syntax errors or references undefined variables or methods.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Puma server bind error, what is cause?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Server bind",
    "answer": "Raised when the Puma server cannot bind to the specified port or address, often due to port in use or permissions.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Capybara ambiguous match error, what means?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Capybara",
    "answer": "Occurs when a selector matches multiple elements; disambiguate using more specific selectors or scoping.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "Kaminari load error, how to fix?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Pagination",
    "answer": "Ensure `kaminari` gem is in Gemfile and run `bundle install`, and include `Kaminari::Helpers::HelperMethods` if needed.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Redis::CannotConnectError, why?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Redis",
    "answer": "Occurs when Rails cannot connect to Redis server; check Redis service status, host, port, and credentials.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "BootError: Could not find gem, why?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: BootError",
    "answer": "Occurs when a gem listed in Gemfile.lock is missing or version mismatch; run `bundle install` to resolve.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "No route matches error, how to resolve?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Routing",
    "answer": "Ensure the route is defined in config/routes.rb and restart the server to reload routing configuration.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "ActionView::Template::Error, what triggers it?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: TemplateError",
    "answer": "Occurs during rendering when a view template has syntax errors or references undefined variables or methods.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Puma server bind error, what is cause?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Server bind",
    "answer": "Raised when the Puma server cannot bind to the specified port or address, often due to port in use or permissions.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Capybara ambiguous match error, what means?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Capybara",
    "answer": "Occurs when a selector matches multiple elements; disambiguate using more specific selectors or scoping.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "Kaminari load error, how to fix?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Pagination",
    "answer": "Ensure `kaminari` gem is in Gemfile and run `bundle install`, and include `Kaminari::Helpers::HelperMethods` if needed.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Redis::CannotConnectError, why?",
    "label": "ruby-on-rails",
    "language": "en",
    "context": "Specific Error: Redis",
    "answer": "Occurs when Rails cannot connect to Redis server; check Redis service status, host, port, and credentials.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "What is SQL Server?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: SQL Server overview",
    "answer": "Microsoft SQL Server is a relational database management system (RDBMS) by Microsoft, used to store and retrieve data as requested by applications.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "What is T-SQL?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: T-SQL definition",
    "answer": "T-SQL (Transact-SQL) is Microsoft's proprietary extension to SQL, adding procedural programming, local variables, and support functions.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "What is a stored procedure?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: Stored Procedure",
    "answer": "A stored procedure is a precompiled collection of T-SQL statements stored under a name and processed as a unit for reuse and performance.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "What is a view?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: View",
    "answer": "A view is a virtual table based on the result-set of a SELECT query, providing abstraction and security over underlying tables.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "What is an index?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: Index",
    "answer": "An index is a database object that improves the speed of data retrieval operations by providing quick lookup capabilities.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "What is SQL Server Management Studio?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: SSMS",
    "answer": "SSMS is an integrated environment for managing SQL Server infrastructures, writing queries, and administering databases.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "What is a database in SQL Server?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: Database",
    "answer": "A database is a structured collection of data stored in files and managed by SQL Server, containing tables, views, procedures, and other objects.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "What is SQL Server Agent?",
    "label": "sql-server",
    "language": "en",
    "context": "Factoid: SQL Server Agent",
    "answer": "SQL Server Agent is a component for executing scheduled administrative tasks, known as jobs, within SQL Server.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "How to create a database?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Create database",
    "answer": "Use `CREATE DATABASE MyDB;` in T-SQL or right-click Databases in SSMS and choose New Database, then configure settings.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to connect to SQL Server using SSMS?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: SSMS connection",
    "answer": "Open SSMS, enter server name, authentication type, credentials, and click Connect to establish a session.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to create a table?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Create table",
    "answer": "Use `CREATE TABLE dbo.MyTable (Id INT PRIMARY KEY, Name NVARCHAR(100));` or via SSMS Table Designer.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to insert data?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Insert data",
    "answer": "Use `INSERT INTO dbo.MyTable (Id,Name) VALUES (1,'Alice');` or the SSMS Insert dialog in Edit Top 200 Rows.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "How to update data?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Update data",
    "answer": "Use `UPDATE dbo.MyTable SET Name='Bob' WHERE Id=1;` or edit directly in SSMS result grid and save changes.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to delete data?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Delete data",
    "answer": "Use `DELETE FROM dbo.MyTable WHERE Id=1;` or right-click rows in SSMS and choose Delete.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to query data?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Select query",
    "answer": "Use `SELECT * FROM dbo.MyTable;` to retrieve rows or build complex queries with WHERE, JOIN, GROUP BY.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to back up a database?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Backup",
    "answer": "Use `BACKUP DATABASE MyDB TO DISK='C:\\Backups\\MyDB.bak';` or right-click DB > Tasks > Back Up in SSMS.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to restore a database?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Restore",
    "answer": "Use `RESTORE DATABASE MyDB FROM DISK='C:\\Backups\\MyDB.bak';` or via SSMS Restore Wizard under Tasks.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to use transactions?",
    "label": "sql-server",
    "language": "en",
    "context": "Descriptive: Transactions",
    "answer": "Use `BEGIN TRAN; ... COMMIT;` or `ROLLBACK;` to ensure atomic operations. SSMS also supports Transaction UI.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Compare clustered vs nonclustered index.",
    "label": "sql-server",
    "language": "en",
    "context": "Comparison: Index types",
    "answer": "A clustered index sorts and stores data rows; only one per table. Nonclustered index creates a separate structure pointing to data; multiple allowed.",
    "start_char": 0,
    "end_char": 189
  },
  {
    "question": "Compare CHAR vs VARCHAR.",
    "label": "sql-server",
    "language": "en",
    "context": "Comparison: Data types",
    "answer": "CHAR(n) is fixed-length, pads with spaces. VARCHAR(n) is variable-length, saves space for shorter values.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Compare DELETE vs TRUNCATE.",
    "label": "sql-server",
    "language": "en",
    "context": "Comparison: Data removal",
    "answer": "DELETE logs each row and can be rolled back; TRUNCATE deallocates pages, faster, cannot be used with WHERE and minimally logged.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "Compare stored procedures vs functions.",
    "label": "sql-server",
    "language": "en",
    "context": "Comparison: Programmable objects",
    "answer": "Stored procedures perform actions and support side-effects. Functions return a value/table and can be used in queries.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "Compare INNER JOIN vs LEFT JOIN.",
    "label": "sql-server",
    "language": "en",
    "context": "Comparison: Joins",
    "answer": "INNER JOIN returns matched rows only. LEFT JOIN returns all left table rows and matched right rows; NULL where no match.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "Compare SQL Server vs Azure SQL Database.",
    "label": "sql-server",
    "language": "en",
    "context": "Comparison: Editions",
    "answer": "SQL Server is on-premise RDBMS. Azure SQL is managed PaaS offering high availability, scaling, and automated patching.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to enable TCP/IP protocol?",
    "label": "sql-server",
    "language": "en",
    "context": "How-to: Network configuration",
    "answer": "Open SQL Server Configuration Manager, under Network Configuration enable TCP/IP and restart the SQL Server service.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to allow remote connections?",
    "label": "sql-server",
    "language": "en",
    "context": "How-to: Remote connections",
    "answer": "In SSMS right-click server > Properties > Connections, check 'Allow remote connections'. Configure firewall to allow SQL port.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to schedule a job with SQL Server Agent?",
    "label": "sql-server",
    "language": "en",
    "context": "How-to: Agent Job",
    "answer": "In SSMS under SQL Server Agent > Jobs, right-click New Job, define steps and schedules to automate tasks.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to monitor performance with Activity Monitor?",
    "label": "sql-server",
    "language": "en",
    "context": "How-to: Monitoring",
    "answer": "Right-click instance in SSMS > Activity Monitor to view CPU, I/O, waits, and expensive queries in real time.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to view execution plans?",
    "label": "sql-server",
    "language": "en",
    "context": "How-to: Query tuning",
    "answer": "In SSMS click 'Include Actual Execution Plan' before running a query, then review graphical plan for performance insights.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "How to create login and user?",
    "label": "sql-server",
    "language": "en",
    "context": "How-to: Security",
    "answer": "Use `CREATE LOGIN login_name WITH PASSWORD='pwd'; CREATE USER user_name FOR LOGIN login_name;` in T-SQL or via SSMS GUI.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to grant permissions?",
    "label": "sql-server",
    "language": "en",
    "context": "How-to: Permissions",
    "answer": "Use `GRANT SELECT, INSERT ON dbo.MyTable TO user_name;` or configure via SSMS Security > Users > Securables.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How to use SQL Server Profiler?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "How-to: Tracing",  
    "answer": "Launch SQL Server Profiler, create a new trace, select events and filters to capture and analyze server activity.",  
    "start_char": 0,  
    "end_char": 139  
  },
  {
    "question": "How to import/export data?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "How-to: Import/Export",  
    "answer": "Use the Import and Export Wizard in SSMS (Tasks > Import Data) to move data between sources and SQL Server.",  
    "start_char": 0,  
    "end_char": 134  
  },
  {
    "question": "How to configure backup retention?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "How-to: Backup retention",  
    "answer": "Use Maintenance Plans in SSMS to define cleanup tasks that remove old backup files based on age or count.",  
    "start_char": 0,  
    "end_char": 130  
  },
  {
    "question": "Login failed for user, how to fix?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Login failed",  
    "answer": "Ensure correct credentials, enable SQL Authentication, and check server-level firewall or connection settings.",  
    "start_char": 0,  
    "end_char": 126  
  },
  {
    "question": "Cannot open database requested by the login, what causes it?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Cannot open database",  
    "answer": "Occurs when the database is offline, does not exist, or the user lacks CONNECT permission.",  
    "start_char": 0,  
    "end_char": 106  
  },
  {
    "question": "Timeout expired error, what to do?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Timeout",  
    "answer": "Increase command timeout, optimize queries or indexes, and ensure network latency is low.",  
    "start_char": 0,  
    "end_char": 118  
  },
  {
    "question": "Deadlock victim error, how to handle?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Deadlock",  
    "answer": "Catch error 1205 in application, retry transaction, and analyze deadlock graph to optimize locking.",  
    "start_char": 0,  
    "end_char": 118  
  },
  {
    "question": "Permission denied error, why?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Permission denied",  
    "answer": "Grant appropriate permissions via GRANT statement or assign user to a role with required rights.",  
    "start_char": 0,  
    "end_char": 127  
  },
  {
    "question": "Sqlcmd utility not recognized, what to do?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Sqlcmd",  
    "answer": "Ensure SQL Server Tools are installed and PATH environment variable includes the directory containing sqlcmd.exe.",  
    "start_char": 0,  
    "end_char": 145  
  },
  {
    "question": "Restore failed error, how to fix?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Restore failed",  
    "answer": "Check backup file integrity with RESTORE VERIFYONLY, ensure matching database version and correct file paths.",  
    "start_char": 0,  
    "end_char": 135  
  },
  {
    "question": "The server principal is not able to access the database, what causes it?",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Common Error: Principal",  
    "answer": "Occurs when a contained user or login lacks mapping to the target database. Grant access or map login to user.",  
    "start_char": 0,  
    "end_char": 140  
  },
  {
    "question": "Error 18456, login failed for user",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 18456",  
    "answer": "Indicates authentication failure. Check error state for details: wrong password, disabled login, or missing permission.",  
    "start_char": 0,  
    "end_char": 136  
  },
  {
    "question": "Error 4060, Cannot open database requested by the login",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 4060",  
    "answer": "Occurs when database is offline or user lacks permission. Verify database state and user rights.",  
    "start_char": 0,  
    "end_char": 106  
  },
  {
    "question": "Error 1205, deadlock victim",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 1205",  
    "answer": "Occurs when two transactions deadlock. Retry transaction, reduce lock scope, or use snapshot isolation.",  
    "start_char": 0,  
    "end_char": 117  
  },
  {
    "question": "Error 547, foreign key constraint violation",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 547",  
    "answer": "Occurs when delete/update would break FK relationship. Remove or update child rows first or disable constraint.",  
    "start_char": 0,  
    "end_char": 129  
  },
  {
    "question": "Error 2601, cannot insert duplicate key row",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 2601",  
    "answer": "Occurs when inserting a row with a key that already exists. Ensure unique key or handle conflict.",  
    "start_char": 0,  
    "end_char": 112  
  },
  {
    "question": "Error 823, I/O error during log for database",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 823",  
    "answer": "Indicates hardware or file corruption. Check system logs, run DBCC CHECKDB, and restore from backup if needed.",  
    "start_char": 0,  
    "end_char": 137  
  },
  {
    "question": "Error 9001, log file full",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 9001",  
    "answer": "Occurs when transaction log is full. Back up log or increase log file size and auto-growth settings.",  
    "start_char": 0,  
    "end_char": 129  
  },
  {
    "question": "Error 4064, login valid but server access failure",  
    "label": "sql-server",  
    "language": "en",  
    "context": "Specific Error: 4064",  
    "answer": "Occurs when default database is unavailable. Change default database for login or bring database online.",  
    "start_char": 0,  
    "end_char": 129  
  },
  {
    "question": "What is Swift?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: Swift overview",
    "answer": "Swift is a modern, open-source programming language developed by Apple for iOS, macOS, watchOS, tvOS, and beyond, emphasizing safety, performance, and expressiveness.",
    "start_char": 0,
    "end_char": 176
  },
  {
    "question": "What does 'let' do in Swift?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: Constant declaration",
    "answer": "The `let` keyword declares a constant whose value cannot be changed after initialization.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is an optional in Swift?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: Optional concept",
    "answer": "An optional is a type that can hold either a value or `nil`, indicating the absence of a value, declared with a `?`, e.g., `Int?`.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "What is a closure in Swift?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: Closure definition",
    "answer": "A closure is a self-contained block of functionality that can be passed around and used in your code, similar to lambdas in other languages.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "What is type inference?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: Type inference",
    "answer": "Type inference allows Swift to automatically deduce the type of a variable or expression based on context.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is ARC?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: Automatic Reference Counting",
    "answer": "ARC (Automatic Reference Counting) manages memory by tracking and managing object lifetimes automatically.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What is a tuple?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: Tuple",
    "answer": "A tuple groups multiple values into a single compound value, e.g., `(Int, String)`.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is SwiftUI?",
    "label": "swift",
    "language": "en",
    "context": "Factoid: SwiftUI",
    "answer": "SwiftUI is Apple's declarative UI framework for building user interfaces across all Apple platforms.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to declare a variable in Swift?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Variable declaration",
    "answer": "Use `var name: Type = value` or rely on type inference: `var count = 10`.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to write a function in Swift?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Function syntax",
    "answer": "Use `func functionName(parameters) -> ReturnType { statements }`, e.g., `func greet(name: String) -> String { return \"Hello \\(name)\" }`.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "How to unwrap an optional?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Optional unwrapping",
    "answer": "Use `if let x = optional { ... }` or the `guard let` pattern, or force unwrap with `!` (unsafe).",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use a closure?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Closure usage",
    "answer": "Pass closures to functions like `map`, e.g., `[1,2,3].map { $0 * 2 }`.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to handle errors in Swift?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Error handling",
    "answer": "Use `do { try function() } catch { handleError }` for throwing functions.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to define a struct?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Struct",
    "answer": "Use `struct Name { var property: Type }`, e.g., `struct Point { var x: Double; var y: Double }`.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to use enums?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Enum",
    "answer": "Use `enum Direction { case north, south, east, west }` and pattern-match with `switch`.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to perform pattern matching?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Pattern matching",
    "answer": "Use `switch` statements to match values, including enums and optionals.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to define a class?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Class",
    "answer": "Use `class Name { var property: Type; init(...) { ... } }` for reference types.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to use extensions?",
    "label": "swift",
    "language": "en",
    "context": "Descriptive: Extension",
    "answer": "Use `extension Type { func newMethod() { ... } }` to add functionality to existing types.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare struct vs class in Swift.",
    "label": "swift",
    "language": "en",
    "context": "Comparison: Value vs reference",
    "answer": "Structs are value types (copied on assignment), classes are reference types (shared instances).",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare let vs var.",
    "label": "swift",
    "language": "en",
    "context": "Comparison: Const vs var",
    "answer": "`let` declares constants, `var` declares variables.",
    "start_char": 0,
    "end_char": 48
  },
  {
    "question": "Compare Optional chaining vs forced unwrapping.",
    "label": "swift",
    "language": "en",
    "context": "Comparison: Optional handling",
    "answer": "Optional chaining (`?.`) safely returns nil on failure; forced unwrap (`!`) crashes if nil.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare map vs forEach on arrays.",
    "label": "swift",
    "language": "en",
    "context": "Comparison: Collection methods",
    "answer": "`map` returns a new array of transformed elements; `forEach` iterates without returning.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare error handling with try? vs do-catch.",
    "label": "swift",
    "language": "en",
    "context": "Comparison: Error styles",
    "answer": "`try?` returns an optional on failure; `do-catch` provides granular error handling.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare guard vs if let.",
    "label": "swift",
    "language": "en",
    "context": "Comparison: Optional unwrapping",
    "answer": "`guard let` exits early on failure; `if let` nests code within its block.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to perform JSON decoding?",
    "label": "swift",
    "language": "en",
    "context": "How-to: JSON decoding",
    "answer": "Use `Codable` and `JSONDecoder().decode(Model.self, from: data)`.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "How to perform JSON encoding?",
    "label": "swift",
    "language": "en",
    "context": "How-to: JSON encoding",
    "answer": "Use `JSONEncoder().encode(model)` on `Codable` types.",
    "start_char": 0,
    "end_char": 57
  },
  {
    "question": "How to schedule a timer?",
    "label": "swift",
    "language": "en",
    "context": "How-to: Timer",
    "answer": "Use `Timer.scheduledTimer(withTimeInterval:repeats:block:)`.",
    "start_char": 0,
    "end_char": 54
  },
  {
    "question": "How to animate views in SwiftUI?",
    "label": "swift",
    "language": "en",
    "context": "How-to: Animation",
    "answer": "Use `.animation()` modifiers or `withAnimation { }` closures.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "How to use Combine framework?",
    "label": "swift",
    "language": "en",
    "context": "How-to: Combine",
    "answer": "Use `Publishers` and `Subscribers`, e.g., `URLSession.shared.dataTaskPublisher`.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to persist data with UserDefaults?",
    "label": "swift",
    "language": "en",
    "context": "How-to: UserDefaults",
    "answer": "Use `UserDefaults.standard.set(value, forKey:)` and `UserDefaults.standard.value(forKey:)`.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to use property observers?",
    "label": "swift",
    "language": "en",
    "context": "How-to: Property observers",
    "answer": "Use `willSet` and `didSet` within property declarations.",
    "start_char": 0,
    "end_char": 54
  },
  {
    "question": "How to use lazy properties?",
    "label": "swift",
    "language": "en",
    "context": "How-to: Lazy initialization",
    "answer": "Use `lazy var name: Type = { ... }()` to defer initialization until first use.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to use computed properties?",
    "label": "swift",
    "language": "en",
    "context": "How-to: Computed properties",
    "answer": "Define getters and setters: `var fullName: String { return \"\\(first) \\(last)\" }`.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to implement delegation pattern?",
    "label": "swift",
    "language": "en",
    "context": "How-to: Delegation",
    "answer": "Define a protocol and a delegate property, then call delegate methods in the delegating class.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Unexpected nil while unwrapping an Optional",
    "label": "swift",
    "language": "en",
    "context": "Common Error: Force unwrap",
    "answer": "Occurs when force unwrapping (`!`) an Optional that is nil. Use optional binding instead.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Type 'X' has no member 'Y'",
    "label": "swift",
    "language": "en",
    "context": "Common Error: No member",
    "answer": "Occurs when accessing a property/method not defined on a type. Check spelling and API availability.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Cannot convert value of type 'A' to expected argument type 'B'",
    "label": "swift",
    "language": "en",
    "context": "Common Error: Type mismatch",
    "answer": "Occurs when passing an incompatible type. Use casting or correct the function signature.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Closure cannot implicitly capture a mutating self parameter",
    "label": "swift",
    "language": "en",
    "context": "Common Error: Mutating closure",
    "answer": "Occurs when a value type’s method is marked mutating. Use `self` explicitly or convert to class/struct appropriately.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "Cannot find 'X' in scope",
    "label": "swift",
    "language": "en",
    "context": "Common Error: Scope",
    "answer": "Occurs when referring to an undefined variable or constant. Ensure correct declaration and scope visibility.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Expression type 'Void' is ambiguous without context",
    "label": "swift",
    "language": "en",
    "context": "Common Error: Ambiguous Void",
    "answer": "Occurs when closure return type can't be inferred. Specify the return type explicitly.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Unexpected non-void return value in void function",
    "label": "swift",
    "language": "en",
    "context": "Common Error: Void return",
    "answer": "Occurs when returning a value from a function declared to return `Void`. Remove the return or change the signature.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Cannot assign to property: 'self' is immutable",
    "label": "swift",
    "language": "en",
    "context": "Common Error: Immutable self",
    "answer": "Occurs in value types when attempting to modify properties within methods not marked `mutating`. Add `mutating` keyword.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "error: duplicate definition of type 'X'",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: Duplicate type",
    "answer": "Occurs when a type is defined more than once in the same module. Remove or rename duplicates.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Thread 1: signal SIGABRT",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: SIGABRT",
    "answer": "Indicates an unhandled exception at runtime, often due to an outlet/action disconnected in Storyboard or nil unwrapping.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "Fatal error: unexpectedly found nil while unwrapping an Optional",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: Fatal nil unwrap",
    "answer": "Occurs when force-unwrapping an Optional containing nil. Use optional binding to avoid crash.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "error: call can throw, but it is not marked with 'try' and the error is not handled",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: Missing try",
    "answer": "Occurs when calling a throwing function without `try`. Prefix call with `try`, `try?`, or `do-catch`.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "error: invalid redeclaration of 'X'",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: Redeclaration",
    "answer": "Occurs when declaring the same entity more than once in the same scope. Rename or remove duplicates.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "error: consecutive statements on a line must be separated by ';'",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: Missing semicolon",
    "answer": "Occurs when writing multiple statements on one line without a semicolon. Add `;` or break into separate lines.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "error: ambiguous reference to member 'X'",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: Ambiguous reference",
    "answer": "Occurs when the compiler cannot determine which overload to call. Provide type annotations to disambiguate.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "error: 'X' is unavailable in Swift",
    "label": "swift",
    "language": "en",
    "context": "Specific Error: Unavailable API",
    "answer": "Occurs when using an API that is unavailable on the target platform/version. Use availability checks or alternative APIs.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "What is Django?",
    "label": "django",
    "language": "en",
    "context": "Factoid: Django overview",
    "answer": "Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design by providing built-in components for common web tasks.",
    "start_char": 0,
    "end_char": 177
  },
  {
    "question": "What is the MVT pattern?",
    "label": "django",
    "language": "en",
    "context": "Factoid: MVT pattern",
    "answer": "MVT stands for Model-View-Template. Models define data structure, Views handle business logic, and Templates render HTML.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "What is Django ORM?",
    "label": "django",
    "language": "en",
    "context": "Factoid: ORM",
    "answer": "Django ORM is the object-relational mapping layer that translates Python classes into database tables and lets you query the database using Python code.",
    "start_char": 0,
    "end_char": 166
  },
  {
    "question": "What is a Django model?",
    "label": "django",
    "language": "en",
    "context": "Factoid: Model",
    "answer": "A Django model is a Python class that subclasses `django.db.models.Model` and defines fields as class attributes to represent database tables.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "What is a Django view?",
    "label": "django",
    "language": "en",
    "context": "Factoid: View",
    "answer": "A Django view is a Python function or class that takes a web request and returns a web response, handling application logic.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "What is URLconf in Django?",
    "label": "django",
    "language": "en",
    "context": "Factoid: URLconf",
    "answer": "URLconf is the URL configuration in Django. It maps URL patterns to view functions using entries in a `urls.py` file.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is a Django template?",
    "label": "django",
    "language": "en",
    "context": "Factoid: Template",
    "answer": "A Django template is a text file that defines the structure or layout of a file (like HTML) and uses the Django Template Language to insert dynamic content.",
    "start_char": 0,
    "end_char": 169
  },
  {
    "question": "What is the Django admin?",
    "label": "django",
    "language": "en",
    "context": "Factoid: Admin",
    "answer": "The Django admin is a built-in interface for managing site content, generated automatically from your models and customizable via `admin.py`.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to install Django?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Installation",
    "answer": "Run `pip install django` or add `django` to your `requirements.txt`. Verify installation with `django-admin --version`.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to start a new project?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Project creation",
    "answer": "Use `django-admin startproject mysite` to create a new project directory with default settings and manage scripts.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to start an app?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: App creation",
    "answer": "Inside your project folder, run `python manage.py startapp myapp` to generate an application directory with models, views, and more.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "How to run migrations?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Migrations",
    "answer": "Use `python manage.py makemigrations` to create migrations and `python manage.py migrate` to apply them to the database.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to create a model?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Define model",
    "answer": "Define a class in `models.py` subclassing `models.Model` and add fields as `models.CharField`, `models.IntegerField`, etc.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to register a model in admin?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Admin registration",
    "answer": "In `admin.py`, import your model and call `admin.site.register(YourModel)` to manage it via the Django admin.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "How to create a view?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Create view",
    "answer": "In `views.py`, write a function or class-based view that takes `request` and returns `HttpResponse` or renders a template.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "How to map URLs?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: URL mapping",
    "answer": "In `urls.py`, use `path('route/', view, name='name')` or `re_path` to connect URLs to views.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use templates?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Template use",
    "answer": "Place templates in a `templates/` directory, configure `TEMPLATES` in settings, and call `render(request, 'template.html', context)`.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to serve static files?",
    "label": "django",
    "language": "en",
    "context": "Descriptive: Static files",
    "answer": "Set `STATIC_URL`, collect files with `collectstatic`, and ensure `django.contrib.staticfiles` is in `INSTALLED_APPS`.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Compare Django vs Flask.",
    "label": "django",
    "language": "en",
    "context": "Comparison: Frameworks",
    "answer": "Django is a full-feature framework with batteries included. Flask is lightweight and allows more flexibility with extensions.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Compare Django ORM vs raw SQL.",
    "label": "django",
    "language": "en",
    "context": "Comparison: Database access",
    "answer": "Django ORM provides Pythonic querying and safety against SQL injection. Raw SQL offers full control and complex queries.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "Compare function-based vs class-based views.",
    "label": "django",
    "language": "en",
    "context": "Comparison: View types",
    "answer": "Function-based views are simple and explicit. Class-based views support reuse via inheritance and mixins.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Compare Django forms vs model forms.",
    "label": "django",
    "language": "en",
    "context": "Comparison: Forms",
    "answer": "Django forms handle arbitrary data. Model forms auto-generate fields from models and simplify CRUD operations.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Compare Django templates vs Jinja2.",
    "label": "django",
    "language": "en",
    "context": "Comparison: Template engines",
    "answer": "Django templates prioritize safety with limited logic. Jinja2 is more powerful and expressive but requires configuring in Django.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "Compare MVT vs MVC.",
    "label": "django",
    "language": "en",
    "context": "Comparison: Patterns",
    "answer": "MVT replaces controller with Django itself. MVC separates controller; MVT handles requests via URLconf and view functions.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to implement authentication?",
    "label": "django",
    "language": "en",
    "context": "How-to: Authentication",
    "answer": "Use Django’s built-in auth app: include `django.contrib.auth`, run migrations, use `LoginView`/`LogoutView`, and `@login_required`.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to create forms?",
    "label": "django",
    "language": "en",
    "context": "How-to: Forms",
    "answer": "Define a `Form` subclass in `forms.py`, add fields, and render with `{{ form.as_p }}` in templates.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to perform CRUD operations?",
    "label": "django",
    "language": "en",
    "context": "How-to: CRUD",
    "answer": "Use ORM methods: `Model.objects.create()`, `get()`, `filter().update()`, `delete()`, or use generic CBVs like `ListView` and `CreateView`.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "How to use Django REST Framework?",
    "label": "django",
    "language": "en",
    "context": "How-to: DRF",
    "answer": "Install `djangorestframework`, add to `INSTALLED_APPS`, define serializers, viewsets, and register routes with a `DefaultRouter`.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "How to implement pagination?",
    "label": "django",
    "language": "en",
    "context": "How-to: Pagination",
    "answer": "Use Django Paginator: `p = Paginator(queryset, per_page)`, then in view get `p.page(page_number)` and pass to template.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to add middleware?",
    "label": "django",
    "language": "en",
    "context": "How-to: Middleware",
    "answer": "Create a class with `__call__` or `process_request` methods and add its path to `MIDDLEWARE` in settings.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "How to write unit tests?",
    "label": "django",
    "language": "en",
    "context": "How-to: Testing",
    "answer": "Subclass `django.test.TestCase`, write methods starting with `test_`, use `self.client` to simulate requests.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "How to deploy to Heroku?",
    "label": "django",
    "language": "en",
    "context": "How-to: Deployment",
    "answer": "Add `Procfile`, use `gunicorn`, configure `requirements.txt`, set `DATABASE_URL`, then `git push heroku main`.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "How to use Signals?",
    "label": "django",
    "language": "en",
    "context": "How-to: Signals",
    "answer": "Connect receiver functions to signals like `post_save` via `@receiver` decorator in `signals.py` and import in `apps.py`.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to configure settings for production?",
    "label": "django",
    "language": "en",
    "context": "How-to: Production settings",
    "answer": "Set `DEBUG=False`, configure `ALLOWED_HOSTS`, secure `SECRET_KEY`, use `django-environ` for environment variables.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "TemplateDoesNotExist error, what causes it?",
    "label": "django",
    "language": "en",
    "context": "Common Error: TemplateDoesNotExist",
    "answer": "Occurs when Django cannot find the template file. Ensure `TEMPLATES['DIRS']` and app `templates/` directories are correct.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "FieldError error, what causes it?",
    "label": "django",
    "language": "en",
    "context": "Common Error: FieldError",
    "answer": "Raised when you refer to a non-existent model field. Check field names in queries and model definitions.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "NoReverseMatch error, when does it occur?",
    "label": "django",
    "language": "en",
    "context": "Common Error: NoReverseMatch",
    "answer": "Occurs when reversing URLs with `url` tag or `reverse()` fails because the name or parameters don't match any pattern.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "OperationalError on migration, how to fix?",
    "label": "django",
    "language": "en",
    "context": "Common Error: OperationalError",
    "answer": "Occurs when the database is unavailable or table missing. Check DB connection and ensure migrations ran successfully.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "SuspiciousOperation error, what is it?",
    "label": "django",
    "language": "en",
    "context": "Common Error: SuspiciousOperation",
    "answer": "Raised on security issues like invalid host header or suspect URL. Check `ALLOWED_HOSTS` and input validation.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "DisallowedHost error, how to resolve?",
    "label": "django",
    "language": "en",
    "context": "Common Error: DisallowedHost",
    "answer": "Occurs when request host not in `ALLOWED_HOSTS`. Add your domain or host IP to `ALLOWED_HOSTS` in settings.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "ValidationError, when is it raised?",
    "label": "django",
    "language": "en",
    "context": "Common Error: ValidationError",
    "answer": "Raised when data fails model or form validation. Check field validators and form `is_valid()` errors.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "ImproperlyConfigured error, what triggers it?",
    "label": "django",
    "language": "en",
    "context": "Common Error: ImproperlyConfigured",
    "answer": "Raised when Django is incorrectly set up, e.g., missing app in `INSTALLED_APPS` or bad setting value.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "ModuleNotFoundError: No module named 'django'",
    "label": "django",
    "language": "en",
    "context": "Specific Error: ModuleNotFoundError",
    "answer": "Occurs when Django is not installed or not in `PYTHONPATH`. Install via `pip install django` and check environment.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "ObjectDoesNotExist exception, when thrown?",
    "label": "django",
    "language": "en",
    "context": "Specific Error: ObjectDoesNotExist",
    "answer": "Thrown when a database lookup fails to find a matching record with `get()`.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "IntegrityError on save, what causes it?",
    "label": "django",
    "language": "en",
    "context": "Specific Error: IntegrityError",
    "answer": "Raised when a database integrity constraint is violated, such as unique or foreign key constraints.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "AppRegistryNotReady error, when does it occur?",
    "label": "django",
    "language": "en",
    "context": "Specific Error: AppRegistryNotReady",
    "answer": "Occurs when Django apps aren’t loaded yet, e.g., accessing models at import time. Delay import or use `apps.ready`.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "ValueError: ForeignKey to non-existent model",
    "label": "django",
    "language": "en",
    "context": "Specific Error: ValueError",
    "answer": "Occurs when a `ForeignKey` references a model that hasn’t been defined or registered in `INSTALLED_APPS`.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "TypeError: unhashable type: 'list'",
    "label": "django",
    "language": "en",
    "context": "Specific Error: TypeError",
    "answer": "Occurs when using mutable types (like list) as dict keys or in sets. Use tuples or frozensets instead.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "AttributeError: 'QuerySet' object has no attribute",
    "label": "django",
    "language": "en",
    "context": "Specific Error: AttributeError",
    "answer": "Occurs when calling a method that doesn’t exist on `QuerySet`. Check spelling or evaluate a single object.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "ProgrammingError: relation \"X\" does not exist",
    "label": "django",
    "language": "en",
    "context": "Specific Error: ProgrammingError",
    "answer": "Occurs when database table is missing. Run migrations or check database schema names.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What is Angular?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: Angular overview",
    "answer": "Angular is a platform and framework for building client applications in HTML and TypeScript, maintained by Google.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is a component in Angular?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: Component",
    "answer": "A component is a building block of Angular applications, consisting of an HTML template and a TypeScript class that controls a view.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "What is a directive?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: Directive",
    "answer": "A directive is a class that can modify DOM elements behavior, including structural directives (e.g., *ngIf) and attribute directives (e.g., ngStyle).",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "What is a module?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: Module",
    "answer": "A module is a logical grouping of components, directives, pipes, and services, defined using the @NgModule decorator.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "What is data binding?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: Data binding",
    "answer": "Data binding is the synchronization between the model and view using interpolation, property binding, event binding, and two-way binding.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is dependency injection in Angular?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: Dependency Injection",
    "answer": "Dependency injection is a design pattern that provides component dependencies through constructor parameters and Angular’s injector.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "What is RxJS?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: RxJS",
    "answer": "RxJS is a library for reactive programming using Observables to handle asynchronous events and data streams in Angular.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "What is Angular CLI?",
    "label": "angular",
    "language": "en",
    "context": "Factoid: Angular CLI",
    "answer": "Angular CLI is a command-line interface tool to initialize, develop, scaffold, and maintain Angular applications.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to create a new project?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Project setup",
    "answer": "Use Angular CLI: run `ng new my-app` to generate a new project with default configuration.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to generate a component?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Component generation",
    "answer": "Run `ng generate component component-name` or `ng g c component-name` to scaffold a new component.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to generate a service?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Service generation",
    "answer": "Run `ng generate service service-name` or `ng g s service-name` to create an injectable service.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to run the application?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Run app",
    "answer": "Use `ng serve` to build the app and serve it locally at http://localhost:4200/ during development.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to build for production?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Build",
    "answer": "Use `ng build --prod` to build and optimize the application for production deployment.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to configure routing?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Routing",
    "answer": "Configure routing by importing RouterModule in your app module and defining routes in a Routes array passed to forRoot().",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to use forms?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Forms",
    "answer": "Implement forms by using FormsModule for template-driven forms or ReactiveFormsModule for reactive forms.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to make HTTP requests?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: HTTP",
    "answer": "Make HTTP requests using the HttpClient service by injecting it and calling methods like get(), post(), etc.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to add a third-party library?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Libraries",
    "answer": "Add a third-party library via `npm install library-name` and import the module or component in your Angular module.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to set environment variables?",
    "label": "angular",
    "language": "en",
    "context": "Descriptive: Environments",
    "answer": "Use environment files (environment.ts and environment.prod.ts) to configure variables for different build targets.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "Compare AngularJS vs Angular.",
    "label": "angular",
    "language": "en",
    "context": "Comparison: Versions",
    "answer": "AngularJS is the older JavaScript-based framework (version 1.x), Angular is a modern TypeScript-based rewrite (version 2+).",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Compare template-driven vs reactive forms.",
    "label": "angular",
    "language": "en",
    "context": "Comparison: Forms",
    "answer": "Template-driven forms rely on directives in the template and ngModel, while reactive forms use FormControl and FormGroup in code for more control.",
    "start_char": 0,
    "end_char": 180
  },
  {
    "question": "Compare ngIf vs ngSwitch.",
    "label": "angular",
    "language": "en",
    "context": "Comparison: Directives",
    "answer": "ngIf conditionally adds/removes DOM elements; ngSwitch chooses between multiple elements based on a switch value.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "Compare Observables vs Promises.",
    "label": "angular",
    "language": "en",
    "context": "Comparison: Asynchrony",
    "answer": "Observables (RxJS) provide multi-value asynchronous streams with operators; Promises handle single-value asynchronous operations.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "Compare @Input vs @Output.",
    "label": "angular",
    "language": "en",
    "context": "Comparison: Component communication",
    "answer": "@Input allows parent-to-child property binding; @Output and EventEmitter enable child-to-parent event communication.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Compare structural vs attribute directives.",
    "label": "angular",
    "language": "en",
    "context": "Comparison: Directive types",
    "answer": "Structural directives change DOM layout (e.g., *ngIf, *ngFor); attribute directives change appearance/behavior (e.g., ngStyle).",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "How to lazy load modules?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Lazy loading",
    "answer": "Implement lazy loading by configuring loadChildren in route definitions to load feature modules on demand.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to implement authentication?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Authentication",
    "answer": "Implement authentication using services and route guards, storing tokens in localStorage and protecting routes with canActivate.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to use Angular Material?",
    "label": "angular",
    "language": "en",
    "context": "How-to: UI library",
    "answer": "Install Angular Material via `ng add @angular/material`, then import modules like MatButtonModule and configure themes.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to test components with Jasmine?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Component testing",
    "answer": "Test components with Jasmine and Karma by writing specs in .spec.ts files and using TestBed to configure the testing module.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to test services?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Service testing",
    "answer": "Test services by injecting them in TestBed, mocking dependencies, and writing unit tests against service methods.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to configure state management with NgRx?",
    "label": "angular",
    "language": "en",
    "context": "How-to: NgRx",
    "answer": "Configure NgRx by installing @ngrx/store, defining actions, reducers, and registering StoreModule.forRoot() in your app module.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "How to use Pipes?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Pipes",
    "answer": "Use Pipes for data transformation by applying built-in pipes (e.g., date, uppercase) or creating custom pipes with the @Pipe decorator.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "How to create a custom directive?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Directive",
    "answer": "Create a custom directive by generating a directive with `ng g d name`, implementing logic in its class, and adding it to declarations.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to optimize performance?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Performance",
    "answer": "Optimize performance by using OnPush change detection, trackBy in ngFor, and lazy loading modules.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to deploy to Firebase?",
    "label": "angular",
    "language": "en",
    "context": "How-to: Deployment",
    "answer": "Deploy to Firebase by installing Firebase CLI, running `ng build --prod`, and using `firebase deploy` to publish the dist directory.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "Template parse errors, what causes them?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: Template parse",
    "answer": "Template parse errors occur when Angular cannot compile templates due to syntax issues or unknown elements and directives.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "NullInjectorError: No provider for X, why?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: NullInjectorError",
    "answer": "NullInjectorError: No provider for X occurs when a service isn’t provided in any module’s providers array or via providedIn.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "Cannot find module '@angular/material', why?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: Module not found",
    "answer": "Cannot find module '@angular/material' occurs when the package isn’t installed or missing in node_modules.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "ExpressionChangedAfterItHasBeenCheckedError, what is it?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: Change detection",
    "answer": "ExpressionChangedAfterItHasBeenCheckedError occurs when a binding value changes after Angular’s change detection has completed.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "NG8001: 'app-component' is not a known element, fix?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: Unknown element",
    "answer": "NG8001: 'app-component' is not a known element occurs when a component isn’t declared in any module or the module isn’t imported.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "Unexpected token < in JSON at position 0, why?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: JSON parse",
    "answer": "Unexpected token < in JSON at position 0 occurs when the app tries to parse an HTML error page as JSON.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Error: Can't resolve all parameters for X, why?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: Resolution",
    "answer": "Error: Can't resolve all parameters for X occurs when a dependency’s constructor parameters aren’t decorated or provided.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Memory leak issues in Angular, what causes them?",
    "label": "angular",
    "language": "en",
    "context": "Common Error: Memory leak",
    "answer": "Memory leak issues in Angular often stem from not unsubscribing from Observables in components before they are destroyed.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "ERROR in NG6002: Host binding not found, what is it?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: Host binding",
    "answer": "ERROR in NG6002: Host binding not found occurs when @HostBinding references a non-existent property.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "ERROR in The selector must be a valid CSS selector, why?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: Selector",
    "answer": "ERROR in The selector must be a valid CSS selector occurs when a component’s selector doesn’t match CSS selector rules.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "ERROR TypeError: this.service.method is not a function, why?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: TypeError",
    "answer": "ERROR TypeError: this.service.method is not a function occurs when the injected service doesn’t implement the called method.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "ERROR TS2304: Cannot find name 'Observable', why?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: TS2304",
    "answer": "ERROR TS2304: Cannot find name 'Observable' occurs when RxJS is not imported or the type isn’t declared.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "ERROR TS2339: Property 'map' does not exist on type 'string', what causes it?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: TS2339",
    "answer": "ERROR TS2339: Property 'map' does not exist on type 'string' occurs when map is used on a non-array or non-observable.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "ERROR NG0900: Error trying to diff '[object Object]', what is it?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: NG0900",
    "answer": "ERROR NG0900: Error trying to diff '[object Object]' occurs when Angular’s ngFor tries to iterate a non-iterable object.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "Error: circular dependency detected, what causes it?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: Circular dependency",
    "answer": "Error: circular dependency detected occurs when two or more modules/services depend on each other directly or indirectly.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "ERROR in Can't bind to 'ngModel' since it isn't a known property, fix?",
    "label": "angular",
    "language": "en",
    "context": "Specific Error: ngModel",
    "answer": "ERROR in Can't bind to 'ngModel' since it isn't a known property occurs when FormsModule isn’t imported in your module.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "What is Objective-C?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: Objective-C overview",
    "answer": "Objective-C is a general-purpose, object-oriented programming language that adds Smalltalk-style messaging to C, used primarily for macOS and iOS development.",
    "start_char": 0,
    "end_char": 188
  },
  {
    "question": "What is a category in Objective-C?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: Category",
    "answer": "A category allows you to add methods to an existing class without subclassing, by declaring an @interface ClassName(CategoryName) and implementing new methods.",
    "start_char": 0,
    "end_char": 171
  },
  {
    "question": "What is a protocol in Objective-C?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: Protocol",
    "answer": "A protocol declares a set of methods that implementing classes must or can optionally implement, similar to interfaces in other languages, using @protocol.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "What is Automatic Reference Counting (ARC)?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: ARC",
    "answer": "ARC is a compile-time memory management feature that automatically inserts retain/release calls to manage object lifetimes, reducing manual memory errors.",
    "start_char": 0,
    "end_char": 182
  },
  {
    "question": "What is a selector?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: Selector",
    "answer": "A selector (SEL) is the name of a method that can be passed to Objective-C runtime functions like performSelector:, representing a message to send to an object.",
    "start_char": 0,
    "end_char": 177
  },
  {
    "question": "What is a property in Objective-C?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: Property",
    "answer": "A property provides a shorthand for getter/setter method declarations, specified with @property and synthesized with @synthesize or auto-synthesis.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "What is a block in Objective-C?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: Block",
    "answer": "A block is an anonymous chunk of code that can be passed around, capturing variables from its enclosing scope, defined with ^{ } syntax.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "What is Cocoa Touch?",
    "label": "objective-c",
    "language": "en",
    "context": "Factoid: Cocoa Touch",
    "answer": "Cocoa Touch is the UI framework for building iOS apps, providing event-driven architecture, touch input handling, and built-in controls.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "How to declare a variable in Objective-C?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Variable declaration",
    "answer": "Use C syntax: int count = 0; or Objective-C object pointers: NSString *name = @\"Hello\"; ensuring pointer (*) placement before variable name.",
    "start_char": 0,
    "end_char": 172
  },
  {
    "question": "How to define a method?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Method definition",
    "answer": "In @implementation ClassName, write - (ReturnType)methodName:(ParamType)param { /* code */ } for instance methods, + for class methods.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "How to call a method?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Method call",
    "answer": "Use bracket syntax: [object methodName:param]; or without parameter: [object methodName]; to send a message represented by a selector.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "How to import a framework?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Framework import",
    "answer": "Use #import <FrameworkName/Header.h> for Apple frameworks or #import \"Header.h\" for local headers to include declarations in your code.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "How to create an object?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Object creation",
    "answer": "Allocate and initialize: ClassName *obj = [[ClassName alloc] init]; or use convenience constructors provided by the class.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "How to use categories?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Category usage",
    "answer": "Declare @interface ClassName (CategoryName) in header, add methods in .m, and import the category header wherever you need the added methods.",
    "start_char": 0,
    "end_char": 169
  },
  {
    "question": "How to adopt a protocol?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Protocol adoption",
    "answer": "In @interface ClassName : Superclass <ProtocolName>, list required protocols in angle brackets and implement methods in @implementation.",
    "start_char": 0,
    "end_char": 172
  },
  {
    "question": "How to manage memory with ARC?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: ARC usage",
    "answer": "Enable ARC in build settings; avoid manual retain/release; use strong/weak qualifiers on properties to control object ownership.",
    "start_char": 0,
    "end_char": 168
  },
  {
    "question": "How to register for notifications?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Notifications",
    "answer": "Use [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(method:) name:NotificationName object:nil]; to receive events.",
    "start_char": 0,
    "end_char": 174
  },
  {
    "question": "How to debug in Xcode?",
    "label": "objective-c",
    "language": "en",
    "context": "Descriptive: Debugging",
    "answer": "Set breakpoints, use LLDB console in Xcode to inspect variables, step through code with F6/7/8, and examine stack traces on exceptions.",
    "start_char": 0,
    "end_char": 179
  },
  {
    "question": "Compare categories vs extensions.",
    "label": "objective-c",
    "language": "en",
    "context": "Comparison: Category vs Extension",
    "answer": "Categories add methods at runtime without ivars; extensions (anonymous categories) allow private methods and properties declared in the .m file.",
    "start_char": 0,
    "end_char": 181
  },
  {
    "question": "Compare id vs Class types.",
    "label": "objective-c",
    "language": "en",
    "context": "Comparison: id vs Class",
    "answer": "id is a pointer to any Objective-C object instance; Class is a pointer to an Objective-C class object representing types at runtime.",
    "start_char": 0,
    "end_char": 168
  },
  {
    "question": "Compare strong vs weak references.",
    "label": "objective-c",
    "language": "en",
    "context": "Comparison: Memory qualifiers",
    "answer": "strong retains an object increasing its retain count; weak doesn’t retain and automatically nil-s the pointer when the object is deallocated.",
    "start_char": 0,
    "end_char": 178
  },
  {
    "question": "Compare NSArray vs NSMutableArray.",
    "label": "objective-c",
    "language": "en",
    "context": "Comparison: Collection types",
    "answer": "NSArray is immutable—once created can’t change; NSMutableArray allows adding, removing, and replacing elements at runtime.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "Compare dispatch_async vs performSelector.",
    "label": "objective-c",
    "language": "en",
    "context": "Comparison: Asynchrony",
    "answer": "dispatch_async on GCD queues runs code concurrently; performSelector:afterDelay: schedules a selector on the current runLoop after a delay.",
    "start_char": 0,
    "end_char": 182
  },
  {
    "question": "Compare @synthesize vs @dynamic.",
    "label": "objective-c",
    "language": "en",
    "context": "Comparison: Property synthesis",
    "answer": "@synthesize auto-generates getter/setter and ivar; @dynamic tells the compiler methods are provided at runtime (e.g., Core Data).",
    "start_char": 0,
    "end_char": 174
  },
  {
    "question": "How to implement delegates?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: Delegation",
    "answer": "Define a protocol, declare a delegate property with id<Protocol> delegate, and call delegate methods if implemented by checking respondsToSelector:.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "How to parse JSON?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: JSON parsing",
    "answer": "Use NSJSONSerialization: [NSJSONSerialization JSONObjectWithData:data options:0 error:&error] to convert JSON data to Foundation objects.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "How to use Grand Central Dispatch?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: GCD",
    "answer": "Import <dispatch/dispatch.h>, then dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{ /* work */ });",
    "start_char": 0,
    "end_char": 192
  },
  {
    "question": "How to schedule NSTimer?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: Timer",
    "answer": "Use [NSTimer scheduledTimerWithTimeInterval:interval target:self selector:@selector(method:) userInfo:nil repeats:YES]; to fire periodically.",
    "start_char": 0,
    "end_char": 178
  },
  {
    "question": "How to use NSLocalizedString?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: Localization",
    "answer": "Wrap strings with NSLocalizedString(@\"key\", @\"comment\"), and add keys/values in Localizable.strings files for each language.",
    "start_char": 0,
    "end_char": 177
  },
  {
    "question": "How to use Core Data?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: Core Data",
    "answer": "Set up an NSManagedObjectModel, NSPersistentStoreCoordinator, NSManagedObjectContext, then define and fetch NSManagedObject subclasses.",
    "start_char": 0,
    "end_char": 183
  },
  {
    "question": "How to perform Key-Value Coding (KVC)?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: KVC",
    "answer": "Use valueForKey:@\"propertyName\" and setValue:value forKey:@\"propertyName\" to access properties dynamically by name.",
    "start_char": 0,
    "end_char": 164
  },
  {
    "question": "How to store secrets in Keychain?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: Keychain",
    "answer": "Use Keychain Services API: SecItemAdd, SecItemCopyMatching, SecItemUpdate, and SecItemDelete to securely store and retrieve items.",
    "start_char": 0,
    "end_char": 186
  },
  {
    "question": "How to use NSNotificationCenter?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: Notifications",
    "answer": "Post notifications with [[NSNotificationCenter defaultCenter] postNotificationName:object:userInfo:], observe with addObserver:selector:name:object:.",
    "start_char": 0,
    "end_char": 192
  },
  {
    "question": "How to implement a block callback?",
    "label": "objective-c",
    "language": "en",
    "context": "How-to: Block callback",
    "answer": "Define a method taking a block parameter, e.g., - (void)doWorkWithCompletion:(void(^)(BOOL success))completion, then call completion(...) inside.",
    "start_char": 0,
    "end_char": 202
  },
  {
    "question": "What causes EXC_BAD_ACCESS?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: EXC_BAD_ACCESS",
    "answer": "EXC_BAD_ACCESS occurs when accessing freed memory or messaging a deallocated object, often due to missing strong references or retain cycles.",
    "start_char": 0,
    "end_char": 182
  },
  {
    "question": "What causes unrecognized selector sent to instance?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: Unrecognized selector",
    "answer": "This error indicates a method call on an object that doesn’t implement the selector, often due to typos or incorrect class assumptions.",
    "start_char": 0,
    "end_char": 178
  },
  {
    "question": "What causes zombie object exception?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: Zombie object",
    "answer": "A zombie occurs when accessing an object after it’s deallocated; enabling Zombie Objects in Instruments helps track the offending deallocation.",
    "start_char": 0,
    "end_char": 186
  },
  {
    "question": "What causes missing required initializer?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: Missing initializer",
    "answer": "Occurs when a subclass fails to implement a designated initializer from its superclass and you call init methods without providing implementations.",
    "start_char": 0,
    "end_char": 185
  },
  {
    "question": "What causes nil unwrapping error?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: Nil unwrapping",
    "answer": "Passing nil where a nonnull parameter is expected or dereferencing a nil pointer triggers runtime errors or silent failures under ARC.",
    "start_char": 0,
    "end_char": 179
  },
  {
    "question": "What causes infinite recursion?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: Infinite recursion",
    "answer": "Occurs when a method calls itself (directly or indirectly) without a termination condition, leading to stack overflow.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "What causes retain cycle?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: Retain cycle",
    "answer": "A retain cycle happens when two objects hold strong references to each other, preventing ARC from deallocating either object.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "What causes missing architecture error?",
    "label": "objective-c",
    "language": "en",
    "context": "Common Error: Architecture",
    "answer": "This linker error occurs when required architectures (e.g., arm64) are not included in a library or target’s Build Settings.",
    "start_char": 0,
    "end_char": 174
  },
  {
    "question": "error: 'UIView' is unavailable in this context",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Unavailable API",
    "answer": "Occurs when trying to use UIKit classes in a non-UIKit target (e.g., macOS) or without importing <UIKit/UIKit.h>.",
    "start_char": 0,
    "end_char": 159
  },
  {
    "question": "error: use of undeclared identifier 'XYZ'",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Undeclared identifier",
    "answer": "Occurs when referencing a symbol not declared or imported. Ensure headers are imported and the symbol is in scope.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "warning: undeclared selector",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Undeclared selector",
    "answer": "This warning appears when using @selector(method) without implementing method in the class interface or category.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "error: cannot initialize a parameter of type 'NSString *' with an rvalue of type 'char *'",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Type mismatch",
    "answer": "Occurs when passing C-string literals to Objective-C NSString parameters. Use @\"string\" instead of \"string\".",
    "start_char": 0,
    "end_char": 183
  },
  {
    "question": "error: expected ';' after expression",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Syntax",
    "answer": "Occurs when a statement is missing a terminating semicolon or brace in Objective-C source code.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "error: conflicting types for 'functionName'",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Conflicting types",
    "answer": "Occurs when a function or method is declared with different signatures in multiple headers or implementations.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "error: method definition for '-'init' not found",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Missing method",
    "answer": "Occurs when an @implementation lacks a matching method definition for a declaration in the @interface.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "warning: incompatible pointer types assigning to 'NSString *' from 'const char *'",
    "label": "objective-c",
    "language": "en",
    "context": "Specific Error: Pointer type mismatch",
    "answer": "This warning signals assignment of a C-string to an NSString pointer; use @\"literal\" or convert with [NSString stringWithUTF8String:].",
    "start_char": 0,
    "end_char": 201
  },
  {
    "question": "What is Microsoft Excel?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Excel overview",
    "answer": "Microsoft Excel is a spreadsheet application developed by Microsoft that allows users to organize, format, and calculate data using formulas.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "What is a workbook?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Workbook concept",
    "answer": "A workbook is the Excel file that contains one or more worksheets (tabs) where data is stored.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is a worksheet?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Worksheet concept",
    "answer": "A worksheet is a single sheet within a workbook, comprising a grid of cells arranged in rows and columns.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is a cell?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Cell concept",
    "answer": "A cell is the intersection of a row and a column in a worksheet, identified by its address like A1.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is a formula?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Formula definition",
    "answer": "A formula is an expression entered in a cell that performs calculations or operations on data, prefixed by '='.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is a function in Excel?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Function concept",
    "answer": "A function is a predefined formula that performs specific calculations, such as SUM, AVERAGE, or VLOOKUP.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is a named range?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Named range concept",
    "answer": "A named range is a user-defined name for a cell or range of cells, used to simplify formulas and navigation.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "What is conditional formatting?",
    "label": "excel",
    "language": "en",
    "context": "Factoid: Conditional formatting concept",
    "answer": "Conditional formatting allows you to apply formatting rules to cells based on their values.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to create a new workbook?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Create workbook",
    "answer": "Go to File > New and select a template or Blank Workbook to create a new Excel file.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to rename a worksheet?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Rename worksheet",
    "answer": "Double-click the worksheet tab name or right-click the tab, choose Rename, and type a new name.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to insert a row?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Insert row",
    "answer": "Right-click the row number where you want to insert and select Insert, or use Home > Insert > Insert Sheet Rows.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to delete a column?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Delete column",
    "answer": "Right-click the column letter and select Delete, or use Home > Delete > Delete Sheet Columns.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to freeze panes?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Freeze panes",
    "answer": "Go to View > Freeze Panes and choose to freeze the top row, first column, or a custom selection.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to sort data?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Sort data",
    "answer": "Select a range and go to Data > Sort, then choose the column and order (ascending/descending).",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to filter data?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Filter data",
    "answer": "Select the header row and click Data > Filter to add drop-down filters to each column.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to merge cells?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Merge cells",
    "answer": "Select multiple cells and click Home > Merge & Center, choosing a merge option.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to apply cell styles?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Cell styles",
    "answer": "Use Home > Cell Styles to apply predefined formatting templates to cells.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to print a worksheet?",
    "label": "excel",
    "language": "en",
    "context": "Descriptive: Print worksheet",
    "answer": "Go to File > Print, configure settings, and click Print to print the active sheet.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare XLSX vs XLS format",
    "label": "excel",
    "language": "en",
    "context": "Comparison: File format comparison",
    "answer": "XLSX is the newer XML-based format with smaller file size and improved recovery; XLS is the older binary format.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Compare absolute vs relative references",
    "label": "excel",
    "language": "en",
    "context": "Comparison: Reference types",
    "answer": "Absolute references ($A$1) don’t change when copied; relative references (A1) adjust based on the formula’s new location.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "Compare SUM vs SUMIF",
    "label": "excel",
    "language": "en",
    "context": "Comparison: Function comparison",
    "answer": "SUM adds all numbers in a range; SUMIF adds numbers in a range that meet a given condition.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare VLOOKUP vs INDEX/MATCH",
    "label": "excel",
    "language": "en",
    "context": "Comparison: Lookup methods",
    "answer": "VLOOKUP searches vertically and requires leftmost key; INDEX/MATCH is more flexible, supporting lookups in any direction.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "Compare CONCATENATE vs & operator",
    "label": "excel",
    "language": "en",
    "context": "Comparison: Concatenation methods",
    "answer": "CONCATENATE function joins text strings; the & operator (&) concatenates more succinctly in formulas.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare COUNT vs COUNTA",
    "label": "excel",
    "language": "en",
    "context": "Comparison: Counting functions",
    "answer": "COUNT counts numeric cells; COUNTA counts non-empty cells, including text and errors.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to use VLOOKUP?",
    "label": "excel",
    "language": "en",
    "context": "How-to: VLOOKUP usage",
    "answer": "Use VLOOKUP(lookup_value, table_array, col_index, [range_lookup]) to find values in the first column of a table.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to create a pivot table?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Pivot table",
    "answer": "Select your data, go to Insert > PivotTable, choose a location, and configure rows, columns, and values.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to protect a worksheet?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Protect sheet",
    "answer": "Go to Review > Protect Sheet, set a password and select permissions to restrict editing.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to set data validation?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Data validation",
    "answer": "Select cells, then Data > Data Validation, choose validation criteria and input message.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to record a macro?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Record macro",
    "answer": "Go to View > Macros > Record Macro, perform actions, then stop to save the script.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to run a macro?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Run macro",
    "answer": "Go to View > Macros > View Macros, select one, and click Run.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to use conditional formatting for duplicates?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Duplicates formatting",
    "answer": "Select range, go to Home > Conditional Formatting > Highlight Cells Rules > Duplicate Values.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to split text to columns?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Text to columns",
    "answer": "Select column, then Data > Text to Columns and follow the wizard to split by delimiter or fixed width.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to remove duplicates?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Remove duplicates",
    "answer": "Select range and use Data > Remove Duplicates to eliminate duplicate rows.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to use Goal Seek?",
    "label": "excel",
    "language": "en",
    "context": "How-to: Goal Seek",
    "answer": "Go to Data > What-If Analysis > Goal Seek, set cell, desired value, and changing cell to find inputs.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "#DIV/0! error, what is it?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: DIV/0 error",
    "answer": "Occurs when a formula attempts to divide by zero or an empty cell.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "#VALUE! error, what causes it?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: VALUE error",
    "answer": "Occurs when a formula has the wrong type of argument, like text instead of a number.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "#REF! error, how to fix?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: REF error",
    "answer": "Occurs when a formula refers to a deleted cell; fix by updating references.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "#NAME? error, what is it?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: NAME error",
    "answer": "Occurs when Excel does not recognize text in a formula, like misspelled function or range name.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "#N/A error, what does it mean?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: N/A error",
    "answer": "Indicates that a value is not available to a function or formula, common with lookup functions.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "#NUM! error, what causes it?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: NUM error",
    "answer": "Occurs with invalid numeric values, like iterative functions exceeding iterations.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "#NULL! error, why appears?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: NULL error",
    "answer": "Occurs when a space is used instead of a comma or colon in a range reference.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "#SPILL! error, what is it?",
    "label": "excel",
    "language": "en",
    "context": "Common Error: SPILL error",
    "answer": "Occurs when a formula returns multiple values but Excel cannot display them due to blockage.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error circular reference found",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: Circular reference",
    "answer": "Occurs when a formula refers, directly or indirectly, to its own cell.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "Error too many arguments",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: Too many args",
    "answer": "Occurs when a function is supplied with more arguments than it supports.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Error wrong number of arguments in function",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: Arg count mismatch",
    "answer": "Occurs when a function has too few or too many arguments.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "Error Excel cannot complete this task with available resources",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: Resources error",
    "answer": "Occurs when Excel does not have enough memory or system resources.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error you cannot change part of a merged cell",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: Merged cell error",
    "answer": "Occurs when editing part of a merged cell range instead of the full range.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error Microsoft Visual Basic cannot find project or library",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: VBA library error",
    "answer": "Occurs when a referenced VBA library is missing or broken.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "Error runtime error 1004: application-defined or object-defined error",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: Runtime 1004",
    "answer": "Occurs in VBA when a method or property call fails.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "Error cannot shift objects off sheet",
    "label": "excel",
    "language": "en",
    "context": "Specific Error: Shift objects error",
    "answer": "Occurs when inserting or deleting shifts objects beyond sheet boundaries.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is pandas?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: pandas overview",
    "answer": "pandas is an open-source Python library providing high-performance, easy-to-use data structures (Series and DataFrame) and data analysis tools.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "What is a DataFrame?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: DataFrame",
    "answer": "A DataFrame is a two-dimensional, size-mutable, heterogeneous tabular data structure with labeled axes (rows and columns).",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "What is a Series?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: Series",
    "answer": "A Series is a one-dimensional labeled array capable of holding any data type, similar to a column in a spreadsheet or database table.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "What is an index in pandas?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: Index",
    "answer": "An Index is the immutable array of labels that define row or column names for Series and DataFrame objects.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "What is the loc accessor?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: loc accessor",
    "answer": "loc is a label-based indexer for selecting subsets of rows and columns by labels or boolean arrays.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "What is the iloc accessor?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: iloc accessor",
    "answer": "iloc is a position-based indexer for selecting subsets of rows and columns by integer position.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "What is the groupby method?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: groupby method",
    "answer": "groupby is used to split data into groups based on some criteria, apply a function to each group, and combine the results.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "What is a Panel?",
    "label": "pandas",
    "language": "en",
    "context": "Factoid: Panel",
    "answer": "Panel was a three-dimensional container for data in pandas, now deprecated in favor of using MultiIndex on DataFrame.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to read a CSV file?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: Read CSV",
    "answer": "Use pandas.read_csv('file.csv') to read a comma-separated file into a DataFrame.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to write a DataFrame to Excel?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: to_excel",
    "answer": "Use DataFrame.to_excel('file.xlsx', sheet_name='Sheet1') to write data to an Excel file.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to filter rows?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: filtering",
    "answer": "Use boolean indexing, e.g., df[df['column'] > 0], to select rows matching a condition.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to sort a DataFrame?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: sort_values",
    "answer": "Use df.sort_values(by='column', ascending=False) to sort rows by values in a column.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to drop missing values?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: dropna",
    "answer": "Use df.dropna() to remove rows containing any NaN values, or df.dropna(axis=1) to drop columns.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to fill missing values?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: fillna",
    "answer": "Use df.fillna(value) to replace NaN values with a specified value or method, e.g., df.fillna(method='ffill').",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to merge two DataFrames?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: merge",
    "answer": "Use pd.merge(df1, df2, on='key', how='inner') to join two DataFrames on a key column.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to concatenate DataFrames?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: concat",
    "answer": "Use pd.concat([df1, df2], axis=0) to stack DataFrames vertically or axis=1 horizontally.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to add a new column?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: add column",
    "answer": "Assign to a new label: df['new_col'] = values to create a new column in a DataFrame.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to calculate summary statistics?",
    "label": "pandas",
    "language": "en",
    "context": "Descriptive: describe",
    "answer": "Use df.describe() to generate count, mean, std, min, max, and quartile statistics for numeric columns.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare DataFrame vs Series.",
    "label": "pandas",
    "language": "en",
    "context": "Comparison: DataFrame vs Series",
    "answer": "A Series is a one-dimensional labeled array; a DataFrame is a two-dimensional table of many Series sharing the same index.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Compare loc vs iloc.",
    "label": "pandas",
    "language": "en",
    "context": "Comparison: loc vs iloc",
    "answer": "loc selects by label (row/column names); iloc selects by integer position (zero-based indices).",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare merge vs concat.",
    "label": "pandas",
    "language": "en",
    "context": "Comparison: merge vs concat",
    "answer": "merge performs database-style joins; concat appends objects along an axis without alignment on keys by default.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Compare apply vs map.",
    "label": "pandas",
    "language": "en",
    "context": "Comparison: apply vs map",
    "answer": "map applies a function elementwise on a Series; apply can run functions rowwise or columnwise on DataFrames.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Compare drop vs pop.",
    "label": "pandas",
    "language": "en",
    "context": "Comparison: drop vs pop",
    "answer": "drop returns a new object without specified labels; pop removes and returns the specified column in place.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare head vs tail.",
    "label": "pandas",
    "language": "en",
    "context": "Comparison: head vs tail",
    "answer": "head(n) returns the first n rows; tail(n) returns the last n rows of a DataFrame or Series.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to pivot a DataFrame?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: pivot table",
    "answer": "Use df.pivot(index='row', columns='col', values='val') to reshape data into a pivot table.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to melt a DataFrame?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: melt",
    "answer": "Use pd.melt(df, id_vars=['id'], value_vars=['val1','val2']) to transform wide to long format.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to group and aggregate?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: groupby agg",
    "answer": "Use df.groupby('key').agg({'col':'sum'}) to group by a column and compute aggregates on grouped data.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to apply a function to columns?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: apply",
    "answer": "Use df.apply(func, axis=0) to apply a function to each column or axis=1 for rows.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to resample time series?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: resample",
    "answer": "Use df.resample('M').mean() to convert a DateTimeIndex to monthly frequency with mean aggregation.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to set a DateTime index?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: datetime index",
    "answer": "Use df.set_index(pd.to_datetime(df['date'])) to convert a column to datetime and set as index.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to convert data types?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: astype",
    "answer": "Use df['col'] = df['col'].astype(int) to convert column data types, e.g., to numeric or categorical.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to drop duplicates?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: drop_duplicates",
    "answer": "Use df.drop_duplicates(subset=['col'], keep='first') to remove duplicate rows based on specified columns.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to plot data?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: plot",
    "answer": "Use df.plot(kind='line') or df['col'].hist() to visualize data with matplotlib backend.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to read JSON data?",
    "label": "pandas",
    "language": "en",
    "context": "How-to: read_json",
    "answer": "Use pd.read_json('file.json') to read JSON formatted data into a DataFrame.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "KeyError: 'column_name'",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: KeyError",
    "answer": "Occurs when accessing a column or index label that does not exist in the DataFrame or Series.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "IndexError out-of-bounds",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: IndexError",
    "answer": "Occurs when using iloc or positional indexing with an index outside the valid range.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "TypeError unsupported operand",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: TypeError",
    "answer": "Raised when a pandas operation encounters incompatible data types, such as adding strings to numbers.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "ValueError Length mismatch",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: ValueError",
    "answer": "Occurs when aligning or assigning arrays/Series/DataFrame columns of differing lengths.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "AttributeError DataFrame has no attribute",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: AttributeError",
    "answer": "Raised when calling a method or attribute that does not exist on the DataFrame or Series.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "ParserError Error tokenizing data",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: ParserError",
    "answer": "Occurs when read_csv or other parsers encounter malformed or unexpected input data.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "MergeError: No common columns to perform merge",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: MergeError",
    "answer": "Raised when attempting to merge DataFrames without any overlapping column labels or keys.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "SettingWithCopyWarning",
    "label": "pandas",
    "language": "en",
    "context": "Common Error: SettingWithCopyWarning",
    "answer": "Warns that you may be modifying a view rather than a copy of the data; use .loc or .copy() to avoid it.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "DtypeWarning Columns have mixed types",
    "label": "pandas",
    "language": "en",
    "context": "Specific Error: DtypeWarning",
    "answer": "Warns when columns infer mixed data types; specify dtype or converters to resolve inconsistent types.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "EmptyDataError No columns to parse",
    "label": "pandas",
    "language": "en",
    "context": "Specific Error: EmptyDataError",
    "answer": "Raised when read_csv or read_table is called on an empty file or file with no columns.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "RemoteDataError Unable to read URL",
    "label": "pandas",
    "language": "en",
    "context": "Specific Error: RemoteDataError",
    "answer": "Occurs when pandas cannot fetch data from a URL, due to connection issues or unsupported schemes.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "ValueError cannot reindex from a duplicate axis",
    "label": "pandas",
    "language": "en",
    "context": "Specific Error: ValueError reindex",
    "answer": "Raised when trying to reindex a DataFrame with duplicate labels on the target axis.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "PerformanceWarning dropping on a non-monotonic index",
    "label": "pandas",
    "language": "en",
    "context": "Specific Error: PerformanceWarning",
    "answer": "Warns that operations like drop can be slow when the index is not sorted; consider sorting first.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "InvalidIndexError Reindexing only valid with uniquely valued Index",
    "label": "pandas",
    "language": "en",
    "context": "Specific Error: InvalidIndexError",
    "answer": "Raised when attempting to reindex using an index with duplicate labels; ensure index uniqueness first.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "UnsupportedFunctionCall: unsupported function 'x'",
    "label": "pandas",
    "language": "en",
    "context": "Specific Error: UnsupportedFunctionCall",
    "answer": "Occurs when using DataFrame.apply on functions that aren’t vectorized; use numpy or define a vectorized ufunc.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "What is a regular expression?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A regular expression is a pattern used to match character combinations in strings for search, replace, or validation.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "What does ^ mean in regex?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Anchor",
    "answer": "The `^` anchor matches the position at the start of a string or line (in multi-line mode).",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What does $ mean in regex?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Anchor",
    "answer": "The `$` anchor matches the position at the end of a string or line (in multi-line mode).",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a character class?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Character class",
    "answer": "A character class, e.g. `[abc]`, matches any one character listed between the brackets.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is a quantifier?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Quantifier",
    "answer": "A quantifier specifies how many instances of the previous element must be present: `*`, `+`, `?`, or `{n,m}`.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "What is a capturing group?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Capturing group",
    "answer": "A capturing group, denoted `(…)`, groups subpatterns and stores the matched substring for backreferences or extraction.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is a non-capturing group?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Non-capturing group",
    "answer": "A non-capturing group, written `(?:…)`, groups subpatterns without storing the match for backreferences.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is alternation?",
    "label": "regex",
    "language": "en",
    "context": "Factoid: Alternation",
    "answer": "Alternation, using `|`, allows matching one of several subpatterns, e.g. `cat|dog` matches either \"cat\" or \"dog\".",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to match any digit?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Digit matching",
    "answer": "Use `\\d` to match any digit (equivalent to `[0-9]`). To match multiple digits, combine with a quantifier, e.g. `\\d+`.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to match whitespace?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Whitespace matching",
    "answer": "Use `\\s` to match any whitespace character (spaces, tabs, line breaks). Use `\\s+` to match one or more whitespace chars.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to match word characters?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Word character",
    "answer": "Use `\\w` to match word characters (letters, digits, underscore). Combine with quantifiers: `\\w{3,}` matches three or more chars.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to use character ranges?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Ranges",
    "answer": "Within a character class, use a hyphen to specify a range, e.g. `[A-Za-z0-9]` matches all letters and digits.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to escape special characters?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Escaping",
    "answer": "Prefix special regex metacharacters (., *, +, ?, ^, $, [, ], {, }, |, (, )) with a backslash to match them literally, e.g. `\\.` matches a dot.",
    "start_char": 0,
    "end_char": 171
  },
  {
    "question": "How to use lookahead?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Lookahead",
    "answer": "Use lookahead `(?=...)` to assert that a pattern is followed by another pattern without consuming characters in the match.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How to use lookbehind?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Lookbehind",
    "answer": "Use lookbehind `(?<=...)` to assert that a pattern is preceded by another pattern without consuming characters.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "How to perform case-insensitive matching?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Flags",
    "answer": "Enable the case-insensitive flag `i`, e.g. `/pattern/i` in JavaScript or `re.IGNORECASE` in Python to ignore letter case.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "How to replace text using regex?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Replace",
    "answer": "Use a replace function with regex, e.g. `str.replace(/foo/g, 'bar')` in JavaScript or `re.sub(r'foo', 'bar', text)` in Python.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to split a string using regex?",
    "label": "regex",
    "language": "en",
    "context": "Descriptive: Split",
    "answer": "Use a split function with regex: `text.split(/\\s+/)` in JS or `re.split(r'\\s+', text)` in Python to split on whitespace.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Compare greedy vs lazy quantifiers.",
    "label": "regex",
    "language": "en",
    "context": "Comparison: Quantifiers",
    "answer": "Greedy quantifiers (`*`, `+`) match as much as possible; lazy quantifiers (`*?`, `+?`) match as little as needed for a valid match.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "Compare . vs [\\s\\S].",
    "label": "regex",
    "language": "en",
    "context": "Comparison: Dot matches",
    "answer": "`.` matches any character except newline by default; `[\\s\\S]` matches any character including newline.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare ^ and \\A.",
    "label": "regex",
    "language": "en",
    "context": "Comparison: Anchors",
    "answer": "`^` matches start of line (multi-line); `\\A` matches start of entire string only.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare $ and \\Z.",
    "label": "regex",
    "language": "en",
    "context": "Comparison: Anchors",
    "answer": "`$` matches end of line (multi-line); `\\Z` matches end of entire string (with optional final newline).",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare .* vs .+.",
    "label": "regex",
    "language": "en",
    "context": "Comparison: Quantifiers",
    "answer": "`.*` matches zero or more of any char; `.+` matches one or more of any char.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Compare lookahead vs lookbehind.",
    "label": "regex",
    "language": "en",
    "context": "Comparison: Assertions",
    "answer": "Lookahead (`(?=)`) asserts following pattern; lookbehind (`(?<=)`) asserts preceding pattern.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to validate an email address?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Email validation",
    "answer": "Use a pattern like `^[\\w.-]+@[\\w.-]+\\.[A-Za-z]{2,}$` to match common email formats.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to validate a URL?",
    "label": "regex",
    "language": "en",
    "context": "How-to: URL validation",
    "answer": "Use a pattern like `^https?://[\\w.-]+(?:\\.[\\w.-]+)+[/\\w\\-._~:?#[\\]@!$&'()*+,;=.]*$` for basic URL validation.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to extract domain from URL?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Capture group",
    "answer": "Use `^https?://(www\\.)?([^/]+)` and capture group 2 to extract the domain name.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to validate phone numbers?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Phone validation",
    "answer": "Use `^\\+?[0-9]{1,3}[ -]?[0-9]{4,14}(?:x\\d+)?$` to match international phone formats with optional extension.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to capture groups in Python?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Python regex",
    "answer": "Use `re.search(r'(pattern)', text)` then access `m.group(1)` for the first capturing group.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to use regex in JavaScript?",
    "label": "regex",
    "language": "en",
    "context": "How-to: JS regex",
    "answer": "Create a regex literal `/pattern/flags` or `new RegExp('pattern','flags')` and use `.test()`, `.exec()`, or string methods.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to compile regex for performance?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Compilation",
    "answer": "In Python, use `re.compile(pattern)` once and reuse the object; in other languages, cache your regex objects similarly.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "How to use named groups?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Named groups",
    "answer": "Use `(?P<name>pattern)` in Python or `(?<name>pattern)` in JavaScript to name a group and access by name.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to test a full-string match?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Full match",
    "answer": "Anchor your pattern with `^…$`, e.g. `^pattern$`, to ensure the entire string matches exactly.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to parse log files with regex?",
    "label": "regex",
    "language": "en",
    "context": "How-to: Log parsing",
    "answer": "Use patterns like `^(\\S+) \\[(.*?)\\] \"(.*?)\" (\\d{3})` to extract parts like IP, timestamp, request, and status code.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Why doesn’t my regex match newlines?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: Dot behavior",
    "answer": "By default `.` excludes newlines; enable dotall mode (`s` flag) or use `[\\s\\S]` to match any character including newline.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "Why is my match empty?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: Empty match",
    "answer": "An empty match often means your pattern can match zero-length strings; make quantifiers greedy or adjust anchors to avoid zero-length.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "Why does \\d only match digits?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: Shorthand class",
    "answer": "`\\d` matches only ASCII digits. In Unicode mode, use `\\p{Nd}` or enable Unicode flags for broader digit sets.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "Why does \\w match underscore?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: Shorthand class",
    "answer": "`\\w` matches letters, digits, and underscore. Use `[A-Za-z0-9]` for letters and digits only.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Why is backslash literal?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: String escaping",
    "answer": "In many languages you must escape `\\` in string literals (e.g. \"\\\\d\"); otherwise the regex engine sees a literal backslash.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "Why does regex ignore case?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: Flags",
    "answer": "If you use the case-insensitive flag (`i`), regex will match letters ignoring case. Remove the flag to enforce case sensitivity.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "Why do I get catastrophic backtracking?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: Backtracking",
    "answer": "Overly nested quantifiers (e.g. `(a+)+`) can cause exponential backtracking. Simplify patterns or use atomic groups to prevent it.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "Why does lookbehind error occur?",
    "label": "regex",
    "language": "en",
    "context": "Common Error: Lookbehind",
    "answer": "Some engines require fixed-width lookbehind. Variable-length patterns cause errors. Use fixed-length or switch engines.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "Unterminated character class error",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: Unterminated class",
    "answer": "Thrown when a `[` lacks a matching `]`. Ensure every character class is closed properly.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Missing ) in regex",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: Unbalanced parentheses",
    "answer": "Occurs when a `(` has no matching `)`. Count your parentheses or use an editor that highlights matches.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Quantifier does not follow a repeatable atom",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: Invalid quantifier",
    "answer": "Raised when using quantifiers (`*`, `+`, `?`) without a preceding element to repeat. Check your pattern syntax.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "Regular expression too large",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: Too large",
    "answer": "Some engines limit regex size. Break your pattern into smaller pieces or optimize it to reduce length.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Lookbehind requires fixed width",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: Lookbehind width",
    "answer": "Thrown in engines that only support fixed-width lookbehind. Use a fixed-length pattern or avoid variable-length constructs.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Invalid escape sequence in regex",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: Invalid escape",
    "answer": "Occurs when an unrecognized escape (e.g. `\\x`) is used. Check that your backslashes escape valid metacharacters.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Regex compilation error in JavaScript",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: JS regex",
    "answer": "Thrown when constructing a RegExp with invalid pattern or flags, e.g. `new RegExp('[')` or unsupported flag.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "SyntaxError: invalid regular expression flag",
    "label": "regex",
    "language": "en",
    "context": "Specific Error: Invalid flag",
    "answer": "Raised when using an unsupported flag, e.g. `/pattern/x` in JS. Remove or correct the flag.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is TypeScript?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: TypeScript overview",
    "answer": "TypeScript is a statically typed superset of JavaScript that compiles to plain JavaScript, adding type annotations and modern ES features for safer code.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "What is a type in TypeScript?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: Type concept",
    "answer": "A type in TypeScript defines the shape and behavior of values, enabling compile-time checks. Types include primitives, arrays, tuples, unions, and custom interfaces.",
    "start_char": 0,
    "end_char": 172
  },
  {
    "question": "What is an interface?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: Interface",
    "answer": "An interface declares the structure of an object or class in TypeScript, specifying property names and types, and can be implemented by classes for type safety.",
    "start_char": 0,
    "end_char": 166
  },
  {
    "question": "What is a class in TypeScript?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: Class",
    "answer": "A class in TypeScript is a blueprint for creating objects, supporting constructors, inheritance, public/private modifiers, and can implement interfaces.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "What is a generic?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: Generic",
    "answer": "Generics allow you to create reusable components by parameterizing types, enabling functions and classes to operate on various types while preserving type safety.",
    "start_char": 0,
    "end_char": 176
  },
  {
    "question": "What is an enum?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: Enum",
    "answer": "An enum is a way to define a set of named constants in TypeScript, which can be numeric or string values, improving code readability and intent.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is a tuple?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: Tuple",
    "answer": "A tuple is a fixed-length array with specified types for each element, e.g., [string, number], used for heterogeneous collections with known size.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "What is a union type?",
    "label": "typescript",
    "language": "en",
    "context": "Factoid: Union type",
    "answer": "A union type allows a variable to hold one of several specified types, denoted with |, e.g., string | number, enabling flexible type assignments.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "How to install TypeScript?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Installation",
    "answer": "Install via npm: run `npm install -g typescript` for a global compiler or add `typescript` to devDependencies with `npm install --save-dev typescript`.",
    "start_char": 0,
    "end_char": 171
  },
  {
    "question": "How to compile TypeScript?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Compilation",
    "answer": "Use the CLI: run `tsc filename.ts` to compile a single file or `tsc` to compile the project based on tsconfig.json settings.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to declare typed variables?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Variable declaration",
    "answer": "Use syntax like `let count: number = 5;` or `const name: string = 'Alice';`. TypeScript infers types when no annotation is provided.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to define an interface?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Interface definition",
    "answer": "Declare with `interface Person { name: string; age: number; }` and use it to type objects or implement in classes for consistent structures.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to use generics in functions?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Generic functions",
    "answer": "Define a function with a type parameter: `function id<T>(value: T): T { return value; }` to operate on any type while preserving type safety.",
    "start_char": 0,
    "end_char": 171
  },
  {
    "question": "How to define tuple types?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Tuple definition",
    "answer": "Annotate arrays with fixed types: `let point: [number, number] = [0, 0];` to ensure the first and second elements match specified types.",
    "start_char": 0,
    "end_char": 160
  },
  {
    "question": "How to use union types?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Union usage",
    "answer": "Declare a union: `let value: string | number;` and use type guards like `if (typeof value === 'string')` to narrow types at runtime.",
    "start_char": 0,
    "end_char": 169
  },
  {
    "question": "How to create a class?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Class definition",
    "answer": "Use `class Person { constructor(public name: string) {} greet() { return 'Hello ' + this.name; } }` to define properties and methods.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "How to implement an interface?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Interface implementation",
    "answer": "Use `class User implements Person { constructor(public name: string, public age: number) {} }` to enforce interface structure in a class.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "How to use enums?",
    "label": "typescript",
    "language": "en",
    "context": "Descriptive: Enum usage",
    "answer": "Declare `enum Direction { Up, Down, Left, Right }` and use values like `Direction.Up` for readable named constants.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Compare interface vs type alias.",
    "label": "typescript",
    "language": "en",
    "context": "Comparison: Interface vs Type",
    "answer": "Interfaces define object shapes and support declaration merging; type aliases can alias any type (primitives, unions) but don’t merge.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "Compare any vs unknown.",
    "label": "typescript",
    "language": "en",
    "context": "Comparison: any vs unknown",
    "answer": "`any` disables type checking, allowing any operation; `unknown` is safer, forcing you to narrow the type before use.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "Compare var vs let vs const.",
    "label": "typescript",
    "language": "en",
    "context": "Comparison: Declarations",
    "answer": "`var` is function-scoped and hoisted; `let` and `const` are block-scoped, with `const` requiring initialization and prohibiting reassignment.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "Compare TypeScript vs JavaScript.",
    "label": "typescript",
    "language": "en",
    "context": "Comparison: TS vs JS",
    "answer": "TypeScript adds static types and modern features, compiled to JavaScript for runtime, while JavaScript is dynamically typed and interpreted.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "Compare type assertion vs type guard.",
    "label": "typescript",
    "language": "en",
    "context": "Comparison: Assertions vs Guards",
    "answer": "Type assertions (`value as Type`) tell the compiler to treat a value as a type without checks; type guards check and narrow types at runtime.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "Compare interface vs abstract class.",
    "label": "typescript",
    "language": "en",
    "context": "Comparison: Interface vs Abstract",
    "answer": "Interfaces only declare shapes and methods; abstract classes can implement methods and hold state, requiring subclasses to extend them.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "How to enable strict mode?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Strict mode",
    "answer": "Set `\"strict\": true` in tsconfig.json or enable individual flags like `noImplicitAny` and `strictNullChecks` for stricter checks.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "How to integrate TS with React?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: React integration",
    "answer": "Use `npx create-react-app my-app --template typescript` or add `@types/react`, `.tsx` files, and configure tsconfig for JSX support.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "How to configure tsconfig.json?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: tsconfig",
    "answer": "Create tsconfig.json with compilerOptions (target, module, strict), include and exclude fields to control which files are compiled.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "How to use decorators?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Decorators",
    "answer": "Enable `experimentalDecorators` in tsconfig and annotate classes, methods, or properties with `@decorator` functions for metadata and behavior injection.",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "How to generate declaration files?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Declaration files",
    "answer": "Set `declaration: true` in tsconfig, then run `tsc`. .d.ts files are emitted to describe the types of your modules.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to migrate JS to TS?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Migration",
    "answer": "Rename .js to .ts, fix errors incrementally via `allowJs` flag, add type annotations, and install @types for third-party libraries.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "How to use namespaces?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Namespaces",
    "answer": "Declare `namespace MyApp { export interface X {} }` to group related types. Namespaces are mostly superseded by ES modules.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "How to exclude files from compilation?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Exclude",
    "answer": "Add an `exclude` array in tsconfig.json listing file patterns or directories to ignore during compilation.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "How to use Mapped Types?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Mapped Types",
    "answer": "Use constructs like `type Readonly<T> = { readonly [K in keyof T]: T[K] }` to transform each property in a type.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to use conditional types?",
    "label": "typescript",
    "language": "en",
    "context": "How-to: Conditional Types",
    "answer": "Define types like `type IsString<T> = T extends string ? true : false` to select types based on conditions at compile time.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "Cannot find module error, how to fix?",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Module not found",
    "answer": "Ensure correct module path, check `baseUrl` and `paths` in tsconfig, and install missing type definitions with `npm install @types/…`.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "TS2322: Type 'X' is not assignable to type 'Y'",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Type mismatch",
    "answer": "Occurs when you assign a value of one type to a variable of another incompatible type. Use correct types or type assertions.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "TS6133: Variable is declared but its value is never read",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Unused variable",
    "answer": "Indicates a declared variable or import that isn’t used. Remove or use the variable, or disable via `noUnusedLocals` config.",
    "start_char": 0,
    "end_char": 174
  },
  {
    "question": "TS2339: Property 'X' does not exist on type 'Y'",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Missing property",
    "answer": "Occurs when accessing a property not defined in a type. Update the type definition or narrow the type before access.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "TS2551: Duplicate identifier 'X'",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Duplicate identifier",
    "answer": "Raised when the same name is declared multiple times in the same scope. Rename or remove redundant declarations.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "TS2304: Cannot find name 'X'",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Name not found",
    "answer": "Indicates a name used without declaration or import. Declare the identifier or add an import for external modules.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "TS2540: Cannot assign to 'X' because it is a read-only property",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Read-only property",
    "answer": "Occurs when modifying a property defined with `readonly`. Remove assignment or remove `readonly` modifier.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "TS7006: Parameter 'x' implicitly has an 'any' type",
    "label": "typescript",
    "language": "en",
    "context": "Common Error: Implicit any",
    "answer": "Raised under `noImplicitAny` when a function parameter lacks a type annotation. Add an explicit type or disable the rule.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "TS1005: '...' expected",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: Syntax",
    "answer": "Indicates a missing token such as a semicolon or bracket. Check the syntax near the reported location for missing characters.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "TS2365: Operator '===' cannot be applied to types 'X' and 'Y'",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: Operator type mismatch",
    "answer": "Occurs when using an operator on incompatible types. Use compatible types or convert one operand before comparison.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "TS2693: 'X' only refers to a type, but is being used as a value here",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: Type vs value",
    "answer": "Raised when a type name is used in a value position. Use an actual value or import the correct symbol.",
    "start_char": 0,
    "end_char": 163
  },
  {
    "question": "TS18002: No inputs were found in config file",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: No inputs",
    "answer": "Occurs when tsconfig.json’s include/exclude settings result in no files to compile. Adjust the file patterns accordingly.",
    "start_char": 0,
    "end_char": 165
  },
  {
    "question": "TS2375: Operator '+' cannot be applied to types 'X' and 'Y'",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: Operator mismatch",
    "answer": "Generated when adding two incompatible types. Convert one operand or adjust types to support addition.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "TS1208: File '...' cannot be compiled under '--isolatedModules'",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: Isolated modules",
    "answer": "Occurs when a file relies on non-module features. Ensure each file has at least one import/export or disable isolatedModules.",
    "start_char": 0,
    "end_char": 166
  },
  {
    "question": "TS1238: Unable to resolve signature of class decorator when called as an expression",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: Decorator signature",
    "answer": "Thrown when a decorator’s return type doesn’t match expected signatures. Adjust decorator types or implementation to match.",
    "start_char": 0,
    "end_char": 167
  },
  {
    "question": "TS4082: An import path cannot end with a '.ts' extension",
    "label": "typescript",
    "language": "en",
    "context": "Specific Error: Import extension",
    "answer": "Occurs when importing with a .ts suffix. Remove the extension or configure module resolution to allow it.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "What is Ruby?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Ruby overview",
    "answer": "Ruby is a dynamic, open-source, object-oriented programming language focused on simplicity and productivity.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is IRB?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Interactive Ruby",
    "answer": "IRB (Interactive Ruby) is a REPL tool that allows you to interactively execute Ruby expressions and explore objects.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "What is a gem?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Gem",
    "answer": "A gem is a packaged Ruby library or application distributed via RubyGems, used to extend functionality.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is RubyGems?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Package manager",
    "answer": "RubyGems is the package manager for Ruby, providing a standard format for distributing Ruby programs and libraries in a self-contained format.",
    "start_char": 0,
    "end_char": 155
  },
  {
    "question": "What is a block in Ruby?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Block",
    "answer": "A block is an anonymous piece of code enclosed by braces {} or do..end that can be passed to methods as a parameter.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is a Proc?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Proc object",
    "answer": "A Proc is an object that encapsulates a block, allowing it to be stored in a variable and executed with call or yield from methods.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "What is a lambda in Ruby?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Lambda",
    "answer": "A lambda is a special type of Proc with stricter argument checking and return behavior, defined with -> or the lambda keyword.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "What is a symbol?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Symbol",
    "answer": "A symbol is an immutable, interned string-like object represented by a leading colon, used as identifiers and keys for efficiency.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Who is Matz?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Creator",
    "answer": "Yukihiro \"Matz\" Matsumoto is the creator of the Ruby programming language, known for balancing functional and imperative programming.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "What is RVM?",
    "label": "ruby",
    "language": "en",
    "context": "Factoid: Version manager",
    "answer": "RVM (Ruby Version Manager) is a command-line tool to install, manage, and work with multiple Ruby environments and sets of gems.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to install Ruby?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Installation",
    "answer": "Use a version manager like RVM or rbenv: install RVM (curl -sSL https://get.rvm.io | bash), then rvm install ruby to install a Ruby version.",
    "start_char": 0,
    "end_char": 180
  },
  {
    "question": "How to run Ruby scripts?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Execution",
    "answer": "Run Ruby scripts from the command line with ruby filename.rb. Make a script executable (`chmod +x script.rb`) and add `#!/usr/bin/env ruby` as the shebang.",
    "start_char": 0,
    "end_char": 200
  },
  {
    "question": "How to define a method?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Method definition",
    "answer": "Define methods using def method_name(parameters); ...; end, e.g. def greet(name); puts \"Hello #{name}\"; end.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to create a class?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Class definition",
    "answer": "Create a class with class ClassName; def initialize(...); ...; end; end, then instantiate with ClassName.new.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to use modules?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Module usage",
    "answer": "Use modules with module Name; ...; end to group methods and constants. Mix into classes with include or extend for shared behavior.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to handle exceptions?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Exception handling",
    "answer": "Use begin; ...; rescue StandardError => e; ...; ensure; ...; end. rescue handles errors, ensure runs code whether an error occurred or not.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "How to open a file?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: File operations",
    "answer": "Use File.open('path', 'mode') do |file|; content = file.read; end to safely open, read, and close files.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to iterate over an array?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Iteration",
    "answer": "Use array.each do |item|; ...; end, or map, select, and other enumerable methods for transforming and filtering collections.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to parse JSON?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: JSON parsing",
    "answer": "Require 'json', then JSON.parse(json_string) to convert a JSON string to a Ruby hash, and JSON.generate(object) to produce JSON.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "How to install a gem?",
    "label": "ruby",
    "language": "en",
    "context": "Descriptive: Gem installation",
    "answer": "Run gem install gem_name to install a gem globally, or add gem 'name', 'version' to your Gemfile and run bundle install.",
    "start_char": 0,
    "end_char": 140
  },
  {
    "question": "Compare Proc vs lambda.",
    "label": "ruby",
    "language": "en",
    "context": "Comparison: Closures",
    "answer": "Both are closures, but lambdas check arguments strictly and return to the calling method, whereas Procs have lenient argument handling and return from the enclosing context.",
    "start_char": 0,
    "end_char": 180
  },
  {
    "question": "Compare include vs extend.",
    "label": "ruby",
    "language": "en",
    "context": "Comparison: Mixins",
    "answer": "include mixes module methods as instance methods; extend mixes them as class methods.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare symbol vs string.",
    "label": "ruby",
    "language": "en",
    "context": "Comparison: Types",
    "answer": "Symbols are immutable, memory-efficient identifiers; strings are mutable sequences of characters, better for manipulation.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Compare map vs each.",
    "label": "ruby",
    "language": "en",
    "context": "Comparison: Iteration methods",
    "answer": "each iterates returning the original array; map transforms elements and returns a new array with results.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Compare require vs load.",
    "label": "ruby",
    "language": "en",
    "context": "Comparison: File loading",
    "answer": "require loads a file once and caches it; load reloads the file every time it's called.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare global vs instance variables.",
    "label": "ruby",
    "language": "en",
    "context": "Comparison: Scope",
    "answer": "Global variables ($var) are accessible from anywhere; instance variables (@var) belong to a specific object instance.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to use Bundler?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Dependency management",
    "answer": "Install bundler with gem install bundler, then bundle init to create Gemfile, add gems, and run bundle install to manage dependencies.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to write tests with RSpec?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Testing",
    "answer": "Add rspec gem, run rspec --init, write specs in spec/ using describe and it blocks, and run rspec to execute your tests.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to print output?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Output",
    "answer": "Use puts 'text' to print with newline, print 'text' for no newline, and p object for debug output calling inspect.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to check object type?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Type checking",
    "answer": "Use object.class to get the class, is_a?(ClassName) or kind_of? for type checking.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to define default values in methods?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Defaults",
    "answer": "Define def foo(a, b = 'default'); ...; end to set default value for parameter b.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use string interpolation?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Interpolation",
    "answer": "Embed expressions in strings with #{expression}, e.g. \"Hello #{name}\".",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to create a range?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Range",
    "answer": "Use start..end for inclusive or start...end for exclusive range, e.g. (1..5).to_a yields [1,2,3,4,5].",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to convert string to integer?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Conversion",
    "answer": "Use '123'.to_i to convert string to integer, returns 0 for non-numeric strings.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to freeze objects?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: Immutability",
    "answer": "Call object.freeze to make an object immutable, preventing modifications to frozen object.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to restart IRB?",
    "label": "ruby",
    "language": "en",
    "context": "How-to: IRB",
    "answer": "Type exit or quit to close IRB session and run irb again in terminal to start a fresh session.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "NoMethodError undefined method, what causes it?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: NoMethodError",
    "answer": "Raised when calling a method that doesn’t exist on an object, possibly due to typos or calling methods on nil.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "NameError uninitialized constant, when does it occur?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: NameError",
    "answer": "Occurs when referencing a constant or class/module name that hasn’t been defined or autoloaded.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "SyntaxError unexpected end-of-input, why?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: SyntaxError",
    "answer": "Raised when code block is not properly closed or missing end keyword for modules, classes, or methods.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "LoadError cannot load such file, what to do?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: LoadError",
    "answer": "Occurs when a require path is incorrect or gem is missing. Check file path or install the missing gem.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "TypeError no implicit conversion from string to integer, why?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: TypeError",
    "answer": "Occurs when mixing incompatible types, such as adding a string to an integer without explicit conversion.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "ArgumentError wrong number of arguments, what causes it?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: ArgumentError",
    "answer": "Raised when calling a method with incorrect number of parameters than defined in its definition.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "ZeroDivisionError, how to fix?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: ZeroDivisionError",
    "answer": "Occurs when dividing by zero. Check divisor before division and handle or rescue the exception.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "NoMethodError for nil:NilClass, what is it?",
    "label": "ruby",
    "language": "en",
    "context": "Common Error: NilClass",
    "answer": "Occurs when calling a method on nil, indicating a variable is nil when an object was expected.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "SyntaxError unterminated string meets end of file",
    "label": "ruby",
    "language": "en",
    "context": "Specific Error: Unterminated string",
    "answer": "Raised when a string literal is not properly closed with a matching quote.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "ArgumentError comparison of String with Integer failed",
    "label": "ruby",
    "language": "en",
    "context": "Specific Error: ArgumentError",
    "answer": "Occurs when comparing incompatible types without converting, like '1' < 2.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "NameError undefined local variable or method",
    "label": "ruby",
    "language": "en",
    "context": "Specific Error: NameError",
    "answer": "Raised when referencing a variable or method name not defined in current scope.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "LoadError cannot load such file -- gem_name",
    "label": "ruby",
    "language": "en",
    "context": "Specific Error: LoadError",
    "answer": "Occurs when requiring a missing gem; fix by installing the gem and requiring correct name.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "TypeError can't convert Symbol into Integer",
    "label": "ruby",
    "language": "en",
    "context": "Specific Error: TypeError",
    "answer": "Raised when using a symbol where an integer index is expected, like array[:symbol].",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "SystemStackError stack level too deep",
    "label": "ruby",
    "language": "en",
    "context": "Specific Error: SystemStackError",
    "answer": "Occurs when recursion goes too deep, usually due to infinite recursion. Check recursive calls.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "What is Linux?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Linux overview",
    "answer": "Linux is an open-source, Unix-like operating system kernel first released by Linus Torvalds in 1991, used as the foundation for various distributions.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "What is the Linux kernel?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Kernel definition",
    "answer": "The Linux kernel is the core component of the system, managing hardware, system resources, and providing services to user-space applications.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "What is a Linux distribution?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Distribution",
    "answer": "A distribution is a packaged version of Linux that includes the kernel, system tools, applications, and a package management system.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "What is a shell?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Shell",
    "answer": "A shell is a command-line interpreter that provides a user interface for accessing operating system services, such as Bash.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is a package manager?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Package manager",
    "answer": "A package manager automates installation, upgrade, configuration, and removal of software packages, e.g., apt, yum, dnf, or pacman.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "What is a process in Linux?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Process",
    "answer": "A process is an instance of a running program with its own memory space, managed by the kernel and identifiable by a PID.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "What is a filesystem?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Filesystem",
    "answer": "A filesystem defines how data is stored and retrieved, such as ext4, XFS, or Btrfs, providing a directory structure and metadata.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "What is a daemon?",
    "label": "linux",
    "language": "en",
    "context": "Factoid: Daemon",
    "answer": "A daemon is a background service process that runs without user interaction, such as cron, sshd, or systemd-journald.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to list files in a directory?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: List files",
    "answer": "Use `ls` to list files; `ls -l` for detailed listing, `ls -a` to include hidden files, and combine flags as needed.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to change directory?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: Change directory",
    "answer": "Use `cd <directory>` to change the current working directory; `cd ..` moves up one level, `cd ~` to home.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to view file content?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: View file",
    "answer": "Use `cat` to output complete file, `less` or `more` for paginated view, and `head`/`tail` for beginning or end lines.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to search files by name?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: Find files",
    "answer": "Use `find /path -name \"pattern\"` to locate files matching name patterns, with options for case-insensitive or type filters.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to search text inside files?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: Grep text",
    "answer": "Use `grep \"text\" filename` to search for text; `grep -r` for recursive search, and `-i` for case-insensitive matches.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to check disk usage?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: Disk usage",
    "answer": "Use `df -h` to display filesystem disk space usage in human-readable format; `du -sh <dir>` for directory size.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to check memory usage?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: Memory usage",
    "answer": "Use `free -h` to show memory and swap usage in human-readable form, or `vmstat` for more detailed stats.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to check running processes?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: Processes",
    "answer": "Use `ps aux` for a snapshot of processes; `top` or `htop` for dynamic, real-time process monitoring.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to show system information?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: System info",
    "answer": "Use `uname -a` for kernel and system info; `lsb_release -a` for distribution details; `hostnamectl` in systemd systems.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to monitor real-time system performance?",
    "label": "linux",
    "language": "en",
    "context": "Descriptive: Monitoring",
    "answer": "Use tools like `top`, `htop`, `vmstat`, `iostat`, or `dstat` to monitor CPU, memory, I/O, and network usage in real time.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare ext4 vs XFS filesystems.",
    "label": "linux",
    "language": "en",
    "context": "Comparison: Filesystems",
    "answer": "ext4 is a general-purpose, stable FS; XFS offers high performance for large files and parallel I/O but has slower metadata operations.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "Compare apt vs yum package managers.",
    "label": "linux",
    "language": "en",
    "context": "Comparison: Package managers",
    "answer": "apt (Debian/Ubuntu) resolves dependencies automatically and uses .deb; yum/dnf (Fedora/RHEL) uses .rpm and offers plugin extensibility.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "Compare hard link vs soft link.",
    "label": "linux",
    "language": "en",
    "context": "Comparison: Links",
    "answer": "Hard links reference the same inode and cannot cross filesystems; soft (symbolic) links are separate files pointing to paths.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Compare cron vs systemd timers.",
    "label": "linux",
    "language": "en",
    "context": "Comparison: Scheduling",
    "answer": "cron uses crontab syntax for fixed schedules; systemd timers integrate with unit files, offering calendar events and persistent timers.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "Compare root vs sudo.",
    "label": "linux",
    "language": "en",
    "context": "Comparison: Privileges",
    "answer": "root is the superuser account; sudo grants temporary elevated privileges to specified users with logging and security controls.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare SysV init vs systemd.",
    "label": "linux",
    "language": "en",
    "context": "Comparison: Init systems",
    "answer": "SysV init uses sequential scripts; systemd uses parallel service startup with dependencies, faster boot, and unified management tools.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to create a file?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Create file",
    "answer": "Use `touch filename` to create an empty file or `> filename` to truncate/create a file; use `cat > filename` to add content.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to change file permissions?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Permissions",
    "answer": "Use `chmod 755 filename` to set rwxr-xr-x; use symbolic modes like `chmod u=rw,go=r filename`.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to change file ownership?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Ownership",
    "answer": "Use `chown user:group filename` to change owner and group; use `chown -R` for directories recursively.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to compress files?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Compression",
    "answer": "Use `gzip file` to compress to .gz; `bzip2 file` for .bz2; `xz file` for .xz; use tar with flags for archives.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to extract archives?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Extraction",
    "answer": "Use `tar -xzf archive.tar.gz`, `tar -xjf archive.tar.bz2`, or `tar -xJf archive.tar.xz`; use flags matching compression.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to mount a drive?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Mount drive",
    "answer": "Use `mount /dev/sdXn /mnt/point` after creating mount point; add to /etc/fstab for persistent mounts.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to set environment variables?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Environment variables",
    "answer": "Use `export VAR=value` in shell, add to ~/.bashrc or /etc/environment for persistence.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to schedule tasks?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Scheduling tasks",
    "answer": "Use `crontab -e` and add schedule lines, or systemd timers by creating .timer and .service unit files.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to configure network interface?",
    "label": "linux",
    "language": "en",
    "context": "How-to: Network configuration",
    "answer": "Use `ip addr add 192.168.1.10/24 dev eth0` and `ip link set eth0 up`, or configure in /etc/network/interfaces or netplan.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to set up SSH access?",
    "label": "linux",
    "language": "en",
    "context": "How-to: SSH setup",
    "answer": "Use `ssh-keygen` then `ssh-copy-id user@host` to install public key, then `ssh user@host` to connect.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Permission denied error, how to fix?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: Permission denied",
    "answer": "Occurs when user lacks permissions; use `chmod`, `chown`, or run with sudo.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "command not found error, reason?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: Command not found",
    "answer": "Occurs when command not in PATH; install package or provide full path to executable.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "no such file or directory, why?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: No such file",
    "answer": "Occurs when file or directory does not exist; check path or correct spelling.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "invalid argument error, meaning?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: Invalid argument",
    "answer": "Occurs when argument to command is invalid; check man pages for correct usage.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "cannot allocate memory, fix?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: Memory allocation",
    "answer": "Occurs when system out of memory; close applications, add swap, or optimize programs.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "disk read error, cause?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: Disk read",
    "answer": "Occurs due to hardware or driver issues; check dmesg logs and SMART status.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "segmentation fault, cause?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: Segfault",
    "answer": "Occurs when program accesses invalid memory; debug with gdb to find offending code.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "filesystem full, what to do?",
    "label": "linux",
    "language": "en",
    "context": "Common Error: Full filesystem",
    "answer": "Occurs when filesystem is full; delete unnecessary files or increase partition size.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: Could not resolve host: hostname",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: DNS resolution",
    "answer": "Occurs when DNS lookup fails; check /etc/resolv.conf, network connectivity, and hostname spelling.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Exec format error, cause?",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: Exec format",
    "answer": "Occurs when binary is for wrong architecture or lacks execute permissions; check `file` output and set +x.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "No space left on device, meaning?",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: No space",
    "answer": "Occurs when no free inodes or blocks; delete files or run `umount` and resize filesystem.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Connection refused, how to fix?",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: Connection refused",
    "answer": "Occurs when remote port closed; ensure service is listening and firewall allows connection.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Kernel panic, why?",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: Kernel panic",
    "answer": "Indicative of critical system error in kernel; check logs and hardware compatibility.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Bus error, cause?",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: Bus error",
    "answer": "Occurs when accessing misaligned memory; bug in program or hardware issue.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Input/output error, reason?",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: I/O error",
    "answer": "Occurs during disk I/O failures; check cables, disk health, and dmesg for errors.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Dependency failed, explanation?",
    "label": "linux",
    "language": "en",
    "context": "Specific Error: Dependency failed",
    "answer": "Occurs when a systemd service fails requirement; check `systemctl status` and resolve missing services.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "AJAX (Asynchronous JavaScript and XML) is a technique for creating asynchronous web applications that can send and retrieve data from a server without reloading the page.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "What does asynchronous mean in AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: Asynchronous",
    "answer": "Asynchronous means that the web page can continue processing and interacting with the user while waiting for the server response, without blocking.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is XMLHttpRequest?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: XHR",
    "answer": "XMLHttpRequest is a JavaScript object that provides methods to send HTTP or HTTPS requests to a web server and receive responses asynchronously.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "What data formats can AJAX handle?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: Data formats",
    "answer": "AJAX can handle various data formats including XML, JSON, HTML, and plain text, depending on how the client and server communicate.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Is AJAX a programming language?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: AJAX type",
    "answer": "No, AJAX is not a language; it is a set of web development techniques using JavaScript, HTML, and CSS to build interactive applications.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Who developed AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: Origin",
    "answer": "The term AJAX was coined by Jesse James Garrett in 2005, building on earlier uses of asynchronous requests in web applications.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "What is the readyState property?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: readyState",
    "answer": "readyState is a property of XMLHttpRequest indicating the state of the request, ranging from 0 (unsent) to 4 (done).",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "What is the status property?",
    "label": "ajax",
    "language": "en",
    "context": "Factoid: status",
    "answer": "status is a property of XMLHttpRequest that returns the HTTP status code of the response, such as 200 for success or 404 for not found.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to create an AJAX GET request in JavaScript?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: GET request",
    "answer": "Use `const xhr = new XMLHttpRequest(); xhr.open('GET', url, true); xhr.onreadystatechange = function() { if(xhr.readyState===4 && xhr.status===200){ /* handle response */ } }; xhr.send();`.",
    "start_char": 0,
    "end_char": 189
  },
  {
    "question": "How to create an AJAX POST request?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: POST request",
    "answer": "Use `xhr.open('POST', url, true); xhr.setRequestHeader('Content-Type','application/json'); xhr.send(JSON.stringify(data));` and handle the response in onreadystatechange.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "How to handle JSON response?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: JSON handling",
    "answer": "In the callback, parse JSON using `const obj = JSON.parse(xhr.responseText);` to convert the JSON string into a JavaScript object.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How to abort an AJAX request?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: Abort",
    "answer": "Call `xhr.abort()` on the XMLHttpRequest instance to cancel the request if it's still in progress.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to set request headers?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: Request headers",
    "answer": "Use `xhr.setRequestHeader(headerName, headerValue)` after `open()` and before `send()` to add custom headers.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to send form data with AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: Form data",
    "answer": "Use `const formData = new FormData(formElement); xhr.send(formData);` without setting content-type, as the browser handles boundaries.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to track upload progress?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: Progress event",
    "answer": "Use `xhr.upload.onprogress = function(event) { const percent = (event.loaded/event.total)*100; };` to monitor upload progress.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to handle CORS with AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: CORS",
    "answer": "Ensure the server sets `Access-Control-Allow-Origin` header to your domain or `*`, and include credentials if needed with `xhr.withCredentials=true`.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "How to send synchronous AJAX request?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: Synchronous",
    "answer": "Pass `false` as the third argument to `open()`, e.g. `xhr.open('GET', url, false);`, though this is discouraged due to UI blocking.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to handle errors in AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "Descriptive: Error handling",
    "answer": "Check `xhr.status` in the callback and use `xhr.onerror = function() { /* handle network error */ };` for network-level errors.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare AJAX vs Fetch API.",
    "label": "ajax",
    "language": "en",
    "context": "Comparison: AJAX vs Fetch",
    "answer": "AJAX uses XMLHttpRequest with callbacks; Fetch API uses Promises for cleaner syntax and better chaining with `fetch()`.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare GET vs POST in AJAX.",
    "label": "ajax",
    "language": "en",
    "context": "Comparison: GET vs POST",
    "answer": "GET appends data to URL and is cached; POST sends data in body, not cached and supports larger payloads.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare synchronous vs asynchronous AJAX.",
    "label": "ajax",
    "language": "en",
    "context": "Comparison: Sync vs Async",
    "answer": "Synchronous blocks UI until completion; asynchronous allows other operations but requires callbacks/promises.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare XMLHttpRequest vs jQuery AJAX.",
    "label": "ajax",
    "language": "en",
    "context": "Comparison: Native vs jQuery",
    "answer": "XMLHttpRequest requires manual setup; jQuery AJAX simplifies calls with `$.ajax()` and handles JSON parsing automatically.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Compare AJAX polling vs long polling.",
    "label": "ajax",
    "language": "en",
    "context": "Comparison: Polling methods",
    "answer": "Polling sends requests at intervals; long polling holds connection open until server responds, reducing request overhead.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare AJAX vs WebSocket.",
    "label": "ajax",
    "language": "en",
    "context": "Comparison: AJAX vs WebSocket",
    "answer": "AJAX is request-response; WebSocket provides full-duplex, persistent connections for real-time data.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to use fetch instead of AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Use fetch",
    "answer": "Call `fetch(url).then(res=>res.json()).then(data=>{/*handle*/}).catch(err=>{/*error*/});` for a modern AJAX alternative.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to send custom headers with Fetch?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Fetch headers",
    "answer": "Use `fetch(url,{method:'GET',headers:{'X-Custom':'value'}})` to include custom headers.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to timeout an AJAX request?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Timeout",
    "answer": "Set `xhr.timeout = ms; xhr.ontimeout = function(){/*handle*/};` to abort if response takes longer than ms.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to retry failed AJAX requests?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Retry",
    "answer": "Wrap request in a function and call recursively on error or status failure, with a limit to retry count.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to upload files via AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: File upload",
    "answer": "Use FormData to append file input: `formData.append('file', fileInput.files[0]); xhr.send(formData);`.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to abort Fetch request?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Abort fetch",
    "answer": "Create an `AbortController`, pass its `signal` to `fetch`, and call `controller.abort()` to cancel.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to stream responses with Fetch?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Streaming",
    "answer": "Use `fetch`, then `response.body.getReader()` to read chunks via `reader.read()` for streaming data.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to handle JSONP with AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: JSONP",
    "answer": "Add a `<script>` tag with `src` pointing to the JSONP endpoint including a callback parameter to bypass CORS.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to track download progress?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Progress event",
    "answer": "Use `xhr.onprogress = function(event){ const percent=(event.loaded/event.total)*100; };` for download progress.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to send XML with AJAX?",
    "label": "ajax",
    "language": "en",
    "context": "How-to: Send XML",
    "answer": "Set `xhr.setRequestHeader('Content-Type','application/xml'); xhr.send(xmlString);` to send XML payloads.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "AJAX request returns 404, why?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: 404",
    "answer": "The URL is incorrect or the resource doesn't exist on the server, resulting in a Not Found response.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "AJAX request blocked by CORS, fix?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: CORS",
    "answer": "Enable CORS on the server by setting `Access-Control-Allow-Origin` to permit the requesting domain.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "AJAX returns blank response, why?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: Blank response",
    "answer": "The server returned an empty body or the callback didn't handle responseText properly.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "AJAX callback not firing, why?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: Callback",
    "answer": "readyState or status checks may be incorrect; ensure you check for `readyState===4` and `status===200`.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Unexpected token < in JSON, cause?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: JSON parse",
    "answer": "The response is HTML (often an error page) instead of valid JSON, causing JSON.parse to fail.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Network error in Fetch, what to do?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: Network error",
    "answer": "Check your internet connection, server availability, and catch errors in `.catch()` for fetch.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "XHR timeout not working, why?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: Timeout",
    "answer": "Timeout applies only to the response phase; ensure `timeout` and `ontimeout` are set before `send()`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Fetch hangs forever, how to debug?",
    "label": "ajax",
    "language": "en",
    "context": "Common Error: Hang",
    "answer": "Use AbortController with timeout or inspect network tab for missing response headers or server stalling.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "CORS preflight failed, what is it?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: CORS preflight",
    "answer": "Preflight OPTIONS request didn't receive required CORS headers; server must respond with `Access-Control-Allow-Methods` and headers.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "401 Unauthorized in AJAX, why?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: 401",
    "answer": "Authentication is required or credentials are missing/invalid; include valid tokens or credentials.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "502 Bad Gateway on AJAX, cause?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: 502",
    "answer": "Server acting as a gateway received an invalid response from upstream; check server configuration and upstream health.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "503 Service Unavailable, what does it mean?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: 503",
    "answer": "Server is temporarily unable to handle requests, often due to maintenance or overload; retry after some time.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Fetch TypeError: Failed to fetch, why?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: Fetch failed",
    "answer": "Network failure or CORS error prevented fetch from completing; inspect console and network tab.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "XHR status 0 in file://, what is it?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: status 0",
    "answer": "Running AJAX from local file protocol returns status 0; serve pages via HTTP or use live server.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Mixed content error, what is it?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: Mixed content",
    "answer": "Secure page (HTTPS) is making AJAX requests to insecure (HTTP) endpoints; browser blocks mixed content.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "SyntaxError invalid URL, why?",
    "label": "ajax",
    "language": "en",
    "context": "Specific Error: Invalid URL",
    "answer": "The URL passed to fetch or XHR is malformed or contains illegal characters; encode components properly.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is VBA?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "VBA (Visual Basic for Applications) is an event-driven programming language from Microsoft that is built into Office applications for automation and custom functionality.",
    "start_char": 0,
    "end_char": 170
  },
  {
    "question": "What is Excel VBA?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: Excel integration",
    "answer": "Excel VBA is the implementation of VBA in Excel, allowing you to automate tasks, create custom functions, and manipulate worksheets programmatically.",
    "start_char": 0,
    "end_char": 149
  },
  {
    "question": "What is the VBA IDE?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: IDE",
    "answer": "The VBA IDE (Integrated Development Environment) is the editor where you write, edit, and debug VBA code, accessible via Developer > Visual Basic.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "What is a macro?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: Macro",
    "answer": "A macro is a recorded or written sequence of VBA instructions that automates repetitive tasks in Office applications.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is a procedure vs function?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: Procedures and functions",
    "answer": "In VBA, a Sub (procedure) performs actions and does not return a value, while a Function returns a value and can be used in expressions.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "What is an object in VBA?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: Object model",
    "answer": "An object is an element of the host application (e.g., Workbook, Worksheet, Range) exposing properties and methods for automation.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "What is a module?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: Module",
    "answer": "A module is a container for storing VBA code, either standard modules for general code or class modules for custom objects.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is an event in VBA?",
    "label": "vba",
    "language": "en",
    "context": "Factoid: Event",
    "answer": "An event is an action triggered by the user or application (e.g., Worksheet_Change), which can be handled by VBA event procedures.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How to record a macro?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Macro recorder",
    "answer": "Go to Developer > Record Macro, perform the actions you want to automate, then stop recording to generate VBA code.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to open the VBA editor?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Open IDE",
    "answer": "Press Alt+F11 or go to Developer > Visual Basic to open the VBA editor.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to run a macro?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Run macro",
    "answer": "Use Developer > Macros, select the macro name, and click Run, or assign it to a button or shortcut.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to declare variables?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Variable declaration",
    "answer": "Use the Dim statement: `Dim varName As DataType` to declare variables with explicit types.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to create a function?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Function creation",
    "answer": "Write `Function FuncName(args) As ReturnType` in a module, add code, and use `End Function` to define a custom function.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to create a sub procedure?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Sub creation",
    "answer": "Write `Sub ProcName()` in a module, add code, and end with `End Sub` to define a procedure.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to reference another workbook?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Workbook reference",
    "answer": "Use `Workbooks(\"Book2.xlsx\").Worksheets(\"Sheet1\").Range(\"A1\")` to access cells in another open workbook.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to use loops in VBA?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Loops",
    "answer": "Use `For...Next`, `For Each...Next`, `Do While...Loop`, or `Do Until...Loop` structures to iterate.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to handle errors in VBA?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Error handling",
    "answer": "Use `On Error GoTo Label` or `On Error Resume Next` and handle errors in labeled sections.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to debug VBA code?",
    "label": "vba",
    "language": "en",
    "context": "Descriptive: Debugging",
    "answer": "Set breakpoints, use F8 to step through code, watch variables in the Locals window, and use the Immediate window.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare Sub vs Function in VBA.",
    "label": "vba",
    "language": "en",
    "context": "Comparison: Sub vs Function",
    "answer": "Subs do not return values and are called by name; Functions return values and can be used in Excel formulas.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare ByVal vs ByRef.",
    "label": "vba",
    "language": "en",
    "context": "Comparison: Parameter passing",
    "answer": "ByVal passes a copy of the argument; ByRef passes a reference allowing the procedure to modify the original variable.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare Worksheets vs Workbooks.",
    "label": "vba",
    "language": "en",
    "context": "Comparison: Objects",
    "answer": "Workbook is the entire file (Excel file); Worksheet is a single sheet within a workbook containing cells.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare Range vs Cells.",
    "label": "vba",
    "language": "en",
    "context": "Comparison: Range selection",
    "answer": "Range(\"A1:B2\") specifies a block; Cells(row, column) refers to a single cell by numeric indexes.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare Application.Run vs Call.",
    "label": "vba",
    "language": "en",
    "context": "Comparison: Calling procedures",
    "answer": "Call runs a macro by name string; Call keyword explicitly invokes procedures, but you can also call subs/functions directly.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare Do While vs For loop.",
    "label": "vba",
    "language": "en",
    "context": "Comparison: Loop structures",
    "answer": "Do While loops until condition is false; For loops run a set number of iterations defined by start and end values.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to read cell values?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Read cell",
    "answer": "Use `value = Range(\"A1\").Value` or `Sheets(\"Sheet1\").Cells(1,1).Value` to get cell values.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to write to a cell?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Write cell",
    "answer": "Use `Range(\"A1\").Value = \"Text\"` or `Cells(1,1).Value = 123` to set cell values.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to add a new worksheet?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Add sheet",
    "answer": "Use `Worksheets.Add After:=Sheets(Sheets.Count)` to add a new worksheet at the end.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to delete a worksheet?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Delete sheet",
    "answer": "Use `Application.DisplayAlerts=False` then `Sheets(\"Sheet1\").Delete` and reset alerts to avoid confirmation prompt.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to sort data?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Sort",
    "answer": "Use `Range(\"A1:B10\").Sort Key1:=Range(\"A1\"), Order1:=xlAscending, Header:=xlYes` to sort ranges.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to autofit columns?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Autofit",
    "answer": "Use `Columns(\"A:B\").AutoFit` to automatically adjust column widths to fit content.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to protect a sheet?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Protect sheet",
    "answer": "Use `ActiveSheet.Protect Password:=\"pass\", UserInterfaceOnly:=True` to protect a sheet with a password.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to create a message box?",
    "label": "vba",
    "language": "en",
    "context": "How-to: MsgBox",
    "answer": "Use `MsgBox \"Hello\" , vbOKCancel + vbInformation, \"Title\"` to display a message box with buttons.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to prompt for input?",
    "label": "vba",
    "language": "en",
    "context": "How-to: InputBox",
    "answer": "Use `response = InputBox(\"Enter value:\", \"Title\", \"Default\")` to prompt the user for input.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to connect to an Access database?",
    "label": "vba",
    "language": "en",
    "context": "How-to: Database connection",
    "answer": "Use ADO: `Set cn=CreateObject(\"ADODB.Connection\"): cn.Open \"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=path.accdb;\"`.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compile error: Sub or Function not defined",
    "label": "vba",
    "language": "en",
    "context": "Common Error: Not defined",
    "answer": "Occurs when calling a procedure that doesn\u2019t exist or isn\u2019t in scope; check procedure names and module locations.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Run-time error '1004': Application-defined or object-defined error",
    "label": "vba",
    "language": "en",
    "context": "Common Error: 1004",
    "answer": "Occurs when an object method or property is invalid, often due to wrong range references or protected sheets.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Run-time error '13': Type mismatch",
    "label": "vba",
    "language": "en",
    "context": "Common Error: 13",
    "answer": "Occurs when assigning a value to a variable of incompatible type; ensure correct data types or convert values.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Run-time error '424': Object required",
    "label": "vba",
    "language": "en",
    "context": "Common Error: 424",
    "answer": "Occurs when trying to use an object variable that isn\u2019t set; use `Set obj=...` before accessing properties/methods.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Run-time error '91': Object variable or With block variable not set",
    "label": "vba",
    "language": "en",
    "context": "Common Error: 91",
    "answer": "Occurs when accessing an object that hasn\u2019t been instantiated; set the object or check With block usage.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Run-time error '438': Object doesn\u2019t support this property or method",
    "label": "vba",
    "language": "en",
    "context": "Common Error: 438",
    "answer": "Occurs when using an invalid property or method for an object; check object type and available members.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Run-time error '9': Subscript out of range",
    "label": "vba",
    "language": "en",
    "context": "Common Error: 9",
    "answer": "Occurs when referencing collection elements (like Workbooks or Worksheets) that don\u2019t exist; check indexes or names.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Syntax error in declaration",
    "label": "vba",
    "language": "en",
    "context": "Common Error: Syntax",
    "answer": "Occurs when code has invalid syntax, such as missing keywords or incorrect statement structure; review code syntax.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Run-time error '3001': Argument not optional",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 3001",
    "answer": "Occurs when a required argument is missing in a method or function call; provide all required parameters.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Run-time error '3021': No current record",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 3021",
    "answer": "Occurs when attempting to access records in a recordset that is empty or past the end; check recordset state.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Run-time error '3704': Operation is not allowed when the object is closed",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 3704",
    "answer": "Occurs when calling methods on a closed Recordset or Connection object; ensure it is open before use.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error '40036': Object doesn't support this property or method",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 40036",
    "answer": "Occurs in Office add-ins or newer APIs when a method/property isn\u2019t available; check API version compatibility.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Error '53': File not found",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 53",
    "answer": "Occurs when using `Kill`, `Open`, or `FileSystemObject` on a file path that doesn\u2019t exist; verify file path.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error '62': Input past end of file",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 62",
    "answer": "Occurs when reading past the end of a file in binary or sequential mode; check file pointer or EOF condition.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error '91': Object variable not set",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 91",
    "answer": "Occurs when an object variable is used without being assigned; set object references with Set statement.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error '4004': Unspecified error",
    "label": "vba",
    "language": "en",
    "context": "Specific Error: 4004",
    "answer": "Occurs when an unspecified error happens in Outlook or Office applications; catch error and inspect context.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is XML?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: XML definition",
    "answer": "XML (eXtensible Markup Language) is a markup language that defines a set of rules for encoding documents in a structured, both human- and machine-readable format.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "What is an XML element?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: Element",
    "answer": "An XML element is a basic building block consisting of a start tag, content, and an end tag, e.g., `<tag>content</tag>`.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is an XML attribute?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: Attribute",
    "answer": "An XML attribute provides additional information about an element, defined within the start tag, e.g., `<tag attr=\"value\">`.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "What is a processing instruction?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: Processing instruction",
    "answer": "A processing instruction, like `<?xml-stylesheet type=\"text/xsl\" href=\"style.xsl\"?>`, conveys information to applications processing the XML.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "What is an XML namespace?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: Namespace",
    "answer": "An XML namespace is a mechanism to avoid element name conflicts by qualifying names with a URI, declared with `xmlns` attributes.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "What is a DTD?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: DTD",
    "answer": "A DTD (Document Type Definition) defines the legal structure, elements, and attributes of an XML document in a formal grammar.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is XML Schema?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: XML Schema",
    "answer": "An XML Schema (XSD) is an XML-based language used to define the structure, content, and data types of elements and attributes.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is CDATA?",
    "label": "xml",
    "language": "en",
    "context": "Factoid: CDATA section",
    "answer": "CDATA (Character Data) sections `<![CDATA[ ... ]]>` allow inclusion of text that should not be parsed by the XML parser.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to parse XML with a DOM parser?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: DOM parsing",
    "answer": "Use a DOM parser (e.g., Java's DocumentBuilder) to load the entire XML into a tree structure for in-memory traversal and modification.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to parse XML with a SAX parser?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: SAX parsing",
    "answer": "Use a SAX parser (e.g., Python's xml.sax) to process XML as a stream of events (startElement, characters, endElement) without loading entire document.",
    "start_char": 0,
    "end_char": 150
  },
  {
    "question": "How to validate XML against an XSD?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: XSD validation",
    "answer": "Use a schema-aware parser or validator (e.g., xmllint or javax.xml.validation) to check the XML document against its XSD definition.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to query XML with XPath?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: XPath",
    "answer": "Use an XPath engine (e.g., lxml in Python) and expressions like `/root/element[@attr='value']` to select nodes in the XML tree.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to transform XML with XSLT?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: XSLT transformation",
    "answer": "Use an XSLT processor (e.g., xsltproc or Xalan) with a stylesheet to convert XML into HTML, text, or another XML format.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to create an XML document programmatically?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: XML creation",
    "answer": "Use DOM or builder APIs (e.g., ElementTree in Python) to construct elements and attributes, then serialize to a file.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to handle XML namespaces in code?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: Namespace handling",
    "answer": "Register namespace prefixes in your parser (e.g., `register_namespace` in Python) and include them in element lookups.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to pretty print XML?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: Pretty print",
    "answer": "Use serialization options (e.g., `indent` in xml.dom.minidom) or external tools (e.g., `xmllint --format`) to add line breaks and indentation.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "How to read XML attributes?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: Read attributes",
    "answer": "Access the attributes via element.getAttribute('attr') in DOM APIs or element.attrib in ElementTree.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to use CDATA sections?",
    "label": "xml",
    "language": "en",
    "context": "Descriptive: CDATA usage",
    "answer": "Wrap unparsed text inside `<![CDATA[ ... ]]>` so characters like `<` and `&` are preserved literally.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare XML vs JSON.",
    "label": "xml",
    "language": "en",
    "context": "Comparison: XML vs JSON",
    "answer": "XML uses tagged elements and attributes, supports schemas and namespaces; JSON is lighter, uses key-value pairs, but lacks built-in validation.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "Compare XML vs HTML.",
    "label": "xml",
    "language": "en",
    "context": "Comparison: XML vs HTML",
    "answer": "XML is strict and extensible with user-defined tags; HTML has predefined semantics and is forgiving with syntax.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare DTD vs XSD.",
    "label": "xml",
    "language": "en",
    "context": "Comparison: DTD vs XSD",
    "answer": "DTD is older, less expressive, non-XML syntax; XSD is XML-based, supports data types and namespaces.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare SAX vs DOM parsing.",
    "label": "xml",
    "language": "en",
    "context": "Comparison: Parsing models",
    "answer": "SAX is event-driven and memory-efficient; DOM loads the entire document into memory for random access.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare element vs attribute.",
    "label": "xml",
    "language": "en",
    "context": "Comparison: Element vs Attribute",
    "answer": "Elements can have nested content and children; attributes are name-value pairs without child elements.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare namespace vs prefix.",
    "label": "xml",
    "language": "en",
    "context": "Comparison: Namespace vs Prefix",
    "answer": "Namespace is the URI identifier; prefix is shorthand bound to the namespace URI for use in element/attribute names.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to read XML from a URL?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Read URL",
    "answer": "Fetch the XML via HTTP (e.g., requests.get in Python) and parse the response text with your XML parser.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to write XML to file?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Write file",
    "answer": "Serialize the XML document or element tree to a file using `tree.write('file.xml', encoding='utf-8', xml_declaration=True)`.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to validate XML with Relax NG?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Relax NG validation",
    "answer": "Use a Relax NG validator (e.g., `jing`) with a `.rng` schema file to validate XML.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to split large XML files?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Split files",
    "answer": "Use streaming parsers (SAX/StAX) to process events and write out chunks when specific elements end.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to merge XML documents?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Merge XML",
    "answer": "Parse each document, import nodes from one DOM into another, and append to the target root before serialization.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to remove nodes from XML?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Remove nodes",
    "answer": "Locate the node (e.g., via XPath) and call `parent.removeChild(node)` in DOM or `element.remove(node)` in ElementTree.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to add comment in XML?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Add comment",
    "answer": "Use `createComment('text')` in DOM or `Comment('text')` in ElementTree and append to the desired element.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to encode special characters?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Escape chars",
    "answer": "Replace characters like `<` with `&lt;`, `>` with `&gt;`, and `&` with `&amp;` in text nodes.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to use XML catalogs?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Catalogs",
    "answer": "Define a catalog file mapping public/system IDs to local resources and configure your parser to use it.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to generate XML schema?",
    "label": "xml",
    "language": "en",
    "context": "How-to: Generate schema",
    "answer": "Use tools like `xsd.exe` (Microsoft) or `Trang` to infer an XSD from a sample XML document.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "XML well-formedness error, what causes it?",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Not well-formed",
    "answer": "Occurs when the XML syntax is invalid, such as mismatched tags or missing quotes around attribute values.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Namespace URI not bound, how to fix?",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Namespace",
    "answer": "Ensure the `xmlns` declaration is present on the element or ancestor defining the prefix.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Invalid character error, why?",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Invalid char",
    "answer": "Occurs when control characters or characters not allowed in XML appear outside a CDATA section.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Unexpected end of file, cause?",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Unexpected EOF",
    "answer": "Occurs when the parser reaches end of input before closing all opened tags or declarations.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Entity not defined error, what is it?",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Undefined entity",
    "answer": "Occurs when a reference like `&name;` is used without a corresponding entity declaration.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Validation error: element not allowed here",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Validation",
    "answer": "Occurs when the element order or nesting violates the DTD/XSD content model.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Duplicate attribute error, why?",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Duplicate attribute",
    "answer": "Occurs when an element start tag contains two attributes with the same name.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Mixed content error, what triggers it?",
    "label": "xml",
    "language": "en",
    "context": "Common Error: Mixed content",
    "answer": "Occurs when character data appears in an element that is declared to contain only child elements.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "XMLSchema validation error: cvc-complex-type.2.4.a",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: XSD validation",
    "answer": "Occurs when an element's content does not match the expected complex type definition in the XSD.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "SAXParseException: Premature end of file",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: SAX exception",
    "answer": "Thrown by SAX parsers when the XML stream ends unexpectedly before the document is complete.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "DOMException: InvalidCharacterError",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: DOM exception",
    "answer": "Occurs when attempting to insert a node with invalid characters in its name.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "TransformerConfigurationException: Unknown error parsing stylesheet",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: XSLT error",
    "answer": "Thrown when the XSLT processor fails to parse or compile the provided stylesheet.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "XML External Entity (XXE) vulnerability",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: Security",
    "answer": "Occurs when untrusted XML includes external entities, potentially leading to file disclosure or SSRF.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Entity expansion (billion laughs) attack",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: Security",
    "answer": "Occurs when nested entity definitions expand exponentially, exhausting parser resources.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Unresolved entity reference error, what is it?",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: Entity error",
    "answer": "Occurs when the parser encounters an entity reference without a matching declaration in the DTD.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Unsupported encoding error, how to fix?",
    "label": "xml",
    "language": "en",
    "context": "Specific Error: Encoding",
    "answer": "Occurs when the XML declaration specifies an encoding the parser does not support; change or install support.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is Laravel?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: Framework overview",
    "answer": "Laravel is a PHP web framework with expressive, elegant syntax, providing features like routing, ORM, templating, and authentication.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "Who created Laravel?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: Creator",
    "answer": "Laravel was created by Taylor Otwell and first released in June 2011.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "What is Eloquent ORM?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: ORM",
    "answer": "Eloquent ORM is Laravel's active record implementation for working with your database using models, relationships, and fluent syntax.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "What is Blade?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: Templating engine",
    "answer": "Blade is Laravel's simple, yet powerful templating engine that allows you to use plain PHP code in your templates.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "What is a service provider?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: Service provider",
    "answer": "Service providers are the central place to configure and bootstrap services in a Laravel application.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is Artisan?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: CLI",
    "answer": "Artisan is Laravel's command-line interface that provides helpful commands for application development.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is middleware?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: HTTP middleware",
    "answer": "Middleware acts as a filter for HTTP requests entering your application, handling tasks like authentication and CORS.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is a fac\u0327ade?",
    "label": "laravel",
    "language": "en",
    "context": "Factoid: Facade",
    "answer": "Facades provide a static interface to classes in the service container, offering syntactic sugar for dependency resolution.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to create a new Laravel project?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Project setup",
    "answer": "Run `composer create-project --prefer-dist laravel/laravel project-name` to scaffold a new Laravel application.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to define routes?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Routing",
    "answer": "In `routes/web.php`, use `Route::get('/path', [Controller::class, 'method']);` or closures for defining routes.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to create a controller?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Controller creation",
    "answer": "Use `php artisan make:controller ControllerName` to generate a new controller file in `app/Http/Controllers`.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to work with migrations?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Migrations",
    "answer": "Define schema in migration files and run `php artisan migrate` to apply changes; use `php artisan migrate:rollback` to reverse.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to use factories?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Factories",
    "answer": "Define model factories in `database/factories` and use `Model::factory()->create()` for generating test data.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to handle requests data?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Request handling",
    "answer": "Inject `Illuminate\\Http\\Request` into controller methods and access input via `$request->input('key')` or `$request->get('key')`.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "How to use validation?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Validation",
    "answer": "Use `$request->validate(['field'=>'rule'])` in controllers or form request classes to validate incoming data.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to serve static assets?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Assets",
    "answer": "Place assets in the `public` directory and reference them via `asset('path/to/file')` helper.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to send email?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Email",
    "answer": "Configure mail settings in `.env`, create Mailable classes with `php artisan make:mail`, then call `Mail::to()->send(new Mailable)`.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to implement authentication?",
    "label": "laravel",
    "language": "en",
    "context": "Descriptive: Authentication",
    "answer": "Use Laravel Breeze or Jetstream packages to scaffold authentication, or use `Auth` facade and built-in traits in controllers.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Compare Laravel vs Symfony.",
    "label": "laravel",
    "language": "en",
    "context": "Comparison: Frameworks",
    "answer": "Laravel prioritizes developer experience with expressive syntax; Symfony offers more configuration and reusable components.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare Eloquent vs Query Builder.",
    "label": "laravel",
    "language": "en",
    "context": "Comparison: Database",
    "answer": "Eloquent is Active Record with models and relationships; Query Builder provides a fluent interface for SQL queries without models.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Compare GET vs POST routes.",
    "label": "laravel",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "GET retrieves data and is idempotent; POST submits data, can change state, and supports larger payloads.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare middleware vs service provider.",
    "label": "laravel",
    "language": "en",
    "context": "Comparison: Components",
    "answer": "Middleware filters HTTP requests; service providers bootstrap services and bind dependencies to the container.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare Blade vs Vue templates.",
    "label": "laravel",
    "language": "en",
    "context": "Comparison: Templating",
    "answer": "Blade renders server-side HTML; Vue templates render client-side with reactivity and component-based structure.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare REST vs API resources in Laravel.",
    "label": "laravel",
    "language": "en",
    "context": "Comparison: API",
    "answer": "REST controllers handle CRUD with methods; API resources transform models into JSON responses with customizable structure.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to paginate results?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Pagination",
    "answer": "Use `Model::paginate(15)` in controllers and call `$data->links()` in Blade to render pagination links.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to queue jobs?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Queues",
    "answer": "Create jobs with `php artisan make:job`, dispatch using `dispatch()`, and run `php artisan queue:work` to process.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to broadcast events?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Broadcasting",
    "answer": "Define events with `ShouldBroadcast`, configure broadcasting in `.env`, and listen via Laravel Echo on the client.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to use policies?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Authorization",
    "answer": "Generate policies with `php artisan make:policy`, register in AuthServiceProvider, and use `authorize()` in controllers.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to implement soft deletes?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Soft deletes",
    "answer": "Add `use SoftDeletes` trait to models and `deleted_at` column to migrations; use `Model::withTrashed()` to query deleted records.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "How to schedule tasks?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Task scheduling",
    "answer": "Define scheduled tasks in `app/Console/Kernel.php` using the `schedule` method and run `php artisan schedule:run` via cron.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to cache data?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Caching",
    "answer": "Use `Cache::put('key', $value, $minutes)` and `Cache::get('key')`; configure drivers in `config/cache.php`.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to log custom messages?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Logging",
    "answer": "Use `Log::info('message')`, `Log::error()`, etc.; configure channels in `config/logging.php`.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to use API tokens?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: API authentication",
    "answer": "Use Laravel Sanctum: install package, configure middleware, and issue tokens via `createToken()` on user models.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to test with PHPUnit?",
    "label": "laravel",
    "language": "en",
    "context": "How-to: Testing",
    "answer": "Write test classes in `tests/Feature` or `Unit` extending `TestCase`, and run `php artisan test`.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "SQLSTATE[HY000] General error, why?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: SQLSTATE",
    "answer": "Occurs due to database constraint violations or malformed queries; check SQL and migrations.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Class 'App\\Http\\Controllers\\X' not found, fix?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: Class not found",
    "answer": "Ensure correct namespace, run `composer dump-autoload`, and verify file/class name.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException, cause?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: 404",
    "answer": "Thrown when no matching route exists; check route definitions and request URL.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "TokenMismatchException in VerifyCsrfToken, solution?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: CSRF",
    "answer": "Occurs when CSRF token is missing or expired; include `@csrf` in forms and check session configuration.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Call to undefined method Illuminate\\Support\\Collection::X, why?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: Undefined method",
    "answer": "Using a method that doesn't exist on Collection; convert to Query Builder or use correct collection method.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Missing required parameter for [Route: X], cause?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: Route parameter",
    "answer": "Occurs when generating URLs without providing parameters; include parameters in `route()` call.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error during cache clear, permission denied?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: Cache permission",
    "answer": "Storage or bootstrap/cache directories need write permissions; set `chmod -R 775 storage bootstrap/cache`.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "File not found in Storage facade, why?",
    "label": "laravel",
    "language": "en",
    "context": "Common Error: Storage",
    "answer": "Incorrect disk configuration or path; check `config/filesystems.php` and ensure file exists.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error 1234: Undefined variable in view, cause?",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: Undefined variable",
    "answer": "A variable passed to a Blade view is missing; ensure you use `with()` or compact() to pass data.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: Route [X] not defined.",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: Route not defined",
    "answer": "Occurs when referencing a named route that doesn't exist; define the route or correct its name.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: Unsupported operand types: string + int",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: Operand types",
    "answer": "Trying to add string and integer; cast types explicitly or ensure matching types.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: Call to a member function X on null",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: Null object",
    "answer": "Accessing method on null variable; ensure object is instantiated or check for null before calling.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "PDOException: SQLSTATE[42000] Syntax error or access violation",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: SQL syntax",
    "answer": "Raw SQL query has syntax error; test query in database and correct syntax.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: Maximum function nesting level of '100' reached",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: Nesting level",
    "answer": "Deep recursion or cyclic relationships; increase Xdebug max_nesting_level or refactor code.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: Allowed memory size exhausted",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: Memory exhausted",
    "answer": "Script exceeds PHP memory_limit; increase limit in php.ini or optimize memory usage.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: Serialization of 'Closure' is not allowed",
    "label": "laravel",
    "language": "en",
    "context": "Specific Error: Serialization",
    "answer": "Closure objects cannot be serialized; avoid storing closures in cache or sessions.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "What is Spring Boot?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Spring Boot is a framework for building stand-alone, production-grade Spring applications with minimal configuration and embedded servers.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Who developed Spring Boot?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: Creator",
    "answer": "Spring Boot is a project by Pivotal Software (now VMware) under the larger Spring ecosystem.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is auto-configuration?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: Auto-configuration",
    "answer": "Auto-configuration automatically configures Spring application context based on classpath settings, beans, and properties.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What is Spring Initializr?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: Initializr",
    "answer": "Spring Initializr is an online/web tool and CLI for generating Spring Boot project scaffolds with selected dependencies.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is an embedded server?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: Embedded server",
    "answer": "An embedded server (e.g., Tomcat, Jetty) runs within the application, allowing it to run as a standalone Jar.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is a starter POM?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: Starter POM",
    "answer": "A starter POM is a convenient dependency descriptor that pulls in a curated list of dependencies for specific features.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "What is Spring Boot Actuator?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: Actuator",
    "answer": "Spring Boot Actuator provides production-ready endpoints for monitoring and managing application health, metrics, and info.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is Spring Boot CLI?",
    "label": "spring-boot",
    "language": "en",
    "context": "Factoid: CLI",
    "answer": "Spring Boot CLI is a command-line tool for developing and testing Spring Boot applications using Groovy scripts.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to create a Spring Boot project?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Project creation",
    "answer": "Use Spring Initializr (start.spring.io) or CLI: `spring init --dependencies=web my-app`, then import into your IDE.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to configure application properties?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Configuration",
    "answer": "Define key-value pairs in `application.properties` or `application.yml` under `src/main/resources`.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to run a Spring Boot application?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Run app",
    "answer": "Execute `mvn spring-boot:run`, `./gradlew bootRun`, or run the main class with `SpringApplication.run()`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to create a REST controller?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: REST controller",
    "answer": "Annotate a class with `@RestController` and methods with `@GetMapping`, `@PostMapping`, etc., returning domain objects.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to connect to a database?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Database connection",
    "answer": "Add JDBC or JPA dependency, configure `spring.datasource.url`, `username`, `password` in properties, and use Spring Data.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to use Spring Data JPA?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Spring Data",
    "answer": "Define an interface extending `JpaRepository<Entity, ID>`; Spring Boot auto-detects and implements CRUD methods.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to implement security?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Security",
    "answer": "Add `spring-boot-starter-security`, configure `WebSecurityConfigurerAdapter` or `SecurityFilterChain` beans for authentication.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to enable actuator endpoints?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Actuator endpoints",
    "answer": "Include `spring-boot-starter-actuator` and set `management.endpoints.web.exposure.include=*` in properties.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to create custom health indicators?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: Custom health",
    "answer": "Implement `HealthIndicator` interface, override `health()` method, and register as a bean for actuator health check.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to externalize configuration?",
    "label": "spring-boot",
    "language": "en",
    "context": "Descriptive: External config",
    "answer": "Use profiles (`application-{profile}.properties`), environment variables, or `@ConfigurationProperties` classes.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare Spring Boot vs Spring Framework.",
    "label": "spring-boot",
    "language": "en",
    "context": "Comparison: Spring Boot vs Spring",
    "answer": "Spring Boot simplifies setup and configuration with starters and auto-config; Spring Framework requires manual bean definitions.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Compare application.properties vs application.yml.",
    "label": "spring-boot",
    "language": "en",
    "context": "Comparison: Property formats",
    "answer": "Properties use key-value pairs; YAML supports hierarchical data and is more readable for complex configurations.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare embedded Tomcat vs external server.",
    "label": "spring-boot",
    "language": "en",
    "context": "Comparison: Servers",
    "answer": "Embedded Tomcat runs within the application Jar; external server requires deploying a WAR to a standalone servlet container.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare @Component vs @Bean.",
    "label": "spring-boot",
    "language": "en",
    "context": "Comparison: Bean registration",
    "answer": "@Component auto-detects classes via classpath scanning; @Bean defines beans explicitly in configuration methods.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare @Controller vs @RestController.",
    "label": "spring-boot",
    "language": "en",
    "context": "Comparison: Controllers",
    "answer": "@Controller returns views and requires @ResponseBody for JSON; @RestController combines @Controller and @ResponseBody.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare auto-configuration vs manual configuration.",
    "label": "spring-boot",
    "language": "en",
    "context": "Comparison: Configuration styles",
    "answer": "Auto-configuration uses classpath detection to set defaults; manual configuration uses explicit bean definitions and settings.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to package as an executable Jar?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: Package Jar",
    "answer": "Use `mvn package` or `./gradlew bootJar`; the repackager creates an executable Jar with embedded server.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to enable developer tools?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: DevTools",
    "answer": "Add `spring-boot-devtools` dependency for hot reload, automatic restart, and live reload support.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to profile application performance?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: Performance",
    "answer": "Use Actuator metrics endpoints, integrate Micrometer, and configure monitoring systems like Prometheus/Grafana.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to schedule tasks?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: Scheduled tasks",
    "answer": "Enable `@EnableScheduling` and annotate methods with `@Scheduled(fixedRate = \u2026)` or cron expressions.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to create command-line runners?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: CommandLineRunner",
    "answer": "Implement `CommandLineRunner` or `ApplicationRunner` in a bean to execute code after application startup.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to customize banner?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: Banner customization",
    "answer": "Place `banner.txt` in classpath or set `spring.main.banner-mode=off` to disable. Use ASCII art for custom banners.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to enable HTTPS?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: HTTPS",
    "answer": "Configure `server.ssl.key-store`, `key-password`, and `key-store-type` in properties and use a valid keystore.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use profiles?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: Profiles",
    "answer": "Activate profiles via `spring.profiles.active` property, system env, or `--spring.profiles.active` CLI argument.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to implement caching?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: Caching",
    "answer": "Enable `@EnableCaching`, annotate methods with `@Cacheable`, and configure cache manager (e.g., ConcurrentMapCache).",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to secure endpoints?",
    "label": "spring-boot",
    "language": "en",
    "context": "How-to: Security",
    "answer": "Use Spring Security starter, configure HTTP security via `WebSecurityConfigurerAdapter` or `SecurityFilterChain`.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Error creating bean with name 'X': unsatisfied dependency",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: UnsatisfiedDependency",
    "answer": "Occurs when a required bean is not found in the context; check component scanning and bean definitions.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Whitelabel Error Page displayed, why?",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: Whitelabel",
    "answer": "Default error page shown when no custom error view is provided and server.error.whitelabel.enabled is true.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "404 Not Found for REST endpoint, fix?",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: 404",
    "answer": "Check `@RequestMapping` path, HTTP method, and ensure controller is in a scanned package.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Failed to bind properties under 'spring.datasource', why?",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: Binding properties",
    "answer": "Configuration properties don't match fields on DataSourceProperties; check spelling and types.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Cannot resolve placeholder 'X', what is it?",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: Placeholder",
    "answer": "Property not found in environment or properties files; define it or remove references.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Port 8080 already in use, how to change?",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: Port in use",
    "answer": "Set `server.port` property to a free port or terminate the process using the port.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: DispatcherServlet with name 'dispatcherServlet' threw exception",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: DispatcherServlet",
    "answer": "General MVC startup error; check controller mappings, view resolvers, and request handling methods.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Actuator endpoints not exposed, why?",
    "label": "spring-boot",
    "language": "en",
    "context": "Common Error: Actuator exposure",
    "answer": "Endpoints are not exposed by default; configure `management.endpoints.web.exposure.include=*`.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "java.lang.ClassNotFoundException: org.springframework.boot.SpringApplication",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: ClassNotFound",
    "answer": "Bootstrap class missing from classpath; add `spring-boot-starter` dependency.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "java.lang.IllegalStateException: Failed to load ApplicationContext",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: ApplicationContext",
    "answer": "Occurs during tests when context configuration is invalid; check test annotations and configuration classes.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "java.net.BindException: Address already in use",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: BindException",
    "answer": "Server port is occupied; configure `server.port` or free the port.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "Error starting ApplicationContext due to missing DataSource bean",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: No DataSource",
    "answer": "Spring Boot auto-configuration requires DataSource on classpath and configuration properties.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "org.hibernate.MappingException: Unknown entity",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: MappingException",
    "answer": "Entity class not annotated or not in scanned package; add `@Entity` and ensure package scanning.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "UnsatisfiedDependencyException in BeanCreationException",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: UnsatisfiedDependency",
    "answer": "A constructor or field injection failed due to missing bean; check bean definitions.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "HttpMessageNotReadableException: JSON parse error",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: HttpMessageNotReadable",
    "answer": "Malformed JSON in request body or mismatched field types; validate JSON structure and DTO fields.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "ResourceAccessException: I/O error on GET request",
    "label": "spring-boot",
    "language": "en",
    "context": "Specific Error: ResourceAccess",
    "answer": "RestTemplate failed due to connection timeout or DNS issue; configure timeouts and verify URL.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is WordPress?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "WordPress is an open-source content management system (CMS) based on PHP and MySQL, used to build websites and blogs.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What language is WordPress written in?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: Language",
    "answer": "WordPress is primarily written in PHP, with HTML, CSS, JavaScript, and SQL for database interactions.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Who developed WordPress?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: Creator",
    "answer": "WordPress was created by Matt Mullenweg and Mike Little, first released in 2003 as a fork of b2/cafelog.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is a theme in WordPress?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: Theme",
    "answer": "A theme is a collection of templates and stylesheets that define the visual appearance and layout of a WordPress site.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is a plugin in WordPress?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: Plugin",
    "answer": "A plugin is a package of code that adds features or functionality to a WordPress site without editing core files.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is a widget in WordPress?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: Widget",
    "answer": "A widget is a small block of content in predefined areas (sidebars, footers) that provides dynamic features like menus or calendars.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "What is The Loop?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: The Loop",
    "answer": "The Loop is the core PHP code in WordPress themes used to display posts by iterating over post data retrieved from the database.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "What is WP-CLI?",
    "label": "wordpress",
    "language": "en",
    "context": "Factoid: WP-CLI",
    "answer": "WP-CLI is a command-line interface for managing WordPress installations, enabling tasks like updates, plugin installs, and backups.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to install WordPress?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Installation",
    "answer": "Download from wordpress.org, upload files to server, create a MySQL database, then run the web-based installer.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to create a post?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Create post",
    "answer": "Log in to the dashboard, go to Posts > Add New, enter title and content, then click Publish.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to create a page?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Create page",
    "answer": "In the dashboard, go to Pages > Add New, enter page details, and click Publish to add static pages.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to install a theme?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Theme install",
    "answer": "Go to Appearance > Themes > Add New, search or upload a theme ZIP, then click Install and Activate.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to install a plugin?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Plugin install",
    "answer": "Navigate to Plugins > Add New, search or upload a plugin ZIP, then click Install Now and Activate.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to update WordPress core?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Core update",
    "answer": "Go to Dashboard > Updates and click Update Now to upgrade WordPress to the latest version.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to update themes and plugins?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Update plugins/themes",
    "answer": "In Dashboard > Updates or Plugins/Themes pages, select items and click Update to apply new versions.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to set permalink structure?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Permalinks",
    "answer": "Go to Settings > Permalinks, choose a URL format (e.g., Post name), and click Save Changes.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to customize menu?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: Menus",
    "answer": "Under Appearance > Menus, create or edit a menu, add items, assign display location, and Save Menu.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to manage users?",
    "label": "wordpress",
    "language": "en",
    "context": "Descriptive: User management",
    "answer": "Go to Users > Add New to create users or All Users to edit roles and permissions for existing users.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare post vs page.",
    "label": "wordpress",
    "language": "en",
    "context": "Comparison: Post vs Page",
    "answer": "Posts are time-based entries appearing in reverse chronological order; pages are static and not part of the blog chronology.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare categories vs tags.",
    "label": "wordpress",
    "language": "en",
    "context": "Comparison: Taxonomies",
    "answer": "Categories are hierarchical groupings for broad topics; tags are non-hierarchical for specific keywords.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare WordPress.com vs WordPress.org.",
    "label": "wordpress",
    "language": "en",
    "context": "Comparison: Hosting",
    "answer": "WordPress.com is hosted service with limitations; WordPress.org is self-hosted, offering full control and customization.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare free vs premium themes.",
    "label": "wordpress",
    "language": "en",
    "context": "Comparison: Themes",
    "answer": "Free themes cost nothing but may lack support; premium themes include advanced features, support, and updates.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare actions vs filters.",
    "label": "wordpress",
    "language": "en",
    "context": "Comparison: Hooks",
    "answer": "Actions allow executing code at specific points; filters modify data before output, both using add_action/add_filter.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare Classic Editor vs Gutenberg.",
    "label": "wordpress",
    "language": "en",
    "context": "Comparison: Editors",
    "answer": "Classic Editor uses a single textarea; Gutenberg offers block-based content editing for flexible layouts.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to backup WordPress database?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Backup",
    "answer": "Use phpMyAdmin or WP-CLI `wp db export` to export the database to an SQL file.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to migrate WordPress site?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Migration",
    "answer": "Copy files, export/import database, update wp-config.php, and run search-replace for URLs.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to secure WordPress?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Security",
    "answer": "Keep core, themes, plugins updated, use strong passwords, install security plugins, and disable file editing.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to optimize performance?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Performance",
    "answer": "Use caching plugins, optimize images, enable GZIP, use CDN, and choose a fast hosting provider.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to enable SSL?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: SSL",
    "answer": "Install an SSL certificate, update site URL to https, and use plugins like Really Simple SSL.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to set up caching?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Caching",
    "answer": "Install caching plugin (e.g., WP Super Cache), configure cache settings, and enable page caching.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to schedule posts?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Scheduling",
    "answer": "In the post editor, click Publish, change status to Scheduled, pick a date/time, and Save.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to use custom post types?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: CPT",
    "answer": "Register CPT with register_post_type() in functions.php and create templates for display.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to create child theme?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Child theme",
    "answer": "Create folder, style.css with Template header, functions.php enqueuing parent stylesheet, and activate.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to implement multilingual site?",
    "label": "wordpress",
    "language": "en",
    "context": "How-to: Multilingual",
    "answer": "Use plugins like WPML or Polylang to add language switcher and manage translations.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "White screen of death, what causes it?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: WSOD",
    "answer": "Caused by fatal PHP errors, memory limits, or plugin/theme conflicts resulting in blank pages.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error establishing database connection, fix?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: DB connection",
    "answer": "Check wp-config.php for correct DB credentials, ensure MySQL server is running and user has permissions.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "404 on permalinks, solution?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: Permalinks",
    "answer": "Resave permalink settings and ensure .htaccess is writable with proper rewrite rules.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Allowed memory size exhausted, fix?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: Memory",
    "answer": "Increase memory_limit in php.ini or wp-config.php, and disable memory-hungry plugins.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "500 internal server error, why?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: 500 error",
    "answer": "Often due to corrupted .htaccess, PHP errors, or exceeding server resources; check error logs.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Too many redirects, how to resolve?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: Redirect loop",
    "answer": "Check site URL settings, SSL configuration, and remove conflicting redirect rules.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Connection timed out, fix?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: Timeout",
    "answer": "Optimize code, increase PHP execution_time, and improve server performance or hosting plan.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Upload limit exceeded, solution?",
    "label": "wordpress",
    "language": "en",
    "context": "Common Error: Upload limit",
    "answer": "Increase upload_max_filesize and post_max_size in php.ini or use plugins to modify limits.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "ERR_TOO_MANY_REDIRECTS in browser, cause?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: Redirects",
    "answer": "Site URL or .htaccess misconfiguration causing infinite redirect loop between http/https or www/non-www.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "HTTP 500 internal server error, specifics?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: 500",
    "answer": "Generic server error often due to PHP fatal errors, permission issues, or missing files; check server logs.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Parse error: syntax error, what to do?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: Parse error",
    "answer": "Locate and fix malformed PHP code at the indicated line in theme or plugin files.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Deprecated function warnings, how to address?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: Deprecation",
    "answer": "Update code to use supported functions or update themes/plugins to versions compatible with current WP.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Mixed content warnings, how to fix?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: Mixed content",
    "answer": "Ensure all resources are loaded over HTTPS and update hardcoded URLs to https://.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Plugin conflict causing fatal error, resolution?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: Plugin conflict",
    "answer": "Deactivate plugins one by one to identify conflict, then update or replace the conflicting plugin.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "PHP maximum execution time exceeded, fix?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: Execution time",
    "answer": "Increase max_execution_time in php.ini or wp-config.php and optimize slow scripts.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "HTTP 403 forbidden error, why?",
    "label": "wordpress",
    "language": "en",
    "context": "Specific Error: 403",
    "answer": "Insufficient permissions for files/directories or security rules blocking access; adjust permissions or mod_security.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is a string in programming?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A string is a sequence of characters used to represent text in programming languages, typically enclosed in quotes.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How are strings represented in memory?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Memory",
    "answer": "Strings are stored as arrays of characters or bytes in memory, often with a null terminator or length prefix.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is string immutability?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Immutability",
    "answer": "Immutable strings cannot be changed after creation; operations produce new string instances rather than modifying in place.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What are escape sequences?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Escape sequences",
    "answer": "Escape sequences are special character combinations like \\n for newline or \\t for tab, used within string literals.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "What is string concatenation?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Concatenation",
    "answer": "Concatenation is the process of joining two or more strings end-to-end to produce a new string.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is a string literal?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Literal",
    "answer": "A string literal is a sequence of characters enclosed in quotes in source code, representing a constant string value.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is a raw string?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Raw string",
    "answer": "A raw string treats backslashes and escape characters as literal characters, avoiding escape sequence processing.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is string encoding?",
    "label": "string",
    "language": "en",
    "context": "Factoid: Encoding",
    "answer": "String encoding defines how characters map to bytes, such as UTF-8, ASCII, or UTF-16.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to measure string length?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Length",
    "answer": "Use functions or methods like strlen() in C, .length() in Java, len() in Python, or .Length in C# to get string length.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to access individual characters?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Indexing",
    "answer": "Use indexing syntax like str[0] or str.charAt(0) to access characters at specific positions.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to convert string to number?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Parsing",
    "answer": "Use parse functions such as atoi(), stoi(), parseInt(), or int() to convert string representations to numeric types.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to trim whitespace?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Trimming",
    "answer": "Use methods like trim(), strip(), or regex to remove leading and trailing whitespace from strings.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to split strings?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Splitting",
    "answer": "Use split() methods with a delimiter or regex to break a string into an array or list of substrings.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to replace substrings?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Replacement",
    "answer": "Use replace() functions or regex replace methods to substitute parts of a string with new content.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to convert case?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Case conversion",
    "answer": "Use toUpperCase(), toLowerCase(), or equivalent methods to change string characters to uppercase or lowercase.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to search within a string?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Searching",
    "answer": "Use indexOf(), contains(), find() or regex search functions to locate substrings or patterns.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to format strings?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Formatting",
    "answer": "Use format specifiers, template literals, or string interpolation methods to create formatted strings.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to compare strings?",
    "label": "string",
    "language": "en",
    "context": "Descriptive: Comparison",
    "answer": "Use equals(), ==, strcmp(), or locale-aware compare functions to check if strings are equal or order them.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare string vs char array.",
    "label": "string",
    "language": "en",
    "context": "Comparison: String vs Char Array",
    "answer": "Strings are higher-level objects with metadata and safety checks; char arrays are low-level mutable buffers.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare immutable vs mutable strings.",
    "label": "string",
    "language": "en",
    "context": "Comparison: Immutability",
    "answer": "Immutable strings cannot be changed after creation, improving safety; mutable strings can change content in place, improving performance.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "Compare single vs double quotes.",
    "label": "string",
    "language": "en",
    "context": "Comparison: Quotes",
    "answer": "Single-quoted strings often do not process escape sequences or interpolation; double-quoted strings support them in many languages.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Compare string concat methods.",
    "label": "string",
    "language": "en",
    "context": "Comparison: Concatenation Methods",
    "answer": "Using + or concat() is easy for few strings; StringBuilder or join functions are more efficient for multiple concatenations.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare substring vs slice.",
    "label": "string",
    "language": "en",
    "context": "Comparison: Substring vs Slice",
    "answer": "substring() avoids negative indices; slice() supports negative indices to count from end in many languages.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare regex vs includes for search.",
    "label": "string",
    "language": "en",
    "context": "Comparison: Search Methods",
    "answer": "includes() checks literal substrings quickly; regex offers pattern matching and advanced search capabilities.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to reverse a string?",
    "label": "string",
    "language": "en",
    "context": "How-to: Reverse",
    "answer": "Convert to array, reverse array elements, then join back to string, or use built-in reverse functions if available.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to check palindrome?",
    "label": "string",
    "language": "en",
    "context": "How-to: Palindrome Check",
    "answer": "Reverse the string and compare to original, ignoring case and non-alphanumeric characters.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to remove duplicates?",
    "label": "string",
    "language": "en",
    "context": "How-to: Remove Duplicates",
    "answer": "Use a set to track seen characters and build a new string skipping duplicates.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to find all occurrences?",
    "label": "string",
    "language": "en",
    "context": "How-to: Find All",
    "answer": "Use a loop with indexOf/regex global matches to collect positions of all substring occurrences.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to encode URL?",
    "label": "string",
    "language": "en",
    "context": "How-to: URL Encode",
    "answer": "Use encodeURIComponent() in JavaScript or URI.encode() functions in other languages to percent-encode special characters.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to decode HTML entities?",
    "label": "string",
    "language": "en",
    "context": "How-to: HTML Decode",
    "answer": "Use HTML parser or replacement methods to convert &amp;, &lt;, &gt; back to &, <, > in the string.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to pad strings?",
    "label": "string",
    "language": "en",
    "context": "How-to: Padding",
    "answer": "Use padStart(), padEnd() methods or manual concatenation to add characters until desired length.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to repeat strings?",
    "label": "string",
    "language": "en",
    "context": "How-to: Repeat",
    "answer": "Use repeat() method or loop concatenation to duplicate a string a given number of times.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to trim specific characters?",
    "label": "string",
    "language": "en",
    "context": "How-to: Custom Trim",
    "answer": "Use regex replace with patterns like ^[char]+|[char]+$ to remove specified characters from ends.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to interpolate variables?",
    "label": "string",
    "language": "en",
    "context": "How-to: Interpolation",
    "answer": "Use template literals with ${var} in backticks or format functions like printf-style or format() methods.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Why do I get IndexError in string indexing?",
    "label": "string",
    "language": "en",
    "context": "Common Error: IndexError",
    "answer": "Occurs when accessing a position outside the string bounds; ensure index is within 0 and length-1.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Why is my string null or undefined?",
    "label": "string",
    "language": "en",
    "context": "Common Error: Null/Undefined",
    "answer": "String variable wasn\u2019t initialized or got set to null/undefined; ensure it holds a valid string.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why does substring return empty?",
    "label": "string",
    "language": "en",
    "context": "Common Error: Empty substring",
    "answer": "Start and end indices may be equal or reversed, resulting in an empty string; check index order.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why does replace not work globally?",
    "label": "string",
    "language": "en",
    "context": "Common Error: Replace only first",
    "answer": "Replace method without global flag changes only first occurrence; use regex with global flag or replaceAll().",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Why is split not splitting?",
    "label": "string",
    "language": "en",
    "context": "Common Error: Split",
    "answer": "Incorrect delimiter or regex; ensure correct pattern and escape special characters.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Why do I get unexpected escape sequence?",
    "label": "string",
    "language": "en",
    "context": "Common Error: Escape sequence",
    "answer": "Backslash in string literal must escape a valid character; use double backslashes or raw strings.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Why does format throw exception?",
    "label": "string",
    "language": "en",
    "context": "Common Error: Format exception",
    "answer": "Format string and arguments mismatch; ensure placeholders match argument types and count.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Why does concatenation causing performance issues?",
    "label": "string",
    "language": "en",
    "context": "Common Error: Performance",
    "answer": "Repeated concatenation creates many intermediate strings; use StringBuilder or join for efficiency.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "TypeError: Cannot read property 'length' of undefined",
    "label": "string",
    "language": "en",
    "context": "Specific Error: TypeError",
    "answer": "Occurs when calling .length on undefined or null instead of a string; ensure variable is a string.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "NullReferenceException on string method",
    "label": "string",
    "language": "en",
    "context": "Specific Error: NullReferenceException",
    "answer": "Thrown when invoking a method on a null string reference in languages like C#; check for null before use.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "StringIndexOutOfBoundsException",
    "label": "string",
    "language": "en",
    "context": "Specific Error: IndexOutOfBounds",
    "answer": "Java exception when substring or charAt index is out of range; validate indices against string length.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "RegexSyntaxException",
    "label": "string",
    "language": "en",
    "context": "Specific Error: Regex syntax",
    "answer": "Occurs when regex pattern is invalid; check pattern syntax and escape special characters properly.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "MalformedInputException in string decoding",
    "label": "string",
    "language": "en",
    "context": "Specific Error: MalformedInput",
    "answer": "Thrown when decoding bytes to string with wrong charset; use correct encoding to decode.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "UnsupportedEncodingException",
    "label": "string",
    "language": "en",
    "context": "Specific Error: Unsupported encoding",
    "answer": "Occurs when specified charset is not supported by the platform; choose a valid encoding name.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "IllegalArgumentException: Unmatched quote in string",
    "label": "string",
    "language": "en",
    "context": "Specific Error: IllegalArgument",
    "answer": "Thrown when parsing string with unbalanced quotes; ensure quotes are properly closed.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "StackOverflowError on recursive string processing",
    "label": "string",
    "language": "en",
    "context": "Specific Error: StackOverflowError",
    "answer": "Occurs when recursive string operations lack a base case, causing infinite recursion.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is Flutter?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Flutter is an open-source UI toolkit by Google for building natively compiled applications for mobile, web, and desktop from a single codebase.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "What language does Flutter use?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: Language",
    "answer": "Flutter uses Dart, a client-optimized language developed by Google, for building fast apps on multiple platforms.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is a widget in Flutter?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: Widget",
    "answer": "A widget is a core building block in Flutter; everything in Flutter\u2019s UI is composed of widgets describing structure, layout, and style.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "What is the Flutter SDK?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: SDK",
    "answer": "The Flutter SDK includes tools, libraries, and a rendering engine for developing, compiling, and debugging Flutter apps.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is Hot Reload?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: Hot Reload",
    "answer": "Hot Reload allows developers to inject updated source code files into the running Dart VM, preserving state and speeding iteration.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "What is Stateful vs Stateless widget?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: Widget types",
    "answer": "Stateless widgets have immutable state, while Stateful widgets maintain state that can change over their lifetime.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "What is MaterialApp?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: MaterialApp",
    "answer": "MaterialApp is a widget that introduces Material Design visual structure, routing, theming, and localization for Flutter apps.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is Cupertino in Flutter?",
    "label": "flutter",
    "language": "en",
    "context": "Factoid: Cupertino",
    "answer": "Cupertino widgets implement Apple\u2019s iOS design language, enabling Flutter apps to have an iOS look and feel.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to create a new Flutter project?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Project creation",
    "answer": "Run `flutter create project_name` in terminal to scaffold a new Flutter application with default template.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to run a Flutter app?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Running",
    "answer": "Use `flutter run` in project directory or run from an IDE to launch the app on connected device or emulator.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to add dependencies?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Dependencies",
    "answer": "Add packages under `dependencies` in pubspec.yaml and run `flutter pub get` to install them.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to use Hot Reload?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Hot Reload",
    "answer": "Press `r` in terminal or click Hot Reload in IDE to apply code changes to running app without full restart.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to navigate between screens?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Navigation",
    "answer": "Use Navigator.push and Navigator.pop with routes or named routes to move between pages (Screens) in Flutter.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to manage state?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: State management",
    "answer": "Use setState for simple state, or use Provider, Bloc, Riverpod, or other packages for scalable state management.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to style text?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Text styling",
    "answer": "Use TextStyle in Text widget, adjusting fontSize, color, fontWeight, and other properties.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to build layouts?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Layouts",
    "answer": "Compose widgets like Row, Column, Stack, and Container with padding, alignment, and Flex properties.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to load assets?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: Assets",
    "answer": "Declare assets in pubspec.yaml under `flutter: assets:` then use AssetImage or rootBundle to load.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to perform HTTP requests?",
    "label": "flutter",
    "language": "en",
    "context": "Descriptive: HTTP",
    "answer": "Use http package: import package, then use http.get/post and parse responses in async functions.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare Stateful vs Stateless widgets.",
    "label": "flutter",
    "language": "en",
    "context": "Comparison: Widget types",
    "answer": "Stateless widgets are immutable and re-rendered when parent changes; Stateful widgets maintain internal state across renders.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Compare Flutter vs React Native.",
    "label": "flutter",
    "language": "en",
    "context": "Comparison: Frameworks",
    "answer": "Flutter compiles to native code with its own rendering engine; React Native uses native components via a JS bridge.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare Hot Reload vs Hot Restart.",
    "label": "flutter",
    "language": "en",
    "context": "Comparison: Reload types",
    "answer": "Hot Reload injects code changes preserving state; Hot Restart resets state and restarts the app without full recompile.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare Dart vs JavaScript.",
    "label": "flutter",
    "language": "en",
    "context": "Comparison: Languages",
    "answer": "Dart is statically typed with sound null safety; JavaScript is dynamically typed without native null safety.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare Navigator.push vs pushNamed.",
    "label": "flutter",
    "language": "en",
    "context": "Comparison: Navigation",
    "answer": "push requires a widget route; pushNamed uses named routes defined in MaterialApp for cleaner code.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare ListView vs Column.",
    "label": "flutter",
    "language": "en",
    "context": "Comparison: Scrolling",
    "answer": "ListView is scrollable by default with lazy loading; Column requires wrapping in SingleChildScrollView for scrolling.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to implement a FloatingActionButton?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: FAB",
    "answer": "Use FloatingActionButton widget in Scaffold with onPressed callback for action handling.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to use Provider for state?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Provider",
    "answer": "Wrap widgets with ChangeNotifierProvider, then use Provider.of or Consumer to access and update state.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to integrate Firebase?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Firebase",
    "answer": "Add firebase_core and other packages in pubspec.yaml, initialize Firebase in main(), and configure via console.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to run on iOS simulator?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: iOS testing",
    "answer": "Install Xcode, then run `flutter run` with --ios or use `open -a Simulator` before running.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to enable null safety?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Null safety",
    "answer": "Migrate code with `dart migrate`, update SDK constraints, and opt into null safety in pubspec.yaml.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to write unit tests?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Unit testing",
    "answer": "Use test package, write tests in test/ folder, and run `flutter test` to execute them.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to use custom fonts?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Fonts",
    "answer": "Add font files under assets, declare in pubspec.yaml under fonts, and reference in TextStyle fontFamily.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to detect platform?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Platform detection",
    "answer": "Use Platform.isAndroid or Platform.isIOS in Dart:io to branch code per platform.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to persist data locally?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Local storage",
    "answer": "Use shared_preferences for simple key-value or sqflite for relational storage.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to implement pull-to-refresh?",
    "label": "flutter",
    "language": "en",
    "context": "How-to: Refresh indicator",
    "answer": "Wrap list with RefreshIndicator widget and provide onRefresh callback returning Future.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Why is Hot Reload not working?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: Hot Reload",
    "answer": "Occurs when code change affects stateful logic; restart app or ensure code is in main.dart for reload.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Why is pub get failing?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: pub get",
    "answer": "Check pubspec.yaml syntax, internet connection, and package version compatibility.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Why is Android emulator not found?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: Emulator",
    "answer": "Ensure ANDROID_HOME is set, emulator installed, and AVD created in Android Studio.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Why does iOS build fail?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: iOS build",
    "answer": "Check CocoaPods setup, run `pod install`, and ensure Xcode project settings are correct.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Why is widget tree too deep?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: Depth",
    "answer": "Refactor large build methods into smaller widgets to reduce tree depth.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Why is setState not updating UI?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: setState",
    "answer": "Ensure setState is called within State class and state variable is used in build method.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Why are assets not loading?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: Assets",
    "answer": "Declare assets in pubspec.yaml and run `flutter pub get`, then use correct path.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Why is Null check operator used on null?",
    "label": "flutter",
    "language": "en",
    "context": "Common Error: Null operator",
    "answer": "Using `!` on a null value; ensure variable is non-null before applying the operator.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "MissingPluginException: No implementation found for method",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: MissingPluginException",
    "answer": "Occurs when plugin registration fails; run `flutter clean`, rebuild project, and ensure plugin is added.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "RenderFlex overflowed by pixels",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: Overflow",
    "answer": "Occurs when widgets exceed screen space; wrap in Expanded, Flexible, or SingleChildScrollView.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Gradle build failed with exit code 1",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: Gradle",
    "answer": "Check Android logs, ensure correct SDK versions, and resolve dependency conflicts in build.gradle.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: Failed to attach to the VM service",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: VM service",
    "answer": "Disable firewall or use `--disable-service-auth-codes`; ensure Flutter tooling matches app version.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "iOS deployment target too low",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: Deployment target",
    "answer": "Set iOS minimum deployment target in Xcode to match Podfile platform version.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Thread 1: Fatal error: Unexpectedly found nil while unwrapping Optional",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: Swift crash",
    "answer": "Accessing null value in Swift code; check optionals and unwrap safely.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Dart Analyzer error: Undefined name",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: Analyzer",
    "answer": "Using an undefined variable or import; check spelling and add necessary imports.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Exception caught by image decoder",
    "label": "flutter",
    "language": "en",
    "context": "Specific Error: Image decode",
    "answer": "Occurs when image asset is corrupt or unsupported format; verify asset and add correct package.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is PostgreSQL?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "PostgreSQL is an open-source, advanced relational database management system emphasizing extensibility and SQL compliance.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Who develops PostgreSQL?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: Community",
    "answer": "PostgreSQL is developed and maintained by a global community of contributors under the PostgreSQL Global Development Group.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is a tablespace?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: Tablespace",
    "answer": "A tablespace in PostgreSQL is a location on disk where database objects like tables and indexes are stored.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is WAL?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: WAL",
    "answer": "WAL (Write-Ahead Logging) is the mechanism PostgreSQL uses to ensure data integrity by logging changes before writing to disk.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is MVCC?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: MVCC",
    "answer": "MVCC (Multiversion Concurrency Control) allows concurrent transactions by maintaining multiple versions of data to avoid locking conflicts.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "What is a schema?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: Schema",
    "answer": "A schema is a namespace within a database that contains tables, views, functions, and other objects.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is a sequence?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: Sequence",
    "answer": "A sequence is a special kind of object that generates a sequential series of unique integers, often used for primary keys.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What is a view?",
    "label": "postgresql",
    "language": "en",
    "context": "Factoid: View",
    "answer": "A view is a virtual table defined by a query, providing a way to encapsulate complex queries as a table.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to create a database?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Create database",
    "answer": "Use `CREATE DATABASE dbname;` in psql or `createdb dbname` at the shell to create a new PostgreSQL database.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to connect to PostgreSQL?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Connection",
    "answer": "Use `psql -h host -U user -d dbname` or connect via a driver in applications specifying host, port, user, and database.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to list tables?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: List tables",
    "answer": "In psql, use `\\dt` or query `SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';`.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to create a table?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Create table",
    "answer": "Use `CREATE TABLE table_name (column1 TYPE, column2 TYPE, ...);` to define a new table with specified columns and types.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to insert data?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Insert data",
    "answer": "Use `INSERT INTO table_name (col1, col2) VALUES (val1, val2);` to add rows to a table.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to update data?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Update data",
    "answer": "Use `UPDATE table_name SET column = value WHERE condition;` to modify existing rows.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to delete data?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Delete data",
    "answer": "Use `DELETE FROM table_name WHERE condition;` to remove rows matching the condition.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to create an index?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Create index",
    "answer": "Use `CREATE INDEX index_name ON table_name(column);` to add an index for faster lookups on the specified column.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to back up a database?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Backup",
    "answer": "Use `pg_dump dbname > backup.sql` to export a database to a SQL file for backup.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to restore a database?",
    "label": "postgresql",
    "language": "en",
    "context": "Descriptive: Restore",
    "answer": "Use `psql dbname < backup.sql` or `pg_restore` for custom-format dumps to load data into a database.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare varchar vs text.",
    "label": "postgresql",
    "language": "en",
    "context": "Comparison: Data types",
    "answer": "`varchar(n)` enforces length limit; `text` is unlimited but may have similar performance characteristics.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare inner join vs left join.",
    "label": "postgresql",
    "language": "en",
    "context": "Comparison: Joins",
    "answer": "Inner join returns matching rows only; left join returns all left table rows and matches or nulls from right table.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare delete vs truncate.",
    "label": "postgresql",
    "language": "en",
    "context": "Comparison: Delete vs Truncate",
    "answer": "`DELETE` removes rows and can be rolled back; `TRUNCATE` is faster, cannot be rolled back without transaction, and resets identity.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Compare primary key vs unique constraint.",
    "label": "postgresql",
    "language": "en",
    "context": "Comparison: Constraints",
    "answer": "Primary key uniquely identifies rows and creates a unique index; unique constraint also enforces uniqueness but allows one null per column.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Compare clustered vs unclustered index.",
    "label": "postgresql",
    "language": "en",
    "context": "Comparison: Index types",
    "answer": "PostgreSQL supports clustering tables on an index once; regular indexes are unclustered and do not affect physical order.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare serial vs bigserial.",
    "label": "postgresql",
    "language": "en",
    "context": "Comparison: Serial types",
    "answer": "`serial` uses 32-bit sequence for integer; `bigserial` uses 64-bit sequence for larger range of values.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to enable replication?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Replication",
    "answer": "Configure primary with `wal_level = replica`, set up `pg_hba.conf` for replication user, and use `pg_basebackup` on standby.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to monitor server activity?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Monitoring",
    "answer": "Use views like `pg_stat_activity`, `pg_stat_database`, and tools like `pg_top` or `pgAdmin` dashboards.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to use transactions?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Transactions",
    "answer": "Wrap statements in `BEGIN; ... COMMIT;` or `ROLLBACK;` to ensure atomic execution.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to set up a connection pool?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Connection Pooling",
    "answer": "Use external tools like PgBouncer or internal pooling libraries in application frameworks.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to configure SSL?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: SSL",
    "answer": "Generate certificates, set `ssl = on`, configure `ssl_cert_file` and `ssl_key_file` in postgresql.conf.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to use extensions?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Extensions",
    "answer": "Install extension via `CREATE EXTENSION extension_name;`, e.g., `pg_trgm` or `postgis`.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to partition a table?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Partitioning",
    "answer": "Define parent table with `PARTITION BY` clause and create child partitions with `FOR VALUES` ranges.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to manage roles?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Roles",
    "answer": "Use `CREATE ROLE`, `GRANT`, and `ALTER ROLE` to define user privileges and database access.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to vacuum the database?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Vacuum",
    "answer": "Run `VACUUM` or `VACUUM ANALYZE` to reclaim storage and update optimizer statistics.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to set timezone?",
    "label": "postgresql",
    "language": "en",
    "context": "How-to: Timezone",
    "answer": "Set `timezone` in postgresql.conf or use `SET TIMEZONE = 'UTC';` per session.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error: FATAL: role does not exist",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: Role missing",
    "answer": "Occurs when the specified user role is not created; create the role or connect with an existing user.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: FATAL: database does not exist",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: DB missing",
    "answer": "Occurs when connecting to a non-existent database; create it with `CREATE DATABASE` or correct the name.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: deadlock detected",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: Deadlock",
    "answer": "Occurs when two transactions wait on each other; simplify transactions or acquire locks in consistent order.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: relation \"table\" does not exist",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: Missing relation",
    "answer": "Occurs when a table or view is missing or misnamed; verify schema and object names.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: syntax error at or near",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: Syntax error",
    "answer": "Occurs when SQL syntax is invalid; check query near the indicated token.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "Error: could not serialize access due to concurrent update",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: Serialization failure",
    "answer": "Occurs under Serializable isolation; retry transaction after conflict.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Error: out of shared memory",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: Shared memory",
    "answer": "Occurs when server runs out of shared buffers; increase `shared_buffers` or reduce connections.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: too many connections",
    "label": "postgresql",
    "language": "en",
    "context": "Common Error: Connection limit",
    "answer": "Occurs when max_connections is exceeded; increase the limit or close idle connections.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "ERROR: XX000: internal error: unexpected eof on client connection",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Internal error",
    "answer": "Indicates client disconnected unexpectedly; check network and client application.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "ERROR: XX001: could not read block",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Read block",
    "answer": "Indicates corrupted data file block; restore from backup or run `pg_checksums`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "ERROR: out of memory",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Out of memory",
    "answer": "Occurs when a query exceeds memory limits; increase work_mem or optimize query.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "ERROR: config file \"postgresql.conf\" contains errors",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Config error",
    "answer": "Occurs when postgresql.conf has invalid settings; check syntax and reload server.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "ERROR: could not open extension control file",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Extension error",
    "answer": "Occurs when extension is not installed; install or copy extension files to share/extension.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "ERROR: division by zero",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Division by zero",
    "answer": "Occurs when a query divides by zero; validate or guard divisor values.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "ERROR: permission denied for relation",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Permission denied",
    "answer": "Occurs when the role lacks privileges on a table; grant SELECT/INSERT/UPDATE privileges.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "ERROR: could not translate host name",
    "label": "postgresql",
    "language": "en",
    "context": "Specific Error: Host resolution",
    "answer": "Occurs when hostname cannot be resolved; check DNS or /etc/hosts entries.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "What is MongoDB?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "MongoDB is an open-source, document-oriented NoSQL database that stores data in flexible, JSON-like documents.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Who develops MongoDB?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: Developer",
    "answer": "MongoDB is developed and maintained by MongoDB, Inc., originally released in 2009.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "What is a collection?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: Collection",
    "answer": "A collection in MongoDB is a grouping of MongoDB documents, similar to a table in relational databases.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is a document?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: Document",
    "answer": "A document is a set of key-value pairs stored in BSON format, analogous to a JSON object.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is BSON?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: BSON",
    "answer": "BSON is a binary-encoded serialization of JSON-like documents, supporting additional data types.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is a replica set?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: Replica set",
    "answer": "A replica set is a group of MongoDB servers that maintain the same data set, providing redundancy and high availability.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is sharding?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: Sharding",
    "answer": "Sharding is a method of distributing data across multiple machines by partitioning it into shards.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is an index in MongoDB?",
    "label": "mongodb",
    "language": "en",
    "context": "Factoid: Index",
    "answer": "An index improves query performance by storing a small portion of data in an easy-to-traverse form.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to install MongoDB?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Installation",
    "answer": "Download the MongoDB Community Server package for your OS, follow installation instructions, and start the mongod service.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to connect to MongoDB shell?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Shell connection",
    "answer": "Run `mongo` or `mongosh` in terminal to connect to the local MongoDB instance.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to create a database?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Create database",
    "answer": "Switch to a database in shell with `use dbname`; MongoDB creates it when you first insert data.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to create a collection?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Create collection",
    "answer": "Use `db.createCollection('collectionName')` in the shell, or insert a document into a non-existent collection.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to insert a document?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Insert document",
    "answer": "Use `db.collection.insertOne({ key: 'value' })` or `insertMany` to add documents.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to query documents?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Query documents",
    "answer": "Use `db.collection.find({ field: value })` to retrieve matching documents.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to update documents?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Update documents",
    "answer": "Use `db.collection.updateOne({filter}, {$set: {field: value}})` or updateMany for bulk.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to delete documents?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Delete documents",
    "answer": "Use `db.collection.deleteOne({filter})` or `deleteMany` to remove documents.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to create an index?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Create index",
    "answer": "Use `db.collection.createIndex({ field: 1 })` for ascending or -1 for descending index.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to view replica set status?",
    "label": "mongodb",
    "language": "en",
    "context": "Descriptive: Replica set status",
    "answer": "In shell, run `rs.status()` to view the health and configuration of a replica set.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Compare MongoDB vs SQL databases.",
    "label": "mongodb",
    "language": "en",
    "context": "Comparison: NoSQL vs SQL",
    "answer": "MongoDB stores flexible JSON-like documents; SQL databases store structured tables with fixed schemas.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare insertOne vs insertMany.",
    "label": "mongodb",
    "language": "en",
    "context": "Comparison: Insert methods",
    "answer": "insertOne adds a single document; insertMany adds multiple documents in a batch.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Compare updateOne vs updateMany.",
    "label": "mongodb",
    "language": "en",
    "context": "Comparison: Update methods",
    "answer": "updateOne updates the first matching document; updateMany updates all matching documents.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare findOne vs find.",
    "label": "mongodb",
    "language": "en",
    "context": "Comparison: Query methods",
    "answer": "findOne returns the first matching document; find returns a cursor to all matching documents.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare drop vs dropDatabase.",
    "label": "mongodb",
    "language": "en",
    "context": "Comparison: Drop methods",
    "answer": "drop removes a collection; dropDatabase removes the entire database and its collections.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare embedded documents vs references.",
    "label": "mongodb",
    "language": "en",
    "context": "Comparison: Data modeling",
    "answer": "Embedded stores related data in one document; references link documents via ObjectIDs.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to set up sharding?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Sharding",
    "answer": "Enable sharding on a database with `sh.enableSharding('db')`, shard collections with `sh.shardCollection()`.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to configure authentication?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Authentication",
    "answer": "Create users with `db.createUser()`, enable auth in mongod.conf, and restart the server.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to backup with mongodump?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Backup",
    "answer": "Run `mongodump --db dbname --out /path/` to export data into BSON files.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to restore with mongorestore?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Restore",
    "answer": "Run `mongorestore /path/dbname` to import BSON files into the database.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to use aggregation pipeline?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Aggregation",
    "answer": "Use `db.collection.aggregate([{$match:{}}, {$group:{_id:'$field', count:{$sum:1}}}])` to process data.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to enable profiling?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Profiling",
    "answer": "Use `db.setProfilingLevel(2)` to log all operations or level 1 for slow queries.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to monitor with MMS?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Monitoring",
    "answer": "Use MongoDB Atlas or Ops Manager to visualize metrics and set alerts.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to use TTL index?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: TTL index",
    "answer": "Create index with `expireAfterSeconds` on a date field to auto-delete old documents.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to handle schema migrations?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Migrations",
    "answer": "Use tools like Mongock or write scripts to update document structure incrementally.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to connect from Node.js?",
    "label": "mongodb",
    "language": "en",
    "context": "How-to: Node.js connection",
    "answer": "Install `mongodb` package, then `const client = new MongoClient(uri); await client.connect();`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: 'not authorized on db to execute command', why?",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Authorization",
    "answer": "Occurs when the user lacks required roles; grant appropriate privileges to the user.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: network timeout while attempting to reach MongoDB server",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Timeout",
    "answer": "Occurs due to network issues or server unavailability; check connectivity and server status.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: E11000 duplicate key error collection",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Duplicate key",
    "answer": "Occurs when inserting a document with a key that violates a unique index.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "Error: host not found in replica set",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Replica set",
    "answer": "Occurs when replica set configuration references a host that is unreachable or misnamed.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: schema violation",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Schema validation",
    "answer": "Occurs when a document does not conform to JSON schema rules defined for the collection.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: command find requires authentication",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Authentication required",
    "answer": "Occurs when auth is enabled and client is not authenticated; provide credentials in connection.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: mongod crash unexpectedly",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Crash",
    "answer": "May be due to data corruption or resource exhaustion; check logs and repair with `--repair`.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: rs.initiate already initiated",
    "label": "mongodb",
    "language": "en",
    "context": "Common Error: Replica re-init",
    "answer": "Occurs when trying to initiate a replica set that's already initialized; reconfigure instead.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "MongoServerSelectionError: failed to connect to server",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: Server selection",
    "answer": "Indicates driver cannot find a suitable server in the topology; check URI and network.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "MongoParseError: URI malformed",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: URI parse",
    "answer": "Occurs when the connection string is invalid; ensure proper encoding and format.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "MongoNetworkError: connection refused",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: Connection refused",
    "answer": "Occurs when no server is listening on the specified host/port; verify mongod is running.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "BSONTypeError: Illegal arguments to BSON serialize",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: BSON serialize",
    "answer": "Occurs when trying to serialize unsupported data types; convert to supported types.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: listen EADDRINUSE",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: Port in use",
    "answer": "Occurs when the port specified is already occupied; choose a different port or free the port.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "MongoError: Must specify collection name",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: Collection name",
    "answer": "Occurs when performing an operation without specifying the collection; include collection name in command.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "ServerSelectionTimeoutError: timed out after 30000 ms",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: Timeout",
    "answer": "Occurs when server selection exceeds timeout; adjust timeout settings or fix network.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "MongoError: invalid namespace specified",
    "label": "mongodb",
    "language": "en",
    "context": "Specific Error: Namespace",
    "answer": "Occurs when database or collection names contain invalid characters; use valid names.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is WPF?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Windows Presentation Foundation (WPF) is a UI framework by Microsoft for building desktop client applications with XAML and .NET.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "What does XAML stand for?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: XAML",
    "answer": "XAML stands for eXtensible Application Markup Language, used to define UI elements in WPF applications.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Who developed WPF?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: Developer",
    "answer": "WPF was developed by Microsoft as part of the .NET Framework, first released in 2006 with .NET 3.0.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What is the Visual Tree?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: Visual Tree",
    "answer": "The Visual Tree is the hierarchy of visual elements in a WPF application used for rendering and hit testing.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is the Logical Tree?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: Logical Tree",
    "answer": "The Logical Tree represents the hierarchy of UI elements and content, reflecting relationships like parent-child in WPF.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is data binding?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: Data Binding",
    "answer": "Data binding connects UI elements to data sources, enabling automatic UI updates when data changes.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What are dependency properties?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: Dependency Property",
    "answer": "Dependency properties are WPF properties backed by the WPF property system enabling styling, animation, and binding.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "What is MVVM?",
    "label": "wpf",
    "language": "en",
    "context": "Factoid: MVVM",
    "answer": "Model-View-ViewModel (MVVM) is an architectural pattern used in WPF to separate UI, business logic, and data models.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to create a WPF project?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Project Setup",
    "answer": "Use Visual Studio: File > New > Project > WPF App (.NET Framework) or WPF App (.NET Core) to scaffold a new WPF application.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to add controls in XAML?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Add Controls",
    "answer": "Declare controls in XAML markup, e.g., <Button Content=\"Click Me\" Width=\"100\" Height=\"30\"/> inside a Panel or Window.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to handle events?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Event Handling",
    "answer": "Add event attributes in XAML like Click=\"Button_Click\" and implement the handler in code-behind.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to use styles?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Styles",
    "answer": "Define Style resources in XAML with <Style TargetType=\"Button\"> and set properties, then apply via Style or implicit styles.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to use templates?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Templates",
    "answer": "Use ControlTemplate or DataTemplate in XAML to customize the visual structure of controls and data items.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to bind data?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Data Binding",
    "answer": "Set Binding in XAML: <TextBlock Text=\"{Binding Path=Name}\"/> and set DataContext in code or XAML.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to use commands?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Commands",
    "answer": "Bind ICommand implementations to controls via Command attribute, e.g., <Button Command=\"{Binding SaveCommand}\"/>.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to navigate between pages?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Navigation",
    "answer": "Use NavigationWindow or Frame control and call Navigate(new Page1()) to switch pages.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to apply animations?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Animations",
    "answer": "Use Storyboard and animation classes like DoubleAnimation in XAML or code to animate dependency properties.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to use resource dictionaries?",
    "label": "wpf",
    "language": "en",
    "context": "Descriptive: Resources",
    "answer": "Define resources in ResourceDictionary and merge using MergedDictionaries or DynamicResource/StaticResource.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare Canvas vs Grid.",
    "label": "wpf",
    "language": "en",
    "context": "Comparison: Layout",
    "answer": "Canvas positions children by coordinates; Grid arranges children in rows and columns.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare DataContext vs Source in binding.",
    "label": "wpf",
    "language": "en",
    "context": "Comparison: Binding Context",
    "answer": "DataContext sets default binding source for element subtree; Source overrides with a specific binding source.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare StaticResource vs DynamicResource.",
    "label": "wpf",
    "language": "en",
    "context": "Comparison: Resource Types",
    "answer": "StaticResource is evaluated once at load; DynamicResource is evaluated at runtime and reacts to changes.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare RoutedEvent vs CLR event.",
    "label": "wpf",
    "language": "en",
    "context": "Comparison: Events",
    "answer": "RoutedEvent bubbles/tunnels through the tree; CLR event is direct and only raised on the source element.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare ViewModel vs Model.",
    "label": "wpf",
    "language": "en",
    "context": "Comparison: MVVM Roles",
    "answer": "Model holds data/business logic; ViewModel exposes data and commands for binding to the View.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare UserControl vs Custom Control.",
    "label": "wpf",
    "language": "en",
    "context": "Comparison: Controls",
    "answer": "UserControl combines existing controls in XAML; Custom Control derives from Control for reusable themable components.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to implement INotifyPropertyChanged?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: INotifyPropertyChanged",
    "answer": "Implement the interface in ViewModel, raise PropertyChanged event in property setters to notify UI.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to create attached properties?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: Attached Properties",
    "answer": "Declare static DependencyProperty using RegisterAttached and provide getter/setter methods.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to use DependencyProperty?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: DependencyProperty",
    "answer": "Register the property with DependencyProperty.Register and use GetValue/SetValue in wrapper property.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to use ICommand?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: ICommand",
    "answer": "Implement ICommand in a class (RelayCommand), bind to control Command, and call CanExecute/Execute.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to implement value converters?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: ValueConverter",
    "answer": "Implement IValueConverter, define Convert/ConvertBack, and reference in XAML with Converter attribute.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to create a custom control library?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: Control Library",
    "answer": "Create WPF Custom Control project, define controls, themes\\Generic.xaml, and reference in client apps.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to localize WPF application?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: Localization",
    "answer": "Use RESX files, set Uid attributes in XAML, and use LocBaml or satellite assemblies for translations.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to debug data binding issues?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: Binding Debug",
    "answer": "Enable binding tracing in Output window, check DataContext and binding paths in Visual Studio.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to handle keyboard input?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: Keyboard Input",
    "answer": "Handle KeyDown/KeyUp events or use InputBindings with KeyGesture and Commands.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to integrate with WinForms?",
    "label": "wpf",
    "language": "en",
    "context": "How-to: WinForms Interop",
    "answer": "Use ElementHost to host WPF controls in WinForms and WindowsFormsHost for vice versa.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "NullReferenceException in binding, why?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: NullReference",
    "answer": "Occurs when binding path points to null DataContext or property; ensure objects are initialized.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "XAML parse error at line, how to fix?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: XAML parse",
    "answer": "Indicates invalid XAML syntax; check line for missing tags or attributes.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "Resource not found exception, why?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: Resource not found",
    "answer": "Occurs when referencing a StaticResource that isn\u2019t defined or has wrong key.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Command not executing, cause?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: Command",
    "answer": "ICommand.CanExecute returned false; ensure CanExecute returns true or call RaiseCanExecuteChanged.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Style not applied, why?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: Style",
    "answer": "Incorrect TargetType or key; ensure ResourceDictionary is merged and XAML references correct key.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Visual Studio designer not loading, fix?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: Designer",
    "answer": "Designer may fail due to code-behind errors; wrap code in DesignMode checks or fix exceptions.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Binding expression path error, what is it?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: Binding path",
    "answer": "Binding path refers to a non-existent property; correct the path or implement the property.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Memory leak in WPF application, how to debug?",
    "label": "wpf",
    "language": "en",
    "context": "Common Error: Memory leak",
    "answer": "Check for event handler and binding references preventing garbage collection using profiling tools.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "XamlParseException: Could not find type",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: XamlParse",
    "answer": "Occurs when XAML references a control or namespace not available; check xmlns declarations and assembly references.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "InvalidOperationException: Sequence contains no elements",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: InvalidOperation",
    "answer": "Thrown when LINQ query on data-binding finds no elements; validate collections before binding.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "TargetInvocationException in InitializeComponent",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: InitializeComponent",
    "answer": "Occurs when constructor or loaded event throws; inspect inner exception for root cause.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Cannot set Visibility to Collapsed in setter, why?",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: Visibility Setter",
    "answer": "Throw if setter not a DependencyProperty or cannot change during measure pass; use Dispatcher.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "BindingExpressionBase error: Cannot retrieve binding expression",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: BindingExpression",
    "answer": "Occurs when trying to GetBindingExpression on element without binding; ensure binding exists.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "FileNotFoundException loading ResourceDictionary",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: ResourceDictionary",
    "answer": "Occurs when the referenced XAML file path or pack URI is incorrect; verify build action and URI.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "InvalidCastException in XAML type converter",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: TypeConverter",
    "answer": "Occurs when converter cannot convert between types; implement correct IValueConverter or use markup extension.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "DispatcherUnhandledException not caught, why?",
    "label": "wpf",
    "language": "en",
    "context": "Specific Error: DispatcherUnhandledException",
    "answer": "Occurs if exception thrown before event subscription or in background thread; subscribe early or handle TaskScheduler.UnobservedTaskException.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "What is AWS?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "AWS (Amazon Web Services) is a comprehensive cloud computing platform offering infrastructure, services, and tools globally.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "What is EC2?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: EC2",
    "answer": "Amazon EC2 provides resizable virtual servers in the cloud called instances, supporting various OS and configurations.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is S3?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: S3",
    "answer": "Amazon S3 (Simple Storage Service) is scalable object storage for data backups, archives, and content distribution.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "What is Lambda?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: Lambda",
    "answer": "AWS Lambda is a serverless compute service that runs code in response to events without provisioning servers.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is IAM?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: IAM",
    "answer": "AWS IAM (Identity and Access Management) controls user access and permissions to AWS services and resources.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is VPC?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: VPC",
    "answer": "Amazon VPC lets you provision a logically isolated network in the AWS Cloud for resource security and control.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "What is CloudFormation?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: CloudFormation",
    "answer": "AWS CloudFormation enables infrastructure-as-code by defining resources in templates to automate deployments.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is CloudWatch?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Factoid: CloudWatch",
    "answer": "Amazon CloudWatch monitors AWS resources and applications, collecting metrics and logs for insights and alerts.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to launch an EC2 instance?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: EC2 launch",
    "answer": "Use AWS Console > EC2 > Launch Instance, choose AMI, instance type, configure security group, then review and launch.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to create an S3 bucket?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: S3 bucket",
    "answer": "Go to S3 console, click Create bucket, specify name, region, set access permissions, and create.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to configure IAM user?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: IAM setup",
    "answer": "In IAM console, choose Users > Add user, set permissions and policies, then review and create credentials.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to deploy a Lambda function?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: Lambda deploy",
    "answer": "In Lambda console, click Create function, choose runtime, upload code or author inline, configure trigger and permissions.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to create a VPC?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: VPC creation",
    "answer": "Use VPC console Create VPC wizard, specify CIDR block, subnets, and configure route tables and gateways.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to set up a security group?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: Security group",
    "answer": "In EC2 console Security Groups, click Create, define inbound/outbound rules, and associate with instances.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to create a CloudFormation stack?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: CloudFormation",
    "answer": "Go to CloudFormation console, click Create stack, upload template, specify parameters, and deploy.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to configure a CloudWatch alarm?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: CloudWatch alarm",
    "answer": "In CloudWatch console, choose Alarms > Create alarm, select metric, define threshold and actions.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to use AWS CLI?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: AWS CLI",
    "answer": "Install AWS CLI, run aws configure to set credentials, then execute commands like aws s3 ls or aws ec2 describe-instances.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to set S3 lifecycle policy?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Descriptive: S3 lifecycle",
    "answer": "In S3 bucket Management tab, add lifecycle rule, define transitions and expiration for objects.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare EC2 vs Lambda.",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Comparison: Compute",
    "answer": "EC2 requires managing servers; Lambda is serverless, automatically scales and bills per invocation.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare S3 vs EBS.",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Comparison: Storage",
    "answer": "S3 is object storage for files; EBS provides block storage volumes for EC2 instances.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare RDS vs DynamoDB.",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Comparison: Database",
    "answer": "RDS is managed relational database; DynamoDB is fully managed NoSQL key-value and document database.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare CloudFormation vs Terraform.",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Comparison: IaC",
    "answer": "CloudFormation is AWS-native IaC; Terraform is multi-cloud with HCL syntax supporting AWS and beyond.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare SNS vs SQS.",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Comparison: Messaging",
    "answer": "SNS is pub/sub push messaging; SQS is message queuing pull-based service for decoupling.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare AWS vs Azure.",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Comparison: Cloud providers",
    "answer": "AWS offers widest service range and maturity; Azure integrates well with Microsoft products and hybrid scenarios.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to create an IAM role?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: IAM role",
    "answer": "In IAM console, choose Roles > Create role, select trusted entity and attach policies, then create.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to configure Auto Scaling?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: Auto Scaling",
    "answer": "Use EC2 Auto Scaling Groups, define launch template, set scaling policies and target metrics.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to deploy on Elastic Beanstalk?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: Elastic Beanstalk",
    "answer": "Create application in EB console, upload code bundle, choose environment type, and deploy.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to configure CloudFront CDN?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: CloudFront",
    "answer": "In CloudFront console, create distribution, select origin (S3 or custom), set cache behaviors.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to set up Route\u00a053 DNS?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: Route\u00a053",
    "answer": "In Route\u00a053 console, create hosted zone, add record sets pointing to resources or external domains.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to manage AWS CLI profiles?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: CLI profiles",
    "answer": "Use aws configure --profile name to set credentials, then aws s3 ls --profile name to use specific profile.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to enable CloudTrail?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: CloudTrail",
    "answer": "In CloudTrail console, create trail, specify S3 bucket for logs, and enable logging for all regions.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to encrypt data at rest?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: Encryption",
    "answer": "Enable SSE on S3 or enable encryption options on RDS/EBS using AWS KMS keys.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to migrate database to RDS?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: RDS migration",
    "answer": "Use AWS Database Migration Service to replicate source DB to RDS continuously with minimal downtime.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to use Boto3 in Python?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "How-to: Boto3",
    "answer": "Install boto3 package, configure credentials, then import boto3 and use client or resource to call AWS APIs.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "AccessDenied when calling an AWS API, why?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: AccessDenied",
    "answer": "Occurs when IAM user or role lacks required permissions for the requested operation.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "ThrottlingException on AWS SDK call, what is it?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: ThrottlingException",
    "answer": "Indicates request rate exceeds service limits; implement retries with backoff or request quota increase.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "InstanceLimitExceeded launching EC2, how to resolve?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: InstanceLimitExceeded",
    "answer": "Occurs when account hit EC2 instance quota; request limit increase via AWS Support.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "BucketAlreadyExists error creating S3, fix?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: BucketAlreadyExists",
    "answer": "S3 bucket names are global; choose a unique name or one within your account.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "ParameterValidationError in SDK, what causes it?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: ParameterValidationError",
    "answer": "Occurs when required parameters are missing or invalid in the API call.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "SignatureDoesNotMatch in AWS CLI, why?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: SignatureDoesNotMatch",
    "answer": "Occurs when request signature is invalid due to incorrect credentials or clock skew.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "RequestTimeout from AWS service, what is it?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: RequestTimeout",
    "answer": "Indicates service did not respond in time; retry or adjust client timeout settings.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "ValidationError on resource creation, what is it?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Common Error: ValidationError",
    "answer": "Occurs when supplied resource configuration fails schema or value checks.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "AccessDenied for S3:GetObject, how to fix?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: S3 AccessDenied",
    "answer": "Ensure bucket policy and IAM policy allow s3:GetObject on the specified bucket and key.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "NoSuchBucket when accessing S3, what does it mean?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: NoSuchBucket",
    "answer": "Occurs when the specified S3 bucket does not exist or is in a different region.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "AuthFailure connecting to EC2, why?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: EC2 AuthFailure",
    "answer": "Indicates IAM credentials are invalid or IAM role does not have ec2:DescribeInstances permission.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "SubnetNotFound error launching instance, what is it?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: SubnetNotFound",
    "answer": "Occurs when the specified subnet ID is invalid or does not exist in the VPC.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "InsufficientInstanceCapacity in AZ, what causes it?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: InsufficientInstanceCapacity",
    "answer": "Indicates AWS does not have available capacity for the requested instance type in the Availability Zone.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "ResourceNotFoundException in CloudWatch, what is it?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: CloudWatchResourceNotFound",
    "answer": "Occurs when the specified metric or alarm name does not exist.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "KMS AccessDeniedException, how to resolve?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: KMS AccessDenied",
    "answer": "Ensure IAM policy and key policy allow kms:Encrypt and kms:Decrypt for the KMS key.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "RolePolicyNotAttached IAMRoleNotFound, what does it mean?",
    "label": "amazon-web-services",
    "language": "en",
    "context": "Specific Error: IAM Role not found",
    "answer": "Occurs when the specified IAM role or policy ARN does not exist or is misspelled.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What is Bash?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Bash (Bourne Again SHell) is a Unix shell and command language used for command-line interfaces and scripting.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Who developed Bash?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: Developer",
    "answer": "Bash was developed by Brian Fox for the GNU Project as a free replacement for the Bourne shell (sh).",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is a shell script?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: Shell script",
    "answer": "A shell script is a text file containing a series of commands executed by the shell interpreter.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is shebang?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: Shebang",
    "answer": "A shebang (#!) at the top of a script specifies the interpreter path, e.g. #!/bin/bash.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is a variable in Bash?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: Variable",
    "answer": "A variable stores data in memory; you assign with VAR=value and access with $VAR.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What is standard input?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: STDIN",
    "answer": "Standard input (stdin) is the default data stream for input, typically the keyboard or a redirected file.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "What is standard output?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: STDOUT",
    "answer": "Standard output (stdout) is the default data stream for command output, typically the terminal.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is standard error?",
    "label": "bash",
    "language": "en",
    "context": "Factoid: STDERR",
    "answer": "Standard error (stderr) is the default data stream for error messages, separate from stdout.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to list files?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: List files",
    "answer": "Use `ls` for file names, `ls -l` for detailed info, `ls -a` to include hidden files.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to change directory?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Change directory",
    "answer": "Use `cd <dir>` to change directory; `cd ..` to go up one level, `cd ~` to go to home.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to copy files?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Copy files",
    "answer": "Use `cp source destination`; use `-r` to copy directories recursively.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to move or rename files?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Move files",
    "answer": "Use `mv source destination`; moves files or renames if destination path changes the name.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to remove files?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Remove files",
    "answer": "Use `rm file`; `rm -r dir` to remove directories recursively, `rm -f` for force.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to view file contents?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: View files",
    "answer": "Use `cat` for full content, `head`/`tail` for beginning/end, `less` for paging.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to search text in files?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Grep",
    "answer": "Use `grep 'pattern' file`; `-r` for recursive, `-i` for case-insensitive.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to redirect output?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Redirect",
    "answer": "Use `>` to overwrite file, `>>` to append, `2>` to redirect stderr.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to pipe commands?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Pipe",
    "answer": "Use `cmd1 | cmd2` to send stdout of cmd1 as stdin to cmd2.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "How to create a directory?",
    "label": "bash",
    "language": "en",
    "context": "Descriptive: Make directory",
    "answer": "Use `mkdir dirname`; `mkdir -p path` to create parent directories as needed.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Compare = vs == in Bash.",
    "label": "bash",
    "language": "en",
    "context": "Comparison: Assignment vs Test",
    "answer": "`=` assigns variables; `==` or `=` inside [[ ]] tests string equality.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Compare single vs double quotes.",
    "label": "bash",
    "language": "en",
    "context": "Comparison: Quotes",
    "answer": "Single quotes protect all characters literally; double quotes allow variable and command substitution.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare [ ] vs [[ ]].",
    "label": "bash",
    "language": "en",
    "context": "Comparison: Test syntax",
    "answer": "[ ] is POSIX test with limited features; [[ ]] is Bash keyword with enhanced pattern matching.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare = vs := in parameter expansion.",
    "label": "bash",
    "language": "en",
    "context": "Comparison: Parameter expansion",
    "answer": "`${var=default}` sets default only in expansion; `:${var:=default}` sets var if unset.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Compare $* vs $@.",
    "label": "bash",
    "language": "en",
    "context": "Comparison: Positional parameters",
    "answer": "`$*` treats all args as a single string; `$@` preserves each arg separately when quoted.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare cd .. vs pushd/popd.",
    "label": "bash",
    "language": "en",
    "context": "Comparison: Directory stack",
    "answer": "`cd ..` changes directory; `pushd` saves current dir and changes, `popd` returns to saved dir.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to write a Bash function?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Function",
    "answer": "Use `function name { commands; }` or `name() { commands; }` and call by name.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to use loops?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Loops",
    "answer": "Use `for var in list; do commands; done`, `while condition; do commands; done`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to use if statements?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Conditionals",
    "answer": "Use `if [ condition ]; then commands; elif [ cond ]; then; else commands; fi`.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to handle command-line arguments?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Arguments",
    "answer": "Access with `$1`, `$2`, \u2026, `$#` for count, `$@` for all, and shift to shift parameters.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to perform arithmetic?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Arithmetic",
    "answer": "Use `$(( expression ))`, `let`, or `expr` for integer arithmetic.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to test file properties?",
    "label": "bash",
    "language": "en",
    "context": "How-to: File test",
    "answer": "Use `-f`, `-d`, `-x` inside test: `if [ -f file ]; then \u2026; fi`.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "How to read user input?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Read input",
    "answer": "Use `read var` to read a line into var; use -p for prompt.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "How to trap signals?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Trap",
    "answer": "Use `trap 'commands' SIGINT SIGTERM` to execute commands on signals.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to debug scripts?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Debug",
    "answer": "Use `bash -x script.sh` or add `set -x` and `set +x` around code blocks.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to source a script?",
    "label": "bash",
    "language": "en",
    "context": "How-to: Source",
    "answer": "Use `source script.sh` or `. script.sh` to run in current shell without spawning subshell.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Why do I get command not found?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: Command not found",
    "answer": "Occurs when command is not in PATH or misspelled; check PATH and command name.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Why is my script permission denied?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: Permission denied",
    "answer": "Make script executable with `chmod +x script.sh`.",
    "start_char": 0,
    "end_char": 49
  },
  {
    "question": "Why do variables not expand?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: No expansion",
    "answer": "Using single quotes prevents expansion; use double quotes or no quotes.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Why does pipe exit status hide errors?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: Pipe",
    "answer": "By default, `$?` returns last command status; use `set -o pipefail` to catch earlier failures.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Why does wildcard not expand?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: Globbing",
    "answer": "Globbing disabled or no matches; check `shopt nullglob` or `failglob` settings.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Why does read not work in script?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: Read",
    "answer": "Running script non-interactively may disable read for stdin; use terminal or redirect file.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Why is exit code always zero?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: Exit code",
    "answer": "Check `set +e`; script may ignore errors without `set -e`.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "Why do variables persist after script?",
    "label": "bash",
    "language": "en",
    "context": "Common Error: Scope",
    "answer": "Scripts run in subshell; export affects child processes only; source to modify current shell.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Syntax error: unexpected token `fi'",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Syntax error",
    "answer": "Occurs when if/fi blocks are mismatched or missing semicolons/line breaks.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "bad substitution",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Bad substitution",
    "answer": "Occurs when using unsupported parameter expansion in sh; use Bash or correct syntax.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "test: [: missing `]\u2019",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Test missing bracket",
    "answer": "Occurs when test syntax is missing closing bracket or spaces around brackets.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "integer expression expected",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Arithmetic",
    "answer": "Occurs when non-numeric value used in arithmetic context; validate input.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "command substitution: `$(...)\u2019 unexpected",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Command substitution",
    "answer": "Using $( ) in /bin/sh script; use backticks or run script with Bash.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "cannot fork: Resource temporarily unavailable",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Fork",
    "answer": "Occurs when system limits reached; close processes or increase ulimit.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "argument list too long",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Arg list",
    "answer": "Occurs when glob expands to too many filenames; use find with -exec or xargs.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "bad interpreter: No such file or directory",
    "label": "bash",
    "language": "en",
    "context": "Specific Error: Bad interpreter",
    "answer": "Shebang path incorrect or Windows line endings present; fix path or remove CRLF.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "What is Git?",
    "label": "git",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Git is a distributed version control system for tracking changes in source code during software development.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Who developed Git?",
    "label": "git",
    "language": "en",
    "context": "Factoid: Creator",
    "answer": "Git was created by Linus Torvalds in 2005 to manage the Linux kernel source code.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What is a repository?",
    "label": "git",
    "language": "en",
    "context": "Factoid: Repository",
    "answer": "A Git repository is a directory that contains your project files and the entire history of their changes.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "What is a commit?",
    "label": "git",
    "language": "en",
    "context": "Factoid: Commit",
    "answer": "A commit is a snapshot of changes in the repository, recorded with a unique SHA-1 identifier.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is a branch?",
    "label": "git",
    "language": "en",
    "context": "Factoid: Branch",
    "answer": "A branch is a movable pointer to a commit, representing an independent line of development.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is HEAD?",
    "label": "git",
    "language": "en",
    "context": "Factoid: HEAD",
    "answer": "HEAD is a reference to the current branch or commit checked out in your working directory.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "What is a remote?",
    "label": "git",
    "language": "en",
    "context": "Factoid: Remote",
    "answer": "A remote is a pointer to a repository hosted elsewhere, such as on GitHub or GitLab.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "What is staging area?",
    "label": "git",
    "language": "en",
    "context": "Factoid: Staging",
    "answer": "The staging area (index) is where you add changes before committing them to the repository.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to initialize a repository?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: init",
    "answer": "Run `git init` in a directory to create a new Git repository with an empty commit history.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to stage changes?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: add",
    "answer": "Use `git add <file>` to stage individual files or `git add .` to stage all modified files.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to commit changes?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: commit",
    "answer": "Run `git commit -m \"message\"` to create a new commit from staged changes with a descriptive message.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to view commit history?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: log",
    "answer": "Use `git log` to display a list of commits; add flags like `--oneline` or `--graph` for brevity.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to create a branch?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: branch create",
    "answer": "Use `git branch <name>` to create a new branch pointer without switching to it.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to switch branches?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: checkout",
    "answer": "Run `git checkout <branch>` to switch your working directory to the specified branch.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to merge branches?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: merge",
    "answer": "Use `git merge <branch>` to integrate changes from another branch into your current branch.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to clone a repository?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: clone",
    "answer": "Run `git clone <url>` to copy a remote repository and its history to your local machine.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to push to remote?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: push",
    "answer": "Use `git push <remote> <branch>` to upload your commits to a remote repository.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to pull updates?",
    "label": "git",
    "language": "en",
    "context": "Descriptive: pull",
    "answer": "Run `git pull` to fetch and merge changes from a remote branch into your current branch.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare merge vs rebase.",
    "label": "git",
    "language": "en",
    "context": "Comparison: merge vs rebase",
    "answer": "Merge creates a new commit combining histories; rebase moves commits to a new base for a linear history.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare fork vs clone.",
    "label": "git",
    "language": "en",
    "context": "Comparison: fork vs clone",
    "answer": "A fork is a remote copy under your account; clone is a local copy of any repository.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare git pull vs fetch.",
    "label": "git",
    "language": "en",
    "context": "Comparison: pull vs fetch",
    "answer": "Fetch downloads commits and updates remotes; pull fetches then merges into your current branch.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare tag vs branch.",
    "label": "git",
    "language": "en",
    "context": "Comparison: tag vs branch",
    "answer": "Tags mark specific commits (immutable); branches move as you add new commits.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Compare shallow vs full clone.",
    "label": "git",
    "language": "en",
    "context": "Comparison: clone depth",
    "answer": "Shallow clone uses `--depth` to limit history; full clone downloads the entire commit history.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare commit vs squash merge.",
    "label": "git",
    "language": "en",
    "context": "Comparison: commit history",
    "answer": "Squash merge combines all changes into a single commit; normal merge keeps separate commits intact.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to revert a commit?",
    "label": "git",
    "language": "en",
    "context": "How-to: revert",
    "answer": "Use `git revert <commit>` to create a new commit that undoes the changes of a specified commit.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to reset changes?",
    "label": "git",
    "language": "en",
    "context": "How-to: reset",
    "answer": "Use `git reset --soft/--mixed/--hard <commit>` to move HEAD and optionally modify index and working directory.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to stash changes?",
    "label": "git",
    "language": "en",
    "context": "How-to: stash",
    "answer": "Run `git stash` to save uncommitted changes and clean your working directory; `git stash apply` to reapply.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to cherry-pick commits?",
    "label": "git",
    "language": "en",
    "context": "How-to: cherry-pick",
    "answer": "Use `git cherry-pick <commit>` to apply a commit from another branch onto your current branch.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to view diff?",
    "label": "git",
    "language": "en",
    "context": "How-to: diff",
    "answer": "Use `git diff` to see unstaged changes, `git diff --staged` for staged changes.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to configure user info?",
    "label": "git",
    "language": "en",
    "context": "How-to: config",
    "answer": "Run `git config --global user.name \"Name\"` and `git config --global user.email \"email@example.com\"`.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to create annotated tag?",
    "label": "git",
    "language": "en",
    "context": "How-to: tag annotated",
    "answer": "Run `git tag -a v1.0 -m \"message\"` to create a tag with name and message.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to delete a branch?",
    "label": "git",
    "language": "en",
    "context": "How-to: branch delete",
    "answer": "Use `git branch -d <branch>` for local or `git push <remote> --delete <branch>` for remote.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to update submodules?",
    "label": "git",
    "language": "en",
    "context": "How-to: submodule",
    "answer": "Run `git submodule update --init --recursive` to clone and checkout submodules.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to bisect?",
    "label": "git",
    "language": "en",
    "context": "How-to: bisect",
    "answer": "Use `git bisect start`, `git bisect bad`, `git bisect good` to find the commit that introduced a bug.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: detached HEAD, what is it?",
    "label": "git",
    "language": "en",
    "context": "Common Error: detached HEAD",
    "answer": "Occurs when HEAD points to a commit instead of a branch; checkout a branch to resume normal commits.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: unmerged paths, how to fix?",
    "label": "git",
    "language": "en",
    "context": "Common Error: unmerged paths",
    "answer": "Resolve merge conflicts manually, then run `git add` on resolved files and `git commit`.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: remote rejected, non-fast-forward, why?",
    "label": "git",
    "language": "en",
    "context": "Common Error: non-fast-forward",
    "answer": "Occurs when push would overwrite remote commits; pull and merge or force push.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: fatal: refusing to merge unrelated histories",
    "label": "git",
    "language": "en",
    "context": "Common Error: unrelated histories",
    "answer": "Occurs when merging repositories with no common base; use `--allow-unrelated-histories`.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: cannot rebase onto multiple branches, cause?",
    "label": "git",
    "language": "en",
    "context": "Common Error: rebase onto multiple",
    "answer": "Rebase expects one branch argument; specify a single branch or commit.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Error: pathspec did not match any file(s), why?",
    "label": "git",
    "language": "en",
    "context": "Common Error: pathspec",
    "answer": "Occurs when the specified path or branch name is misspelled or does not exist.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: index file corrupt, solution?",
    "label": "git",
    "language": "en",
    "context": "Common Error: index corrupt",
    "answer": "Run `rm .git/index` and `git reset` to rebuild the index from HEAD.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Error: gpg failed to sign the data, what to do?",
    "label": "git",
    "language": "en",
    "context": "Common Error: gpg sign",
    "answer": "Configure GPG with `git config --global gpg.program gpg` and ensure key is available.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "ERROR: unable to create file, path too long",
    "label": "git",
    "language": "en",
    "context": "Specific Error: path too long",
    "answer": "Occurs on Windows when file paths exceed MAX_PATH; enable long paths or shorten file names.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "fatal: bad object HEAD, meaning?",
    "label": "git",
    "language": "en",
    "context": "Specific Error: bad object HEAD",
    "answer": "Indicates HEAD reference is invalid; repository may be empty or HEAD file corrupted.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "fatal: loose object X does not exist",
    "label": "git",
    "language": "en",
    "context": "Specific Error: loose object missing",
    "answer": "Occurs when Git cannot find object file; run `git fsck` and restore from backup.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "fatal: Authentication failed, cause?",
    "label": "git",
    "language": "en",
    "context": "Specific Error: auth failed",
    "answer": "Occurs when credentials are invalid or token expired; update credentials or token.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "ERROR: RPC failed; result=22, HTTP code = 411",
    "label": "git",
    "language": "en",
    "context": "Specific Error: RPC failed",
    "answer": "Occurs when Git push data limit issues; increase `http.postBuffer` or use SSH.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "fatal: unrecognized argument show-ref, what is it?",
    "label": "git",
    "language": "en",
    "context": "Specific Error: unrecognized argument",
    "answer": "Indicates Git version does not support the argument; update Git or use correct command syntax.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: unable to forward to unix listener, permission denied",
    "label": "git",
    "language": "en",
    "context": "Specific Error: unix listener",
    "answer": "Occurs when SSH agent socket permissions are incorrect; adjust file permissions.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "fatal: repository not found, why?",
    "label": "git",
    "language": "en",
    "context": "Specific Error: repo not found",
    "answer": "Occurs when the remote URL is incorrect or you lack access rights; verify URL and permissions.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is Oracle Database?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Oracle Database is a multi-model, enterprise-grade relational database management system developed by Oracle Corporation.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "What is an Oracle instance?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: Instance",
    "answer": "An Oracle instance consists of the memory structures (SGA) and background processes that manage database files.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is a tablespace?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: Tablespace",
    "answer": "A tablespace is a logical storage unit in Oracle that groups related datafiles for managing database storage.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is a datafile?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: Datafile",
    "answer": "A datafile is a physical file on disk that stores the data for one or more tablespaces.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is a control file?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: Control file",
    "answer": "A control file records the physical structure of the database, including datafile and redo log file locations.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "What is Oracle RAC?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: RAC",
    "answer": "Oracle RAC (Real Application Clusters) allows multiple instances to access a single database for high availability.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "What is ASM?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: ASM",
    "answer": "ASM (Automatic Storage Management) is Oracle\u2019s volume manager and filesystem for simplifying storage administration.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "What is PL/SQL?",
    "label": "oracle-database",
    "language": "en",
    "context": "Factoid: PL/SQL",
    "answer": "PL/SQL is Oracle\u2019s procedural extension to SQL, supporting variables, loops, and exception handling.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to install Oracle Database?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: Installation",
    "answer": "Run the Oracle Universal Installer, select installation type, specify Oracle home and credentials, then execute configuration scripts.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to start and stop an instance?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: Instance control",
    "answer": "Use SQL*Plus: `STARTUP` to start and `SHUTDOWN [IMMEDIATE|ABORT]` to stop the database instance.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to create a user schema?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: User creation",
    "answer": "In SQL*Plus, use `CREATE USER username IDENTIFIED BY password; GRANT CONNECT, RESOURCE TO username;`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to create a tablespace?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: Tablespace creation",
    "answer": "Run `CREATE TABLESPACE ts_name DATAFILE '/path/ts_name.dbf' SIZE 100M;` to define a new tablespace and datafile.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to connect with SQL*Plus?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: SQL*Plus",
    "answer": "Run `sqlplus username/password@//host:port/service_name` to connect interactively to the database.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to back up with RMAN?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: RMAN backup",
    "answer": "Use RMAN: `BACKUP DATABASE PLUS ARCHIVELOG;` to back up the database and archived logs.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to monitor performance?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: Performance monitoring",
    "answer": "Query AWR views or use Enterprise Manager to review metrics like CPU, I/O, and wait events.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to apply a patchset?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: Patching",
    "answer": "Download the OPatch utility, stop the database, apply patch with `opatch apply`, then restart.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to configure the listener?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: Listener setup",
    "answer": "Edit `listener.ora` in `$ORACLE_HOME/network/admin`, then run `lsnrctl reload` to apply changes.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to enable ARCHIVELOG mode?",
    "label": "oracle-database",
    "language": "en",
    "context": "Descriptive: ARCHIVELOG",
    "answer": "Mount the database, run `ALTER DATABASE ARCHIVELOG; ALTER DATABASE OPEN;` and configure log_archive_dest.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare tablespace vs schema.",
    "label": "oracle-database",
    "language": "en",
    "context": "Comparison: Storage vs Namespace",
    "answer": "Tablespaces organize physical storage; schemas are logical containers for objects owned by a user.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare RMAN backup vs Data Pump.",
    "label": "oracle-database",
    "language": "en",
    "context": "Comparison: Backup methods",
    "answer": "RMAN backs up at the block level, including control files; Data Pump exports logical data and metadata.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare RAC vs Data Guard.",
    "label": "oracle-database",
    "language": "en",
    "context": "Comparison: High availability",
    "answer": "RAC provides active-active clustering; Data Guard provides active-passive standby for disaster recovery.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare AWR vs Statspack.",
    "label": "oracle-database",
    "language": "en",
    "context": "Comparison: Monitoring tools",
    "answer": "AWR is built-in with licensing; Statspack is a manual sampling tool available without extra license.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare materialized view vs view.",
    "label": "oracle-database",
    "language": "en",
    "context": "Comparison: Views",
    "answer": "Views are virtual queries; materialized views store precomputed data for faster access and need refresh.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare local vs bigfile tablespace.",
    "label": "oracle-database",
    "language": "en",
    "context": "Comparison: Tablespace types",
    "answer": "Local tablespace has many small datafiles; bigfile has one large datafile making management simpler.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to create a database?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Database creation",
    "answer": "Use `CREATE DATABASE dbname USER SYS IDENTIFIED BY pwd;` in SQL*Plus with minimal init parameters.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to gather optimizer statistics?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Stats gathering",
    "answer": "Run `EXEC DBMS_STATS.GATHER_DATABASE_STATS();` to collect optimizer statistics.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to configure automatic memory management?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: SGA/PGA",
    "answer": "Set `MEMORY_TARGET` and `MEMORY_MAX_TARGET` in `init.ora` for automatic SGA and PGA sizing.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to create a standby database?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Standby DB",
    "answer": "Take an RMAN backup, configure standby control file and recovery parameters, then start in standby mode.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to configure Data Guard broker?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Data Guard broker",
    "answer": "Use `DGMGRL` to create DG configuration, add primary and standby, and start configuration.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to use SQL*Loader?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Data load",
    "answer": "Create control file, then run `sqlldr userid=user/pwd control=ctlfile.ctl log=logfile.log`.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to use Enterprise Manager?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: OEM",
    "answer": "Access OEM URL, register targets, and use GUI to monitor performance and manage objects.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to configure flashback?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Flashback",
    "answer": "Enable `DB_FLASHBACK_RETENTION_TARGET` and `DB_RECOVERY_FILE_DEST` parameters and archive logs.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to enable Unified Auditing?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Auditing",
    "answer": "Use `ALTER SYSTEM SET AUDIT_TRAIL=DB,EXTENDED SCOPE=SPFILE;` then restart and create audit policies.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to shrink a tablespace?",
    "label": "oracle-database",
    "language": "en",
    "context": "How-to: Tablespace shrink",
    "answer": "Use `ALTER TABLESPACE ts_name COALESCE;` then `ALTER DATABASE DATAFILE 'file.dbf' RESIZE size;`.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "ORA-01017: invalid username/password; logon denied",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: Authentication",
    "answer": "Occurs when provided credentials are incorrect or case sensitivity mismatch.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "ORA-12514: TNS listener does not currently know of service",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: Listener",
    "answer": "Occurs when the listener\u2019s service name does not match the database service.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "ORA-00942: table or view does not exist",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: Object missing",
    "answer": "Occurs when the referenced table or view is missing or not accessible in your schema.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "ORA-01555: snapshot too old",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: Undo",
    "answer": "Occurs when data needed for read consistency is overwritten in the undo segments.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "ORA-00020: maximum number of processes exceeded",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: Processes limit",
    "answer": "Occurs when MAX_PROCESSES initialization parameter is too low for the workload.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "ORA-12541: TNS no listener",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: No listener",
    "answer": "Occurs when the listener process is not running on the database server.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "ORA-04031: unable to allocate 123 bytes of shared memory",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: Memory allocation",
    "answer": "Occurs when Oracle cannot allocate memory in the SGA due to fragmentation or insufficient memory.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "ORA-00001: unique constraint violated",
    "label": "oracle-database",
    "language": "en",
    "context": "Common Error: Constraint",
    "answer": "Occurs when an insert or update violates a unique or primary key constraint.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "ORA-00600: internal error code, arguments",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: Internal",
    "answer": "Indicates an internal Oracle error; consult Oracle support with arguments for diagnosis.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "ORA-07445: exception encountered",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: Crash",
    "answer": "Occurs when Oracle process encounters an unhandled exception or segmentation fault.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "ORA-04061: existing state object invalid",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: Invalid state object",
    "answer": "Occurs when a stored object becomes invalid during runtime; recompile the object.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "ORA-01843: not a valid month",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: Date format",
    "answer": "Occurs when converting a string to a date with an invalid month in the format.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "ORA-00972: identifier too long",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: Identifier length",
    "answer": "Occurs when an object name exceeds the maximum length (30 bytes) limit.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "ORA-12154: TNS could not resolve service name",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: TNS resolution",
    "answer": "Occurs when the connect identifier is not found in tnsnames.ora or directory naming.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "ORA-29532: JVM shared library initialization failed",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: JVM init",
    "answer": "Occurs when the Oracle JVM cannot initialize due to missing library or incorrect permissions.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "ORA-03113: end-of-file on communication channel",
    "label": "oracle-database",
    "language": "en",
    "context": "Specific Error: Communication",
    "answer": "Occurs when the client unexpectedly disconnects or server process terminates.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "What is a DataFrame?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A DataFrame is a two-dimensional labeled data structure with columns of potentially different types, similar to a table.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Which library popularized DataFrames in Python?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: Origin",
    "answer": "The pandas library popularized DataFrames in Python, providing powerful data manipulation capabilities.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is the difference between Series and DataFrame?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: Series vs DataFrame",
    "answer": "A Series is a one-dimensional labeled array; a DataFrame is a two-dimensional labeled data structure.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How are DataFrames indexed?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: Indexing",
    "answer": "DataFrames use an index for rows and column labels for columns, both of which can be customized.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What file formats can DataFrames read?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: I/O",
    "answer": "DataFrames can read CSV, Excel, JSON, SQL, Parquet, and many other file formats.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "What is dtype in a DataFrame?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: Data types",
    "answer": "dtype specifies the data type of a column in a DataFrame, such as int64, float64, or object.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Can DataFrames handle missing data?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: Missing data",
    "answer": "Yes, DataFrames provide methods like dropna, fillna, and isnull to handle missing values.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is a MultiIndex?",
    "label": "dataframe",
    "language": "en",
    "context": "Factoid: MultiIndex",
    "answer": "A MultiIndex is a hierarchical index structure that allows multiple levels of indexing on rows or columns.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to create a DataFrame from a dictionary?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Creation",
    "answer": "Use `pd.DataFrame({'col1': [1,2], 'col2': [3,4]})` to create a DataFrame from a Python dict.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to read a CSV into a DataFrame?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: read_csv",
    "answer": "Use `pd.read_csv('file.csv')` to load CSV data into a DataFrame.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "How to select a column?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Column selection",
    "answer": "Use `df['column_name']` or `df.column_name` to select a single column as a Series.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to select multiple columns?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Multiple columns",
    "answer": "Use `df[['col1', 'col2']]` to select multiple columns and return a new DataFrame.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to select rows by label?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: iloc vs loc",
    "answer": "Use `df.loc[label]` for label-based row selection and `df.iloc[position]` for integer position selection.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to filter rows by condition?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Row filtering",
    "answer": "Use boolean indexing: `df[df['col'] > value]` to filter rows based on a condition.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to add a new column?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Add column",
    "answer": "Assign a Series or list to a new column: `df['new_col'] = df['col1'] + df['col2']`.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to drop rows or columns?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Drop",
    "answer": "Use `df.drop(labels, axis=0 or 1)` to remove rows (axis=0) or columns (axis=1).",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to rename columns?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Rename",
    "answer": "Use `df.rename(columns={'old_name':'new_name'}, inplace=True)` to rename columns.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to describe a DataFrame?",
    "label": "dataframe",
    "language": "en",
    "context": "Descriptive: Describe",
    "answer": "Use `df.describe()` to get summary statistics like count, mean, std, min, and max for numeric columns.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare loc vs iloc.",
    "label": "dataframe",
    "language": "en",
    "context": "Comparison: loc vs iloc",
    "answer": "loc is label-based indexing; iloc is position-based indexing using integer locations.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare dropna vs fillna.",
    "label": "dataframe",
    "language": "en",
    "context": "Comparison: Missing data",
    "answer": "dropna removes missing data; fillna replaces missing values with specified values or methods.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare merge vs concat.",
    "label": "dataframe",
    "language": "en",
    "context": "Comparison: Combining data",
    "answer": "merge joins DataFrames on keys like SQL; concat appends DataFrames along an axis.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Compare apply vs map.",
    "label": "dataframe",
    "language": "en",
    "context": "Comparison: Apply vs Map",
    "answer": "apply can operate on entire Series or DataFrame; map is element-wise for Series only.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare pivot vs pivot_table.",
    "label": "dataframe",
    "language": "en",
    "context": "Comparison: Pivot methods",
    "answer": "pivot reshapes with unique index combinations; pivot_table aggregates with an aggregation function.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare DataFrame vs numpy array.",
    "label": "dataframe",
    "language": "en",
    "context": "Comparison: Data structures",
    "answer": "DataFrame has labeled axes and heterogeneous types; numpy array is homogeneous and index-free.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to group data?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: GroupBy",
    "answer": "Use `df.groupby('col').agg({'col2':'sum'})` to group by a column and aggregate.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to sort a DataFrame?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: Sort",
    "answer": "Use `df.sort_values(by='col', ascending=False)` to sort by column values.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to reset index?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: Reset index",
    "answer": "Use `df.reset_index(drop=True, inplace=True)` to reset the index to a default integer index.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to set a column as index?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: Set index",
    "answer": "Use `df.set_index('col', inplace=True)` to set a column as the row index.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to handle duplicates?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: Duplicates",
    "answer": "Use `df.drop_duplicates(subset=['col'], keep='first')` to remove duplicate rows.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to concatenate DataFrames?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: Concat",
    "answer": "Use `pd.concat([df1, df2], axis=0)` to stack DataFrames vertically.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to merge DataFrames?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: Merge",
    "answer": "Use `pd.merge(df1, df2, on='key', how='inner')` to join DataFrames on a key.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to apply a function row-wise?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: apply",
    "answer": "Use `df.apply(lambda row: row['col1']+row['col2'], axis=1)` to apply a function to each row.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to pivot a DataFrame?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: Pivot",
    "answer": "Use `df.pivot(index='col1', columns='col2', values='col3')` to reshape data.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to export to Excel?",
    "label": "dataframe",
    "language": "en",
    "context": "How-to: to_excel",
    "answer": "Use `df.to_excel('file.xlsx', index=False)` to write the DataFrame to an Excel file.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "KeyError when selecting a column, why?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: KeyError",
    "answer": "Occurs when the specified column label does not exist in the DataFrame.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "ValueError: Cannot set a DataFrame with multiple columns, what does it mean?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: ValueError",
    "answer": "Occurs when assigning a wrong-shaped array or list to a subset of the DataFrame.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "TypeError in apply function, how to fix?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: TypeError",
    "answer": "Occurs when the function passed to apply returns inconsistent types or wrong axis reference.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "MemoryError loading large DataFrame, how to handle?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: MemoryError",
    "answer": "Occurs when data exceeds available memory; use chunksize in read_csv or Dask for larger-than-memory data.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "ParserError: Error tokenizing data, why?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: ParserError",
    "answer": "Occurs when the input file has inconsistent columns or bad delimiters; check file format.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "SettingWithCopyWarning, what is it?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: SettingWithCopyWarning",
    "answer": "Occurs when modifying a slice of a DataFrame; use .loc or copy the DataFrame first.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "AttributeError: 'DataFrame' object has no attribute ..., why?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: AttributeError",
    "answer": "Occurs when calling a method that does not exist on DataFrame; check method name and pandas version.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "MergeError: No common columns to perform merge, what does it mean?",
    "label": "dataframe",
    "language": "en",
    "context": "Common Error: MergeError",
    "answer": "Occurs when merge keys are missing in one or both DataFrames.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "ValueError: Length of values does not match length of index",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: Length mismatch",
    "answer": "Occurs when assigning a sequence to a column with mismatched length.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "EmptyDataError: No columns to parse from file",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: Empty data",
    "answer": "Occurs when the input file is empty or contains no valid columns.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "DtypeWarning: Columns have mixed types",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: DtypeWarning",
    "answer": "Occurs when pandas infers mixed data types in a column; specify dtype or convert types explicitly.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "MemoryError during pivot, what is the issue?",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: MemoryError",
    "answer": "Occurs when pivoting creates a very large DataFrame; consider aggregating first or using sparse representation.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "NotImplementedError: Cannot concatenate object of type 'int', how to fix?",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: NotImplementedError",
    "answer": "Occurs when concatenating mismatched types; convert to strings or use appropriate dtypes before concatenate.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "HttpError when reading from URL, what to check?",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: HttpError",
    "answer": "Occurs when URL is inaccessible or requires authentication; check URL and permissions.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "ParserError: Unexpected end of data",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: ParserError",
    "answer": "Occurs when CSV or JSON file ends prematurely; validate file integrity.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "UnicodeDecodeError reading file, how to resolve?",
    "label": "dataframe",
    "language": "en",
    "context": "Specific Error: UnicodeDecodeError",
    "answer": "Occurs when file encoding mismatches default; specify encoding parameter in read_csv or read_json.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is Microsoft Azure?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Microsoft Azure is a cloud computing platform and service created by Microsoft for building, testing, deploying, and managing applications and services through Microsoft-managed data centers.",
    "start_char": 0,
    "end_char": 191
  },
  {
    "question": "What is Azure Resource Manager (ARM)?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: ARM",
    "answer": "Azure Resource Manager is the deployment and management service for Azure, providing a consistent management layer for creating, updating, and deleting resources in your Azure subscription.",
    "start_char": 0,
    "end_char": 189
  },
  {
    "question": "What is an Azure subscription?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: Subscription",
    "answer": "An Azure subscription is a logical container used to provision resources in Azure, tied to billing and access control, where resource usage is tracked and billed.",
    "start_char": 0,
    "end_char": 162
  },
  {
    "question": "What is an Azure Virtual Machine?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: Virtual Machine",
    "answer": "An Azure Virtual Machine is an on-demand, scalable compute resource that provides virtualized computing environments in the Azure cloud.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "What is Azure Blob Storage?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: Blob Storage",
    "answer": "Azure Blob Storage is Microsoft\u2019s object storage solution for the cloud, optimized for storing massive amounts of unstructured data, such as text or binary data.",
    "start_char": 0,
    "end_char": 161
  },
  {
    "question": "What are Azure Functions?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: Serverless Functions",
    "answer": "Azure Functions is a serverless compute service that lets you run event-triggered code without having to explicitly provision or manage infrastructure.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "What is Azure Active Directory?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: Identity",
    "answer": "Azure Active Directory is Microsoft\u2019s cloud-based identity and access management service, providing single sign-on and multi-factor authentication.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "What is Azure DevOps?",
    "label": "azure",
    "language": "en",
    "context": "Factoid: DevOps",
    "answer": "Azure DevOps is a suite of development tools for planning, developing, testing, and deploying software, including pipelines, repos, boards, and artifacts.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "How to create a resource group?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: Resource Group",
    "answer": "Use the Azure portal, CLI (`az group create --name MyResourceGroup --location eastus`), or ARM template to create a logical container for resources.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to deploy a virtual machine?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: VM Deployment",
    "answer": "Use `az vm create --resource-group MyRG --name MyVM --image UbuntuLTS --admin-username azureuser` or the portal to configure and deploy a VM.",
    "start_char": 0,
    "end_char": 141
  },
  {
    "question": "How to create a storage account?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: Storage Account",
    "answer": "Use `az storage account create --name mystorage --resource-group MyRG --location eastus --sku Standard_LRS` or portal blades.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to configure Azure Functions?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: Functions Config",
    "answer": "Use `func init` and `func new` with Azure Functions Core Tools, configure triggers, and deploy with `func azure functionapp publish`.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to register an application in Azure AD?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: App Registration",
    "answer": "In Azure AD portal, go to App registrations > New registration, enter name, redirect URI, and register for credentials.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to install Azure CLI?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: CLI",
    "answer": "Download and run the installer from Microsoft, or use `npm install -g azure-cli` or package managers like Homebrew.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to use the Azure portal?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: Portal Usage",
    "answer": "Navigate to portal.azure.com, sign in, use dashboard blades to create, monitor, and manage your Azure resources.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to create a pipeline in Azure DevOps?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: Pipeline Creation",
    "answer": "In DevOps project, go to Pipelines > Create Pipeline, connect to repo, configure YAML or classic editor, and save.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to configure Azure Monitor?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: Monitor Config",
    "answer": "Use Azure Monitor service, configure metrics, logs, and set up alerts for resource health and performance metrics.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to use Azure PowerShell?",
    "label": "azure",
    "language": "en",
    "context": "Descriptive: PowerShell",
    "answer": "Install `Az` module with `Install-Module -Name Az`, then use cmdlets like `Connect-AzAccount` and `Get-AzResource`.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare Azure VM vs App Service.",
    "label": "azure",
    "language": "en",
    "context": "Comparison: Compute Options",
    "answer": "Azure VM provides IaaS with full OS control; App Service offers PaaS for hosting web apps without server management.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare Blob Storage vs File Storage.",
    "label": "azure",
    "language": "en",
    "context": "Comparison: Storage Services",
    "answer": "Blob storage stores unstructured object data; File storage offers SMB/NFS file shares for legacy lift-and-shift.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare Azure Functions vs AWS Lambda.",
    "label": "azure",
    "language": "en",
    "context": "Comparison: Serverless",
    "answer": "Both are event-driven serverless compute; Azure Functions integrates with Azure ecosystem, Lambda with AWS services.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare Resource Group vs Management Group.",
    "label": "azure",
    "language": "en",
    "context": "Comparison: Azure Hierarchy",
    "answer": "Resource Groups contain related resources for a solution; Management Groups organize subscriptions for governance.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare Azure SQL vs PostgreSQL Hyperscale.",
    "label": "azure",
    "language": "en",
    "context": "Comparison: Databases",
    "answer": "Azure SQL is fully managed SQL Server; PostgreSQL Hyperscale provides managed Postgres with horizontal scaling.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare Functions consumption plan vs premium plan.",
    "label": "azure",
    "language": "en",
    "context": "Comparison: Hosting Plans",
    "answer": "Consumption plan scales dynamically with cold starts; Premium plan offers pre-warmed instances and VNET support.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to enable Azure AD SSO?",
    "label": "azure",
    "language": "en",
    "context": "How-to: SSO",
    "answer": "In Azure AD Enterprise Applications, configure Single sign-on mode, add metadata, and assign users/groups.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to assign RBAC roles?",
    "label": "azure",
    "language": "en",
    "context": "How-to: RBAC",
    "answer": "Use `az role assignment create --assignee user@domain.com --role Reader --scope /subscriptions/{id}` or portal Access Control.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to create AKS cluster?",
    "label": "azure",
    "language": "en",
    "context": "How-to: AKS",
    "answer": "Run `az aks create --resource-group MyRG --name MyAKS --node-count 3 --enable-addons monitoring --generate-ssh-keys`.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to set up Azure CDN?",
    "label": "azure",
    "language": "en",
    "context": "How-to: CDN",
    "answer": "In Azure portal, create a CDN profile, add an endpoint, and configure origin (storage or web app).",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to configure Azure DNS?",
    "label": "azure",
    "language": "en",
    "context": "How-to: DNS",
    "answer": "Create a DNS zone in portal or CLI, add record sets (A, CNAME, MX), and delegate name servers.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to back up Azure SQL Database?",
    "label": "azure",
    "language": "en",
    "context": "How-to: SQL Backup",
    "answer": "Use automated backups with point-in-time restore, set retention policy under SQL database Backup settings.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to scale App Service?",
    "label": "azure",
    "language": "en",
    "context": "How-to: Scaling",
    "answer": "Configure scale-out rules under App Service Plan Scale out (App Service) blade, based on metrics like CPU.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to configure Network Security Group?",
    "label": "azure",
    "language": "en",
    "context": "How-to: NSG",
    "answer": "Create NSG, define inbound/outbound security rules, and associate with subnets or NICs.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to use Azure Key Vault?",
    "label": "azure",
    "language": "en",
    "context": "How-to: Key Vault",
    "answer": "Create a Key Vault, set access policies, then use SDK or CLI to store and retrieve secrets, keys, and certificates.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to configure Azure Monitor alerts?",
    "label": "azure",
    "language": "en",
    "context": "How-to: Alerts",
    "answer": "In Monitor, select Alerts > New alert rule, choose resource, condition, action group, and create rule.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "AuthorizationFailed when deploying resources",
    "label": "azure",
    "language": "en",
    "context": "Common Error: Auth Failed",
    "answer": "Occurs when the principal lacks permissions on the subscription or resource group; assign proper RBAC roles.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "ResourceGroupNotFound error",
    "label": "azure",
    "language": "en",
    "context": "Common Error: Resource Group",
    "answer": "Occurs when the specified resource group does not exist or is misspelled; verify the group name and location.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "QuotaExceeded for VMs",
    "label": "azure",
    "language": "en",
    "context": "Common Error: Quota",
    "answer": "Occurs when you exceed the VM core or regional quota; request a quota increase through support.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "BadRequest in ARM template",
    "label": "azure",
    "language": "en",
    "context": "Common Error: ARM Template",
    "answer": "Occurs when the template schema or parameters are invalid; validate the template with `az deployment validate`.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Azure Function Timeout error",
    "label": "azure",
    "language": "en",
    "context": "Common Error: Function Timeout",
    "answer": "Occurs when function execution exceeds the timeout limit; increase timeout setting or optimize code.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "AuthenticationFailed when using Azure CLI",
    "label": "azure",
    "language": "en",
    "context": "Common Error: CLI Auth",
    "answer": "Occurs when credentials are invalid or expired; run `az login` again and check account access.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "StorageQuotaExceeded for blob storage",
    "label": "azure",
    "language": "en",
    "context": "Common Error: Storage Quota",
    "answer": "Occurs when storage account reaches capacity; delete unused blobs or upgrade the storage account tier.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Role assignment failed due to insufficient permissions",
    "label": "azure",
    "language": "en",
    "context": "Common Error: RBAC",
    "answer": "Occurs when the user creating the assignment lacks the Owner or User Access Administrator role.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error Code: InvalidTemplate",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: InvalidTemplate",
    "answer": "Deployment template validation failed. Check JSON syntax, parameter types, and required properties.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error Code: LocationNotAvailable",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: Location Not Available",
    "answer": "The specified location is not available for resource type; choose a supported region.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error Code: VMRunningOperationInProgress",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: VM Operation",
    "answer": "Cannot perform the requested operation because another operation is currently running on the VM.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error Code: DNSRecordAlreadyExists",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: DNS Conflict",
    "answer": "The DNS record name is already in use within the zone; choose a unique record name.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error Code: HttpErrorServiceUnavailable",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: Service Unavailable",
    "answer": "The service is temporarily unavailable; retry after some time or check service health.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error Code: SubscriptionNotRegistered",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: Subscription Registration",
    "answer": "The subscription is not registered for the specified resource provider; register using `az provider register`.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Error Code: OperationTimedOut",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: Timeout",
    "answer": "The operation did not complete within the allowed time; retry or break the operation into smaller steps.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error Code: TooManyRequests",
    "label": "azure",
    "language": "en",
    "context": "Specific Error: Rate Limit",
    "answer": "Request rate limit exceeded; implement retry logic with exponential backoff.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "What is Firebase?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Firebase is a Backend-as-a-Service (BaaS) platform by Google offering tools like realtime database, authentication, and hosting.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Who develops Firebase?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Developer",
    "answer": "Firebase was acquired by Google in 2014 and is continuously developed by the Google team as part of Google Cloud.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is Firestore?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Firestore",
    "answer": "Cloud Firestore is a NoSQL document database by Firebase with realtime syncing and offline support.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What is Firebase Realtime Database?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Realtime Database",
    "answer": "Firebase Realtime Database is a JSON tree-based NoSQL database that synchronizes data in realtime across clients.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is Firebase Authentication?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Authentication",
    "answer": "Firebase Authentication provides backend services and SDKs to authenticate users with email/password, OAuth, and more.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is Firebase Hosting?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Hosting",
    "answer": "Firebase Hosting is a static and dynamic content hosting service with global CDN and SSL for web apps.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "What is Cloud Functions for Firebase?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Functions",
    "answer": "Cloud Functions for Firebase lets you run serverless JavaScript/TypeScript code in response to events from Firebase and Google Cloud.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "What is Firebase Cloud Messaging?",
    "label": "firebase",
    "language": "en",
    "context": "Factoid: Cloud Messaging",
    "answer": "Firebase Cloud Messaging (FCM) is a cross-platform messaging solution for sending push notifications and data messages.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to initialize Firebase in a web app?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Initialization",
    "answer": "Import Firebase SDK, call initializeApp({ config }), and use getFirestore(), getAuth(), etc., with the returned app instance.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to add data to Firestore?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Add data",
    "answer": "Use addDoc(collection(db, 'col'), { field: value }) or setDoc(doc(db,'col','id'),{...}) from Firebase Firestore SDK.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to read data from Realtime Database?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Read Realtime DB",
    "answer": "Use onValue(ref(db,'path'), snapshot => { const data = snapshot.val(); }) to listen for changes and retrieve data.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to authenticate users with email/password?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Email auth",
    "answer": "Call createUserWithEmailAndPassword(auth, email, password) to register and signInWithEmailAndPassword(auth, email, password) to sign in.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "How to deploy to Firebase Hosting?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Deploy hosting",
    "answer": "Install Firebase CLI, run firebase init hosting, then firebase deploy to publish your site.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to write a Cloud Function?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Write function",
    "answer": "Define exports.myFunc = functions.region('us').https.onRequest((req,res)=>{...}); in index.js and deploy with firebase deploy --only functions.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "How to send a push notification?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Send FCM",
    "answer": "Use sendMessage() from Firebase Admin SDK or FCM REST API with target tokens and notification payload.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to configure Firebase Storage?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Storage setup",
    "answer": "Enable Storage in console, set security rules, then use getStorage() and uploadBytes or getDownloadURL in client code.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to monitor Firebase performance?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Performance Monitoring",
    "answer": "Add Performance Monitoring SDK to app, initialize with getPerformance(), and view traces in Firebase console.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to set Firestore security rules?",
    "label": "firebase",
    "language": "en",
    "context": "Descriptive: Security Rules",
    "answer": "Edit firestore.rules file with allow rules in match /databases/{database}/documents, then deploy rules with firebase deploy --only firestore:rules.",
    "start_char": 0,
    "end_char": 147
  },
  {
    "question": "Compare Firestore vs Realtime Database.",
    "label": "firebase",
    "language": "en",
    "context": "Comparison: Databases",
    "answer": "Firestore offers richer querying, structured data, and better scalability; Realtime DB uses JSON tree and is optimized for simple realtime sync.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "Compare Cloud Functions vs Cloud Run.",
    "label": "firebase",
    "language": "en",
    "context": "Comparison: Compute",
    "answer": "Cloud Functions auto-scales at function level; Cloud Run runs containerized apps with more control over runtime and scaling.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare Firebase Hosting vs Google Cloud Storage.",
    "label": "firebase",
    "language": "en",
    "context": "Comparison: Hosting vs Storage",
    "answer": "Firebase Hosting is optimized for web content with CDN and SSL; Cloud Storage is general object storage without built-in hosting features.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Compare Firebase Authentication vs Auth0.",
    "label": "firebase",
    "language": "en",
    "context": "Comparison: Auth providers",
    "answer": "Firebase Auth is integrated with other Firebase services and easy to set up; Auth0 offers broader identity provider options and enterprise features.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "Compare sendMessage vs sendMulticast in FCM.",
    "label": "firebase",
    "language": "en",
    "context": "Comparison: FCM APIs",
    "answer": "sendMessage sends to a single token or topic; sendMulticast sends a message to up to 500 tokens in one call.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare realtime listeners vs get() in Firestore.",
    "label": "firebase",
    "language": "en",
    "context": "Comparison: Firestore read",
    "answer": "onSnapshot provides realtime updates; get() fetches a one-time snapshot.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to enable anonymous auth?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Anonymous Auth",
    "answer": "Call signInAnonymously(auth) after enabling anonymous in Firebase console under Authentication > Sign-in methods.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to perform batched writes in Firestore?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Batched writes",
    "answer": "Use writeBatch = batch(db); batch.set(docRef,data); ...; await batch.commit() to perform atomic writes.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to paginate Firestore queries?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Pagination",
    "answer": "Use query(..., orderBy('field'), startAfter(lastDoc), limit(n)) to paginate results.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to use transactions in Firestore?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Transactions",
    "answer": "Use runTransaction(db, async transaction=>{ const doc = await transaction.get(docRef); transaction.update(docRef, {...}); });",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to import data into Realtime Database?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Import DB",
    "answer": "Use Data tab in console to import JSON file, or use firebase database:set with CLI.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to test Cloud Functions locally?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Local emulation",
    "answer": "Install Firebase Emulator Suite, run firebase emulators:start --only functions, and use functions emulator endpoint.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to schedule Cloud Functions?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Scheduled functions",
    "answer": "Use functions.pubsub.schedule('every 5 minutes').onRun(ctx=>{...}); after enabling Cloud Scheduler API.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to integrate Firebase with React Native?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: React Native",
    "answer": "Install @react-native-firebase/app and other modules, configure Android/iOS native files, then use JS SDK.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to export Firestore data?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Export data",
    "answer": "Use gcloud firestore export gs://bucket-name --project=project-id to export collections to Cloud Storage.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to secure Cloud Storage rules?",
    "label": "firebase",
    "language": "en",
    "context": "How-to: Storage rules",
    "answer": "Edit storage.rules with match /b/{bucket}/o { allow read, write: if request.auth != null; } and deploy with firebase deploy --only storage.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Permission denied error accessing Firestore, why?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: Permission denied",
    "answer": "Occurs when security rules block the read/write; update Firestore rules to allow access for authenticated users.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Error 403: Unauthorized in FCM, what causes it?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: FCM unauthorized",
    "answer": "Occurs when server key is invalid or missing in request headers; verify API key in FCM settings.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Functions region-mismatch error, how to fix?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: Region mismatch",
    "answer": "Occurs when using functions from different regions; ensure client and function region match in initialization.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Quota exceeded error in Firebase Hosting, what is it?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: Hosting quota",
    "answer": "Occurs when you exceed free tier limits for hosting storage or bandwidth; upgrade plan or optimize usage.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: Missing or insufficient permissions in Storage, why?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: Storage permissions",
    "answer": "Occurs when storage rules do not grant access; update rules to allow authenticated user access or public read.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Error: Failed to load Google Maps script in Firebase, how to resolve?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: Maps script",
    "answer": "Occurs when referer restrictions block API key; adjust Google Cloud API key restrictions.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Realtime Database disconnected error, what is it?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: Realtime DB disconnect",
    "answer": "Occurs when network issues or database URL incorrect; verify internet connection and databaseURL config.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Authentication popup blocked, how to fix?",
    "label": "firebase",
    "language": "en",
    "context": "Common Error: Auth popup",
    "answer": "Occurs when browser blocks third-party cookies or popups; ask user to allow popups or use redirect flow instead.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Error: 0.IMAPHostError when sending email via Functions",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: IMAP host",
    "answer": "Occurs when email host is unreachable; verify SMTP host and network egress in Cloud Functions settings.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Firestore error code ABORTED, what does it mean?",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: Firestore ABORTED",
    "answer": "Indicates transaction conflicts; retry the transaction as recommended by Firestore SDK.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Functions deploy error: Cannot read property 'split' of undefined",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: Deploy split",
    "answer": "Occurs when package.json missing main file; add a valid main entry or ensure index.js exists.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: MissingAndroidManifest, why in React Native?",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: Android manifest",
    "answer": "Occurs when AndroidManifest.xml is not configured for Firebase; add firebase configuration in manifest.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: auth/invalid-oauth-client-id, what is it?",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: OAuth client",
    "answer": "Occurs when OAuth client ID is incorrect or not configured in Google Cloud Console for the project.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Request failed with status code 429 in FCM",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: FCM rate limit",
    "answer": "Indicates too many requests; implement exponential backoff and reduce request rate.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: EINVAL: illegal argument, write after end in Storage",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: Storage EINVAL",
    "answer": "Occurs when write offset exceeds file size; ensure correct offset or overwrite file instead.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Cannot read properties of undefined (reading 'onAuthStateChanged')",
    "label": "firebase",
    "language": "en",
    "context": "Specific Error: onAuthStateChanged",
    "answer": "Occurs when auth object is not initialized; call getAuth(app) before using onAuthStateChanged.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is BERT?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "BERT (Bidirectional Encoder Representations from Transformers) is a pre-trained language model by Google that uses bidirectional training for NLP tasks.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "Who developed BERT?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: Developer",
    "answer": "BERT was developed by Jacob Devlin and colleagues at Google AI and introduced in 2018.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "What does bidirectional mean in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: Bidirectionality",
    "answer": "Bidirectional means BERT reads text in both directions, learning context from left and right simultaneously.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is a transformer in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: Transformer",
    "answer": "A transformer is a neural network architecture using self-attention mechanisms to process input sequences.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is pre-training in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: Pre-training",
    "answer": "Pre-training is the initial unsupervised training phase where BERT learns language representations from large corpora.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is fine-tuning in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: Fine-tuning",
    "answer": "Fine-tuning is the supervised training phase adapting BERT to specific tasks like classification or QA.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is masked language modeling?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: MLM",
    "answer": "Masked language modeling randomly masks input tokens and trains the model to predict the masked tokens.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is next sentence prediction?",
    "label": "bert",
    "language": "en",
    "context": "Factoid: NSP",
    "answer": "Next sentence prediction trains BERT to understand sentence relationships by predicting if one sentence follows another.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to load a pre-trained BERT model?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Loading model",
    "answer": "Use Hugging Face Transformers: `from transformers import BertModel; model = BertModel.from_pretrained('bert-base-uncased')`.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to tokenize text for BERT?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Tokenization",
    "answer": "Use `BertTokenizer.from_pretrained('bert-base-uncased').encode_plus(text, ...)` to obtain input IDs and attention masks.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to fine-tune BERT for classification?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Classification",
    "answer": "Add a classification head, set up `Trainer` with `BertForSequenceClassification`, and train on labeled data.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to perform question answering with BERT?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: QA",
    "answer": "Use `BertForQuestionAnswering`, prepare input with question and context, and predict start/end token positions.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to extract embeddings from BERT?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Embeddings",
    "answer": "Pass input through BERT model and take hidden states from the last layer or pooled output as embeddings.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to handle long sequences in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Long sequences",
    "answer": "Use sliding window approach, chunk inputs, or models like Longformer for longer context.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to use BERT for named entity recognition?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: NER",
    "answer": "Fine-tune `BertForTokenClassification` with NER labels and use token-level predictions.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to visualize attention in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Attention visualization",
    "answer": "Extract attention weights from model outputs and use libraries like BertViz to display attention heads.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to save and load custom fine-tuned BERT?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Save/Load",
    "answer": "Use `model.save_pretrained(save_path)` and `model.from_pretrained(save_path)` to persist and reload model.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to set learning rate for BERT fine-tuning?",
    "label": "bert",
    "language": "en",
    "context": "Descriptive: Learning rate",
    "answer": "Use smaller rates like 2e-5 to 5e-5 with learning rate schedulers such as linear warmup.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare BERT vs GPT.",
    "label": "bert",
    "language": "en",
    "context": "Comparison: Models",
    "answer": "BERT is bidirectional and encoder-only; GPT is unidirectional and decoder-only generative model.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare BERT vs RoBERTa.",
    "label": "bert",
    "language": "en",
    "context": "Comparison: Variants",
    "answer": "RoBERTa removes next sentence prediction and trains on more data with dynamic masking for improved performance.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare BERT vs DistilBERT.",
    "label": "bert",
    "language": "en",
    "context": "Comparison: Efficiency",
    "answer": "DistilBERT is a smaller, faster distilled version of BERT retaining ~97% performance with fewer parameters.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare BERT vs ALBERT.",
    "label": "bert",
    "language": "en",
    "context": "Comparison: Parameter sharing",
    "answer": "ALBERT uses factorized embeddings and cross-layer parameter sharing to reduce model size.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare fine-tuning vs feature-based BERT.",
    "label": "bert",
    "language": "en",
    "context": "Comparison: Approaches",
    "answer": "Fine-tuning updates all model weights; feature-based uses frozen BERT embeddings with separate model.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare BERT vs BiLSTM.",
    "label": "bert",
    "language": "en",
    "context": "Comparison: Architectures",
    "answer": "BERT uses transformers with attention for global context; BiLSTM uses sequential RNNs processing input left and right.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to train BERT from scratch?",
    "label": "bert",
    "language": "en",
    "context": "How-to: Pre-training",
    "answer": "Prepare large corpus, set up `BertConfig`, initialize `BertForPreTraining`, and train with MLM and NSP objectives.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to use mixed precision with BERT?",
    "label": "bert",
    "language": "en",
    "context": "How-to: Mixed precision",
    "answer": "Enable `accelerate` or `fp16` in Trainer and set `torch.cuda.amp` for faster training.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to perform knowledge distillation on BERT?",
    "label": "bert",
    "language": "en",
    "context": "How-to: Distillation",
    "answer": "Train a smaller student model to mimic teacher BERT outputs using soft labels and intermediate layer losses.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to quantize BERT for inference?",
    "label": "bert",
    "language": "en",
    "context": "How-to: Quantization",
    "answer": "Use ONNX or TensorRT to convert model and apply post-training quantization to reduce precision.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to deploy BERT on Hugging Face Spaces?",
    "label": "bert",
    "language": "en",
    "context": "How-to: Deployment",
    "answer": "Create a `app.py` with Streamlit or Gradio, load model from transformers, and push to HF Spaces.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to optimize BERT for mobile?",
    "label": "bert",
    "language": "en",
    "context": "How-to: Mobile optimization",
    "answer": "Use TensorFlow Lite or ONNX Mobile with quantization and pruning to run BERT on-device.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to integrate BERT with spaCy?",
    "label": "bert",
    "language": "en",
    "context": "How-to: spaCy integration",
    "answer": "Use `spacy-transformers` to wrap BERT model as a spaCy pipeline component.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to use BERT for sentiment analysis?",
    "label": "bert",
    "language": "en",
    "context": "How-to: Sentiment analysis",
    "answer": "Fine-tune `BertForSequenceClassification` on labeled sentiment data and evaluate on test set.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to visualize BERT embeddings with PCA?",
    "label": "bert",
    "language": "en",
    "context": "How-to: PCA visualization",
    "answer": "Extract embeddings, apply `sklearn.decomposition.PCA`, and plot the first two components with matplotlib.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to handle out-of-vocabulary tokens in BERT?",
    "label": "bert",
    "language": "en",
    "context": "How-to: OOV handling",
    "answer": "Subword tokenization breaks words into known subwords, reducing out-of-vocabulary issues.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Why do I get size mismatch error when loading BERT?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: Size mismatch",
    "answer": "Occurs when model configuration and checkpoint sizes differ; use matching config or model version.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Why is training slow on BERT?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: Slow training",
    "answer": "Large model and input length cause high compute; use mixed precision, gradient accumulation, or smaller batch sizes.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Why do I get OOM error with BERT?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: OOM",
    "answer": "Occurs when GPU memory is insufficient; reduce batch size, sequence length, or use gradient checkpointing.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Why does BERT output all [CLS] token same?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: CLS output",
    "answer": "Using `model.base_model` without classification head may output default embeddings only.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Why do I get KeyError for token in BERT tokenizer?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: Tokenizer KeyError",
    "answer": "Occurs when using wrong tokenizer vocabulary; ensure correct `bert-base-...` tokenizer is loaded.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Why is next sentence prediction accuracy low in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: NSP low accuracy",
    "answer": "NSP may not improve downstream tasks; often removed in variants like RoBERTa.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Why do I get truncated inputs warning?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: Truncation",
    "answer": "Input exceeds max length, and tokenizer truncates extras; adjust `max_length` or split sequence.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why is gradient norm exploding in BERT?",
    "label": "bert",
    "language": "en",
    "context": "Common Error: Gradient explosion",
    "answer": "High learning rate or lack of gradient clipping; use lower rate and clip gradients.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "RuntimeError: CUDA error: out of memory",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: CUDA OOM",
    "answer": "GPU memory exhausted; reduce `batch_size`, use `torch.cuda.empty_cache()`, or switch to CPU.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "ValueError: token ids sequence length is longer than the specified maximum",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: Sequence length",
    "answer": "Sequence exceeds model `max_position_embeddings`; truncate or split sequences.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "AttributeError: 'BertModel' object has no attribute 'classifier'",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: AttributeError",
    "answer": "Using base model instead of `BertForSequenceClassification`; switch model class.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "KeyError: 'bert' not found in state dict",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: KeyError",
    "answer": "Checkpoint from different model; load matching model architecture and checkpoint.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "AssertionError: input ids must be a tensor long type",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: Tensor type",
    "answer": "Pass `torch.LongTensor` for input IDs; convert with `torch.tensor(..., dtype=torch.long)`.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "TypeError: forward() missing 1 required positional argument: 'attention_mask'",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: Missing argument",
    "answer": "Model expects `input_ids` and `attention_mask`; include both when calling the model.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "ValueError: Unknown model in from_pretrained",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: Unknown model",
    "answer": "Model name not supported; choose a valid pretrained model identifier.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "RuntimeError: size mismatch for classifier.weight",
    "label": "bert",
    "language": "en",
    "context": "Specific Error: Weight mismatch",
    "answer": "Classifier head size differs from number of classes; adjust `num_labels` in model config.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "PhoBERT is a pre-trained language model for Vietnamese, based on RoBERTa architecture, released by VinAI Research.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Who developed PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Developer",
    "answer": "PhoBERT was developed by VinAI Research to address Vietnamese NLP tasks with a robust pre-trained model.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What architecture does PhoBERT use?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Architecture",
    "answer": "PhoBERT adopts the RoBERTa base architecture, featuring multi-layer transformer encoders.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What corpus was used to train PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Training corpus",
    "answer": "PhoBERT was trained on a large Vietnamese corpus combining news, Wikipedia, and online text totaling over 20GB.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What tokenization does PhoBERT use?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Tokenization",
    "answer": "PhoBERT uses a byte-level BPE tokenizer adapted for Vietnamese scripts and diacritics.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "What tasks is PhoBERT suitable for?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Tasks",
    "answer": "PhoBERT can be fine-tuned for classification, named entity recognition, POS tagging, QA, and more Vietnamese NLP tasks.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Where to find PhoBERT pre-trained weights?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Model access",
    "answer": "PhoBERT weights are available on the Hugging Face Model Hub and GitHub repository by VinAI.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is the model size of PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Factoid: Model size",
    "answer": "PhoBERT base has 110 million parameters; PhoBERT large has 330 million parameters.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to load PhoBERT in Hugging Face Transformers?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Load model",
    "answer": "Use `from transformers import AutoModel, AutoTokenizer; tokenizer=AutoTokenizer.from_pretrained('vinai/phobert-base'); model=AutoModel.from_pretrained('vinai/phobert-base')`.",
    "start_char": 0,
    "end_char": 174
  },
  {
    "question": "How to tokenize Vietnamese text for PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Tokenization",
    "answer": "Call `tokenizer.encode_plus(text, max_length=... , truncation=True, return_tensors='pt')` to obtain input IDs and masks.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to fine-tune PhoBERT for sentiment analysis?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Sentiment fine-tune",
    "answer": "Use `AutoModelForSequenceClassification` with PhoBERT and train on labeled Vietnamese sentiment dataset.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to apply PhoBERT for NER?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: NER",
    "answer": "Fine-tune `AutoModelForTokenClassification` on annotated Vietnamese NER data with BIO tags.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to perform POS tagging with PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: POS tagging",
    "answer": "Fine-tune PhoBERT on POS-labeled Vietnamese corpus using token classification head.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to extract embeddings from PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Embeddings",
    "answer": "Pass inputs to model and take last hidden state or pooled output for sentence-level embeddings.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to handle diacritics in PhoBERT tokenization?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Diacritics",
    "answer": "PhoBERT tokenizer preserves Vietnamese diacritics, so no special preprocessing is needed.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to use PhoBERT for text classification?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Text classification",
    "answer": "Load `AutoModelForSequenceClassification` with PhoBERT weights, add classification head, then train.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to fine-tune PhoBERT with PyTorch Lightning?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Lightning fine-tune",
    "answer": "Wrap model and optimizer in LightningModule, implement training_step, and train with Trainer.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to deploy PhoBERT model in production?",
    "label": "phobert",
    "language": "en",
    "context": "Descriptive: Deployment",
    "answer": "Export to TorchScript or ONNX, serve with TorchServe or Docker for inference.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Compare PhoBERT vs mBERT.",
    "label": "phobert",
    "language": "en",
    "context": "Comparison: PhoBERT vs mBERT",
    "answer": "PhoBERT is trained specifically on Vietnamese text; mBERT is multilingual and less optimized for Vietnamese nuances.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare PhoBERT vs ViBERTa.",
    "label": "phobert",
    "language": "en",
    "context": "Comparison: PhoBERT vs ViBERTa",
    "answer": "Both are Vietnamese RoBERTa-based models; ViBERTa uses different corpus and may have different performance profiles.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare wordpiece vs BPE in PhoBERT tokenizer.",
    "label": "phobert",
    "language": "en",
    "context": "Comparison: Tokenizer types",
    "answer": "PhoBERT uses BPE, which merges frequent subwords; wordpiece merges based on likelihood, both handle OOV differently.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare finetuning vs feature-based PhoBERT.",
    "label": "phobert",
    "language": "en",
    "context": "Comparison: Fine-tune vs feature",
    "answer": "Fine-tuning updates model weights; feature-based uses frozen embeddings as input to downstream classifier.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare base vs large PhoBERT.",
    "label": "phobert",
    "language": "en",
    "context": "Comparison: Model sizes",
    "answer": "Base has fewer layers and parameters; large has more layers improving capacity but requiring more resources.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare PhoBERT vs fastText for Vietnamese.",
    "label": "phobert",
    "language": "en",
    "context": "Comparison: Models",
    "answer": "PhoBERT provides contextual embeddings; fastText provides static word embeddings with subword information.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to set learning rate for PhoBERT fine-tuning?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: Learning rate",
    "answer": "Use small rates like 2e-5 to 5e-5 and a scheduler with warmup steps for stable training.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to use gradient accumulation with PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: Accumulation",
    "answer": "Accumulate gradients over multiple batches by setting `gradient_accumulation_steps` in your training loop.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to freeze layers in PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: Freezing",
    "answer": "Set `param.requires_grad=False` for initial transformer layers before optimizer creation.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to evaluate PhoBERT performance?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: Evaluation",
    "answer": "Use metrics like F1, accuracy on validation set; measure inference speed and memory usage.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to use mixed precision with PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: Mixed precision",
    "answer": "Enable AMP in PyTorch with `autocast` and `GradScaler` for faster training with less memory.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to export PhoBERT to ONNX?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: ONNX export",
    "answer": "Use `torch.onnx.export` with dummy inputs and appropriate opset version to generate ONNX model.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to integrate PhoBERT in spaCy pipeline?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: spaCy",
    "answer": "Use `spacy-transformers` to add PhoBERT model via `TransformerModel` component in spaCy config.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to train PhoBERT on custom Vietnamese corpus?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: Custom pretrain",
    "answer": "Prepare corpus, set up RoBERTa pretraining scripts, and train with MLM objective using Hugging Face Trainer.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to fine-tune PhoBERT on TPU?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: TPU fine-tune",
    "answer": "Use PyTorch XLA or Hugging Face Trainer with `accelerator='tpu'` and `tpu_num_cores` parameters.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to visualize PhoBERT attention weights?",
    "label": "phobert",
    "language": "en",
    "context": "How-to: Attention visualize",
    "answer": "Extract `attentions` from model output and plot heatmaps for selected heads and layers.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Why do I get tokenizer error with PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: Tokenizer",
    "answer": "Occurs when using mismatched tokenizer/model names; ensure `vinai/phobert-*` identifiers match.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Why is fine-tuning unstable?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: Unstable fine-tune",
    "answer": "May be due to high learning rate or small dataset; use gradient clipping and learning rate warmup.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Why do I get OOM error training PhoBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: OOM",
    "answer": "PhoBERT is large; reduce batch size, sequence length, or use mixed precision.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Why does PhoBERT output strange tokens?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: Strange tokens",
    "answer": "Tokenization may split rare words; check tokenizer `decode` and `tokenizer.convert_ids_to_tokens`.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Why is PhoBERT slower than mBERT?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: Slow inference",
    "answer": "PhoBERT uses large vocabulary and transformer layers; optimize with ONNX or TorchScript.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Why does PhoBERT not converge?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: Non-convergence",
    "answer": "Training hyperparameters may be off; adjust learning rate, batch size, and number of epochs.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Why is feature extraction inconsistent?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: Feature extraction",
    "answer": "Ensure model in eval mode and disable dropout: `model.eval()` before embedding extraction.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Why do I get mismatched shape error?",
    "label": "phobert",
    "language": "en",
    "context": "Common Error: Shape mismatch",
    "answer": "Occurs when input sequence length exceeds model max; truncate or pad inputs correctly.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "RuntimeError: CUDA error: out of memory",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: CUDA OOM",
    "answer": "GPU memory exhausted by PhoBERT; reduce batch size or enable `torch.cuda.amp`.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "KeyError: 'input_ids'",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: Missing input",
    "answer": "Input dict missing `input_ids`; ensure tokenizer output passed as model input.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "ValueError: token_ids sequence length longer than maximum",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: Sequence length",
    "answer": "Sequence exceeds model's max length (512); apply truncation or sliding window.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "TypeError: forward() got unexpected keyword argument 'attention_mask'",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: Unexpected argument",
    "answer": "Using model class without support for `attention_mask`; use correct auto class `AutoModel`.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "OSError: Model name 'phobert' was not found",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: Model not found",
    "answer": "Incorrect identifier; use full ID like `vinai/phobert-base` when loading model/tokenizer.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "AssertionError: batch tensors must be same size",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: Batch size",
    "answer": "Padding missing; ensure `padding=True` when tokenizing to equalize tensor sizes.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "AttributeError: 'RoBERTaModel' object has no attribute 'pooler'",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: Pooler missing",
    "answer": "PhoBERT base may not include pooler; use hidden state [CLS] token manually.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "ImportError: cannot import name 'PhoBERT'",
    "label": "phobert",
    "language": "en",
    "context": "Specific Error: ImportError",
    "answer": "Class name incorrect; import via `AutoModel.from_pretrained` not a specific `PhoBERT` class.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is machine learning?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Machine learning is a field of AI where systems learn patterns from data to make predictions without explicit programming.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What is supervised learning?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Supervised learning",
    "answer": "Supervised learning trains models on labeled input-output pairs to map inputs to correct outputs.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is unsupervised learning?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Unsupervised learning",
    "answer": "Unsupervised learning finds patterns or groupings in unlabeled data without predefined targets.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is reinforcement learning?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Reinforcement learning",
    "answer": "Reinforcement learning trains agents via rewards and penalties to maximize cumulative reward in an environment.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is overfitting?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Overfitting",
    "answer": "Overfitting occurs when a model learns noise in the training data and performs poorly on new data.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is underfitting?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Underfitting",
    "answer": "Underfitting happens when a model is too simple to capture underlying data patterns, yielding poor performance.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is cross-validation?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Cross-validation",
    "answer": "Cross-validation partitions data into folds to train and validate a model multiple times for robust evaluation.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is a decision tree?",
    "label": "machine-learning",
    "language": "en",
    "context": "Factoid: Decision tree",
    "answer": "A decision tree is a flowchart-like model that splits data based on feature thresholds to make predictions.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to train a machine learning model?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Training process",
    "answer": "Split data into train/test, choose an algorithm, fit the model on training data, tune hyperparameters, and evaluate performance.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to select features?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Feature selection",
    "answer": "Use methods like correlation analysis, recursive feature elimination, or tree-based importance to choose relevant features.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to handle missing data?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Missing data",
    "answer": "Impute with mean/median, drop missing rows, or use model-based imputation like KNN or iterative methods.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to normalize data?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Normalization",
    "answer": "Scale features using min-max scaling or standardization to zero mean and unit variance before training.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to handle class imbalance?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Class imbalance",
    "answer": "Use oversampling, undersampling, synthetic methods like SMOTE, or adjust class weights in the loss function.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to evaluate model performance?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Evaluation",
    "answer": "Use metrics such as accuracy, precision, recall, F1-score for classification or MSE, RMSE for regression.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to tune hyperparameters?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Hyperparameter tuning",
    "answer": "Use grid search, random search, or Bayesian optimization over a defined parameter grid with cross-validation.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to implement k-means clustering?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: K-means",
    "answer": "Initialize k centroids, assign points to nearest centroid, update centroids, and repeat until convergence.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to perform PCA?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: PCA",
    "answer": "Compute covariance matrix, extract eigenvalues and eigenvectors, and project data onto principal components.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to deploy a model?",
    "label": "machine-learning",
    "language": "en",
    "context": "Descriptive: Deployment",
    "answer": "Serialize the model, containerize with Docker, and serve via a REST API using Flask or cloud ML services.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare supervised vs unsupervised learning.",
    "label": "machine-learning",
    "language": "en",
    "context": "Comparison: Learning types",
    "answer": "Supervised uses labeled data to predict outcomes; unsupervised finds patterns without labels.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare classification vs regression.",
    "label": "machine-learning",
    "language": "en",
    "context": "Comparison: Problem types",
    "answer": "Classification predicts discrete classes; regression predicts continuous numerical values.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare batch vs online learning.",
    "label": "machine-learning",
    "language": "en",
    "context": "Comparison: Learning modes",
    "answer": "Batch trains on the full dataset at once; online updates the model incrementally with streaming data.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare L1 vs L2 regularization.",
    "label": "machine-learning",
    "language": "en",
    "context": "Comparison: Regularization",
    "answer": "L1 adds absolute weight penalty causing sparsity; L2 adds squared penalty reducing weights uniformly.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare bias vs variance.",
    "label": "machine-learning",
    "language": "en",
    "context": "Comparison: Error types",
    "answer": "Bias is error from oversimplification; variance is error from sensitivity to data fluctuations.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare parametric vs non-parametric models.",
    "label": "machine-learning",
    "language": "en",
    "context": "Comparison: Model types",
    "answer": "Parametric models assume a fixed number of parameters; non-parametric adapt complexity based on data.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to build a random forest in Python?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Random forest",
    "answer": "Use scikit-learn: `from sklearn.ensemble import RandomForestClassifier; model = RandomForestClassifier(); model.fit(X_train, y_train)`.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How to perform train-test split?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Train-test split",
    "answer": "Use `from sklearn.model_selection import train_test_split; X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)`.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to detect outliers?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Outlier detection",
    "answer": "Use methods like z-score thresholding or isolation forest to identify and remove outliers.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to run grid search?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Grid search",
    "answer": "Use `GridSearchCV` in scikit-learn with estimator, param grid, and cv to find optimal hyperparameters.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to plot ROC curve?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: ROC curve",
    "answer": "Use `roc_curve` and `auc` from sklearn.metrics to compute and matplotlib to plot false positive vs true positive rates.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to implement logistic regression?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Logistic regression",
    "answer": "Use `LogisticRegression` from scikit-learn: fit the model and use `predict_proba` for probability estimates.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to train a support vector machine?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: SVM",
    "answer": "Use `SVC` in scikit-learn, specify kernel and regularization, fit on training data, and evaluate predictions.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to ensemble models with stacking?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Stacking",
    "answer": "Use `StackingClassifier` in scikit-learn providing base learners and a final estimator to combine predictions.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to analyze feature importance?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Feature importance",
    "answer": "Use `feature_importances_` attribute of tree-based models or permutation importance from sklearn.inspection.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to use pipeline in scikit-learn?",
    "label": "machine-learning",
    "language": "en",
    "context": "How-to: Pipeline",
    "answer": "Use `Pipeline` to chain preprocessing and estimator steps, e.g., `Pipeline([('scaler', StandardScaler()), ('clf', SVC())])`.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Why does my model not converge?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: No convergence",
    "answer": "High learning rate or poor data scaling; try lowering rate, normalizing data, or increasing iterations.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Why ValueError: Input contains NaN?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: NaN input",
    "answer": "Data contains missing values; impute or drop NaNs before training.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "Why does my model overfit?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: Overfitting",
    "answer": "Model too complex or insufficient data; use regularization, more data, or simpler model.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Why incorrect train-test split leak?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: Data leakage",
    "answer": "Features from test set used in training; ensure split before preprocessing.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Why Dimensionality mismatch error?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: Dimension mismatch",
    "answer": "Feature matrix and label array lengths differ; check input shapes before fitting.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Why ConvergenceWarning in logistic regression?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: ConvergenceWarning",
    "answer": "Solver failed to converge; increase max_iter or scale features.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "Why MemoryError training large dataset?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: MemoryError",
    "answer": "Dataset too large for memory; use sampling, batch training, or out-of-core methods.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Why predictions all one class?",
    "label": "machine-learning",
    "language": "en",
    "context": "Common Error: Single class prediction",
    "answer": "Class imbalance or threshold issues; balance classes or adjust decision threshold.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "ValueError: Found input variables with inconsistent numbers of samples",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: Sample mismatch",
    "answer": "X and y arrays have different lengths; ensure they match before fitting.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "KeyError: 'feature_name'",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: KeyError",
    "answer": "Selected column not in DataFrame; check column names and casing.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "TypeError: '>=' not supported between instances of 'NoneType' and 'int'",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: TypeError",
    "answer": "Comparison with None; ensure variables are initialized and not None.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "NotFittedError: This RandomForestClassifier instance is not fitted yet",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: NotFittedError",
    "answer": "Call `fit` on the model before using `predict` or `score`.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "XGBoostError: b'... failed to find file'",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: XGBoostError",
    "answer": "Missing data file for DMatrix; check file path and permissions.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "AttributeError: 'numpy.ndarray' object has no attribute 'toarray'",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: AttributeError",
    "answer": "`toarray` applies to sparse matrices; convert array using `reshape` or use `array` methods.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "LinAlgError: Singular matrix",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: LinAlgError",
    "answer": "Matrix not invertible due to collinearity; remove correlated features or add regularization.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "IndexError: boolean index did not match indexed array",
    "label": "machine-learning",
    "language": "en",
    "context": "Specific Error: IndexError",
    "answer": "Boolean mask length differs from array; ensure mask and array have same shape.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "What is deep learning?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Deep learning is a subset of machine learning using neural networks with many layers to learn hierarchical representations.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is a neural network?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: Neural network",
    "answer": "A neural network is a computational model of interconnected nodes (neurons) organized in layers for processing data.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "What is backpropagation?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: Backpropagation",
    "answer": "Backpropagation is an algorithm for training neural networks by propagating error gradients backward to update weights.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "What is activation function?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: Activation function",
    "answer": "An activation function introduces non-linearity into neural networks, examples include ReLU, sigmoid, and tanh.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is overfitting in deep learning?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: Overfitting",
    "answer": "Overfitting happens when a deep model performs well on training but poorly on unseen data due to excessive complexity.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is dropout?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: Dropout",
    "answer": "Dropout randomly disables neurons during training to prevent overfitting by improving generalization.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is convolutional neural network?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: CNN",
    "answer": "A CNN is a network that uses convolutional layers to capture spatial hierarchies, widely used in image tasks.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is recurrent neural network?",
    "label": "deep-learning",
    "language": "en",
    "context": "Factoid: RNN",
    "answer": "An RNN processes sequential data by maintaining hidden states across time steps for tasks like language modeling.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to build a simple neural network in Keras?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: Keras model",
    "answer": "Use `Sequential`, add `Dense` layers, compile with optimizer and loss, then call `model.fit(X, y)`.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to implement dropout in PyTorch?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: Dropout",
    "answer": "Use `nn.Dropout(p)` in your model definition and set `model.train()` to enable dropout.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to train a CNN?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: CNN training",
    "answer": "Define convolutional and pooling layers, flatten, add dense layers, compile model, and fit on image data.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to preprocess images?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: Image preprocessing",
    "answer": "Resize, normalize pixel values, and apply data augmentation like flips and rotations.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to use pretrained models?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: Transfer learning",
    "answer": "Load model with pretrained weights, freeze base layers, add custom head, and fine-tune on your data.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to implement LSTM in TensorFlow?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: LSTM",
    "answer": "Use `tf.keras.layers.LSTM(units)` in a Sequential model for processing sequential data.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to normalize inputs for deep networks?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: Input normalization",
    "answer": "Scale inputs to zero mean and unit variance, or to [-1, 1] depending on activation functions.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to use batch normalization?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: BatchNorm",
    "answer": "Insert `BatchNormalization` layers after convolution or dense layers to stabilize and accelerate training.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to implement early stopping?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: Early stopping",
    "answer": "Use a callback monitoring validation loss and stop training when it stops improving.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to visualize training progress?",
    "label": "deep-learning",
    "language": "en",
    "context": "Descriptive: Visualization",
    "answer": "Plot loss and accuracy curves using matplotlib from history returned by `model.fit`.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare CNN vs RNN.",
    "label": "deep-learning",
    "language": "en",
    "context": "Comparison: CNN vs RNN",
    "answer": "CNNs excel at spatial data like images; RNNs handle sequential data like text or time series.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare ReLU vs sigmoid activation.",
    "label": "deep-learning",
    "language": "en",
    "context": "Comparison: Activations",
    "answer": "ReLU is faster with sparse activations; sigmoid saturates and can cause vanishing gradients.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare batch normalization vs dropout.",
    "label": "deep-learning",
    "language": "en",
    "context": "Comparison: Regularization",
    "answer": "BatchNorm stabilizes training by normalizing activations; dropout prevents co-adaptation by random deactivation.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare LSTM vs GRU.",
    "label": "deep-learning",
    "language": "en",
    "context": "Comparison: RNN variants",
    "answer": "GRU is simpler with fewer gates and faster to train; LSTM has separate memory cell and may learn longer dependencies.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare fixed learning rate vs learning rate scheduler.",
    "label": "deep-learning",
    "language": "en",
    "context": "Comparison: Learning rate",
    "answer": "Fixed rate remains constant; schedulers adjust rate over epochs for better convergence.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare shallow vs deep neural networks.",
    "label": "deep-learning",
    "language": "en",
    "context": "Comparison: Depth",
    "answer": "Shallow networks have few layers and limited capacity; deep networks capture complex features hierarchically.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to implement a custom loss function?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Custom loss",
    "answer": "Define a function taking (y_true, y_pred) and return a tensor, then pass it to `compile(loss=...)`.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to save and load models?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Save/Load",
    "answer": "Use `model.save('path')` and `load_model('path')` in Keras or `torch.save` and `torch.load` in PyTorch.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to use TensorBoard?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: TensorBoard",
    "answer": "Add a `TensorBoard` callback, log metrics during training, and run `tensorboard --logdir` to visualize.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to implement data augmentation?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Data augmentation",
    "answer": "Use `ImageDataGenerator` in Keras or torchvision transforms to apply random flips, rotations, and shifts.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to perform transfer learning?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Transfer learning",
    "answer": "Load pretrained base model, freeze layers, add new head layers, and fine-tune on target dataset.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to use gradient clipping?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Gradient clipping",
    "answer": "Pass clipnorm or clipvalue to optimizer in Keras or use `torch.nn.utils.clip_grad_norm_` in PyTorch.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to train on GPU?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: GPU training",
    "answer": "Set device to CUDA in PyTorch or ensure TF sees GPU; move model and tensors to device before training.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to implement attention mechanism?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Attention",
    "answer": "Compute weighted sums of encoder outputs using learned attention weights normalizing via softmax.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to optimize with Adam optimizer?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Adam",
    "answer": "Use `Adam` with default params, pass to `compile(optimizer='adam')` or `torch.optim.Adam` in PyTorch.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to quantize model for inference?",
    "label": "deep-learning",
    "language": "en",
    "context": "How-to: Quantization",
    "answer": "Use post-training quantization APIs in TensorFlow Lite or PyTorch to reduce model size and latency.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Why do I get vanishing gradient?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: Vanishing gradient",
    "answer": "Activation derivatives small in deep networks; use ReLU, batch norm, or gradient clipping to mitigate.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Why does my network overfit?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: Overfitting",
    "answer": "Too many parameters relative to data; use regularization, dropout, or more data.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Why training is slow on GPU?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: Slow training",
    "answer": "Data loading bottleneck or small batch size; use data loaders with prefetching and larger batches.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Why get OOM on GPU?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: GPU OOM",
    "answer": "Batch or model too large; reduce batch size, simplify model, or use gradient checkpointing.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Why No module named torch?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: Module not found",
    "answer": "PyTorch not installed or virtual env misconfigured; install package and check environment.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Why high training loss?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: High loss",
    "answer": "Learning rate too low or model underfitting; adjust rate or increase model capacity.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Why nan loss during training?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: NaN loss",
    "answer": "Gradient explosion or division by zero; use lower learning rate, gradient clipping, or numeric stability fixes.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Why incorrect predictions after saving model?",
    "label": "deep-learning",
    "language": "en",
    "context": "Common Error: Save/Load",
    "answer": "Model state not fully saved; ensure saving both architecture and weights correctly.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "RuntimeError: CUDA error: out of memory",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: CUDA OOM",
    "answer": "GPU memory exhausted by model; reduce batch size or use mixed precision.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "ValueError: shapes (32,10) and (20,10) not aligned",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: Shape mismatch",
    "answer": "Model weight and input shape mismatch; check layer dimensions and tensor shapes.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "AttributeError: 'Sequential' object has no attribute 'predict_proba'",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: AttributeError",
    "answer": "Keras Sequential lacks `predict_proba`; use `predict` or functional API model.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "TypeError: forward() takes 1 positional argument but 3 were given",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: forward signature",
    "answer": "Incorrect arguments passed to `forward`; check method signature and call with correct inputs.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "NameError: name 'tf' is not defined",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: NameError",
    "answer": "TensorFlow imported incorrectly; use `import tensorflow as tf`.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "ImportError: cannot import name 'ResNet50'",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: ImportError",
    "answer": "ResNet50 not in current package; import from `tensorflow.keras.applications` or `torchvision.models`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "OOM when allocating tensor without grad",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: OOM allocation",
    "answer": "Tensor too large; move data to CPU or reduce tensor size.",
    "start_char": 0,
    "end_char": 57
  },
  {
    "question": "RuntimeError: mat1 and mat2 shapes cannot be multiplied",
    "label": "deep-learning",
    "language": "en",
    "context": "Specific Error: Linear match",
    "answer": "Linear layer input and weight shapes misaligned; verify input features and layer definitions.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is a thread?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A thread is the smallest unit of execution within a process, sharing the process\u2019s resources but executing independently.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How does multithreading differ from multiprocessing?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Thread vs Process",
    "answer": "Multithreading uses multiple threads within one process sharing memory; multiprocessing uses separate processes with isolated memory.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "What is concurrency?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Concurrency",
    "answer": "Concurrency is the ability of a system to handle multiple tasks in overlapping time periods.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is parallelism?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Parallelism",
    "answer": "Parallelism is the simultaneous execution of multiple tasks on multiple processors or cores.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a race condition?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Race condition",
    "answer": "A race condition occurs when two or more threads access shared data and try to change it simultaneously leading to unpredictable results.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "What is a deadlock?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Deadlock",
    "answer": "A deadlock is a situation where two or more threads wait indefinitely for locks held by each other.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What is a mutex?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Mutex",
    "answer": "A mutex is a mutual exclusion lock that ensures only one thread can access a resource at a time.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is a semaphore?",
    "label": "multithreading",
    "language": "en",
    "context": "Factoid: Semaphore",
    "answer": "A semaphore is a synchronization primitive that controls access to a resource by multiple threads using a counter.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to create a thread in Java?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Java thread",
    "answer": "Extend Thread or implement Runnable, override run(), then call new Thread(runnable).start() to launch.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to create a thread in C++?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: C++ thread",
    "answer": "Include <thread>, create std::thread t(func, args), and call t.join() or t.detach().",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to create a thread in Python?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Python thread",
    "answer": "Import threading, define a Thread(target=func), then call thread.start() to begin execution.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to synchronize threads?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Synchronization",
    "answer": "Use locks/mutexes, semaphores or synchronized blocks/methods (Java) to control access to shared data.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to join threads?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Joining",
    "answer": "Call thread.join() to block the calling thread until the target thread completes.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to use thread pools?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Thread pool",
    "answer": "Use ExecutorService in Java or ThreadPoolExecutor in Python to manage and reuse a pool of threads.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to interrupt a thread?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Interrupt",
    "answer": "Call thread.interrupt() (Java) or use flags in Python to signal a thread to stop itself.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to set thread priority?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Priority",
    "answer": "Use thread.setPriority() in Java or std::thread native handles in C++ with OS-specific APIs.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to implement thread-local storage?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Thread-local",
    "answer": "Use ThreadLocal in Java or thread_local keyword in C++11 to give each thread its own variable instance.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to use condition variables?",
    "label": "multithreading",
    "language": "en",
    "context": "Descriptive: Condition variable",
    "answer": "Use std::condition_variable in C++ or threading.Condition in Python to wait and notify threads.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare thread vs process.",
    "label": "multithreading",
    "language": "en",
    "context": "Comparison: Thread vs Process",
    "answer": "Threads are lighter, share memory, and have lower overhead; processes are isolated with separate memory spaces.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare mutex vs semaphore.",
    "label": "multithreading",
    "language": "en",
    "context": "Comparison: Mutex vs Semaphore",
    "answer": "Mutex allows one thread at a time; semaphore permits a set number of threads.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Compare concurrency vs parallelism.",
    "label": "multithreading",
    "language": "en",
    "context": "Comparison: Concurrency vs Parallelism",
    "answer": "Concurrency deals with multiple tasks conceptually overlapping; parallelism runs tasks simultaneously on multiple cores.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare preemptive vs cooperative threading.",
    "label": "multithreading",
    "language": "en",
    "context": "Comparison: Scheduling",
    "answer": "Preemptive OS interrupts threads to schedule; cooperative threads yield control voluntarily.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare shared memory vs message passing.",
    "label": "multithreading",
    "language": "en",
    "context": "Comparison: Communication",
    "answer": "Shared memory threads communicate via common variables; message passing uses channels or queues.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare locking vs lock-free techniques.",
    "label": "multithreading",
    "language": "en",
    "context": "Comparison: Synchronization",
    "answer": "Locking uses mutexes causing blocking; lock-free uses atomic operations for non-blocking concurrency.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to detect a deadlock?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Deadlock detection",
    "answer": "Use OS tools or implement timeout on lock acquisition and check for cycles in lock graphs.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to avoid race conditions?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Race avoidance",
    "answer": "Use proper synchronization primitives like mutexes or atomic operations when accessing shared data.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to implement a thread pool in Java?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Java thread pool",
    "answer": "Use Executors.newFixedThreadPool(n) to create a thread pool and submit tasks via executor.submit().",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to use atomic variables?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Atomic variables",
    "answer": "Use java.util.concurrent.atomic or std::atomic in C++ for thread-safe operations without locks.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to implement producer-consumer?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Producer-consumer",
    "answer": "Use a shared queue with mutex and condition variable to coordinate producers and consumers.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to interrupt a sleeping thread?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Interrupt sleep",
    "answer": "Call thread.interrupt() in Java or set an interrupt flag checked after waking in custom loops.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to use ReadWriteLock?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: ReadWriteLock",
    "answer": "Use ReentrantReadWriteLock in Java to allow multiple readers or one writer concurrently.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to parallelize a loop?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Parallel loop",
    "answer": "Use parallel streams in Java or OpenMP pragmas in C/C++ to distribute loop iterations across threads.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to join multiple threads with timeout?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Timed join",
    "answer": "Use thread.join(timeout) in Java or tryLock with timeout on a barrier in C++.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to implement future and promise?",
    "label": "multithreading",
    "language": "en",
    "context": "How-to: Future/Promise",
    "answer": "Use std::promise/std::future in C++ or CompletableFuture in Java to handle asynchronous results.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why do I experience a race condition?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Race condition",
    "answer": "Occurs when shared data is accessed without synchronization, allowing threads to interleave unsafely.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Why is my application deadlocking?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Deadlock",
    "answer": "Likely due to circular lock dependencies; ensure consistent lock order or use tryLock with timeout.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Why does thread starvation occur?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Starvation",
    "answer": "High-priority threads or locks monopolize CPU, preventing lower-priority threads from executing.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why do I get livelock?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Livelock",
    "answer": "Threads continuously change state in response to each other without making progress.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Why is performance worse with threads?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Overhead",
    "answer": "Excessive context switching and synchronization overhead can degrade performance.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Why do I get priority inversion?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Priority inversion",
    "answer": "A lower-priority thread holds a lock needed by a higher-priority thread, delaying it.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Why am I leaking threads?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Thread leak",
    "answer": "Threads not terminated or joined properly can accumulate, exhausting resources.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Why do I see memory visibility issues?",
    "label": "multithreading",
    "language": "en",
    "context": "Common Error: Visibility",
    "answer": "Without proper synchronization or volatile modifiers, thread changes may not be seen by others.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "java.lang.IllegalMonitorStateException",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: IllegalMonitorState",
    "answer": "Thrown when wait(), notify(), or notifyAll() is called without owning the monitor lock.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "InterruptedException in Java threads",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: InterruptedException",
    "answer": "Thrown when a thread blocking on sleep, wait, or join is interrupted by another thread.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "std::system_error in C++ threads",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: system_error",
    "answer": "Thrown for threading errors like failing to create or join threads, often due to resource limits.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "BrokenBarrierException in Java",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: BrokenBarrier",
    "answer": "Thrown when a barrier is broken while waiting, e.g., one thread fails to reach the barrier.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "RejectedExecutionException in Java pool",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: RejectedExecution",
    "answer": "Thrown when a task cannot be accepted by ThreadPoolExecutor, often due to shutdown or full queue.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "ThreadDeath error in Java",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: ThreadDeath",
    "answer": "An Error thrown when Thread.stop() is used to abruptly terminate a thread.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "std::future_error in C++",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: future_error",
    "answer": "Thrown for errors related to std::promise and std::future operations, like retrieving twice.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "java.lang.OutOfMemoryError: unable to create new native thread",
    "label": "multithreading",
    "language": "en",
    "context": "Specific Error: OOM",
    "answer": "Thrown when the JVM cannot create a new native thread due to OS or JVM thread limits.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is React Native?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "React Native is a framework by Facebook for building native mobile apps using JavaScript and React.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Who developed React Native?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: Developer",
    "answer": "React Native was developed by Facebook (now Meta) and released in 2015.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What languages does React Native use?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: Languages",
    "answer": "React Native uses JavaScript or TypeScript for logic and JSX for component rendering.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is JSX?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: JSX",
    "answer": "JSX is a syntax extension that allows writing XML-like code within JavaScript to describe UI components.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How does React Native render native UI?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: Rendering",
    "answer": "It translates React components into platform-specific native widgets via a bridge at runtime.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is the React Native bridge?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: Bridge",
    "answer": "The bridge is an asynchronous JSON-based messaging layer connecting JavaScript and native threads.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What platforms does React Native support?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: Platforms",
    "answer": "React Native supports iOS and Android out of the box, with community support for Windows and macOS.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What is Expo in React Native?",
    "label": "react-native",
    "language": "en",
    "context": "Factoid: Expo",
    "answer": "Expo is a set of tools and services built around React Native to streamline development and deployment.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to set up a React Native development environment?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: Setup",
    "answer": "Install Node.js, the React Native CLI or Expo CLI, Android Studio for Android, Xcode for iOS, then run `npx react-native init`.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to run a React Native app on Android emulator?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: Android run",
    "answer": "Start an Android Virtual Device in Android Studio, then run `npx react-native run-android`.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to run a React Native app on iOS simulator?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: iOS run",
    "answer": "Open Xcode simulator or run `npx react-native run-ios` from project directory on macOS.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to style components in React Native?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: Styling",
    "answer": "Use the `StyleSheet.create` method or inline styles with JavaScript objects matching CSS property names.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to navigate between screens?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: Navigation",
    "answer": "Use React Navigation or React Native Navigation libraries to define navigators and navigate via props.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to manage state in React Native?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: State management",
    "answer": "Use React hooks like useState/useReducer, Context API, or libraries like Redux or MobX.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to make HTTP requests?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: HTTP",
    "answer": "Use fetch API built into RN or libraries like axios to perform network requests.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to handle platform-specific code?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: Platform code",
    "answer": "Use Platform module checks or file extensions (.android.js, .ios.js) to load platform-specific implementations.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use device sensors?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: Sensors",
    "answer": "Install community modules like react-native-sensors or expo-sensors and use their APIs.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to debug a React Native app?",
    "label": "react-native",
    "language": "en",
    "context": "Descriptive: Debugging",
    "answer": "Use React Native Debugger, Chrome DevTools, or Flipper to inspect logs, state, and component tree.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare React Native vs React for web.",
    "label": "react-native",
    "language": "en",
    "context": "Comparison: RN vs React web",
    "answer": "React Native uses native components; React for web uses HTML and CSS DOM elements.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Compare Expo vs React Native CLI.",
    "label": "react-native",
    "language": "en",
    "context": "Comparison: Expo vs CLI",
    "answer": "Expo provides managed workflow and easy setup; CLI offers native code access and customization.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare state vs props.",
    "label": "react-native",
    "language": "en",
    "context": "Comparison: State vs Props",
    "answer": "State is mutable and private to a component; props are read-only and passed from parent components.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare functional components vs class components.",
    "label": "react-native",
    "language": "en",
    "context": "Comparison: Component types",
    "answer": "Functional components use hooks for state and lifecycle; class components use lifecycle methods and this.state.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare AsyncStorage vs SecureStore.",
    "label": "react-native",
    "language": "en",
    "context": "Comparison: Storage",
    "answer": "AsyncStorage is unencrypted key-value storage; SecureStore (Expo) encrypts data on device.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare FlatList vs ScrollView.",
    "label": "react-native",
    "language": "en",
    "context": "Comparison: List rendering",
    "answer": "FlatList renders lazily for large data sets; ScrollView renders all children at once suitable for small lists.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to install a third-party library?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Install library",
    "answer": "Use `npm install library-name` or `yarn add library-name`, then link if required with `npx pod-install`.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to link native modules?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Linking",
    "answer": "Use autolinking with RN 0.60+; or `react-native link library-name` for older versions.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to implement push notifications?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Push notifications",
    "answer": "Use services like React Native Firebase or OneSignal and configure native projects with APNs/FCM credentials.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to use animations?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Animations",
    "answer": "Use the Animated API or libraries like react-native-reanimated to create smooth animations.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to access camera and gallery?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Camera/gallery",
    "answer": "Install react-native-image-picker or expo-image-picker and call their methods to launch camera or gallery.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to test with Jest?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Testing",
    "answer": "Use Jest and react-test-renderer; write tests in __tests__ folder and run `npm test`.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to measure performance?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Performance",
    "answer": "Use the built-in PerformanceMonitor, Profiler API, or Flipper plugins to measure frame rates and memory.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to deep link into the app?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Deep linking",
    "answer": "Configure URI schemes in Info.plist (iOS) and AndroidManifest.xml, then handle links with Linking module.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to implement dark mode?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Dark mode",
    "answer": "Use Appearance API to detect color scheme and conditionally apply styles or use Context.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to configure push in release build?",
    "label": "react-native",
    "language": "en",
    "context": "How-to: Release push config",
    "answer": "Set correct keystore for Android, provisioning profile for iOS, and include proper credentials in native code.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Invariant Violation: Element type is invalid",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: Invariant Violation",
    "answer": "Occurs when importing a component incorrectly or exporting default vs named wrongly.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Cannot find module 'react-native-gesture-handler'",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: Module not found",
    "answer": "Install the package and rebuild the native projects; ensure autolinking or manual linking is correct.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Red screen of death with 'Unhandled JS Exception'",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: JS Exception",
    "answer": "Indicates a runtime error in JavaScript; check Metro bundler logs for stack trace.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "ViewPropTypes has been removed from React Native",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: PropTypes removed",
    "answer": "Use prop-types package or update libraries using ViewPropTypes to newer RN versions.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "iOS build fails with 'Library not found for -lRCT'",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: iOS link",
    "answer": "Clean build folder in Xcode, run pod install, and ensure library search paths include React Native.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Android app crashes on startup",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: Android crash",
    "answer": "Check native logs via logcat for missing permissions, mismatched package names, or Gradle config issues.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Bundle index out of range for new architecture",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: New architecture",
    "answer": "Disable new architecture in app build settings or upgrade to matching React Native version.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Metro bundler hangs at 'Loading dependency graph'",
    "label": "react-native",
    "language": "en",
    "context": "Common Error: Metro hang",
    "answer": "Reset cache with `npx react-native start --reset-cache` and ensure no conflicting watchers.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "TypeError: undefined is not an object (evaluating 'props.navigation.navigate')",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: Navigation undefined",
    "answer": "Occurs when a component is not within a Navigator; wrap it or pass navigation prop properly.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Attempt to invoke virtual method on a null object reference",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: Null object",
    "answer": "Native code is calling a null Java object; ensure modules are initialized and context is valid.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Could not connect to development server",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: Dev server",
    "answer": "Ensure Metro bundler is running and device/emulator is on same network as development machine.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "JS ERROR: Maximum update depth exceeded",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: Infinite loop",
    "answer": "Occurs when a component setState or hook updates cause re-render loop; check effect and state logic.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Unhandled promise rejection with 'Network request failed'",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: Network failure",
    "answer": "Occurs on fetch errors; check device network, enable CleartextTraffic on Android or ATS on iOS.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "StackOverflowError in Android",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: Stack overflow",
    "answer": "Likely due to recursive rendering or deep component nesting; refactor to avoid infinite recursion.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "RCTFatalException: Exception thrown while executing UI block",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: UI exception",
    "answer": "A native UI error occurred; inspect native logs for root exception cause.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "Invariant Violation: Text strings must be rendered within a <Text> component",
    "label": "react-native",
    "language": "en",
    "context": "Specific Error: Text violation",
    "answer": "Wrap any plain text in a <Text> component; JSX does not allow raw strings at root.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "What is Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "Kubernetes is an open-source container orchestration platform for automating deployment, scaling, and management of containerized applications.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "Who originally developed Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "Kubernetes was originally developed by Google based on their internal Borg system and is now maintained by the Cloud Native Computing Foundation.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "What is a Pod in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Pod is the smallest deployable unit in Kubernetes, representing one or more containers that share network and storage.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is a Node in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Node is a worker machine in Kubernetes, which may be a virtual or physical server, running pods.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is the Kubernetes API server?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "The API server is the central management entity in Kubernetes, exposing the Kubernetes API.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is etcd in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "etcd is the key-value store used by Kubernetes to store all cluster data and state.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is a Namespace in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Namespace is a virtual cluster within Kubernetes, used to divide cluster resources between multiple users.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is a Service in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Service is an abstraction that defines a logical set of pods and a policy for accessing them.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to install Kubernetes on a single node?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use kubeadm: install Docker, kubeadm, kubelet, kubectl; run `kubeadm init`; configure kubeconfig and apply a pod network.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to deploy a container using kubectl?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl run NAME --image=IMAGE`; then expose it with `kubectl expose deployment NAME --port=80`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to view cluster nodes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Run `kubectl get nodes` to list all nodes in the cluster along with their status and roles.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to scale a deployment?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl scale deployment DEPLOYMENT_NAME --replicas=N` to increase or decrease the number of pods.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to view logs of a pod?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Run `kubectl logs POD_NAME` or `kubectl logs -f POD_NAME` for live streaming.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to exec into a running container?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl exec -it POD_NAME -- /bin/sh` to open an interactive shell inside the container.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to set resource limits?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "In pod spec, define `resources.requests` and `resources.limits` for CPU and memory under container section.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to update an image in deployment?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl set image deployment/DEPLOYMENT_NAME CONTAINER_NAME=NEW_IMAGE` and rollout status.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to rollback a deployment?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Run `kubectl rollout undo deployment/DEPLOYMENT_NAME` to revert to the previous revision.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to expose an application externally?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Create a Service of type LoadBalancer or use Ingress resource with an Ingress Controller for HTTP routing.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare Deployment vs StatefulSet.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "Deployment manages stateless pods with rolling updates; StatefulSet manages stateful pods with stable network IDs and persistent storage.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "Compare ServiceClusterIP vs NodePort.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "ClusterIP exposes service only inside cluster; NodePort makes it accessible on each node\u2019s IP at a static port.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare Job vs CronJob.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "Job runs a pod to completion once; CronJob schedules Jobs to run periodically according to a cron schedule.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare ReplicaSet vs Deployment.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "ReplicaSet ensures a specified number of pod replicas; Deployment manages ReplicaSets and supports rollouts and rollbacks.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Compare DaemonSet vs Deployment.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "DaemonSet runs a copy of a pod on each node; Deployment runs pods based on replicas across nodes.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Compare ConfigMap vs Secret.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "ConfigMap stores non-sensitive configuration data; Secret stores sensitive information encoded in base64.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to create a ConfigMap?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Use `kubectl create configmap NAME --from-file=path/to/file` or define it in YAML and apply with kubectl.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to mount a volume in a Pod?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "In pod spec, under containers define `volumeMounts` and at top-level `volumes` with PVC or hostPath details.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to create a PersistentVolumeClaim?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Define a PVC YAML with storage class, access modes, and resources.requests.storage; apply with `kubectl apply -f`.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to set up an Ingress controller?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Deploy a controller like NGINX Ingress via YAML or Helm chart, then define Ingress resources to route traffic.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to configure liveness and readiness probes?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Add `livenessProbe` and `readinessProbe` sections under container spec with HTTP or TCP checks and thresholds.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use Helm to deploy charts?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Install Helm, add chart repo, then run `helm install RELEASE CHART_NAME --namespace NAMESPACE`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to enable RBAC in cluster?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Set `--authorization-mode=RBAC` on API server, then create Roles and RoleBindings for permissions.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to upgrade Kubernetes version?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Use kubeadm upgrade: `kubeadm upgrade plan` then `kubeadm upgrade apply`, and upgrade kubelet and kubectl.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to troubleshoot pod scheduling failures?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Describe the pod with `kubectl describe pod POD_NAME` to view events, taints, and resource constraints.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to secure cluster communications?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Enable TLS for kubelet and API server, use NetworkPolicies for pod isolation, and integrate with authentication plugins.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Error: CrashLoopBackOff, why?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when a container repeatedly fails to start due to misconfiguration or application errors; check container logs.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Error: ImagePullBackOff, cause?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when image name is incorrect or registry credentials are missing; verify image path and pull secrets.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: ErrImageNeverPull, what is it?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when imagePullPolicy is set to Never and image is not present locally; change policy or pre-pull image.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Error: NodeNotReady, why?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Node is marked NotReady due to kubelet issues, networking problems, or insufficient resources.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: Unauthorized, when accessing API?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when credentials are invalid or RBAC rules deny access; check serviceAccount and RoleBindings.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: PodEvicted, cause?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Pod is evicted due to resource pressure like low memory or disk; review node resources and eviction thresholds.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Error: forbidden: pods/log, why?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when user lacks permissions to view logs; configure RBAC for 'get' on pods/log.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: etcd runner failed, what is it?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when etcd crashes due to data corruption or disk issues; inspect etcd logs and repair data if needed.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: failed to apply default image tag, what?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when no tag is provided and imagePullPolicy is IfNotPresent; specify a tag explicitly.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: no matching CertificateSigningRequest, cause?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when CSR not found for kubelet; ensure node certificates are generated and approved.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: configmap not found, how to fix?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when ConfigMap name mismatches; verify names and namespace, then recreate or apply YAML.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: pod has unbound immediate PersistentVolumeClaims",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when PVC is not bound to a PV; ensure matching storage class and available PV.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: Endpoints not found for service",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when no pods match service selector; verify labels on pods and selector in Service.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: secret \"xxx\" not found",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when Secret resource is missing; create the Secret in the correct namespace beforehand.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: context deadline exceeded, what is it?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when API server times out due to high load or network latency; optimize requests or increase timeout.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: tenant not found, when using multi-tenancy",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when namespace or tenant resource is missing; ensure Tenant CRD and namespace exist.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "Kubernetes is an open-source container orchestration platform for automating deployment, scaling, and management of containerized applications.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "Who originally developed Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "Kubernetes was originally developed by Google based on their internal Borg system and is now maintained by the Cloud Native Computing Foundation.",
    "start_char": 0,
    "end_char": 145
  },
  {
    "question": "What is a Pod in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Pod is the smallest deployable unit in Kubernetes, representing one or more containers that share network and storage.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is a Node in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Node is a worker machine in Kubernetes, which may be a virtual or physical server, running pods.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is the Kubernetes API server?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "The API server is the central management entity in Kubernetes, exposing the Kubernetes API.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is etcd in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "etcd is the key-value store used by Kubernetes to store all cluster data and state.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is a Namespace in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Namespace is a virtual cluster within Kubernetes, used to divide cluster resources between multiple users.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is a Service in Kubernetes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Factoid: Kubernetes definition",
    "answer": "A Service is an abstraction that defines a logical set of pods and a policy for accessing them.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to install Kubernetes on a single node?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use kubeadm: install Docker, kubeadm, kubelet, kubectl; run `kubeadm init`; configure kubeconfig and apply a pod network.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to deploy a container using kubectl?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl run NAME --image=IMAGE`; then expose it with `kubectl expose deployment NAME --port=80`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to view cluster nodes?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Run `kubectl get nodes` to list all nodes in the cluster along with their status and roles.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to scale a deployment?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl scale deployment DEPLOYMENT_NAME --replicas=N` to increase or decrease the number of pods.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to view logs of a pod?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Run `kubectl logs POD_NAME` or `kubectl logs -f POD_NAME` for live streaming.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to exec into a running container?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl exec -it POD_NAME -- /bin/sh` to open an interactive shell inside the container.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to set resource limits?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "In pod spec, define `resources.requests` and `resources.limits` for CPU and memory under container section.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to update an image in deployment?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Use `kubectl set image deployment/DEPLOYMENT_NAME CONTAINER_NAME=NEW_IMAGE` and rollout status.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to rollback a deployment?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Run `kubectl rollout undo deployment/DEPLOYMENT_NAME` to revert to the previous revision.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to expose an application externally?",
    "label": "kubernetes",
    "language": "en",
    "context": "Descriptive: Kubernetes usage",
    "answer": "Create a Service of type LoadBalancer or use Ingress resource with an Ingress Controller for HTTP routing.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare Deployment vs StatefulSet.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "Deployment manages stateless pods with rolling updates; StatefulSet manages stateful pods with stable network IDs and persistent storage.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "Compare ServiceClusterIP vs NodePort.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "ClusterIP exposes service only inside cluster; NodePort makes it accessible on each node\u2019s IP at a static port.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare Job vs CronJob.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "Job runs a pod to completion once; CronJob schedules Jobs to run periodically according to a cron schedule.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare ReplicaSet vs Deployment.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "ReplicaSet ensures a specified number of pod replicas; Deployment manages ReplicaSets and supports rollouts and rollbacks.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Compare DaemonSet vs Deployment.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "DaemonSet runs a copy of a pod on each node; Deployment runs pods based on replicas across nodes.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Compare ConfigMap vs Secret.",
    "label": "kubernetes",
    "language": "en",
    "context": "Comparison: Kubernetes resources",
    "answer": "ConfigMap stores non-sensitive configuration data; Secret stores sensitive information encoded in base64.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to create a ConfigMap?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Use `kubectl create configmap NAME --from-file=path/to/file` or define it in YAML and apply with kubectl.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to mount a volume in a Pod?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "In pod spec, under containers define `volumeMounts` and at top-level `volumes` with PVC or hostPath details.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to create a PersistentVolumeClaim?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Define a PVC YAML with storage class, access modes, and resources.requests.storage; apply with `kubectl apply -f`.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to set up an Ingress controller?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Deploy a controller like NGINX Ingress via YAML or Helm chart, then define Ingress resources to route traffic.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to configure liveness and readiness probes?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Add `livenessProbe` and `readinessProbe` sections under container spec with HTTP or TCP checks and thresholds.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use Helm to deploy charts?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Install Helm, add chart repo, then run `helm install RELEASE CHART_NAME --namespace NAMESPACE`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to enable RBAC in cluster?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Set `--authorization-mode=RBAC` on API server, then create Roles and RoleBindings for permissions.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to upgrade Kubernetes version?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Use kubeadm upgrade: `kubeadm upgrade plan` then `kubeadm upgrade apply`, and upgrade kubelet and kubectl.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to troubleshoot pod scheduling failures?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Describe the pod with `kubectl describe pod POD_NAME` to view events, taints, and resource constraints.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to secure cluster communications?",
    "label": "kubernetes",
    "language": "en",
    "context": "How-to: Kubernetes operations",
    "answer": "Enable TLS for kubelet and API server, use NetworkPolicies for pod isolation, and integrate with authentication plugins.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Error: CrashLoopBackOff, why?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when a container repeatedly fails to start due to misconfiguration or application errors; check container logs.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Error: ImagePullBackOff, cause?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when image name is incorrect or registry credentials are missing; verify image path and pull secrets.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: ErrImageNeverPull, what is it?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when imagePullPolicy is set to Never and image is not present locally; change policy or pre-pull image.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Error: NodeNotReady, why?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Node is marked NotReady due to kubelet issues, networking problems, or insufficient resources.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: Unauthorized, when accessing API?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when credentials are invalid or RBAC rules deny access; check serviceAccount and RoleBindings.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: PodEvicted, cause?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Pod is evicted due to resource pressure like low memory or disk; review node resources and eviction thresholds.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Error: forbidden: pods/log, why?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when user lacks permissions to view logs; configure RBAC for 'get' on pods/log.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: etcd runner failed, what is it?",
    "label": "kubernetes",
    "language": "en",
    "context": "Common Error: Kubernetes troubleshooting",
    "answer": "Occurs when etcd crashes due to data corruption or disk issues; inspect etcd logs and repair data if needed.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: failed to apply default image tag, what?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when no tag is provided and imagePullPolicy is IfNotPresent; specify a tag explicitly.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: no matching CertificateSigningRequest, cause?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when CSR not found for kubelet; ensure node certificates are generated and approved.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: configmap not found, how to fix?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when ConfigMap name mismatches; verify names and namespace, then recreate or apply YAML.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: pod has unbound immediate PersistentVolumeClaims",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when PVC is not bound to a PV; ensure matching storage class and available PV.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: Endpoints not found for service",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when no pods match service selector; verify labels on pods and selector in Service.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: secret \"xxx\" not found",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when Secret resource is missing; create the Secret in the correct namespace beforehand.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: context deadline exceeded, what is it?",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when API server times out due to high load or network latency; optimize requests or increase timeout.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: tenant not found, when using multi-tenancy",
    "label": "kubernetes",
    "language": "en",
    "context": "Specific Error: Kubernetes error",
    "answer": "Occurs when namespace or tenant resource is missing; ensure Tenant CRD and namespace exist.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is Eclipse IDE?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "Eclipse IDE is an open-source integrated development environment primarily for Java, with support for other languages via plugins.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "Who develops Eclipse?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "Eclipse is developed and maintained by the Eclipse Foundation, a not-for-profit organization comprised of industry, academic, and open-source communities.",
    "start_char": 0,
    "end_char": 154
  },
  {
    "question": "What is an Eclipse workspace?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "A workspace in Eclipse is a directory that stores project configurations, settings, and metadata for your development environment.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "What is a perspective in Eclipse?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "A perspective is a pre-defined arrangement of views and editors suited to a specific task, like Java development or debugging.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is a view in Eclipse?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "A view is a visual component within the workbench that provides navigation, information, or editing tools, such as the Package Explorer.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "What is an Eclipse plugin?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "A plugin is a module that extends Eclipse functionality, providing new editors, views, tools, or language support.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "What is Eclipse Marketplace?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "Eclipse Marketplace is a portal integrated into the IDE to discover, install, and manage plugins and features.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "What language is Eclipse written in?",
    "label": "eclipse",
    "language": "en",
    "context": "Factoid: Eclipse definition",
    "answer": "Eclipse is primarily written in Java, using SWT and JFace for its graphical user interface.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to install Eclipse IDE?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Download the installer from eclipse.org, run the installer, select the IDE package, choose an install folder, and finish the setup.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to create a new Java project?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "In Eclipse, go to File > New > Java Project, enter project name, select JRE, and click Finish.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to import an existing project?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Use File > Import > Existing Projects into Workspace, browse to the project folder, select it, and click Finish.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to add external libraries to a project?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Right-click project > Build Path > Configure Build Path, go to Libraries tab, click Add External JARs.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to configure the JRE in Eclipse?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Go to Window > Preferences > Java > Installed JREs, click Add or Edit to configure JDK or JRE installations.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to use the code formatter?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Open Preferences > Java > Code Style > Formatter, select or create a profile, then press Ctrl+Shift+F to format code.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to debug a Java application?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Set breakpoints in code, right-click class > Debug As > Java Application, and use the Debug perspective.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to set breakpoints?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Double-click the left margin in the editor on the target line to toggle a breakpoint icon.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to run JUnit tests?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Right-click test class > Run As > JUnit Test and view results in the JUnit view.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to use Git integration in Eclipse?",
    "label": "eclipse",
    "language": "en",
    "context": "Descriptive: Eclipse usage",
    "answer": "Install EGit plugin, then use File > Import > Git > Projects from Git to clone and manage repositories.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare Eclipse vs IntelliJ IDEA.",
    "label": "eclipse",
    "language": "en",
    "context": "Comparison: Eclipse features",
    "answer": "Eclipse is open-source with extensive plugin support; IntelliJ IDEA is commercial with deep code analysis and out-of-the-box features.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "Compare workspace vs project.",
    "label": "eclipse",
    "language": "en",
    "context": "Comparison: Eclipse features",
    "answer": "A workspace contains settings and metadata for multiple projects; a project is a single codebase with its own settings within a workspace.",
    "start_char": 0,
    "end_char": 138
  },
  {
    "question": "Compare Local History vs Git version control.",
    "label": "eclipse",
    "language": "en",
    "context": "Comparison: Eclipse features",
    "answer": "Local History tracks file changes automatically within Eclipse; Git provides distributed version control across machines and teams.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Compare plugin vs feature.",
    "label": "eclipse",
    "language": "en",
    "context": "Comparison: Eclipse features",
    "answer": "A plugin is a single extension module; a feature is a grouping of plugins packaged for installation together.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare Run vs Debug modes.",
    "label": "eclipse",
    "language": "en",
    "context": "Comparison: Eclipse features",
    "answer": "Run executes the application normally; Debug launches it with debugging hooks, breakpoints, and step controls.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare Java Perspective vs C/C++ Perspective.",
    "label": "eclipse",
    "language": "en",
    "context": "Comparison: Eclipse features",
    "answer": "Java Perspective provides Java-specific views and tools; C/C++ Perspective provides CDT tools for native development.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to install a plugin via Marketplace?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Open Help > Eclipse Marketplace, search for the plugin, click Install, review and accept licenses, then restart IDE.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to set heap memory parameters?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Edit eclipse.ini, adjust -Xms and -Xmx values, and save before restarting Eclipse to apply new memory settings.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to configure Git integration?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Install EGit plugin, then configure your Git credentials in Preferences > Team > Git, and clone repositories.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to export a project as a WAR file?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Right-click project > Export > WAR file, specify destination, and click Finish to generate the WAR.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to generate Javadoc?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Right-click project > Export > Javadoc, select Javadoc command location and options, then finish to create documentation.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to configure code templates?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Open Preferences > Java > Editor > Templates, add or edit templates for code snippets and press Ctrl+Space to use.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to enable auto-build?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Go to Project menu and check Build Automatically to have Eclipse compile projects on save.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to use keyboard shortcuts?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Go to Preferences > General > Keys to view and customize shortcuts, use Ctrl+Shift+L to list all key bindings.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to refactor rename a variable?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "Select the variable, press Alt+Shift+R, edit the name, and press Enter to rename across the project.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to create a server launch configuration?",
    "label": "eclipse",
    "language": "en",
    "context": "How-to: Eclipse operations",
    "answer": "In Servers view, click New Server, choose server type, configure runtime location, and create launch configuration.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Error: Workspace is locked, why?",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs when Eclipse is not shut down properly; remove the .lock file in the workspace's metadata folder.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: Java heap space, why?",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs when the JVM runs out of memory; increase -Xmx in eclipse.ini.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Error: PermGen space error, cause?",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs due to insufficient permanent generation space for class metadata; adjust -XX:MaxPermSize.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: Build path contains errors.",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs when projects reference missing libraries or have compilation errors; check Problems view and fix references.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Error: No JRE specified, what?",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs when project has no configured JRE; set an installed JRE under Project > Properties > Java Build Path.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error: Unable to create project, classpath error.",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs when .classpath file is corrupted; delete it and re-add required libraries.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: The import cannot be resolved.",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs when libraries are not on the build path; add the missing JARs or configure classpath.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Gradle project refresh failed.",
    "label": "eclipse",
    "language": "en",
    "context": "Common Error: Eclipse troubleshooting",
    "answer": "Occurs when build.gradle contains errors or offline mode is enabled; check console log and fix configuration.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "java.lang.OutOfMemoryError: GC overhead limit exceeded",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Thrown when JVM spends too much time garbage collecting; increase heap or optimize code.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "java.lang.ClassNotFoundException: org.eclipse.jdt.core.JavaModelException",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Occurs when JDT plugin is missing or disabled; reinstall Java Development Tools.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "java.lang.NoClassDefFoundError: org/eclipse/jface/viewers/StructuredViewer",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Occurs when JFace library is missing; install missing plugins or correct target platform.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "NullPointerException at line in Workspace.java",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Occurs when workspace metadata is corrupted; try starting with a new workspace.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error code 35 during installation",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Installer error code 35 indicates network issues fetching packages; retry or use offline install.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "P2 composite repository not found",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Occurs when update site URL is incorrect or unavailable; verify URL and network connectivity.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error applying full configuration",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Occurs when there are conflicting plugins; start Eclipse with -clean and resolve conflicts.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error writing to workspace state file",
    "label": "eclipse",
    "language": "en",
    "context": "Specific Error: Eclipse error",
    "answer": "Occurs when workspace directory permissions are insufficient; check file system permissions.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is an algorithm?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "An algorithm is a finite sequence of well-defined instructions to solve a problem or perform a computation.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is time complexity?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Time complexity describes the amount of time an algorithm takes to run as a function of input size, typically using Big O notation.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "What is space complexity?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Space complexity measures the amount of memory an algorithm uses relative to input size, expressed in Big O notation.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is Big O notation?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Big O notation characterizes an algorithm\u2019s upper bound performance, describing worst-case growth rate in terms of input size.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is a greedy algorithm?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A greedy algorithm makes the locally optimal choice at each step, hoping to find a global optimum.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is dynamic programming?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Dynamic programming solves problems by breaking them into overlapping subproblems, storing results to avoid recomputation.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What is divide and conquer?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Divide and conquer solves problems by dividing them into subproblems, solving each independently, and combining results.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is NP-hard?",
    "label": "algorithm",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "NP-hard describes problems as hard as the hardest problems in NP; no known polynomial-time solution exists for NP-hard problems.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to implement binary search on a sorted array?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Check middle element: if equal, return index; if target < middle, search left half; else search right half recursively or iteratively.",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to traverse a binary tree in-order?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Recursively traverse left subtree, visit root node, then traverse right subtree.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to implement quicksort?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Choose pivot, partition array into elements less and greater than pivot, recursively sort partitions, and concatenate results.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to perform breadth-first search (BFS) on a graph?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Use a queue: enqueue start node, mark visited, then dequeue node, enqueue its unvisited neighbors until queue empty.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to perform depth-first search (DFS) on a graph?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Use a stack or recursion: visit start node, mark visited, then recursively visit each unvisited neighbor.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to compute Fibonacci numbers with dynamic programming?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Create an array dp[], set dp[0]=0, dp[1]=1, and for i from 2 to n, dp[i]=dp[i-1]+dp[i-2].",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to solve the 0/1 Knapsack problem using DP?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Define dp[i][w]: max value using first i items and weight w; build table by choosing to include or exclude each item.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to detect a cycle in a directed graph?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Use DFS with recursion stack: mark nodes as visiting; if a neighbor is visiting, a cycle exists.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to perform topological sort on a DAG?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Use DFS post-order: recursively visit nodes, push onto stack after visiting all neighbors, then reverse stack.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to compute the GCD of two numbers?",
    "label": "algorithm",
    "language": "en",
    "context": "Descriptive: Algorithm steps",
    "answer": "Use the Euclidean algorithm: repeatedly replace (a, b) with (b, a mod b) until b is zero; gcd is a.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare QuickSort vs MergeSort.",
    "label": "algorithm",
    "language": "en",
    "context": "Comparison: Algorithm types",
    "answer": "QuickSort uses in-place partitioning with average O(n log n) time but worst-case O(n^2); MergeSort uses O(n) extra space and guarantees O(n log n) time.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "Compare BFS vs DFS.",
    "label": "algorithm",
    "language": "en",
    "context": "Comparison: Algorithm types",
    "answer": "BFS explores neighbors level by level using a queue, good for shortest path; DFS explores depth first using stack/recursion, uses less memory.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "Compare greedy vs dynamic programming.",
    "label": "algorithm",
    "language": "en",
    "context": "Comparison: Algorithm types",
    "answer": "Greedy makes local optimum choices without backtracking; DP solves overlapping subproblems with memoization ensuring global optimum.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Compare Binary Search vs Linear Search.",
    "label": "algorithm",
    "language": "en",
    "context": "Comparison: Algorithm types",
    "answer": "Binary Search runs in O(log n) on sorted arrays; Linear Search runs in O(n) and works on unsorted data.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare hash table vs binary search tree.",
    "label": "algorithm",
    "language": "en",
    "context": "Comparison: Algorithm types",
    "answer": "Hash tables have average O(1) lookups but no order; BSTs have O(log n) lookups and maintain sorted order but can degrade to O(n).",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Compare time vs space trade-off in algorithms.",
    "label": "algorithm",
    "language": "en",
    "context": "Comparison: Algorithm types",
    "answer": "Some algorithms use extra memory to save time (e.g., DP), while others use less memory but may recompute data.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to implement Dijkstra's algorithm?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Use a priority queue initialized with source node distance=0; repeatedly extract min-distance node, update neighbor distances if shorter path found.",
    "start_char": 0,
    "end_char": 148
  },
  {
    "question": "How to implement Bellman-Ford algorithm?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Initialize distances, then relax all edges V-1 times; detect negative cycles by checking for further relaxations.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to implement Huffman coding?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Build a min-heap of leaf nodes with character frequencies, repeatedly extract two smallest, combine into new node, and rebuild tree.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to implement in-place MergeSort?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Divide array, sort halves recursively, then merge by shifting elements within the array without extra arrays (complex).",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to implement recursive DFS?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Write a recursive function that visits a node, marks it visited, and calls itself on each unvisited neighbor.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to implement BFS using a queue?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Initialize queue with start node, then loop: dequeue node, process it, enqueue its unvisited neighbors, until empty.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to insert into a binary search tree?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Compare key with node value: if smaller, recurse left; if larger, recurse right; insert at null child position.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to implement heap sort?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Build a max-heap from array, repeatedly swap root with last element, reduce heap size, and heapify root.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to implement Floyd-Warshall algorithm?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Use a 2D dist matrix; for each k, for each pair (i,j), update dist[i][j]=min(dist[i][j], dist[i][k]+dist[k][j]).",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to implement the Sieve of Eratosthenes?",
    "label": "algorithm",
    "language": "en",
    "context": "How-to: Implement algorithms",
    "answer": "Create a boolean array up to n, mark multiples of each prime starting at 2 as non-prime, then collect remaining primes.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Why does binary search sometimes return a wrong index?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Incorrect mid calculation or failure to update boundaries correctly can lead to missing the target.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Why does my recursive QuickSort cause stack overflow?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Worst-case pivot choices (sorted input) lead to deep recursion; use random pivot or tail recursion optimization.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Why is my dynamic programming solution too slow?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Missing memoization or redundant calculations; ensure subproblem results are stored and reused.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Why does a greedy algorithm fail on some inputs?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Greedy choice may not yield global optimum for problems without the greedy-choice property.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Why am I getting an infinite loop in BFS?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Failure to mark visited nodes can cause revisiting nodes endlessly.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Why does DFS visit nodes multiple times?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Not marking nodes as visited before recursion leads to repeated visits.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Why does my DP table go out of range?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Incorrect table dimensions or index calculations can cause out-of-bounds access.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Why do I get wrong answers for negative numbers?",
    "label": "algorithm",
    "language": "en",
    "context": "Common Error: Algorithm pitfalls",
    "answer": "Some algorithms assume non-negative inputs; negative values may violate algorithm invariants.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "RecursionError: maximum recursion depth exceeded",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs when recursion is too deep (e.g., unbalanced tree); increase recursion limit or convert to iterative approach.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "IndexError: list index out of range in binary search",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs when mid and boundary logic is incorrect; ensure mid calculation and bounds checks are correct.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "KeyError in memoization dictionary",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs when a subproblem result is not stored before lookup; initialize default values or check presence.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "ZeroDivisionError in hash function",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs when using modulo by zero; ensure divisor (table size) is non-zero.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "MemoryError when building DP table",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs when table size is too large for available memory; optimize space or use sparse representation.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs when a recursive function returns None instead of an integer; ensure every branch returns a value.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "ValueError: too many values to unpack in tuple assignment",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs when unpacking wrong number of elements; ensure tuple size matches variables.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "OverflowError: integer addition overflow",
    "label": "algorithm",
    "language": "en",
    "context": "Specific Error: Implementation errors",
    "answer": "Occurs in fixed-width integer environments; use arbitrary-precision types or check for overflow.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is PowerShell?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "PowerShell is a task automation and configuration management framework consisting of a command-line shell and scripting language.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Who developed PowerShell?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "PowerShell was developed by Microsoft, originally as Windows PowerShell, and is now open source as PowerShell Core.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "What is a cmdlet?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "A cmdlet is a lightweight command in PowerShell, implemented as a .NET class, performing a single function.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is the pipeline in PowerShell?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "The pipeline passes the output of one cmdlet as input to another, enabling chained operations with objects.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is a PowerShell module?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "A module is a package that contains cmdlets, providers, functions, workflows, variables, and aliases for reuse.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is PowerShell Core?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "PowerShell Core is the cross-platform, open-source version of PowerShell based on .NET Core.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is PowerShell Remoting?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "PowerShell Remoting allows you to run commands on remote machines using WS-Management or SSH protocols.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is Execution Policy?",
    "label": "powershell",
    "language": "en",
    "context": "Factoid: PowerShell definition",
    "answer": "Execution Policy is a safety feature that controls the conditions under which PowerShell loads configuration files and runs scripts.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "How to install PowerShell on Windows?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Download the MSI installer from GitHub, run it, and follow the setup wizard to install PowerShell Core.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to update PowerShell help files?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Run `Update-Help` in an elevated session to download and install the latest help files for installed modules.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to list installed modules?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Use `Get-Module -ListAvailable` to display all modules installed on the system.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to find cmdlet documentation?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Use `Get-Help <CmdletName> -Detailed` or `-Examples` to view usage and examples of a cmdlet.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to configure your PowerShell profile?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Edit the profile file at `$PROFILE` to customize your environment, such as adding aliases or functions.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to use tab completion?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Press Tab after typing part of a cmdlet or parameter to cycle through available completions.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to work with variables?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Assign with `$var = value`, retrieve with `$var`, and they hold .NET objects rather than text.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to handle errors in scripts?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Use `Try { } Catch { } Finally { }` blocks to catch and handle terminating errors.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to retrieve environment variables?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Access environment variables via `$Env:PATH` or `Get-ChildItem Env:`.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to get process information?",
    "label": "powershell",
    "language": "en",
    "context": "Descriptive: PowerShell usage",
    "answer": "Use `Get-Process` to list processes; filter by name or ID and pipe to `Stop-Process` or `Format-Table`.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare PowerShell vs CMD.",
    "label": "powershell",
    "language": "en",
    "context": "Comparison: PowerShell features",
    "answer": "PowerShell is object-based with cmdlets, optimal for automation; CMD is text-based with limited scripting capabilities.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare PowerShell vs Bash.",
    "label": "powershell",
    "language": "en",
    "context": "Comparison: PowerShell features",
    "answer": "PowerShell uses .NET objects in pipeline; Bash uses text streams and is native to Unix/Linux shells.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare Windows PowerShell vs PowerShell Core.",
    "label": "powershell",
    "language": "en",
    "context": "Comparison: PowerShell features",
    "answer": "Windows PowerShell is Windows-only on .NET Framework; PowerShell Core is cross-platform on .NET Core.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare a script vs a function in PowerShell.",
    "label": "powershell",
    "language": "en",
    "context": "Comparison: PowerShell features",
    "answer": "Scripts are .ps1 files executed sequentially; functions are reusable code blocks defined inside scripts or profiles.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare a module vs a snap-in.",
    "label": "powershell",
    "language": "en",
    "context": "Comparison: PowerShell features",
    "answer": "Modules are package-based and support cross-platform; snap-ins are binary extensions for Windows PowerShell only.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare -eq vs -like operators.",
    "label": "powershell",
    "language": "en",
    "context": "Comparison: PowerShell features",
    "answer": "`-eq` tests for exact equality; `-like` performs wildcard pattern matching.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to write a function?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Define a function with `function Name { param(...) <# code #> }` and call it by name.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to use the pipeline?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Chain cmdlets like `Get-Service | Where-Object Status -eq 'Running' | Select-Object Name`.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to import CSV data?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Use `Import-Csv -Path file.csv` to read into objects with properties for each column.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to work with JSON?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Use `ConvertFrom-Json` to parse JSON strings into objects and `ConvertTo-Json` to serialize objects.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to schedule a script task?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Use `Register-ScheduledTask` cmdlet or Task Scheduler GUI to run a .ps1 script at defined triggers.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to manage Windows services?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Use `Get-Service`, `Start-Service`, `Stop-Service`, and `Restart-Service` cmdlets.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to connect to SQL Server?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Use `Invoke-Sqlcmd -ServerInstance 'Server' -Database 'DB' -Query 'SELECT...'`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to use regex for string matching?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Use `Select-String -Pattern 'regex'` or `-match` operator in conditional statements.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to parse XML files?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Load with `[xml]$doc = Get-Content file.xml` and navigate nodes via `$doc.DocumentElement`.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to sign a script?",
    "label": "powershell",
    "language": "en",
    "context": "How-to: PowerShell scripting",
    "answer": "Use `Set-AuthenticodeSignature -FilePath script.ps1 -Certificate (Get-ChildItem Cert:\\CurrentUser\\My)`.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: File cannot be loaded because running scripts is disabled.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs due to restrictive Execution Policy; use `Set-ExecutionPolicy RemoteSigned` to allow local scripts.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Error: The term '<cmdlet>' is not recognized.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs when a module isn't imported or cmdlet name is mistyped; run `Import-Module` or correct the name.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: Parameter binding failed.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs when invalid parameters are passed; check parameter names and types.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: Access to the registry key is denied.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs due to insufficient permissions; run PowerShell as Administrator or adjust ACLs.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: This cmdlet is not supported on this platform.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs when using Windows-only cmdlets in PowerShell Core on non-Windows platforms.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: Module not found.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs when module is not installed or in PSModulePath; install or update the path.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: Profile script failed to load.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs when syntax error exists in profile; review `$PROFILE` content for errors.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: Cannot bind argument to parameter '<param>' because it is null.",
    "label": "powershell",
    "language": "en",
    "context": "Common Error: PowerShell troubleshooting",
    "answer": "Occurs when required argument is null or missing; verify variable assignment before passing.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Cannot bind parameter 'Path'. Cannot convert value to type System.String.",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs when passing wrong data type; use `-Path` with a string value.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "The term 'Get-ItemColor' is not recognized as the name of a cmdlet.",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs due to cmdlet typo or missing module; correct the name or install the module.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Unexpected token '<' in expression or statement.",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs when accidentally including HTML or improper syntax; remove or escape the token.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Cannot find path 'C:\\NonExistent' because it does not exist.",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs when file path is invalid; verify the path before using file cmdlets.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "You cannot call a method on a null-valued expression.",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs when calling a method on a variable that is null; ensure object is initialized.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "A positional parameter cannot be found that accepts argument.",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs when supplying arguments without specifying parameter names; adjust argument order or use named parameters.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "The remote server returned error: (403) Forbidden",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs when using Invoke-WebRequest without proper authentication; supply credentials or token.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Unable to load DLL 'user32.dll'",
    "label": "powershell",
    "language": "en",
    "context": "Specific Error: PowerShell error",
    "answer": "Occurs when using Add-Type for Win32 calls on non-Windows platform; ensure module and platform compatibility.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is macOS?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "macOS is Apple\u2019s desktop operating system for Mac computers, providing a graphical interface and UNIX-based core.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Who develops macOS?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "macOS is developed by Apple Inc. and released annually with major version updates named after California landmarks.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "What is Finder in macOS?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Finder is the macOS file manager and graphical shell used to browse, organize, and launch files and applications.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is Spotlight?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Spotlight is macOS\u2019s system-wide search feature that indexes files, apps, emails, and metadata for quick access.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "What is Time Machine?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Time Machine is the built-in backup utility in macOS that automatically backs up the system incremental to external drives.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is Terminal?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Terminal is the macOS terminal emulator providing access to the UNIX shell for command-line tasks and scripting.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "What is System Integrity Protection (SIP)?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "SIP is a security feature that restricts root privileges to protect system files and processes from malicious changes.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is Gatekeeper?",
    "label": "macos",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Gatekeeper is macOS\u2019s application security feature that enforces code signing and verifies downloaded apps before opening.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to update macOS to the latest version?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Open System Settings, go to Software Update, then click Update Now or Upgrade Now to install the latest macOS.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to install applications on macOS?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Download from App Store or a trusted website, then drag the app to the Applications folder or run the installer.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to use Spotlight search?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Press Command+Space, type your query, and use arrow keys to select results such as apps, files, or web suggestions.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to manage user accounts?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Go to System Settings > Users & Groups to add, remove, or modify user accounts and set login options.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to configure Time Machine backups?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Connect an external drive, open Time Machine settings, select Backup Disk, and enable automatic backups.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to format a drive with Disk Utility?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Open Disk Utility, select the drive, click Erase, choose APFS or Mac OS Extended, name the volume, and confirm.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use Activity Monitor?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Open Activity Monitor from Utilities to view CPU, memory, energy, disk, and network usage by processes.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to enable FileVault encryption?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Go to System Settings > Privacy & Security > FileVault, then click Turn On FileVault and follow prompts.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to configure Safari preferences?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Open Safari, go to Preferences to customize settings like homepage, privacy, extensions, and appearance.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to set up Screen Time?",
    "label": "macos",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "In System Settings, go to Screen Time to configure usage limits, downtime, and parental controls for accounts.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare macOS vs Windows.",
    "label": "macos",
    "language": "en",
    "context": "Comparison: Features",
    "answer": "macOS offers a UNIX-based environment and tight hardware integration; Windows provides broader software compatibility and customization.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Compare APFS vs HFS+.",
    "label": "macos",
    "language": "en",
    "context": "Comparison: Features",
    "answer": "APFS is optimized for SSDs with cloning and snapshots; HFS+ is the legacy file system with journaling for older drives.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare Finder vs Windows Explorer.",
    "label": "macos",
    "language": "en",
    "context": "Comparison: Features",
    "answer": "Finder uses a sidebar and tabs for navigation with Spotlight integration; Explorer uses ribbon UI and Quick Access.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare Time Machine vs Windows Backup.",
    "label": "macos",
    "language": "en",
    "context": "Comparison: Features",
    "answer": "Time Machine provides versioned backups with hourly snapshots; Windows Backup offers file history and system image backups.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare Terminal vs Command Prompt.",
    "label": "macos",
    "language": "en",
    "context": "Comparison: Features",
    "answer": "Terminal hosts shells like zsh or bash with UNIX tools; Command Prompt provides a Windows-specific command interpreter.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare Spotlight vs Windows Search.",
    "label": "macos",
    "language": "en",
    "context": "Comparison: Features",
    "answer": "Spotlight indexes system metadata and deep content; Windows Search indexes files and supports search in Start menu.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to reset NVRAM/PRAM?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Shut down Mac, then power on and hold Option+Command+P+R for about 20 seconds until Mac restarts again.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to boot into Recovery Mode?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Restart Mac and hold Command+R until the Apple logo appears to enter Recovery for disk utility and reinstall.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to create a bootable macOS installer?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Use `sudo createinstallmedia` in Terminal with the installer app path and a formatted USB drive inserted.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to partition a drive with Disk Utility?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "In Disk Utility, select the drive, click Partition, click + to add, set size and format, then apply.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to install Homebrew packages?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Open Terminal and run `/bin/bash -c \"$(curl -fsSL https://...install.sh)\"`, then use `brew install <package>`.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to manage startup items?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Go to System Settings > General > Login Items to add or remove apps and scripts that launch at login.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to connect to SMB shares?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "In Finder, choose Go > Connect to Server, enter `smb://servername/share`, then click Connect and authenticate.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to configure multiple displays?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Go to System Settings > Displays to arrange, mirror, or extend displays and adjust resolution.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to use Automator to create workflows?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Open Automator, choose a workflow type, drag actions from the library, configure, and save as an app or service.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to enable Voice Control?",
    "label": "macos",
    "language": "en",
    "context": "How-to: Operations",
    "answer": "Go to System Settings > Accessibility > Voice Control and toggle it on to control Mac with voice commands.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Error: Your startup disk is almost full.",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when system volume exceeds capacity; free space by deleting large files or offloading to external storage.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Error: macOS update failed to install.",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs due to corrupted download or insufficient disk space; delete update file in /Library/Updates and retry.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Error: Kernel panic - how to troubleshoot?",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Check recently installed software or hardware, boot in safe mode, and review panic logs in Console.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: App cannot be opened because Apple cannot check it",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Gatekeeper blocked the app; right-click > Open to bypass or adjust Security settings to allow apps.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Could not complete your request in Finder",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs with corrupted preferences; delete com.apple.finder.plist and restart Finder.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: macOS stuck on login screen",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs due to startup item issues; boot into Safe Mode and remove problematic login items.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: Wi-Fi not connecting on Mac",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Check network settings, remove and re-add network, reset SMC/NVRAM, and ensure correct credentials.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Time Machine backup failed",
    "label": "macos",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when backup disk is corrupted; verify in Disk Utility, repair or reformat, then reselect for Time Machine.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Error code -50: operation failed",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Occurs when copying or moving files to external drives; use Disk Utility to repair drive and retry.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error code -36: I/O error",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Occurs due to bad file or permissions; use `dot_clean` in Terminal to remove problematic resource forks.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: su: command not found",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Occurs because `su` is not in default PATH; use `sudo -i` or specify full path `/usr/bin/su`.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: failed to authenticate with Apple ID",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Occurs due to network or credential issues; sign out in System Settings then sign back in.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: Launch Services database corrupted",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Fix by running `lsregister` command in Terminal to rebuild the Launch Services database.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: Gatekeeper killed process",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Occurs when untrusted code is blocked; allow app in Security & Privacy or disable Gatekeeper temporarily.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: Disk Utility can\u2019t repair the disk",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Repair in Recovery Mode using First Aid, or backup and reformat the drive if First Aid fails.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Safari 'Server not found'",
    "label": "macos",
    "language": "en",
    "context": "Specific Error: macOS error",
    "answer": "Occurs due to DNS or network issues; try different DNS servers or flush DNS cache with `sudo dscacheutil -flushcache`.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is Visual Studio?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Visual Studio is an integrated development environment (IDE) by Microsoft for building applications across multiple platforms.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Who develops Visual Studio?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Visual Studio is developed and maintained by Microsoft\u2019s Developer Division.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "What languages does Visual Studio support?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Visual Studio supports C#, VB.NET, C++, F#, JavaScript, TypeScript, Python, and more via extensions.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is a Solution in Visual Studio?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A Solution is a container that organizes one or more related projects and their configurations.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is a Project in Visual Studio?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A Project is a set of source files, references, and configuration settings that produces a build output.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is IntelliSense in Visual Studio?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "IntelliSense provides code completion, parameter info, quick info, and member lists to speed up coding.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is the Visual Studio Marketplace?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "The Marketplace is an online repository of extensions, themes, and tools to enhance Visual Studio.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is MSBuild?",
    "label": "visual-studio",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "MSBuild is Microsoft\u2019s build engine that compiles code, manages dependencies, and produces build artifacts.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to install Visual Studio?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Download the installer from visualstudio.microsoft.com, run it, select workloads, and follow prompts to install.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to create a new project?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Open Visual Studio, choose File > New > Project, select a template, configure settings, and click Create.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to add a reference to a project?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Right-click References in Solution Explorer, choose Add Reference, select assemblies or projects, and click OK.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use the NuGet Package Manager?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Open Tools > NuGet Package Manager, select Manage NuGet Packages for Solution, browse/install/update packages.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to debug an application?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Press F5 or click Debug > Start Debugging to launch the debugger with breakpoints and watch windows.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to set breakpoints?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Click the left margin or press F9 on a code line to toggle a breakpoint in the editor.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to use Code Snippets?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Type a snippet shortcut and press Tab twice, or right-click > Insert Snippet to insert predefined code blocks.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to configure build configurations?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Use the Configuration Manager via Build > Configuration Manager to define Debug/Release and platform settings.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use the Error List window?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Open View > Error List to see build errors, warnings, and messages; double-click items to navigate to code.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to create and run unit tests?",
    "label": "visual-studio",
    "language": "en",
    "context": "Descriptive: IDE usage",
    "answer": "Add a test project, write tests with MSTest, NUnit, or xUnit, then run them via Test > Run All Tests.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare Visual Studio vs Visual Studio Code.",
    "label": "visual-studio",
    "language": "en",
    "context": "Comparison: IDE features",
    "answer": "Visual Studio is a full-featured IDE with integrated designers and debugging; VS Code is a lightweight, cross-platform editor focused on extensibility.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "Compare .NET Framework vs .NET Core projects in VS.",
    "label": "visual-studio",
    "language": "en",
    "context": "Comparison: IDE features",
    "answer": ".NET Framework targets Windows with full APIs; .NET Core (now .NET) is cross-platform with modular runtime and improved performance.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Compare Debug vs Release builds.",
    "label": "visual-studio",
    "language": "en",
    "context": "Comparison: IDE features",
    "answer": "Debug builds include symbols and no optimizations for debugging; Release builds are optimized for performance without debug symbols.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Compare C# vs VB.NET support.",
    "label": "visual-studio",
    "language": "en",
    "context": "Comparison: IDE features",
    "answer": "Both languages are first-class in VS with similar debugging and tooling, differing mainly in syntax and community usage.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare local debugging vs remote debugging.",
    "label": "visual-studio",
    "language": "en",
    "context": "Comparison: IDE features",
    "answer": "Local debugging runs on the same machine; remote debugging attaches to processes on another machine via network.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare Azure DevOps integration vs GitHub integration.",
    "label": "visual-studio",
    "language": "en",
    "context": "Comparison: IDE features",
    "answer": "Azure DevOps provides pipelines and boards within VS; GitHub integration offers GitHub Actions, pull requests, and Codespaces connectivity.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "How to attach the debugger to a running process?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Use Debug > Attach to Process, select the target process, choose code type, then click Attach.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to enable code analysis?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Right-click project > Properties > Code Analysis, enable the ruleset or configure Roslyn analyzers.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to use Live Share?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Click Live Share button, start a session, then share the generated link with collaborators to code together.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to use IntelliCode?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Enable IntelliCode under Tools > Options > IntelliCode to get AI-assisted code completions based on patterns.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to refactor rename symbol?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Right-click the identifier > Refactor > Rename or press F2, update the name, and apply changes across the project.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to find all references?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Right-click symbol > Find All References or press Shift+F12 to list every usage in the References window.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to generate code from a class?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Use Edit > Paste Special > Paste JSON as Classes, or right-click JSON content and use Quick Actions to generate classes.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to use the Performance Profiler?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Go to Debug > Performance Profiler, select tools like CPU Usage, click Start, interact with the app, then analyze results.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to configure launch settings?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Edit launchSettings.json in the Properties folder to define profiles, environment variables, and command line args.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to export IDE settings?",
    "label": "visual-studio",
    "language": "en",
    "context": "How-to: IDE operations",
    "answer": "Go to Tools > Import and Export Settings, choose Export selected environment settings, and save the .vssettings file.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Error: The project file could not be loaded.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when the .csproj or .vcxproj file is malformed or missing; check XML syntax and file path.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: Reference not found.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when a referenced assembly or project is missing or not built; verify references and rebuild dependencies.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Error: NuGet restore failed.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs due to network or package source issues; check NuGet.config, restore sources, and retry packagerestore.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Warning: The breakpoint will not currently be hit.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when symbols are not loaded or code is optimized; ensure Debug configuration and rebuild.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: Object reference not set to an instance of an object.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs at runtime when accessing a null object; add null checks or initialize objects before use.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: Build failed with errors.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when compilation errors exist; review Error List, fix code errors, and rebuild the project.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: Cannot find startup project.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when the solution has no designated startup project; set the desired project as startup via Solution Explorer.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Error: Package installation failed.",
    "label": "visual-studio",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when NuGet package operation fails; check version compatibility, package sources, and disk permissions.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "MSB4011: Include file could not be found",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs when imported .targets or .props file path is incorrect; verify path and import statement in the project file.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "MSB6006: \"cl.exe\" exited with code",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs when the C/C++ compiler fails, often due to syntax errors or missing include paths; check compiler output.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "CS1002: ; expected",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs when a semicolon is missing at the end of a statement; add the missing semicolon.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "CS0234: The type or namespace name 'X' does not exist",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs when a namespace or assembly reference is missing; add the correct using directive or reference.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "TF30063: You are not authorized to access",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs when access to Azure DevOps or TFS is denied; verify credentials and permissions.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "VS0005: Unknown error occurred",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs for unspecified IDE failures; restart Visual Studio or check logs under %AppData% for details.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "PDB load failed: Access is denied",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs when symbol (PDB) file cannot be opened due to permissions; ensure build folder permissions allow read access.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Unable to start program '...': Access is denied",
    "label": "visual-studio",
    "language": "en",
    "context": "Specific Error: IDE error",
    "answer": "Occurs when the executable is locked or lacks execute permissions; close competing processes or adjust file permissions.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is NumPy?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "NumPy is a Python library for numerical computing, providing array objects and functions for mathematical operations.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is an ndarray?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "An ndarray is the primary N-dimensional array object in NumPy used for efficient storage and computation of homogeneous data.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "What is vectorization in NumPy?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Vectorization refers to performing operations on entire arrays rather than element-by-element loops, enabling faster computation.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "What data types does NumPy support?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "NumPy supports various data types like int32, float64, bool, and complex numbers, specified in dtype parameter.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is broadcasting?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Broadcasting allows arithmetic operations on arrays of different shapes by automatically expanding dimensions to match.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "What is a universal function (ufunc)?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A ufunc is a vectorized function provided by NumPy that operates element-wise on ndarrays with optimized C implementation.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "What is shape in NumPy?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "The shape of an ndarray is a tuple of integers indicating the size of the array along each dimension.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is a view vs copy in NumPy?",
    "label": "numpy",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "A view is a new array object that looks at the same data, while a copy allocates new memory and duplicates the data.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to create a NumPy array from a list?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use np.array(list) to convert a Python list or sequence into a NumPy ndarray.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to create a range array?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use np.arange(start, stop, step) to create evenly spaced values within a given interval.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to reshape an array?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use ndarray.reshape(new_shape) to give a new shape to the array without changing its data.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to access array elements by index?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use array[i, j] or array[tuple_of_indices] to access elements at specific positions in the ndarray.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to slice an array?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use slicing notation array[start:stop:step] on each axis to extract subarrays.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to concatenate arrays?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use np.concatenate([arr1, arr2], axis) to join a sequence of arrays along an existing axis.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to split an array?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use np.split(array, indices_or_sections, axis) to divide an array into multiple subarrays.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to sort an array?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use np.sort(array) to return a sorted copy, or array.sort() to sort in-place.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to compute statistical functions?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use methods like array.mean(), array.std(), array.min(), and array.max() for summary statistics.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to save and load arrays?",
    "label": "numpy",
    "language": "en",
    "context": "Descriptive: Array operations",
    "answer": "Use np.save('file.npy', array) to save and np.load('file.npy') to load arrays from disk.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare list vs ndarray.",
    "label": "numpy",
    "language": "en",
    "context": "Comparison: NumPy functions",
    "answer": "Lists are Python objects with heterogeneous types and slow element-wise loops; ndarrays are homogeneous, fixed-type, and optimized for vectorized operations.",
    "start_char": 0,
    "end_char": 157
  },
  {
    "question": "Compare np.array vs np.asarray.",
    "label": "numpy",
    "language": "en",
    "context": "Comparison: NumPy functions",
    "answer": "np.array always returns a copy or new array; np.asarray returns a view if the input is already an ndarray.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare np.zeros vs np.empty.",
    "label": "numpy",
    "language": "en",
    "context": "Comparison: NumPy functions",
    "answer": "np.zeros creates an array filled with zeros; np.empty allocates memory without initialization, containing arbitrary values.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare np.dot vs np.matmul.",
    "label": "numpy",
    "language": "en",
    "context": "Comparison: NumPy functions",
    "answer": "np.dot computes dot product for 1-D and matrix multiplication for 2-D; np.matmul follows matrix multiplication semantics for N-D arrays.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "Compare array.flatten vs array.ravel.",
    "label": "numpy",
    "language": "en",
    "context": "Comparison: NumPy functions",
    "answer": "flatten returns a copy of the array as 1-D; ravel returns a view when possible, avoiding data copy.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare dtype=int vs dtype=float in np.arange.",
    "label": "numpy",
    "language": "en",
    "context": "Comparison: NumPy functions",
    "answer": "dtype=int creates integer sequences; dtype=float allows fractional steps and floating-point precision in the result.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to perform element-wise multiplication?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use the * operator: result = array1 * array2 for element-wise multiplication of same-shaped arrays.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to compute matrix multiplication?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use np.matmul(arr1, arr2) or the @ operator: result = arr1 @ arr2.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "How to apply a function to each element?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use np.vectorize(func)(array) or ufuncs for common operations for efficient element-wise application.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to filter array elements by condition?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use boolean indexing: filtered = array[array > threshold] to select elements satisfying a condition.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to find unique elements?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use np.unique(array) to return sorted unique elements from the array.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to count occurrences?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use np.bincount(array) for non-negative ints or use np.unique(array, return_counts=True).",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to tile an array?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use np.tile(array, reps) to construct an array by repeating the input array the number of times given by reps.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to generate random numbers?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use np.random module: np.random.rand(), np.random.randint(), or np.random.normal() for various distributions.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to compute correlation coefficient?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use np.corrcoef(array1, array2) to compute Pearson correlation coefficients between arrays.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to interpolate missing values?",
    "label": "numpy",
    "language": "en",
    "context": "How-to: Array computation",
    "answer": "Use pandas or np.interp(x, xp, fp) to perform 1-D linear interpolation of missing data points in arrays.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "TypeError: unsupported operand type(s) for +: 'int' and 'str'",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when trying to perform arithmetic on arrays with incompatible dtypes; ensure arrays have numeric dtype.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "ValueError: operands could not be broadcast together",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when arrays have shapes that cannot be aligned via broadcasting rules; reshape or use compatible shapes.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "IndexError: index 10 is out of bounds for axis 0 with size 10",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when indexing beyond array bounds; check array shape and valid index range.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "AttributeError: 'numpy.ndarray' object has no attribute 'foo'",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when calling a non-existent method; check correct function names or import additional submodules.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "TypeError: unhashable type: 'numpy.ndarray'",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when using ndarrays as dict keys or set elements; use tuple(array) or convert to bytes for hashing.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "MemoryError: Unable to allocate array",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when trying to allocate an array too large for available memory; reduce size or use memory-mapped arrays.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "ValueError: could not convert string to float",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when converting array of strings containing non-numeric values; clean or filter data before conversion.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "OverflowWarning: overflow encountered in exp",
    "label": "numpy",
    "language": "en",
    "context": "Common Error: NumPy pitfalls",
    "answer": "Occurs when computing exponential of large values; use stable functions or clip input range.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "ValueError: setting an array element with a sequence",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when assigning a sequence to an ndarray element; ensure nested arrays have consistent lengths or use object dtype.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "TypeError: Cannot cast array data from dtype('float64') to dtype('int64')",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when assigning floats to an int array without casting; specify dtype or cast before assignment.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "IndexError: too many indices for array",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when indexing an array with too many dimensions; verify array ndim and use correct indexing.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "FloatingPointError: invalid value encountered in divide",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when division by zero or NaN inputs occur; check data and use np.errstate to handle errors.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "ValueError: shapes (3,4) and (4,3) not aligned",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when performing matrix multiplication on incompatible shapes; transpose or reshape arrays.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "RuntimeWarning: invalid value encountered in true_divide",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when dividing by zero or NaN values; clean input or handle with nan_to_num.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "TypeError: only integer scalar arrays can be converted to a scalar index",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when using non-integer indices; convert indices to integer types or use boolean indexing.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "ImportError: No module named numpy",
    "label": "numpy",
    "language": "en",
    "context": "Specific Error: NumPy error",
    "answer": "Occurs when NumPy is not installed or environment misconfigured; install via pip or conda and verify import.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is Vue.js?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "Vue.js is a progressive JavaScript framework for building user interfaces, focusing on declarative rendering and component composition.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "Who created Vue.js?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "Vue.js was created by Evan You and is maintained by him and the open-source community.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "What is the Vue instance?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "The Vue instance is the root of a Vue application, created with `new Vue()` or `createApp()`, managing data, methods, and lifecycle.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "What is a Vue component?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "A Vue component is a reusable instance with a name, template, data, and behavior, which can be registered globally or locally.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is the Vue template syntax?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "Vue template syntax uses HTML-based templates with directives like `v-bind` and `v-on` for dynamic binding and event handling.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "What is a directive in Vue?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "A directive is a special token in the template (`v-if`, `v-for`, `v-model`) that applies reactive behavior to the DOM.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is reactivity in Vue.js?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "Reactivity is Vue\u2019s system of tracking data changes through getters/setters or proxies to automatically update the DOM.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "What is the Virtual DOM in Vue?",
    "label": "vue.js",
    "language": "en",
    "context": "Factoid: Vue.js definition",
    "answer": "The Virtual DOM is an in-memory representation of the real DOM used by Vue to compute minimal updates for performance.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to install Vue.js via CDN?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Include `<script src=\"https://cdn.jsdelivr.net/npm/vue@2\"></script>` or relevant version before your app code in HTML.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to create a Vue app instance?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Use `const app = Vue.createApp({ data() { return { /* ... */ } } }); app.mount('#app');`.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to define data properties?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Return an object from `data()` containing reactive properties accessible in templates and methods.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to use computed properties?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Define functions in a `computed` section that compute and cache values based on reactive dependencies.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to watch data changes?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Use the `watch` option to define handlers that run when specific data properties change.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to handle user events?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Use `v-on:event=\"handler\"` or shorthand `@event=\"handler\"` in templates to listen for DOM events.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to bind attributes and classes?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Use `v-bind:attr=\"value\"` or `:attr=\"value\"`, and `:class=\"{ active: isActive }\"` for dynamic binding.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to conditionally render elements?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Use `v-if`, `v-else-if`, and `v-else` directives to include or exclude elements based on data.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to render lists of items?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Use `v-for=\"(item, index) in list\" :key=\"item.id\"` to iterate over arrays or objects in templates.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to use lifecycle hooks?",
    "label": "vue.js",
    "language": "en",
    "context": "Descriptive: Vue.js usage",
    "answer": "Define methods like `mounted()`, `created()`, `updated()` in the component options for lifecycle events.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare Vue.js vs React.",
    "label": "vue.js",
    "language": "en",
    "context": "Comparison: Vue.js concepts",
    "answer": "Vue uses an HTML template syntax and is framework-focused; React uses JSX and is library-focused with more ecosystem tools.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare Vue CLI vs Vite.",
    "label": "vue.js",
    "language": "en",
    "context": "Comparison: Vue.js concepts",
    "answer": "Vue CLI uses webpack for bundling with extensive config; Vite uses native ES modules and provides faster development startup.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Compare data vs props in Vue.",
    "label": "vue.js",
    "language": "en",
    "context": "Comparison: Vue.js concepts",
    "answer": "Data defines internal reactive state in a component; props allow passing data from parent to child components.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare v-if vs v-show.",
    "label": "vue.js",
    "language": "en",
    "context": "Comparison: Vue.js concepts",
    "answer": "v-if conditionally renders elements in the DOM; v-show always renders and toggles `display: none` for visibility.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare methods vs computed properties.",
    "label": "vue.js",
    "language": "en",
    "context": "Comparison: Vue.js concepts",
    "answer": "Methods run on each invocation; computed properties cache results and update only when dependencies change.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare mixins vs composition API.",
    "label": "vue.js",
    "language": "en",
    "context": "Comparison: Vue.js concepts",
    "answer": "Mixins share options across components with global merging; Composition API uses `setup()` for explicit logic reuse.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to set up a Vue project with Vue CLI?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Install `@vue/cli`, run `vue create project-name`, choose preset options, then `cd project-name` and `npm run serve`.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to use single-file components (.vue)?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Create `.vue` files with `<template>`, `<script>`, and `<style>` sections, and import them in your app or router.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to configure Vue Router?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Install `vue-router`, define routes in `createRouter()`, and use `<router-link>` and `<router-view>` in templates.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to manage state with Vuex?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Install `vuex`, create a store with `new Vuex.Store({ state, mutations, actions })`, and inject it in the app.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to use slots in Vue components?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Define `<slot>` in child template and pass content from parent between component tags for content distribution.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to perform form input binding?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Use `v-model=\"value\"` on input elements for two-way data binding between form fields and component data.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to lazy-load components?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Use dynamic import: `const Comp = defineAsyncComponent(() => import('./Comp.vue'));` to asynchronously load components.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to integrate TypeScript in Vue?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Use `<script lang=\"ts\">` in `.vue` files and configure `tsconfig.json` and `vue-shims.d.ts` for type support.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to add global mixins?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Call `app.mixin({ /* options */ })` before mounting the app to inject mixin logic into all components.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to deploy Vue app to production?",
    "label": "vue.js",
    "language": "en",
    "context": "How-to: Vue.js development",
    "answer": "Run `npm run build`, then serve the `dist` directory via static file server like Nginx or GitHub Pages.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: Property or method is not defined on the instance.",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs when referencing data or methods not declared in `data()`, `methods`, or `setup()`; ensure proper definition.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Error: [Vue warn]: Failed to mount component: template or render function not defined.",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs when component is missing a template or render function; add `<template>` section or render method.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Warning: Avoid mutating a prop directly.",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs when modifying a prop within child; copy it to data or emit event to update parent state.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: You may have an infinite update loop in a component render function.",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs due to reactive data changes triggering re-render; avoid updating state synchronously in computed or watchers.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Error: Cannot read property '...' of undefined",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs when accessing nested properties before data is available; use optional chaining or check existence.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Error: App failed to mount. Component missing template or render function.",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs when root component lacks template; ensure you pass `render: h => h(App)` or use `el` with `template`.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error: Error compiling template",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs when template syntax is invalid; check directives, tags, and interpolation syntax for mistakes.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: Mismatched anonymous define()",
    "label": "vue.js",
    "language": "en",
    "context": "Common Error: Vue.js troubleshooting",
    "answer": "Occurs when mixing AMD modules; ensure consistent module loading strategies or use ES module syntax.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "TypeError: this.$router is undefined",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when using Vue Router without registering it with the app; ensure `app.use(router)` before mounting.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "SyntaxError: Unexpected token < in JSON at position 0",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when API returns HTML instead of JSON; verify endpoint response and correct URL.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: Cannot find module '@/components/Comp.vue'",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when alias '@' not configured in bundler; configure `resolve.alias` in webpack or Vite.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: maxListeners exceeded",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when too many event listeners registered; remove listeners or increase `emitter.setMaxListeners()`.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Error: Lifecycle hook should be a function",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when defining lifecycle hook as non-function; ensure hooks like `mounted` are functions.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Template compilation error: Unexpected end of input",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when template tags are unclosed; check `<template>` and other tags for proper closing.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Invalid handler for event 'click'",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when `v-on:click` handler references non-existent method; define the method or correct binding.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: Duplicate keys detected in v-for",
    "label": "vue.js",
    "language": "en",
    "context": "Specific Error: Vue.js error",
    "answer": "Occurs when rendering list items with non-unique keys; provide unique `:key` values for each item.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is Bootstrap?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "Bootstrap is a front-end framework for designing responsive, mobile-first websites using CSS and JS components.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Who maintains Bootstrap?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "Bootstrap is maintained by the open-source community with core contributions from developers at Twitter.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is a Bootstrap grid?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "Bootstrap's grid system divides the page into a 12-column layout to create responsive designs with rows and columns.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "What is a Bootstrap container?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "A container centers and pads content; it comes in fixed-width (.container) or fluid (.container-fluid) variants.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "What are Bootstrap components?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "Components are reusable UI elements like buttons, navbars, modals, forms, and alerts provided by Bootstrap.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is Bootstrap utility class?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "Utility classes are single-purpose classes for spacing, text alignment, colors, and display control.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is the Bootstrap carousel?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "The carousel is a slideshow component for cycling through elements like images or text with controls.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is Bootstrap flex utility?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Factoid: Bootstrap definition",
    "answer": "Flex utilities are classes enabling flexbox layout, like d-flex, justify-content-center, and align-items-start.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to include Bootstrap via CDN?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Add `<link>` to Bootstrap CSS and `<script>` to Bootstrap JS (with Popper.js and jQuery) from the official CDN in the HTML head and before closing body.",
    "start_char": 0,
    "end_char": 152
  },
  {
    "question": "How to create a responsive navbar?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Use `<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">` with toggler button and collapse div containing nav links.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to build a card layout?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Use `<div class=\"card\" style=\"width: 18rem;\">` with nested `.card-body`, `.card-title`, and `.card-text` elements.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to use Bootstrap forms?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Wrap inputs in `.form-group`, apply classes like `.form-control` to inputs, and optionally use grid classes for alignment.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to create a modal?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Use a trigger element with `data-toggle=\"modal\" data-target=\"#myModal\"` and define a `<div class=\"modal\" id=\"myModal\">` structure.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How to implement dropdown menus?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Wrap links in `.dropdown-toggle` inside a parent with `.dropdown`, and list items in `.dropdown-menu`.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to align items with grid?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Use `.row` and child `.col-*` classes, combining size prefixes (sm, md, lg) to control column width at different breakpoints.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to customize theme colors?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Override SASS variables before compiling Bootstrap source or add custom CSS classes after the Bootstrap import.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use Bootstrap tooltips?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Initialize with `$(element).tooltip()` in JS and add `data-toggle=\"tooltip\" title=\"...\"` to elements.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to create a responsive image?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Descriptive: Bootstrap usage",
    "answer": "Add the `.img-fluid` class to `<img>` tags to make images scale with parent width automatically.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare Bootstrap vs Foundation.",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Comparison: Bootstrap features",
    "answer": "Bootstrap offers a larger community and simpler grid; Foundation is more flexible but has a steeper learning curve.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare Bootstrap 4 vs Bootstrap 5.",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Comparison: Bootstrap features",
    "answer": "Bootstrap 5 removes jQuery dependency, updates utilities, and changes grid classes; Bootstrap 4 requires jQuery.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare .container vs .container-fluid.",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Comparison: Bootstrap features",
    "answer": ".container has fixed widths at breakpoints; .container-fluid spans full width of the viewport.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare .btn-primary vs .btn-outline-primary.",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Comparison: Bootstrap features",
    "answer": ".btn-primary has solid background and white text; .btn-outline-primary has transparent background with colored border and text.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "Compare .row vs .form-row.",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Comparison: Bootstrap features",
    "answer": ".form-row in Bootstrap 4 provides tighter gutters for form layouts; .row is the standard grid row with default gutter sizes.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare grid vs flex utilities.",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Comparison: Bootstrap features",
    "answer": "Grid uses rows and columns with fixed 12-column layout; flex utilities offer more fine-grained control over alignment and ordering.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "How to customize Bootstrap with SASS?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Install Bootstrap source via npm, modify `_variables.scss` to override default values, and compile using `sass` or `gulp`.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to implement a sticky footer?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Wrap content in a flex container with `d-flex flex-column`, apply `mt-auto` to footer to push it to bottom.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to lazy-load Bootstrap JS plugins?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Import only needed plugins from Bootstrap ES modules and use tree shaking via bundler like webpack.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to create a responsive table?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Add `.table-responsive` wrapper around `<table class=\"table\">` to enable horizontal scrolling on small screens.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use Bootstrap with React?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Install `react-bootstrap`, import components, and use `<Container>`, `<Row>`, `<Col>` JSX components in React.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to add icons in Bootstrap?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Use Bootstrap Icons library and insert `<i class=\"bi bi-icon-name\"></i>` or `<svg>` markup for icons.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to create a form validation state?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Add `was-validated` class to form and `:invalid` or `:valid` states to inputs with `required` attributes.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to use Toast notifications?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Define `<div class=\"toast\" role=\"alert\">` structure and initialize via JS `$('.toast').toast('show')`.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to integrate Bootstrap with Vue.js?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Install `bootstrap-vue`, import `BootstrapVue` plugin in Vue, and use `<b-container>`, `<b-button>` components.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to build a multi-level dropdown?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "How-to: Bootstrap development",
    "answer": "Nest `.dropdown-menu` inside a `.dropdown-item dropdown-toggle`, add JS to handle hover or click for submenus.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Why are my columns stacking incorrectly?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs when total `.col-*` widths exceed 12 or missing `.row` wrapper; ensure proper grid structure.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Why is my modal not opening?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs when required JS and Popper.js scripts are not included or wrong `data-target` selector; verify script order and IDs.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Why do my tooltips not show?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs if `title` attribute missing or `$(...).tooltip()` not initialized; call initialization after DOM ready.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Why is my dropdown closing immediately?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs if click event propagation is not managed or incorrect data attributes; prevent default or check markup.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Why are my custom styles not applied?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs when custom CSS loaded before Bootstrap or specificity too low; import after and use more specific selectors.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Why images not responsive?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs if `.img-fluid` class missing or parent container not fluid; add class or wrap in `.container-fluid`.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Why buttons not styled?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs when `.btn` class missing or overridden by other CSS; ensure `.btn` and modifier classes added correctly.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Why grid gaps too large?",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Common Error: Bootstrap troubleshooting",
    "answer": "Occurs when default gutter width too wide; override `$grid-gutter-width` or use `.no-gutters` class.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: 'jQuery is not defined' when using Bootstrap JS",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs when Bootstrap JS is loaded before jQuery; include jQuery script before Bootstrap.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: Tooltip requires Popper.js",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs when Popper.js missing; add Popper.js script before Bootstrap JS in page.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: Unknown breakpoint xl",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs when using a version without that breakpoint; check Bootstrap version and available breakpoints.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: Attempted to assign to readonly property",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs when overriding native properties in CSS; avoid using reserved keywords or deep overrides.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: dropdownMenu is undefined",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs when selecting element before initialization; run JS after DOM ready and correct selector.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: TransitionEnd event not firing",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs when transitions overridden without duration; ensure CSS transition-duration is set.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: ClipboardJS is not a constructor",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs if ClipboardJS plugin not loaded or version mismatch; include correct script and version.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: popover('show') is not a function",
    "label": "twitter-bootstrap",
    "language": "en",
    "context": "Specific Error: Bootstrap error",
    "answer": "Occurs when incorrect import of Bootstrap plugins; import Popover plugin specifically or use full bundle.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "What is Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Selenium is an open-source framework for automating web browsers across multiple platforms.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Who developed Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Selenium was originally developed by Jason Huggins at ThoughtWorks and is now maintained by the Selenium open-source community.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "What is WebDriver?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "WebDriver is a language-neutral interface that allows controlling browser actions programmatically.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What browsers does Selenium support?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Selenium supports Chrome, Firefox, Safari, Edge, Internet Explorer, and headless browsers like HtmlUnit.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is Selenium Grid?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Selenium Grid allows running tests in parallel across multiple machines and browsers.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What are Selenium locators?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Locators are strategies to find web elements, including id, name, className, tagName, linkText, partialLinkText, cssSelector, and xpath.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "What is a Selenium IDE?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Selenium IDE is a browser extension for recording and playing back simple test scripts without coding.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "What languages does Selenium support?",
    "label": "selenium",
    "language": "en",
    "context": "Factoid: Definition",
    "answer": "Selenium supports Java, Python, C#, Ruby, JavaScript, and Kotlin bindings.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to install Selenium WebDriver for Java?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Add Selenium Java dependencies via Maven or Gradle, download the browser driver executable, and configure its path.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to locate elements by CSS selector?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Use `driver.findElement(By.cssSelector(\"selector\"))` to find elements using CSS syntax.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to wait for an element to be visible?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Use WebDriverWait with ExpectedConditions.visibilityOfElementLocated locator until timeout.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to handle dropdowns in Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Use the Select class: `new Select(element).selectByVisibleText(\"Option\")` to choose dropdown options.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to take a screenshot?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Cast driver to TakesScreenshot and call `getScreenshotAs(OutputType.FILE)` then save the file.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to switch to an iframe?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Use `driver.switchTo().frame(\"frameNameOrId\")` or pass WebElement to switch focus into the frame.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to handle pop-ups and alerts?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Use `driver.switchTo().alert()` to accept, dismiss, or retrieve alert text.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to scroll a page using Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Execute JavaScript `window.scrollTo(x, y)` via `((JavascriptExecutor) driver).executeScript(...)`.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to perform mouse hover actions?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Use Actions class: `new Actions(driver).moveToElement(element).perform()` to simulate hover.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to execute JavaScript in Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "Descriptive: Usage",
    "answer": "Use `((JavascriptExecutor) driver).executeScript(\"script\", args...)` to run JS in browser context.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare Selenium WebDriver vs Selenium RC.",
    "label": "selenium",
    "language": "en",
    "context": "Comparison: Tools",
    "answer": "WebDriver communicates directly with browser using native support; RC uses a JavaScript proxy and is deprecated.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare findElement vs findElements.",
    "label": "selenium",
    "language": "en",
    "context": "Comparison: Tools",
    "answer": "findElement returns the first matching WebElement and throws exception if none; findElements returns a list and returns empty list if none.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Compare Implicit Wait vs Explicit Wait.",
    "label": "selenium",
    "language": "en",
    "context": "Comparison: Tools",
    "answer": "Implicit wait applies to all findElement calls globally; explicit wait applies to specific conditions with WebDriverWait.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare CSS Selector vs XPath.",
    "label": "selenium",
    "language": "en",
    "context": "Comparison: Tools",
    "answer": "CSS selectors are generally faster and more concise; XPath is more powerful for complex traversals.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare Selenium IDE vs Selenium WebDriver.",
    "label": "selenium",
    "language": "en",
    "context": "Comparison: Tools",
    "answer": "IDE is record-and-playback for basic tests; WebDriver is code-based for complex automation and integration.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare headless vs headed browser tests.",
    "label": "selenium",
    "language": "en",
    "context": "Comparison: Tools",
    "answer": "Headed runs with UI, helpful for debugging; headless runs without UI, faster for CI environments.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to set up Selenium Grid?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Download Selenium Server jar, start hub with `-role hub`, start nodes with `-role node -hub http://hub:4444`, then run tests pointing to grid endpoint.",
    "start_char": 0,
    "end_char": 151
  },
  {
    "question": "How to run tests in parallel with TestNG?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Annotate methods with `@Test` and set `parallel=\"methods\"` in TestNG XML configuration to execute tests concurrently.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to handle cookies in Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Use `driver.manage().getCookies()` to retrieve, `addCookie()` to add, or `deleteCookieNamed()` to remove cookies.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to upload files using Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Send file path to `<input type='file'>` element using `sendKeys(\"/path/to/file\")` instead of clicking upload dialog.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to download files via Selenium?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Configure browser profile or options (e.g., ChromeOptions) to set download directory and disable prompts.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to wait for AJAX calls to complete?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Use WebDriverWait with JavaScript executor checking `jQuery.active == 0` or specific DOM state changes.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to interact with shadow DOM elements?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Use JavaScript `element.shadowRoot.querySelector()` via `executeScript` since standard locators cannot pierce shadow DOM.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to authenticate HTTP basic auth?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Include credentials in URL like `http://user:pass@example.com` or use browser-specific options to set headers.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to simulate keyboard events?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Use Actions class: `sendKeys(Keys.ENTER)` or `keyDown` and `keyUp` for specific keys.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to close all browser windows?",
    "label": "selenium",
    "language": "en",
    "context": "How-to: Selenium scripting",
    "answer": "Use `driver.quit()` to close the browser session and all associated windows or tabs.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "ElementNotInteractableException: element not interactable",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when trying to interact with an element not visible or disabled; wait for visibility or check locator.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "NoSuchElementException: no such element",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when locator does not match any element; verify selector and ensure page has loaded.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "StaleElementReferenceException: stale element reference",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when DOM has changed since element was found; refetch element or use expected conditions.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "TimeoutException: Timed out after waiting",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when explicit wait exceeds timeout without condition becoming true; increase timeout or check condition.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "WebDriverException: unknown error",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs for unexpected browser or driver errors; check driver compatibility and browser version.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "InvalidSelectorException: invalid selector",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when CSS or XPath syntax is incorrect; correct the selector syntax.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "SessionNotCreatedException: session not created",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when driver and browser versions mismatch; update driver or browser.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "MoveTargetOutOfBoundsException: move target out of bounds",
    "label": "selenium",
    "language": "en",
    "context": "Common Error: Troubleshooting",
    "answer": "Occurs when Actions tries to move to coordinates outside visible area; ensure element is in view.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "SessionNotFoundException: invalid session id",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs when commands are sent after `driver.quit()` or session expiry; ensure session is active.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "IllegalStateException: The path to the driver executable must be set",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs when driver binary path is not configured; set `webdriver.chrome.driver` or use WebDriverManager.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "WebDriverException: chrome not reachable",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs when Chrome crashes or driver cannot connect; check version and restart the browser.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "ElementClickInterceptedException: Not clickable at point",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs when element is covered by another element; scroll into view or wait for overlay removal.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "MoveTargetOutOfBoundsException: move target out of bounds",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs when offset moves outside page bounds; adjust offsets or locate element correctly.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "InvalidArgumentException: invalid argument",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs when passing wrong parameters to commands; validate arguments and types.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "UnknownServerException: unknown error: DevToolsActivePort file doesn't exist",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs in headless mode without proper flags; add `--disable-dev-shm-usage` and `--no-sandbox`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "ElementNotVisibleException: element not visible",
    "label": "selenium",
    "language": "en",
    "context": "Specific Error: Selenium error",
    "answer": "Occurs when element exists in DOM but hidden; wait for visibility or use JavaScript to make it visible.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is WinForms?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "Windows Forms (WinForms) is a GUI class library for .NET for building Windows desktop applications.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Who developed WinForms?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "WinForms was developed by Microsoft and is part of the .NET Framework and .NET Core/5+.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is a Form in WinForms?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "A Form is a window or dialog in a WinForms application, acting as a container for controls.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is a Control in WinForms?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "A Control is a UI element (e.g., Button, TextBox, Label) that is placed on a Form.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "What is an event in WinForms?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "An event is an action or occurrence (e.g., click, load) that can be handled by event handlers.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is a Designer in WinForms?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "The Designer is a visual tool in Visual Studio for graphically laying out Forms and controls.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is the InitializeComponent method?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "InitializeComponent is an auto-generated method that sets up controls, properties, and layout.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is a Control Collection?",
    "label": "winforms",
    "language": "en",
    "context": "Factoid: WinForms definition",
    "answer": "ControlCollection is the collection of child controls that belong to a Form or container control.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to create a new WinForms project in Visual Studio?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Open Visual Studio, select Create New Project > Windows Forms App (.NET Framework or .NET Core), name it, and click Create.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to add a Button control to a Form?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Drag the Button from the Toolbox onto the Form in the Designer, then set its properties in the Properties window.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to handle a Button click event?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Double-click the Button in the Designer to generate a Click event handler in code, then add your logic inside the method.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to set control properties at runtime?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Access the control by name in code (e.g., `this.button1.Text = \"Click me\";`) usually in Form_Load or other methods.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to use layout panels?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Drag a FlowLayoutPanel or TableLayoutPanel onto the Form, then add controls to it for automatic layout management.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to show a dialog Form?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Instantiate the Form class and call `form.ShowDialog()` to display it modally.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to update the UI from a background thread?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Use `this.Invoke` or `Control.Invoke` to marshal calls back to the UI thread when updating controls.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to draw custom graphics on a Form?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Handle the Form's Paint event and use `e.Graphics` to draw shapes, text, and images.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to implement data binding in WinForms?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Set the DataSource property of controls like DataGridView to a data source object, such as a BindingList.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to localize a WinForms application?",
    "label": "winforms",
    "language": "en",
    "context": "Descriptive: WinForms usage",
    "answer": "Use resource files (.resx) for different cultures and set the Form's Localizable property to true.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare WinForms vs WPF.",
    "label": "winforms",
    "language": "en",
    "context": "Comparison: WinForms features",
    "answer": "WinForms is GDI+-based and simpler; WPF uses DirectX, XAML, and offers richer styling and data binding.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare WinForms vs UWP.",
    "label": "winforms",
    "language": "en",
    "context": "Comparison: WinForms features",
    "answer": "WinForms targets desktop with .NET; UWP is for modern Windows apps with sandboxing and adaptive UI.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare Button vs LinkLabel.",
    "label": "winforms",
    "language": "en",
    "context": "Comparison: WinForms features",
    "answer": "Button is for clickable actions; LinkLabel looks like a hyperlink and can navigate or trigger actions.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare FlowLayoutPanel vs TableLayoutPanel.",
    "label": "winforms",
    "language": "en",
    "context": "Comparison: WinForms features",
    "answer": "FlowLayoutPanel arranges controls sequentially; TableLayoutPanel arranges controls in a grid.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare Show() vs ShowDialog().",
    "label": "winforms",
    "language": "en",
    "context": "Comparison: WinForms features",
    "answer": "Show displays a non-modal window; ShowDialog displays a modal dialog that blocks its owner until closed.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare ControlPaint vs Graphics.DrawString.",
    "label": "winforms",
    "language": "en",
    "context": "Comparison: WinForms features",
    "answer": "ControlPaint provides helper methods for control rendering; Graphics.DrawString renders text with custom font.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to set form icon?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Set the Form's Icon property in the Properties window or assign `this.Icon = new Icon(\"path.ico\");` in code.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to resize controls programmatically?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Set control.Size or control.Width and control.Height properties in code.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to create a custom user control?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Add a new User Control item in the project, design it, and build; then drag it onto other Forms.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to anchor and dock controls?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Use the Anchor and Dock properties in the Properties window to define how controls resize with the Form.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to capture keyboard input?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Override the Form's KeyPress, KeyDown, or KeyUp events and set `this.KeyPreview = true` on the Form.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to handle Form closing event?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Handle the FormClosing event to prompt the user or cancel closing via `e.Cancel = true;`.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to add tooltips to controls?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Drag a ToolTip component onto the Form, then set the control's ToolTip on the component in the Properties window.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to bind a DataGridView to a DataTable?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Set `dataGridView.DataSource = dataTable;` in code to auto-generate columns and rows.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to implement dragging a borderless Form?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Handle MouseDown and call Win32 APIs (ReleaseCapture and SendMessage) to move the window.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to use OpenFileDialog and SaveFileDialog?",
    "label": "winforms",
    "language": "en",
    "context": "How-to: WinForms development",
    "answer": "Instantiate the dialog, set filters, call `ShowDialog()`, and use the resulting FileName property.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: Cross-thread operation not valid",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when updating UI control from non-UI thread; use Invoke or BeginInvoke to marshal to UI thread.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: Object reference not set to an instance",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when accessing a control or object that is null; instantiate or check for null first.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Index out of range",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when accessing control arrays or collections with invalid index; verify indices and counts.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: Resource file not found",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when .resx resource is missing or not embedded; check Build Action and resource path.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Could not load file or assembly",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when referenced assembly is missing or version mismatch; verify references and output folder.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: Invalid Control invocation",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when invoking methods on disposed controls; check control IsDisposed before calling.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: SerializationException",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when saving state of controls that are not marked serializable; mark classes [Serializable] or avoid serializing complex controls.",
    "start_char": 0,
    "end_char": 137
  },
  {
    "question": "Error: Form layout broken on DPI change",
    "label": "winforms",
    "language": "en",
    "context": "Common Error: WinForms troubleshooting",
    "answer": "Occurs when AutoScaleMode is not set properly; use AutoScaleMode.Font or DPI aware settings.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "InvalidCastException in DataGridView column binding",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs when cell value cannot cast to expected type; ensure data types match column ValueType.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "ArgumentException: 'Controls' key is not unique",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs when two controls have the same Name property; ensure unique control names.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Win32Exception: The system cannot find the file specified",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs when loading an icon or file at runtime; verify file path and existence.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "StackOverflowException in Paint event",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs due to recursive invalidation or calling Refresh in Paint; break the recursion.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "COMException when integrating ActiveX",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs when ActiveX control is not registered or incompatible; register control and match bitness.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "DllNotFoundException for custom DLL",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs when native DLL is missing or wrong platform; place in application directory and match architecture.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "OutOfMemoryException loading large images",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs when images exceed process memory; resize or use streaming techniques.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "AccessViolationException in unmanaged code call",
    "label": "winforms",
    "language": "en",
    "context": "Specific Error: WinForms error",
    "answer": "Occurs when passing wrong pointer or marshaling parameters; correct interop signatures.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "Kotlin is a statically typed programming language from JetBrains that runs on the JVM and can compile to JavaScript or native code.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Who develops Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "Kotlin is developed by JetBrains and officially supported by Google for Android development.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a data class in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "A data class in Kotlin is a class marked with `data` keyword that automatically generates equals(), hashCode(), toString(), and copy() methods.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "What is null safety in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "Null safety is a Kotlin feature that distinguishes nullable types (e.g., String?) from non-null types (e.g., String), preventing null pointer exceptions.",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "What is a coroutine in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "A coroutine is a lightweight concurrency primitive in Kotlin that allows asynchronous, non-blocking code using suspend functions.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "What is an extension function?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "An extension function lets you add new functions to existing classes without modifying their code, using `fun ClassName.functionName() { ... }`.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "What is the difference between var and val?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "`var` declares a mutable variable; `val` declares a read-only (immutable) variable like a final reference.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is the Kotlin Standard Library?",
    "label": "kotlin",
    "language": "en",
    "context": "Factoid: Kotlin definition",
    "answer": "The Kotlin Standard Library provides extensions, collections, sequence APIs, coroutines, and other utilities to enhance Java interoperability.",
    "start_char": 0,
    "end_char": 142
  },
  {
    "question": "How to declare a variable in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use `val name: Type = value` for immutable or `var name: Type = value` for mutable variables.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to define a function in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use `fun functionName(param: Type): ReturnType { /* body */ }`, omit return type for Unit.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to create a class in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use `class ClassName(val property: Type) { /* members */ }` or define body with init blocks and methods.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to handle null values?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use nullable types (`Type?`), safe calls (`?.`), the Elvis operator (`?:`), and non-null assertions (`!!`).",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to catch exceptions in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use `try { } catch (e: ExceptionType) { } finally { }` blocks similarly to Java.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to configure a Gradle project for Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Apply the Kotlin plugin in build.gradle: `plugins { kotlin(\"jvm\") version \"1.8.0\" }` and add dependencies.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to use lateinit properties?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Declare `lateinit var property: Type` for non-null vars initialized later, throwing an exception if accessed before init.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to implement generics in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use `class GenericClass<T>(val item: T)` and specify variance with `in` (contravariance) or `out` (covariance).",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to define a sealed class?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use `sealed class Response { class Success(val data: T): Response(); object Error: Response() }` for restricted hierarchies.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "How to define an interface in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Descriptive: Kotlin usage",
    "answer": "Use `interface InterfaceName { fun method(): ReturnType }` and implement with `class MyClass: InterfaceName { ... }`.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare var vs val.",
    "label": "kotlin",
    "language": "en",
    "context": "Comparison: Kotlin features",
    "answer": "`var` allows reassignment; `val` is read-only after initial assignment.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Compare Kotlin vs Java.",
    "label": "kotlin",
    "language": "en",
    "context": "Comparison: Kotlin features",
    "answer": "Kotlin offers null safety, concise syntax, coroutines, and extension functions; Java has more verbose syntax but wider ecosystem.",
    "start_char": 0,
    "end_char": 129
  },
  {
    "question": "Compare data class vs regular class.",
    "label": "kotlin",
    "language": "en",
    "context": "Comparison: Kotlin features",
    "answer": "Data classes auto-generate utility methods; regular classes require manual implementation of equals, hashCode, and toString.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare sealed class vs enum class.",
    "label": "kotlin",
    "language": "en",
    "context": "Comparison: Kotlin features",
    "answer": "Enum classes have fixed set of constants; sealed classes allow complex hierarchies with multiple subclasses.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare suspend function vs normal function.",
    "label": "kotlin",
    "language": "en",
    "context": "Comparison: Kotlin features",
    "answer": "Suspend functions can pause execution without blocking threads; normal functions run synchronously.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare coroutines vs threads.",
    "label": "kotlin",
    "language": "en",
    "context": "Comparison: Kotlin features",
    "answer": "Coroutines are lightweight, multiplexed on threads; threads are OS-level with heavier resource usage.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to launch a coroutine?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Call `GlobalScope.launch { /* code */ }` or use a CoroutineScope and `scope.launch { }` inside a suspending context.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to use Flow in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Define a `flow { emit(value) }`, collect it with `flow.collect { }`, and apply operators like map and filter.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to interoperate with Java APIs?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Call Java methods directly in Kotlin; use `@JvmStatic`, `@JvmOverloads` for better Java interop on overloads and static methods.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to create a DSL in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Use higher-order functions, lambda with receivers (`fun receiver.func { }`), and builder patterns for DSL syntax.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to delegate properties?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Use `val prop by lazy { initializer }` or `var prop by observable(initial, { prop, old, new -> })` with standard delegates.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to implement lazy initialization?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Use `val value: Type by lazy { computeValue() }` to delay initialization until first access.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to write an extension function?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Define `fun ClassName.newFunction() { /* implementation */ }` outside the class body.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to use when expression?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Use `when(variable) { case1 -> result1; in 1..5 -> result2; else -> default }` as a concise switch alternative.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use higher-order functions?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Pass functions as parameters: `fun operate(x: Int, f: (Int)->Int) = f(x)`, then call `operate(5) {it*2}`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to write an inline function?",
    "label": "kotlin",
    "language": "en",
    "context": "How-to: Kotlin coding",
    "answer": "Use `inline fun functionName(params) { }` to request compiler inlining for performance on lambda parameters.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "NullPointerException in Kotlin?",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when using `!!` on a null value or accessing nullable type without safe calls; avoid `!!` or check for null.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Unresolved reference: mapOf",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when missing import `kotlin.collections.mapOf`; ensure correct import or use fully qualified name.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Type mismatch: inferred type is Int? but Int was expected",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when assigning nullable to non-nullable; use safe call, Elvis operator, or declare variable as nullable.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Smart cast to Int is impossible",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when variable is mutable or accessed in closures; use val local copy or explicitly cast.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "StackOverflowError in recursive function",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when recursion depth exceeds limit; use tail recursion with `tailrec` or convert to iterative approach.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Missing return statement",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when a non-Unit function lacks return in all branches; ensure every branch returns a value.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Visibility modifier not allowed here",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when using modifiers like private on local functions; adjust scope or remove modifier.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Classpath error: Cannot find symbol",
    "label": "kotlin",
    "language": "en",
    "context": "Common Error: Kotlin issues",
    "answer": "Occurs when Kotlin file not compiled or missing in classpath; recompile or include source directory.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Exception in thread \"main\" java.lang.NoSuchMethodError: main",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when the Kotlin class lacks a proper `@JvmStatic fun main(args: Array<String>)`; ensure correct signature.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Unresolved reference: coroutineScope",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when missing `kotlinx-coroutines-core` dependency or `import kotlinx.coroutines.*`; add dependency and import.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "IllegalStateException: lateinit property x has not been initialized",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when accessing a lateinit var before assignment; initialize variable before use.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "java.lang.ClassNotFoundException: kotlinx.coroutines.Job",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when missing coroutine library on classpath; include `kotlinx-coroutines-core` in dependencies.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "TypeCastException: java.lang.String cannot be cast to java.lang.Integer",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when casting String to Int; parse string with `toInt()` or check type before cast.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "UnsupportedOperationException: Collection is read-only",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when modifying immutable list; use mutableListOf or convert to mutable list before modification.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "KotlinNullPointerException",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when accessing a platform type that is unexpectedly null without checks; treat platform types carefully.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "RuntimeException: Exception while loading class MainKt",
    "label": "kotlin",
    "language": "en",
    "context": "Specific Error: Kotlin error",
    "answer": "Occurs when compiled class not found or wrong package; verify package declaration and classpath.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is a loop in programming?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "A loop is a control structure that repeats a block of code until a specified condition is met.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Who introduced loops in high-level languages?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "Loops were introduced in early high-level languages like Fortran and Algol in the 1950s.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "What is iteration?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "Iteration is the process of executing a set of statements repeatedly using loops.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What types of loops are common?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "Common loop types include for, while, and do-while loops.",
    "start_char": 0,
    "end_char": 57
  },
  {
    "question": "What is an infinite loop?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "An infinite loop runs endlessly because its exit condition never becomes false.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "What is loop unrolling?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "Loop unrolling is an optimization that duplicates the loop body to reduce iteration overhead.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is a nested loop?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "A nested loop is one loop placed inside another loop\u2019s body.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "What is loop control statement?",
    "label": "loops",
    "language": "en",
    "context": "Factoid: Loop basics",
    "answer": "Control statements like break and continue alter the normal sequence of loop execution.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to write a for loop in Python?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `for i in iterable:` followed by an indented block to iterate over elements.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to write a while loop in Java?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `while(condition) { /* code */ }` to execute code as long as condition is true.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to write a do-while loop in C++?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `do { /* code */ } while(condition);` to execute code at least once before checking condition.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to iterate over an array in JavaScript?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `for(let i=0; i<array.length; i++)` or `for(const item of array)` for ES6 iteration.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to iterate over object properties in Java?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `for(Map.Entry<K,V> entry : map.entrySet())` or `map.forEach((k,v)-> {})` in Java 8+.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to iterate over a list in C#?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `foreach(var item in list) { /* code */ }` to loop through each element.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to decrement a loop counter?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Initialize counter, use `for(i=start; i>=end; i--)` or `i--` in while loop to decrement.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to use loop labels in Java?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Prefix loop with label:`outer: for(...) { inner: for(...) { break outer; } }` to break outer loop.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to use foreach in PHP?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `foreach($array as $key => $value) { /* code */ }` to iterate associative arrays.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to iterate through XML nodes in C#?",
    "label": "loops",
    "language": "en",
    "context": "Descriptive: Loop syntax",
    "answer": "Use `foreach(XmlNode node in xmlDoc.SelectNodes(xpath))` to process matching nodes.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Compare for vs while loops.",
    "label": "loops",
    "language": "en",
    "context": "Comparison: Loop types",
    "answer": "For loops specify initialization, condition, and increment in one line; while loops only specify a condition.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare do-while vs while loops.",
    "label": "loops",
    "language": "en",
    "context": "Comparison: Loop types",
    "answer": "Do-while executes body at least once before checking condition; while may never execute if condition false initially.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare foreach vs for loops.",
    "label": "loops",
    "language": "en",
    "context": "Comparison: Loop types",
    "answer": "Foreach abstracts iteration over collections; for gives full index control and ability to modify index.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare nested loops vs flat loops.",
    "label": "loops",
    "language": "en",
    "context": "Comparison: Loop types",
    "answer": "Nested loops have higher time complexity (multiplicative); flat loops run sequentially with additive complexity.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare break vs continue.",
    "label": "loops",
    "language": "en",
    "context": "Comparison: Loop types",
    "answer": "Break exits the loop entirely; continue skips remaining code in current iteration and proceeds to next.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare loop unrolling vs standard loops.",
    "label": "loops",
    "language": "en",
    "context": "Comparison: Loop types",
    "answer": "Unrolling reduces iteration overhead at the cost of larger code size; standard loops have smaller code but more overhead.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to exit a loop early?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use the `break` statement inside the loop when a certain condition is met.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to skip an iteration?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use the `continue` statement to skip the remainder of the current iteration.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to loop over indices and values in Python?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use `for index, value in enumerate(iterable):` to get both index and item.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to nested loop over matrix elements?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use two loops: `for(i=0;i<rows;i++){for(j=0;j<cols;j++){...}}` to access each element.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to build a looping menu in console app?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use a while(true) loop displaying options, read input, and break when exit option selected.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to implement a retry loop?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Wrap operation in for or while loop, catch exceptions, and use condition to retry or break.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to filter in loop?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use `if` inside the loop to process or skip elements based on condition.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to loop with step size other than 1?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use `for(i=start; i<end; i+=step)` or Python\u2019s `range(start, end, step)`.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to loop over files in a directory?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use APIs like `os.listdir()` in Python, `Directory.GetFiles()` in C#, or `fs.readdir()` in Node.js.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to measure loop performance?",
    "label": "loops",
    "language": "en",
    "context": "How-to: Loop implementation",
    "answer": "Use timing functions like `time.time()` in Python or `System.Diagnostics.Stopwatch` in .NET to record durations.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Why does my loop run infinitely?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Occurs when loop condition never becomes false; ensure update statements or correct boundary conditions.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Why index out of range in a loop?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Occurs when loop iterates beyond collection size; check start/end bounds and use < instead of <= where needed.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Why skip first or last element?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Occurs when loop boundaries are off by one; adjust start index or condition to include/exclude correctly.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Why nested loops are slow?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Time complexity grows multiplicatively, causing performance issues for large input sizes.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Why continue doesn\u2019t skip correctly?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Occurs when continue is in wrong block or condition logic doesn\u2019t trigger; check loop structure.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why break exits only inner loop?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Break exits the current loop level; to exit outer loops use flags, labels (Java), or exceptions.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why loop variable retains last value after loop?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Loop variable declared outside loop remains in scope after loop ends; declare inside loop if needed.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Why unexpected behavior with modifying list in loop?",
    "label": "loops",
    "language": "en",
    "context": "Common Error: Loop pitfalls",
    "answer": "Changing list length while iterating can skip or repeat elements; iterate over a copy or use indices.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "SyntaxError: invalid syntax in loop",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when loop declaration has syntax errors like missing colon in Python or semicolons in C-like languages.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "TypeError: 'int' object is not iterable",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when trying to loop over a non-iterable object; ensure loop is over list, string, or iterable.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "NameError: name 'i' is not defined",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when using loop variable outside its scope or before declaration; declare properly inside loop.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "IndentationError: expected an indented block",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when Python loop body is not indented; ensure consistent indentation for block statements.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "UnsupportedOperationException in Java loop",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when modifying unmodifiable collection; avoid altering the collection being iterated.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "ConcurrentModificationException in Java",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when collection is modified while iterating; use iterator.remove() or copy collection.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "NullPointerException in loop",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when looping over array or list containing null elements and accessing their methods; check for null before use.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "OutOfMemoryError in nested loops",
    "label": "loops",
    "language": "en",
    "context": "Specific Error: Loop error",
    "answer": "Occurs when nested loops generate large data structures or infinite loops; optimize logic or limit iterations.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "What is Express.js?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "Express.js is a minimal, flexible Node.js web application framework providing robust features for web and mobile applications.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Who developed Express.js?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "Express.js was created by TJ Holowaychuk and is now maintained by the Node.js foundation and open-source community.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "What is middleware in Express?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "Middleware are functions that have access to the request and response objects, and can modify them, end the request-response cycle, or call next middleware.",
    "start_char": 0,
    "end_char": 156
  },
  {
    "question": "What is the Express Router?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "The Express Router is a mini-application that handles routing and middleware for a subset of routes.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What templating engines does Express support?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "Express supports various templating engines like Pug, EJS, Handlebars, and Mustache via adapter modules.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is a route handler?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "A route handler is a function executed when a specific HTTP method and path are matched.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "What HTTP methods are supported by Express?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "Express supports all HTTP methods such as GET, POST, PUT, DELETE, PATCH, OPTIONS, and HEAD.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is the default view directory in Express?",
    "label": "express",
    "language": "en",
    "context": "Factoid: Express.js definition",
    "answer": "The default view directory is the \"views\" folder in the application root, configurable via app.set('views').",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to install Express.js?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Run `npm install express` in your project directory and import it using `const express = require('express')`.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to create a basic server?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Use `const app = express(); app.listen(port, () => console.log('Server running'));` to start an Express server.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to parse JSON request bodies?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Use `app.use(express.json())` middleware to parse incoming JSON request payloads.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to serve static files?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Use `app.use(express.static('public'))` to serve files from the \"public\" directory.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to handle URL-encoded data?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Use `app.use(express.urlencoded({ extended: true }))` to parse form submissions and URL-encoded data.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to define a route with parameters?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Use `app.get('/user/:id', (req, res) => { res.send(req.params.id) });` to define a parameterized route.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to chain route handlers?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Use `app.route('/path').get(handler1).post(handler2)` to chain handlers for different methods.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to render templates?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Set view engine via `app.set('view engine', 'pug')` and call `res.render('template', data)`.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to enable CORS?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Install `cors` middleware and use `app.use(require('cors')())` to enable cross-origin requests.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to use environment variables?",
    "label": "express",
    "language": "en",
    "context": "Descriptive: Express.js usage",
    "answer": "Use `process.env.VARIABLE_NAME` and load variables with `dotenv` package using `require('dotenv').config()`.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Compare Express vs Koa.",
    "label": "express",
    "language": "en",
    "context": "Comparison: Express.js features",
    "answer": "Express is callback/middleware oriented; Koa uses async functions and context, requiring more manual middleware assembly.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare app.use vs app.all.",
    "label": "express",
    "language": "en",
    "context": "Comparison: Express.js features",
    "answer": "app.use applies middleware to all routes and methods; app.all defines a handler for all HTTP methods on a specific route.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare res.send vs res.json.",
    "label": "express",
    "language": "en",
    "context": "Comparison: Express.js features",
    "answer": "res.send can send strings, buffers, or objects; res.json specifically sends a JSON response with correct headers.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare express.json vs body-parser.",
    "label": "express",
    "language": "en",
    "context": "Comparison: Express.js features",
    "answer": "express.json is built-in middleware for JSON parsing since Express 4.16; body-parser was a separate package previously used.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Compare Router vs app instance.",
    "label": "express",
    "language": "en",
    "context": "Comparison: Express.js features",
    "answer": "Router handles modular routing and middleware; app instance is the main application handling global routes and middleware.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Compare GET vs POST routes.",
    "label": "express",
    "language": "en",
    "context": "Comparison: Express.js features",
    "answer": "GET is idempotent and used for data retrieval; POST is non-idempotent and used for creating or submitting data.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to handle errors globally?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use an error-handling middleware defined as `function(err, req, res, next)` and add it via `app.use(errorHandler)`.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to create modular routes?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use `const router = express.Router();` define routes on router, and mount via `app.use('/path', router)`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to validate request data?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use middleware like `express-validator` to define validation chains and handle errors.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to upload files?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use `multer` middleware, configure storage, and add `upload.single('file')` to route handlers.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to implement rate limiting?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use `express-rate-limit` middleware with configuration options to limit repeated requests.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to implement session management?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use `express-session` middleware, configure secret and store, and call `app.use(session({...}))`.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to compress responses?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use `compression` middleware via `app.use(require('compression')())` to gzip HTTP responses.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to use Helmet for security?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Install `helmet` and call `app.use(require('helmet')())` to set secure HTTP headers.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to connect to MongoDB?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Use `mongoose.connect(connectionString)` in startup code and define schemas to interact with the database.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to set up Swagger documentation?",
    "label": "express",
    "language": "en",
    "context": "How-to: Express.js development",
    "answer": "Install `swagger-ui-express`, configure OpenAPI spec JSON, and serve via `app.use('/docs', swaggerUi.serve, swaggerUi.setup(spec))`.",
    "start_char": 0,
    "end_char": 132
  },
  {
    "question": "Error: Cannot GET /route",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Occurs when no matching route is defined or middleware order misconfigured; verify path and order of app.use.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error: req.body is undefined",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Occurs when body parsing middleware is not configured; ensure `express.json()` or `urlencoded()` is used before routes.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Error: Headers already sent",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Occurs when response methods are called after headers are sent; avoid multiple res.send or res.render calls.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: Cannot set headers after they are sent",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Same as above; ensure only one response is sent per request and handle logic flow correctly.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Cross-Origin Request Blocked",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Occurs when CORS is not enabled; configure `cors` middleware or set appropriate headers manually.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: listen EADDRINUSE",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Occurs when port is already in use; change port or kill the process using the port.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: middleware.stack is not a function",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Occurs when adding middleware incorrectly; ensure you pass a function, not the result of a function call.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: TypeError res.render is not a function",
    "label": "express",
    "language": "en",
    "context": "Common Error: Express.js troubleshooting",
    "answer": "Occurs when view engine is not configured; call `app.set('view engine', 'pug')` or similar before rendering.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: EPIPE broken pipe",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Occurs when client disconnects before response completes; handle via error middleware or catch stream errors.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error: ECONNREFUSED",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Occurs when server or database connection is refused; check server address, port, and service status.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "ReferenceError: req is not defined",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Occurs when using req outside middleware or handler; ensure parameters (req, res) are passed correctly.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "SyntaxError: Unexpected token < in JSON",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Occurs when client receives HTML instead of JSON; verify API endpoint and content type.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "TypeError: router.use() requires a middleware function",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Occurs when passing invalid argument to router.use; ensure correct function signature.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: PayloadTooLargeError",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Occurs when request body exceeds limit; configure `express.json({ limit: '1mb' })` or appropriate size.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: Cannot set headers after they are sent to the client",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Same as headers already sent; avoid asynchronous calls that send multiple responses.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: Failed to lookup view",
    "label": "express",
    "language": "en",
    "context": "Specific Error: Express.js error",
    "answer": "Occurs when template file not found; verify views directory and file extension for the view engine.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What is Hibernate ORM?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "Hibernate is a Java ORM framework that maps Java classes to database tables, handling CRUD operations automatically.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Who develops Hibernate?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "Hibernate is developed and maintained by Red Hat as part of the JBoss community.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "What is an entity in Hibernate?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "An entity is a persistent domain object mapped to a database table via annotations or XML configuration.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is SessionFactory?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "SessionFactory is a threadsafe Hibernate factory for Session objects, configured once at startup.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is a Session in Hibernate?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "A Session represents a single-unit-of-work with the database, providing methods for CRUD and queries.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is HQL?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "Hibernate Query Language is an object-oriented query language similar to SQL that operates on entity objects.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is the first-level cache?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "First-level cache is the session-local cache that stores entities within a Session to avoid repeated database hits.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "What is lazy loading?",
    "label": "hibernate",
    "language": "en",
    "context": "Factoid: Hibernate definition",
    "answer": "Lazy loading defers the retrieval of related entities until they are accessed, optimizing performance.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to configure Hibernate with annotations?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Add @Entity, @Table, @Id, @Column to classes and fields, include hibernate.cfg.xml or properties with mapping scan.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to bootstrap Hibernate SessionFactory?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Use Configuration().configure().buildSessionFactory() in Hibernate 4 or StandardServiceRegistryBuilder in 5+.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to perform CRUD operations?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Use session.save(), session.get(), session.update(), session.delete() inside a transaction and commit.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to write HQL query?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Use session.createQuery(\"from Entity where property = :value\", Entity.class).setParameter(\"value\", val).list().",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to map one-to-many relationships?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Use @OneToMany on collection field and @ManyToOne on child entity, configure fetch and cascade types.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to map many-to-many relationships?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Use @ManyToMany on both entities with mappedBy or join table via @JoinTable annotation.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to enable SQL logging?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Set hibernate.show_sql=true and format_sql=true in configuration or set logger category org.hibernate.SQL to DEBUG.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to use Criteria API?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Obtain CriteriaBuilder from session, create CriteriaQuery, define root, predicates, and execute query via session.createQuery().",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to configure connection pool?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Configure c3p0 or HikariCP properties in hibernate.cfg.xml or integrate via DataSource in Hibernate settings.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to integrate Hibernate with Spring?",
    "label": "hibernate",
    "language": "en",
    "context": "Descriptive: Hibernate usage",
    "answer": "Define LocalSessionFactoryBean in Spring config, set dataSource, annotatedClasses, and transactionManager beans.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare Hibernate vs JPA.",
    "label": "hibernate",
    "language": "en",
    "context": "Comparison: Hibernate features",
    "answer": "JPA is a specification; Hibernate is an implementation providing additional features beyond the standard.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare session.save vs session.persist.",
    "label": "hibernate",
    "language": "en",
    "context": "Comparison: Hibernate features",
    "answer": "save returns generated ID and schedules insert immediately; persist makes entity managed but ID may be deferred.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Compare session.get vs session.load.",
    "label": "hibernate",
    "language": "en",
    "context": "Comparison: Hibernate features",
    "answer": "get returns null if not found and hits DB immediately; load returns proxy and throws exception if absent.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare fetch types EAGER vs LAZY.",
    "label": "hibernate",
    "language": "en",
    "context": "Comparison: Hibernate features",
    "answer": "EAGER loads related entities immediately; LAZY delays loading until accessed.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Compare HQL vs SQL.",
    "label": "hibernate",
    "language": "en",
    "context": "Comparison: Hibernate features",
    "answer": "HQL queries entity objects and their properties; SQL queries database tables and columns directly.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare update vs merge.",
    "label": "hibernate",
    "language": "en",
    "context": "Comparison: Hibernate features",
    "answer": "update reattaches a detached entity and errors if persistent instance exists; merge copies state and returns managed instance.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to begin and commit a transaction?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Use session.beginTransaction(), perform operations, then transaction.commit() or rollback on error.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to flush and clear session?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Call session.flush() to synchronize with DB and session.clear() to detach all entities.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to batch insert entities?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Enable jdbc batch_size in config and use stateless session or session.save in loop with periodic flush and clear.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to execute native SQL?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Use session.createNativeQuery(\"SQL\").addEntity(Entity.class).getResultList() to run raw SQL.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to implement optimistic locking?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Add @Version field to entity; Hibernate increments version and checks on commit to prevent conflicts.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to configure second-level cache?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Enable cache provider (e.g., EHCache), set cache.use_second_level_cache=true and annotate entities with @Cache.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use named queries?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Define @NamedQuery on entity class and call session.createNamedQuery(\"name\").setParameter().list().",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to detect dirty entities?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Use session.isDirty() or Hibernate Interceptor methods to check if session state differs from DB.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to use Interceptors?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Implement Interceptor interface and register via configuration to handle entity lifecycle events.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to generate schema automatically?",
    "label": "hibernate",
    "language": "en",
    "context": "How-to: Hibernate operations",
    "answer": "Set hibernate.hbm2ddl.auto to create, update, validate, or none in configuration for DDL generation.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: LazyInitializationException: no session",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Occurs when accessing LAZY-loaded property outside of session; ensure fetch within open session or use OpenSessionInView.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Error: NonUniqueObjectException",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Occurs when two instances with same ID are in session; use merge instead of update or evict one instance.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: TransientObjectException: object references an unsaved transient instance",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Occurs when saving entity that references unsaved child; use cascade save or save child first.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: Could not get JDBC Connection",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Occurs on DB connection issues; check DB URL, credentials, and connectivity.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Error: IdentifierGenerationException",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Occurs when ID generator fails; verify mapping of @GeneratedValue and DB support.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: No Dialect mapping for JDBC type",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Occurs when Hibernate cannot map SQL type to Java type; add custom type or upgrade dialect.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Warning: HHH000396: Resolved identifier to unresolved entity",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Occurs when entity mapping incomplete; ensure class annotated with @Entity and included in configuration.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: org.hibernate.LazyInitializationException",
    "label": "hibernate",
    "language": "en",
    "context": "Common Error: Hibernate troubleshooting",
    "answer": "Same as first; ensure session scope around entity access or adjust fetch strategy.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "MappingException: Unknown entity",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when querying/mapping entity not registered; add annotated class to configuration.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "JDBCConnectionException: The connection is closed",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when session tries to use closed connection; manage session and transaction lifecycle correctly.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "ConstraintViolationException",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when DB constraint (e.g., unique, not null) is violated; fix data or loosen constraints.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "StaleObjectStateException",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when optimistic lock version mismatch; refresh entity or handle version conflict.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "QuerySyntaxException",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when HQL syntax invalid; correct entity names and property paths.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "PropertyAccessException",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when Hibernate fails to access property via getter/setter; verify property names and methods accessibility.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "SQLGrammarException",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when generated SQL invalid for DB; check dialect and mapping configuration.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "TransactionRequiredException",
    "label": "hibernate",
    "language": "en",
    "context": "Specific Error: Hibernate error",
    "answer": "Occurs when operation requiring transaction is invoked outside of one; wrap in session.beginTransaction().",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "SQLite is a self-contained, serverless, zero-configuration, transactional SQL database engine.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Who developed SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "SQLite was created by D. Richard Hipp and first released in 2000.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "What file format does SQLite use?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "SQLite stores its entire database in a single cross-platform disk file.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What is ACID compliance in SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "SQLite fully supports Atomicity, Consistency, Isolation, and Durability in transactions.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "What SQL dialect does SQLite support?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "SQLite supports most of the SQL92 standard with some limitations and extensions.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "What is the maximum size of a SQLite database?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "The maximum size is 281 terabytes, limited by the file format.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "What data types are supported in SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "SQLite uses dynamic typing with storage classes: NULL, INTEGER, REAL, TEXT, BLOB.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What is WAL mode in SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Factoid: SQLite basics",
    "answer": "Write-Ahead Logging is a journaling mode that allows concurrent readers and a writer for better performance.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to create a new SQLite database file?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use the SQLite CLI: `sqlite3 mydb.db` will create or open the database file.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to create a table in SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Execute `CREATE TABLE tablename(column1 TYPE, column2 TYPE, ...);` within the SQLite shell.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to insert data into a table?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `INSERT INTO tablename(column1, column2) VALUES(value1, value2);`.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to query data from a table?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `SELECT columns FROM tablename WHERE conditions;` to retrieve rows matching criteria.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to update records in SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `UPDATE tablename SET column=value WHERE condition;` to modify existing rows.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to delete records from a table?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `DELETE FROM tablename WHERE condition;` to remove rows.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to add a new column to an existing table?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `ALTER TABLE tablename ADD COLUMN newcolumn TYPE;`.",
    "start_char": 0,
    "end_char": 55
  },
  {
    "question": "How to drop a table in SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `DROP TABLE tablename;` to permanently remove the table and its data.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to export data to CSV?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `.mode csv` and `.output file.csv` in CLI, then `SELECT * FROM tablename;`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to import CSV data into SQLite?",
    "label": "sqlite",
    "language": "en",
    "context": "Descriptive: SQLite operations",
    "answer": "Use `.mode csv`, `.import file.csv tablename` in the SQLite shell after creating the table.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare SQLite vs MySQL.",
    "label": "sqlite",
    "language": "en",
    "context": "Comparison: SQLite concepts",
    "answer": "SQLite is serverless and file-based; MySQL is a client-server database requiring a server process.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare SQLite vs PostgreSQL.",
    "label": "sqlite",
    "language": "en",
    "context": "Comparison: SQLite concepts",
    "answer": "SQLite is lightweight and embedded; PostgreSQL is a full-featured, heavy-weight RDBMS with advanced features.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare DELETE vs DROP in SQLite.",
    "label": "sqlite",
    "language": "en",
    "context": "Comparison: SQLite concepts",
    "answer": "DELETE removes rows but keeps the table; DROP removes the entire table and its structure.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare TEXT vs VARCHAR in SQLite.",
    "label": "sqlite",
    "language": "en",
    "context": "Comparison: SQLite concepts",
    "answer": "SQLite treats both as TEXT storage class with no length enforcement; VARCHAR is just an alias.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare INTEGER PRIMARY KEY vs ROWID.",
    "label": "sqlite",
    "language": "en",
    "context": "Comparison: SQLite concepts",
    "answer": "INTEGER PRIMARY KEY alias uses the special ROWID column; ROWID exists even without explicit primary key.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare WAL vs DELETE journaling mode.",
    "label": "sqlite",
    "language": "en",
    "context": "Comparison: SQLite concepts",
    "answer": "WAL allows concurrent readers and writer with faster commits; DELETE mode locks database and rewrites rollback journal.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to enable foreign key support?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Enable with `PRAGMA foreign_keys = ON;` as foreign keys are disabled by default.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to create an index?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `CREATE INDEX idx_name ON tablename(column);` to speed up queries on that column.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to begin a transaction?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `BEGIN TRANSACTION;` then commit with `COMMIT;` or rollback with `ROLLBACK;`.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to vacuum the database?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `VACUUM;` to rebuild the database file and reclaim free space.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "How to attach another database file?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `ATTACH DATABASE 'file.db' AS alias;` to query across multiple databases.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to change journal mode?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `PRAGMA journal_mode = WAL;` (or DELETE, TRUNCATE) to set desired journaling.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to back up a database while online?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use the online backup API in C or CLI command `.backup backup.db` without locking the database.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to check database integrity?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `PRAGMA integrity_check;` which returns 'ok' if no errors are found.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to read database schema?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `.schema` in CLI or query `SELECT sql FROM sqlite_master WHERE type='table';`.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to open SQLite database in read-only mode?",
    "label": "sqlite",
    "language": "en",
    "context": "How-to: SQLite usage",
    "answer": "Use `sqlite3 file.db -readonly` or `sqlite3 -cmd 'PRAGMA query_only = TRUE;' file.db`.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: unable to open database file",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs when file path is invalid or permissions are insufficient; verify path and file system rights.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: foreign key constraint failed",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs when inserting or updating child rows without matching parent key; enable foreign keys and correct values.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Error: no such table",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs when referencing a table that doesn't exist; check table name and database file.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: datatype mismatch",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs when binding values to columns of incompatible types; ensure correct types or use CAST().",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: database is locked",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs when another connection holds a lock; close other connections or use WAL journaling.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: disk I/O error",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs on file system errors or full disk; check storage health and free space.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error: UNIQUE constraint failed",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs when inserting duplicate values into a UNIQUE column; ensure data uniqueness or skip duplicates.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: malformed UTF-8 string",
    "label": "sqlite",
    "language": "en",
    "context": "Common Error: SQLite troubleshooting",
    "answer": "Occurs when TEXT column contains non-UTF8 bytes; use BLOB storage or clean data.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: SQL error or missing database",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs on malformed SQL or missing file; check syntax and ensure database exists.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: table x has no column named y",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs when querying non-existent column; verify schema with PRAGMA table_info(tablename).",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: schema has changed",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs when schema modified by another connection; reprepare statements or reopen connection.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: cannot commit transaction - SQL logic error",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs when COMMIT issued outside transaction or syntax error; ensure proper transaction flow.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: file is encrypted or is not a database",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs when opening non-SQLite file; verify file format and extension.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Error: too many SQL variables",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs when query binds exceed SQLITE_MAX_VARIABLE_NUMBER; batch queries or increase compile-time limit.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: cannot rollback - no transaction is active",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs when ROLLBACK without active transaction; guard with transaction status.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error: mismatched tunable parameter",
    "label": "sqlite",
    "language": "en",
    "context": "Specific Error: SQLite error",
    "answer": "Occurs on incorrect PRAGMA syntax; check pragma names and accepted values.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "What is a shell in computing?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "A shell is a command-line interpreter that provides an interface between users and the operating system.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What are popular Unix shells?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "Popular Unix shells include Bash, Zsh, Fish, and the Bourne shell (sh).",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What is Bash?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "Bash (Bourne Again SHell) is a widely used Unix shell and command language.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "What is a shell script?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "A shell script is a text file containing a sequence of shell commands executed sequentially.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is the prompt in a shell?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "The prompt is the displayed text in a shell indicating readiness for user input, often including username and directory.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "What is an environment variable?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "An environment variable is a key-value pair that affects the behavior of processes and shell operations.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is piping in a shell?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "Piping (using |) directs the output of one command as input to another command.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "What is shell expansion?",
    "label": "shell",
    "language": "en",
    "context": "Factoid: Shell basics",
    "answer": "Shell expansion includes globbing, variable, command, and arithmetic expansions performed before command execution.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to list files in a directory?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `ls` to list files; add `-l` for long format or `-a` to include hidden files.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to change directories?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `cd path/to/directory` to change the current working directory.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to view file contents?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `cat filename` to display contents, `less filename` for paged view, or `head`, `tail` for partial view.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to copy files?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `cp source dest` to copy files; add `-r` to copy directories recursively.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to move or rename files?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `mv source dest` to move or rename files and directories.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "How to remove files and directories?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `rm filename` to remove files; use `rm -r directory` to remove directories recursively.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to search within files?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `grep 'pattern' file` to search text; add `-r` for recursive search and `-i` for case-insensitive.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to change file permissions?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `chmod modes file` with symbolic (u+r) or numeric (755) modes to set permissions.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to change file ownership?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `chown user:group file` to change ownership of files and directories.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to create a symbolic link?",
    "label": "shell",
    "language": "en",
    "context": "Descriptive: Shell commands",
    "answer": "Use `ln -s target link_name` to create a symbolic (soft) link to a file or directory.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare Bash vs sh.",
    "label": "shell",
    "language": "en",
    "context": "Comparison: Shell concepts",
    "answer": "Bash is an enhanced Bourne shell with more features; sh is the original POSIX-compliant shell.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare hard link vs symbolic link.",
    "label": "shell",
    "language": "en",
    "context": "Comparison: Shell concepts",
    "answer": "Hard links reference the same inode; symbolic links reference a pathname and can cross filesystems.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare stdout vs stderr.",
    "label": "shell",
    "language": "en",
    "context": "Comparison: Shell concepts",
    "answer": "stdout is the standard output stream; stderr is the standard error stream for error messages.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare single quotes vs double quotes.",
    "label": "shell",
    "language": "en",
    "context": "Comparison: Shell concepts",
    "answer": "Single quotes prevent all expansions; double quotes allow variable and command expansions.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare pipe vs redirect.",
    "label": "shell",
    "language": "en",
    "context": "Comparison: Shell concepts",
    "answer": "Pipes (`|`) send output between commands; redirections (`>`, `<`) send input or output to files.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare grep vs awk.",
    "label": "shell",
    "language": "en",
    "context": "Comparison: Shell concepts",
    "answer": "grep is a text search tool; awk is a programming language for pattern scanning and processing.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to find files by name?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `find /path -name 'filename'` to locate files matching a name pattern.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to count lines in a file?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `wc -l filename` to count the number of lines in a file.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to replace text in files?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `sed -i 's/old/new/g' file` to replace occurrences of text in-place.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to archive and compress files?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `tar -czvf archive.tar.gz folder` to create a gzipped tarball.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "How to view disk usage?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `du -sh directory` for directory size and `df -h` for filesystem usage.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to monitor real-time logs?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `tail -f logfile` to follow log file updates in real-time.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "How to check running processes?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `ps aux` to list processes or `top` for an interactive view.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "How to kill a process by name?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `pkill process_name` or `kill $(pgrep process_name)` to terminate processes.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to set environment variables temporarily?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Use `export VAR=value` in the shell session for temporary environment variable.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to create a shell alias?",
    "label": "shell",
    "language": "en",
    "context": "How-to: Shell scripting",
    "answer": "Add `alias ll='ls -l'` to your shell configuration (e.g., ~/.bashrc) to define a shortcut.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: Permission denied",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when attempting actions without required permissions; use `sudo` or adjust file permissions.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Command not found",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when command is not installed or not in PATH; install the package or update PATH environment variable.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error: No such file or directory",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when referencing non-existent files; verify path and spelling.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Error: Is a directory",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when using file-only operations on directories; use appropriate options like `rm -r`.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Text file busy",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when modifying a file in use by a running process; ensure file is not locked or being executed.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: Argument list too long",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when glob expands to too many files; use `find` with `-exec` or xargs to handle large lists.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Broken pipe",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when piping to a command that exits before reading all input; ignore if non-critical or catch SIGPIPE.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error: Read-only file system",
    "label": "shell",
    "language": "en",
    "context": "Common Error: Shell troubleshooting",
    "answer": "Occurs when writing to a mounted read-only filesystem; remount with write permissions or choose another location.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "bash: syntax error near unexpected token `fi'",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs when conditional statements (`if`) are not properly closed with `fi`; ensure correct syntax.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "sed: -e expression #1, char 0: no previous regular expression",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs when sed command is missing delimiter or pattern; check syntax `s/old/new/`.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "find: missing argument to `-exec`",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs when `-exec` is not terminated with `\\;`; add `\\;` or `+` after the command.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "tar: Error is not recoverable: exiting now",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs on corrupt archive or read errors; check archive integrity or recreate tarball.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "chown: invalid user: \u2018user:group\u2019",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs when specified user or group does not exist; verify `/etc/passwd` and `/etc/group`.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "export: `VAR=VALUE': not a valid identifier",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs when variable name is invalid (e.g., starting with digit); use valid identifier syntax.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "ps: command not found",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs when `procps` package not installed on minimal systems; install system utilities package.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "zsh: permission denied: ./script.sh",
    "label": "shell",
    "language": "en",
    "context": "Specific Error: Shell error",
    "answer": "Occurs when script lacks execute bit; run `chmod +x script.sh` to add execute permission.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "MATLAB is a high-level language and interactive environment for numerical computation, visualization, and programming.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Who develops MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "MATLAB is developed by MathWorks and widely used in engineering and scientific applications.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is the MATLAB workspace?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "The workspace is the area where MATLAB stores variables created during a session.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What is a MATLAB script?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "A script is a file containing MATLAB commands executed in sequence without input or output arguments.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is a MATLAB function?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "A function is a file with a function signature that can accept inputs and return outputs.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is Simulink?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "Simulink is a graphical environment for simulation and model-based design integrated with MATLAB.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is a MEX-file?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "A MEX-file is a MATLAB-callable function written in C/C++ or Fortran, compiled for performance.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is the MATLAB Live Editor?",
    "label": "matlab",
    "language": "en",
    "context": "Factoid: MATLAB definition",
    "answer": "Live Editor allows creating scripts with formatted text, equations, and interactive outputs.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to install MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Download the installer from MathWorks website, run it, and follow the installation prompts with your license credentials.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to run a MATLAB script?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Type the script name (without .m) at the command prompt or press the Run button in the editor.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to define a function in MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Create an .m file starting with `function [out] = name(in)` and include code in the file body.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to plot data in MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Use plotting functions like `plot(x, y)`, `scatter`, or `surf`, and label axes with `xlabel`, `ylabel`, `title`.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to create a GUI in MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Use App Designer to drag-and-drop components and generate code, then run or package the app.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to use MATLAB toolboxes?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Install and enable toolboxes via Add-On Explorer, then call toolbox-specific functions in code.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to import data into MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Use functions like `readtable`, `csvread`, `load`, or the Import Tool for structured data import.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to export figures from MATLAB?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Use `saveas` or `exportgraphics` to save figures in formats like PNG, PDF, or EPS.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to debug MATLAB code?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Set breakpoints in the editor, run code, inspect variables in workspace, and step through lines.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to manage MATLAB paths?",
    "label": "matlab",
    "language": "en",
    "context": "Descriptive: MATLAB usage",
    "answer": "Use `addpath` and `rmpath`, or set favorites in Set Path dialog to include directories for function lookup.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare scripts vs functions in MATLAB.",
    "label": "matlab",
    "language": "en",
    "context": "Comparison: MATLAB concepts",
    "answer": "Scripts share workspace variables and lack inputs/outputs; functions have their own workspace with defined inputs and outputs.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "Compare array vs cell array.",
    "label": "matlab",
    "language": "en",
    "context": "Comparison: MATLAB concepts",
    "answer": "Arrays hold homogeneous data types; cell arrays can hold heterogeneous types in each cell.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare for loop vs while loop.",
    "label": "matlab",
    "language": "en",
    "context": "Comparison: MATLAB concepts",
    "answer": "For loops iterate a fixed number of times; while loops run until a condition becomes false.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare matrix multiplication vs element-wise multiplication.",
    "label": "matlab",
    "language": "en",
    "context": "Comparison: MATLAB concepts",
    "answer": "Matrix multiplication uses `*` for linear algebra; element-wise uses `.*` for pointwise operations.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare double vs single precision.",
    "label": "matlab",
    "language": "en",
    "context": "Comparison: MATLAB concepts",
    "answer": "Double uses 64-bit storage for higher precision; single uses 32-bit storage with less precision.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare MATLAB vs Python for data analysis.",
    "label": "matlab",
    "language": "en",
    "context": "Comparison: MATLAB concepts",
    "answer": "MATLAB is integrated with toolboxes and interactive IDE; Python is open-source with diverse libraries but less specialized UI.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to perform matrix multiplication?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `C = A * B` where A and B are compatible matrices; verify dimensions match.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to solve linear equations?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use backslash operator: `x = A \\ b` for solving Ax = b efficiently.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to compute FFT of a signal?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `Y = fft(x)` to compute the discrete Fourier transform of vector x.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to perform element-wise operations?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `.*`, `./`, `.^` operators for element-wise multiplication, division, and power.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to create 3D surface plots?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `surf(X, Y, Z)` or `mesh` after generating grid with `meshgrid`.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to fit a polynomial to data?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `p = polyfit(x, y, n)` then evaluate with `polyval(p, x)`.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "How to read data from Excel?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `T = readtable('file.xlsx')` or `xlsread` for older versions.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to write data to CSV?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `writetable(T, 'file.csv')` or `csvwrite` for numeric arrays.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to use Parallel Computing Toolbox?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use `parfor` loops, `parpool`, and `spmd` blocks to distribute computations.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to compile MATLAB code to standalone?",
    "label": "matlab",
    "language": "en",
    "context": "How-to: MATLAB coding",
    "answer": "Use MATLAB Compiler to package scripts/functions into executables or libraries.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error: Undefined function or variable 'x'.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs when variable or function 'x' is not on the MATLAB path or not defined in workspace.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: Index exceeds matrix dimensions.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs when accessing array index outside its size; check indices and array dimensions.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: Syntax error: Unexpected MATLAB operator.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs due to typos or misuse of operators; check code syntax and spacing.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: Assignment has more non-singleton rhs dimensions.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs when assigning a matrix to a vector; ensure dimensions align or reshape data.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Warning: Matrix is singular or nearly singular.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs when solving linear systems with singular matrices; use pseudoinverse or regularization.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: Too many output arguments.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs when function signature returns fewer outputs than requested; adjust call or function definition.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: Insufficient number of input arguments.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs when calling a function without required inputs; provide correct number of arguments.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Unknown function or variable 'foo'.",
    "label": "matlab",
    "language": "en",
    "context": "Common Error: MATLAB troubleshooting",
    "answer": "Occurs when function or variable 'foo' is misspelled or not in the path; verify name and path settings.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error using plot: Unknown function or variable 'x'.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when variable 'x' is not defined before calling plot; define 'x' in workspace.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error using imread: File does not exist.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when image file path is incorrect; verify file name and current folder.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error using fopen: Permission denied.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when file cannot be opened for writing; check file permissions and path.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error using mex: Compilation of MEX-file failed.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when C/C++ compiler settings are incorrect; configure mex setup or compilers.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error using uicontrol: Invalid property.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when setting unsupported property; check documentation for valid properties.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error using datetime: Input string is not a recognized datetime.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when parsing date strings with invalid format; specify correct format or use 'InputFormat'.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error using parfor: Loop has illegal dependencies.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when parfor loop uses unsupported indexing or variables; refactor code to remove dependencies.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error using load: Not enough input arguments.",
    "label": "matlab",
    "language": "en",
    "context": "Specific Error: MATLAB error",
    "answer": "Occurs when calling load without file name; provide filename string as input argument.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "What is REST?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "REST (Representational State Transfer) is an architectural style for designing networked applications using stateless communication and standard HTTP methods.",
    "start_char": 0,
    "end_char": 158
  },
  {
    "question": "Who introduced REST?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "REST was introduced by Roy Fielding in his 2000 PhD dissertation on the architectural styles of the Web.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What are RESTful resources?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "Resources are key abstractions, identified by URIs, manipulated via standard HTTP methods like GET, POST, PUT, DELETE.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What HTTP method is idempotent?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "Methods like GET, PUT, DELETE, and HEAD are idempotent because multiple identical requests have the same effect.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "What is statelessness in REST?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "In stateless communication, each HTTP request contains all information needed and the server does not store client context.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is HATEOAS?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "HATEOAS (Hypermedia as the Engine of Application State) is a REST constraint requiring hypermedia links to dynamically drive application state.",
    "start_char": 0,
    "end_char": 143
  },
  {
    "question": "What content types are common in REST APIs?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "Common content types include application/json, application/xml, and text/html.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "What is REST vs SOAP?",
    "label": "rest",
    "language": "en",
    "context": "Factoid: REST basics",
    "answer": "REST is a lightweight, stateless HTTP-based architecture; SOAP is a protocol with strict XML messaging and built-in WS-* specifications.",
    "start_char": 0,
    "end_char": 136
  },
  {
    "question": "How to design a RESTful endpoint?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Define a clear URI for the resource, use appropriate HTTP methods, and return proper status codes with structured payloads.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How to handle pagination?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Implement query parameters like `?page=1&limit=10`, and include metadata such as total count, next, and previous links.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to secure REST APIs?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Use HTTPS, authentication (OAuth2 or JWT), authorization checks, input validation, and rate limiting.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to version a REST API?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Include version in the URI (`/v1/resource`) or request header (`Accept: application/vnd.api+json; version=1`).",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to handle errors in REST?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Return proper HTTP status codes (4xx, 5xx) and a JSON body with error code, message, and details.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to implement filtering?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Use query parameters for filtering fields, e.g., `?status=active&sort=createdAt`.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to support multiple formats?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Use content negotiation with `Accept` and `Content-Type` headers to serve JSON, XML, or other types.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to cache REST responses?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Use HTTP cache headers like `Cache-Control`, `ETag`, and `Last-Modified` to enable client and proxy caching.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to upload files via REST?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Use multipart/form-data on POST or PUT endpoints and handle file streams on server side.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to document REST APIs?",
    "label": "rest",
    "language": "en",
    "context": "Descriptive: REST API design",
    "answer": "Use tools like Swagger/OpenAPI to define API specs and generate interactive documentation.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare GET vs POST in REST.",
    "label": "rest",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "GET retrieves data and should be idempotent; POST creates resources and is not idempotent.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare PUT vs PATCH.",
    "label": "rest",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "PUT replaces the entire resource with the payload; PATCH applies partial modifications.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare 401 vs 403 status codes.",
    "label": "rest",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "401 Unauthorized means authentication is required or failed; 403 Forbidden means authenticated user lacks permissions.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare synchronous vs asynchronous REST calls.",
    "label": "rest",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "Synchronous waits for immediate response; asynchronous returns a job or callback for later processing.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare JSON vs XML payloads.",
    "label": "rest",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "JSON is lighter and easier to parse in JavaScript; XML is more verbose with built-in schema validation.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare REST vs GraphQL.",
    "label": "rest",
    "language": "en",
    "context": "Comparison: HTTP methods",
    "answer": "REST uses multiple endpoints and HTTP verbs; GraphQL uses a single endpoint and flexible queries to fetch exactly needed data.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to implement a GET endpoint in Node.js?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use `app.get('/resource', (req, res) => res.json(data))` in Express to handle GET requests.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to consume REST API in Python?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use `requests.get(url)` and parse response JSON with `response.json()`.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to test REST APIs?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use tools like Postman, curl, or automated tests with frameworks like pytest and REST-assured.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to create a POST endpoint in Java Spring Boot?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use `@PostMapping('/resource')` on a controller method that accepts `@RequestBody` and returns `ResponseEntity`.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to handle CORS in REST?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Configure `Access-Control-Allow-Origin` header server-side or use frameworks\u2019 CORS modules.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to paginate responses in Django REST Framework?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use DRF\u2019s `PageNumberPagination` or `LimitOffsetPagination` classes and configure in settings.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to setup rate limiting in Flask?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use `Flask-Limiter` extension and decorate routes with `@limiter.limit('5 per minute')`.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to implement API key authentication?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Require clients to include key in header or query, then validate against stored keys in middleware.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to log REST API requests?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use middleware/interceptors to capture request details and write logs with timestamp and status codes.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to mock REST API for testing?",
    "label": "rest",
    "language": "en",
    "context": "How-to: REST implementation",
    "answer": "Use libraries like `json-server` or mock frameworks to simulate endpoints and responses.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: 404 Not Found",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs when the requested resource URI does not match any route; verify endpoint and path parameters.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: 400 Bad Request",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs when request payload is malformed or missing required fields; validate and return meaningful error messages.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Error: 415 Unsupported Media Type",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs when payload Content-Type is not supported; check `Content-Type` header and parse accordingly.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Error: 500 Internal Server Error",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs due to unhandled exceptions on server; log stack trace and handle errors gracefully.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: CORS policy blocked",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs when CORS headers are missing or incorrect; configure `Access-Control-Allow-*` headers.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: Missing CSRF token",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs when CSRF protection is enabled but token not provided; include token in requests.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: 503 Service Unavailable",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs when server is overloaded or under maintenance; implement graceful shutdown and retry mechanisms.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: Rate limit exceeded",
    "label": "rest",
    "language": "en",
    "context": "Common Error: REST troubleshooting",
    "answer": "Occurs when client makes too many requests; return `429 Too Many Requests` with retry information.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: Cross origin requests are only supported for protocol",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs in browsers when making HTTP calls from file:// protocol; serve API over http/https.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: Unexpected token < in JSON at position 0",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs when server returns HTML (error page) instead of JSON; verify API response format.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: Content-Type header missing charset",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs when missing `charset` in `Content-Type`; include `; charset=utf-8` if required.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: Invalid JSON in request body",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs when JSON payload is malformed; validate JSON syntax before sending.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: 401 Missing Authorization header",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs when authentication middleware requires header; include `Authorization: Bearer <token>`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: Parameter 'id' should be integer",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs when path or query parameter type mismatch; validate types and return `400 Bad Request`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: Response already sent",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs when handler calls `res.send` or `res.json` multiple times; ensure only one response per request.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: Cannot set headers after they are sent",
    "label": "rest",
    "language": "en",
    "context": "Specific Error: REST error",
    "answer": "Occurs when modifying headers after body was sent; set headers before sending response.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is Apache HTTP Server?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "Apache HTTP Server is a free, open-source web server developed by the Apache Software Foundation.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Who develops Apache HTTP Server?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "Apache HTTP Server is developed and maintained by the Apache Software Foundation community.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is a virtual host in Apache?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "A virtual host allows hosting multiple websites on a single Apache instance, distinguished by hostname or IP.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is a module in Apache?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "A module is a plugin that extends Apache functionality, such as mod_rewrite for URL rewriting.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is the default port for Apache?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "The default port for HTTP traffic in Apache is 80 and for HTTPS is 443.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What is the Apache configuration file?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "The main configuration file is httpd.conf, located in the Apache conf or etc directory.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is .htaccess file?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "An .htaccess file is a directory-level configuration file that overrides Apache settings per directory.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What are Apache MPMs?",
    "label": "apache",
    "language": "en",
    "context": "Factoid: Apache basics",
    "answer": "MPMs (Multi-Processing Modules) determine how Apache handles connections, such as prefork, worker, and event.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to install Apache on Ubuntu?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Use `sudo apt update` and `sudo apt install apache2` then start service with `sudo systemctl start apache2`.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to configure a new virtual host?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Create a .conf file in sites-available, define <VirtualHost> block, enable with `a2ensite`, and reload Apache.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to enable mod_rewrite module?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Run `sudo a2enmod rewrite` and add `AllowOverride All` in the directory block, then reload Apache.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to set up SSL with Apache?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Install `mod_ssl`, obtain certificates, configure <VirtualHost *:443> with SSLCertificateFile and SSLCertificateKeyFile, then reload.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to change Apache listening port?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Edit `Listen` directive in ports.conf or httpd.conf to the desired port and update VirtualHost accordingly.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to restrict access to a directory?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Use <Directory> with Require directives like `Require ip 192.168.1.0/24` or `Require all denied` in config.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to set custom error pages?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Use ErrorDocument directive: `ErrorDocument 404 /custom_404.html` and place page in document root.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to configure basic authentication?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Use AuthType Basic, AuthName, AuthUserFile, and Require valid-user in a <Directory> or .htaccess.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to enable directory listing?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Use Options +Indexes in the directory config or .htaccess to allow Apache to list files.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to tune KeepAlive settings?",
    "label": "apache",
    "language": "en",
    "context": "Descriptive: Apache configuration",
    "answer": "Adjust KeepAlive, MaxKeepAliveRequests, and KeepAliveTimeout directives in httpd.conf for performance tuning.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare mod_prefork vs mod_worker vs mod_event.",
    "label": "apache",
    "language": "en",
    "context": "Comparison: Apache modules",
    "answer": "prefork uses multiple processes without threads; worker uses threads in processes; event optimizes thread usage for keep-alive connections.",
    "start_char": 0,
    "end_char": 139
  },
  {
    "question": "Compare Apache vs Nginx.",
    "label": "apache",
    "language": "en",
    "context": "Comparison: Apache modules",
    "answer": "Apache is process-based with rich modules; Nginx is event-driven with high concurrency and lower memory footprint.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare HTTP/1.1 vs HTTP/2 in Apache.",
    "label": "apache",
    "language": "en",
    "context": "Comparison: Apache modules",
    "answer": "HTTP/2 supports multiplexing, header compression, and server push; HTTP/1.1 uses separate connections per request.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare dynamic vs static modules.",
    "label": "apache",
    "language": "en",
    "context": "Comparison: Apache modules",
    "answer": "Dynamic modules are loaded at runtime with LoadModule; static modules are compiled into the Apache binary.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare AllowOverride None vs All.",
    "label": "apache",
    "language": "en",
    "context": "Comparison: Apache modules",
    "answer": "None disables .htaccess overrides for performance; All allows all directives in .htaccess.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare Prefork MPM vs Event MPM for PHP apps.",
    "label": "apache",
    "language": "en",
    "context": "Comparison: Apache modules",
    "answer": "Prefork is stable with mod_php; Event decouples keep-alive requests but requires PHP-FPM for thread safety.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to restart Apache service?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Use `sudo systemctl restart apache2` on systemd systems or `sudo service apache2 restart`.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to check Apache configuration syntax?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Run `apachectl configtest` or `apache2ctl -t` to validate configuration files.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to view Apache logs?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Check access logs at /var/log/apache2/access.log and error logs at /var/log/apache2/error.log.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to limit request size?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Use LimitRequestBody directive in server or directory context to set maximum request size in bytes.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to set up a reverse proxy?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Enable mod_proxy, set ProxyPass and ProxyPassReverse directives pointing to backend server, then reload.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to enable gzip compression?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Enable mod_deflate, add `AddOutputFilterByType DEFLATE text/html text/plain application/json`, and reload.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to restrict by IP allow/deny?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Use Require ip xxx.xxx.xxx.xxx or Require not ip in directory or virtual host context.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to configure load balancing?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Enable mod_proxy_balancer and mod_lbmethod_byrequests, define <Proxy balancer://name> with BalancerMember entries.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to serve PHP with Apache?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Install libapache2-mod-php or configure PHP-FPM with mod_proxy_fcgi and set SetHandler for .php files.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to configure CORS headers?",
    "label": "apache",
    "language": "en",
    "context": "How-to: Apache administration",
    "answer": "Use mod_headers and add Header set Access-Control-Allow-Origin '*' in desired context.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: Address already in use",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs when port is bound by another process; change Listen port or stop conflicting service.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Could not reliably determine the server's fully qualified domain name",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs when ServerName is not set; add ServerName directive in global config.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error 403 Forbidden",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs when directory permissions or .htaccess deny access; check file system permissions and Apache directives.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Error 500 Internal Server Error",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs due to script or config errors; check error logs for details.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "Error: client denied by server configuration",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs when Require or Allow directives block the client IP; adjust access rules.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: module does not exist",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs when LoadModule references a non-existent module file; verify module path and syntax.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Warning: DocumentRoot ........ does not exist",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs when configured DocumentRoot path is incorrect; verify directory exists.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error: Invalid command",
    "label": "apache",
    "language": "en",
    "context": "Common Error: Apache troubleshooting",
    "answer": "Occurs when directive is unrecognized; ensure module providing that directive is enabled.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "AH00558: apache2: Could not reliably determine the server's fully qualified domain name",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Add ServerName directive in apache2.conf or httpd.conf to suppress this warning.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "AH01071: Got error 'Primary script unknown'",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Occurs with PHP-FPM misconfiguration; check ProxyPassMatch and correct script path.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "AH00326: Server ran out of threads",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Occurs when MaxRequestWorkers limit is reached; increase MaxRequestWorkers or optimize resource usage.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "AH00957: mod_fcgid: can\u2019t apply process slot",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Occurs when too many FCGI processes; adjust FcgidMaxProcesses or process limits.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "AH01630: client denied by server configuration",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Occurs when access rules using Require or Allow override file permissions; review directory context.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "AH00015: Unable to open logs",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Occurs when log file directory is not writable by Apache; adjust ownership and permissions.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "AH10429: Syntax error on line ... of ...",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Occurs when configuration directive has syntax mistake; correct the specified line.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "AH02032: client sent HTTP/1.1 request without hostname",
    "label": "apache",
    "language": "en",
    "context": "Specific Error: Apache error",
    "answer": "Occurs when Host header is missing; ensure client sends valid Host header or configure default VirtualHost.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is Entity Framework?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "Entity Framework (EF) is an object-relational mapper (ORM) for .NET that enables developers to work with a database using .NET objects.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "Who develops Entity Framework?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "Entity Framework is developed by Microsoft as part of the .NET ecosystem.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "What is DbContext?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "DbContext is the primary class in EF used for interacting with the database, tracking changes, and querying Data.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is Code First approach?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "Code First is an EF workflow where classes are defined first, and the database schema is generated based on the model.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is Database First approach?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "Database First is an EF workflow where the model classes are generated from an existing database schema.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is Model First approach?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "Model First is an EF workflow where a visual model is created in Designer and then used to generate classes and database.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "What is a DbSet?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "A DbSet represents a collection of entities of a specific type that can be queried from the database.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is Migrations in EF?",
    "label": "entity-framework",
    "language": "en",
    "context": "Factoid: EF Core basics",
    "answer": "Migrations provide a way to evolve the database schema over time as the model changes, tracking and applying updates.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to install Entity Framework Core?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Use NuGet: `Install-Package Microsoft.EntityFrameworkCore` and install provider e.g., `Microsoft.EntityFrameworkCore.SqlServer`.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to define a model class?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Create a POCO class with properties; use [Key], [Required], and other data annotations for mapping.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to configure DbContext options?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Override OnConfiguring or use AddDbContext in Startup to set UseSqlServer, connection string, and other options.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to create a DbContext class?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Inherit from DbContext, define DbSet<TEntity> properties, and add configuration in OnModelCreating method.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to query data using LINQ?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Use `context.Entities.Where(e => e.Property == value).ToList()` for querying based on predicates.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to track changes in EF?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "EF tracks entity states (Added, Modified, Deleted) and persists changes when SaveChanges() is called.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to eager load related data?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Use Include and ThenInclude methods: `context.Orders.Include(o => o.Customer).ThenInclude(c => c.Address)`.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to lazy load related data?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Enable proxies and mark navigation properties virtual; EF loads related entities on access.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to configure composite keys?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Use Fluent API in OnModelCreating: `modelBuilder.Entity< T >().HasKey(e => new { e.Key1, e.Key2 })`.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to seed initial data?",
    "label": "entity-framework",
    "language": "en",
    "context": "Descriptive: EF Core usage",
    "answer": "Override OnModelCreating: `modelBuilder.Entity< T >().HasData(new T { ... })` to insert seed data on migration.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare EF Core vs EF6.",
    "label": "entity-framework",
    "language": "en",
    "context": "Comparison: EF features",
    "answer": "EF Core is lightweight, cross-platform with modern features; EF6 is mature but Windows-only and supports legacy APIs.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare Code First vs Database First.",
    "label": "entity-framework",
    "language": "en",
    "context": "Comparison: EF features",
    "answer": "Code First starts with classes to generate schema; Database First starts with existing database to generate classes.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare Add vs Attach methods.",
    "label": "entity-framework",
    "language": "en",
    "context": "Comparison: EF features",
    "answer": "Add marks entity for insert; Attach marks entity as unchanged for update scenarios.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Compare SaveChanges vs SaveChangesAsync.",
    "label": "entity-framework",
    "language": "en",
    "context": "Comparison: EF features",
    "answer": "SaveChanges executes synchronously blocking the thread; SaveChangesAsync performs non-blocking asynchronous save.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare TrackAll vs NoTracking queries.",
    "label": "entity-framework",
    "language": "en",
    "context": "Comparison: EF features",
    "answer": "AsNoTracking queries do not track entities improving read performance; tracked queries monitor changes for updates.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare Fluent API vs Data Annotations.",
    "label": "entity-framework",
    "language": "en",
    "context": "Comparison: EF features",
    "answer": "Fluent API offers full configuration flexibility in code; Data Annotations provide limited configuration via attributes.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to add a migration?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Use Package Manager Console: `Add-Migration MigrationName` to scaffold a new migration file.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to update database schema?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Run `Update-Database` in Package Manager Console or `dotnet ef database update` CLI to apply migrations.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to rollback a migration?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Use `Update-Database PreviousMigrationName` to revert schema to a specific migration.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to configure connection string?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Define connection string in appsettings.json and pass to UseSqlServer in AddDbContext setup.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to disable cascade delete?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "In OnModelCreating: `modelBuilder.Entity< T >().HasOne(...).WithMany(...).OnDelete(DeleteBehavior.Restrict)`.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to execute raw SQL queries?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Use `context.Entities.FromSqlRaw(\"SELECT * FROM Table WHERE ...\")` or ExecuteSqlRaw for commands.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to implement concurrency tokens?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Add a [Timestamp] or [ConcurrencyCheck] property and configure rowversion column in the database.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to configure table and column names?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Use Fluent API: `modelBuilder.Entity< T >().ToTable(\"TableName\").Property(p => p.Prop).HasColumnName(\"ColName\")`.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to use value conversions?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "In OnModelCreating: `modelBuilder.Entity< T >().Property(p => p.Enum).HasConversion<string>()` to store enum as string.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to use query filters?",
    "label": "entity-framework",
    "language": "en",
    "context": "How-to: EF migrations and config",
    "answer": "Define global filters: `modelBuilder.Entity< T >().HasQueryFilter(e => !e.IsDeleted)` for soft delete patterns.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Error: The entity type hasn't been configured.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs when the class is not included in DbContext; ensure DbSet\\<T> or modelBuilder configuration.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: No database provider has been configured.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs when UseSqlServer or other provider is not called in DbContext options.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: A second operation started on this context before the first completed.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs on concurrent use of DbContext; use separate contexts or ensure async calls complete.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: The relationship could not be changed.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs when FK constraints conflict; check entity navigation and cascade delete settings.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: A circular dependency was detected.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs when two entities reference each other with required navigation; configure one side as optional.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: Migration name is not valid identifier.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs when migration name contains invalid characters; use alphanumeric names starting with a letter.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: Scaffolded migration contains duplicate operations.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs when model and database are out-of-sync; consider removing duplicate operations manually.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: Cannot insert explicit value for identity column.",
    "label": "entity-framework",
    "language": "en",
    "context": "Common Error: EF troubleshooting",
    "answer": "Occurs when identity insert not enabled; use `HasIdentityOptions` or temporarily enable IDENTITY_INSERT.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "SqlException: The model backing the 'DbContext' context has changed",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs when model and database schema mismatch; add and apply migrations or use EnsureCreated carefully.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "InvalidOperationException: Collection was modified",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs when modifying a tracked collection during enumeration; use ToList() or separate context.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "DbUpdateConcurrencyException",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs on concurrency token mismatch; catch exception and resolve conflicts or retry.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "System.InvalidOperationException: No service for type 'DbContextOptions'",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs when DbContext is not registered in DI container; call services.AddDbContext in Startup.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "System.ArgumentNullException: Value cannot be null. (Parameter 'connectionString')",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs when connection string is missing; add valid string in configuration.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "InvalidOperationException: The entity type 'T' requires a primary key to be defined",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs when entity class lacks key property or annotation; define key with [Key] or Fluent API.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "System.InvalidOperationException: Ambiguous match found",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs when multiple properties match a convention; configure column names explicitly to disambiguate.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "System.Data.SqlClient.SqlException: Login failed for user",
    "label": "entity-framework",
    "language": "en",
    "context": "Specific Error: EF error",
    "answer": "Occurs when database credentials invalid; verify connection string credentials and server access.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is Android Studio?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "Android Studio is the official IDE for Android app development, based on IntelliJ IDEA with Android-specific features.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Who develops Android Studio?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "Android Studio is developed by Google in collaboration with JetBrains.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "What build system does Android Studio use?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "Android Studio uses Gradle as its build automation system.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "What is AVD in Android Studio?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "AVD (Android Virtual Device) is an emulator configuration that simulates an Android device.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is the Android Studio project structure?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "It includes modules like app, Gradle scripts, manifests, java/kotlin code, and resource folders.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is the Android Studio profiler?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "The profiler is a set of tools for analysis of CPU, memory, network usage, and energy impact.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What language is supported by default?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "Android Studio supports Java and Kotlin for Android application development by default.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is the layout editor?",
    "label": "android-studio",
    "language": "en",
    "context": "Factoid: Android Studio definition",
    "answer": "The layout editor is a visual tool for designing UI by dragging components and editing XML layouts.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to install Android Studio?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Download the installer from developer.android.com, run the setup, and follow prompts to install SDK and emulator.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to create a new Android project?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Open Android Studio, click New Project, choose template, configure name and language, and finish setup.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to update SDK components?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Use SDK Manager in Welcome screen or Tools > SDK Manager to install or update SDK tools and platforms.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to configure emulator settings?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Open AVD Manager, edit an existing device or create new, set system image, hardware profile, and performance options.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to run app on a device?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Enable USB debugging on device, connect via USB, select it in the run configuration, and click Run.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to use Live Layout Preview?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Open layout XML and view rendered preview; enable live updates on code changes.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to use code templates?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Use predefined file templates or type live templates (e.g., 'logd') and press Tab to expand.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to refactor code?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Use Refactor menu or right-click > Refactor > Rename/Extract Method to safely change code structure.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to debug app using breakpoints?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Set breakpoints in code, click Debug, then step through code with controls in the Debug tool window.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to analyze build variants?",
    "label": "android-studio",
    "language": "en",
    "context": "Descriptive: Android Studio usage",
    "answer": "Use Build Variants panel to switch between debug, release, and custom build configurations.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare Android Studio vs Eclipse ADT.",
    "label": "android-studio",
    "language": "en",
    "context": "Comparison: Android Studio features",
    "answer": "Android Studio offers official support, Gradle integration, and more features; Eclipse ADT is deprecated and less integrated.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "Compare Instant Run vs Apply Changes.",
    "label": "android-studio",
    "language": "en",
    "context": "Comparison: Android Studio features",
    "answer": "Instant Run was legacy hot swap; Apply Changes provides safer, faster code and resource updates without full reinstall.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Compare debug vs release APKs.",
    "label": "android-studio",
    "language": "en",
    "context": "Comparison: Android Studio features",
    "answer": "Debug APKs include debuggable flags and are unsigned; release APKs are optimized, minified, and signed for distribution.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare emulator vs physical device testing.",
    "label": "android-studio",
    "language": "en",
    "context": "Comparison: Android Studio features",
    "answer": "Emulator simulates device but may be slower; physical devices provide real-world performance and hardware feature testing.",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "Compare Java vs Kotlin support in Android Studio.",
    "label": "android-studio",
    "language": "en",
    "context": "Comparison: Android Studio features",
    "answer": "Kotlin offers concise syntax and null safety; Java is more verbose but widely known and interoperable.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare Gradle sync vs project sync.",
    "label": "android-studio",
    "language": "en",
    "context": "Comparison: Android Studio features",
    "answer": "Gradle sync downloads dependencies and generates project files; project sync updates IDE project view.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to configure ProGuard/R8 rules?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Add rules to proguard-rules.pro file and enable minification in build.gradle with `minifyEnabled true`.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to integrate Firebase in Android Studio?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Use Firebase Assistant tool or add Firebase SDK dependencies in build.gradle and configure google-services.json.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to use ConstraintLayout editor?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Drag and drop widgets and create constraints visually or edit XML to define alignment and barriers.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to generate signed APK?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Use Build > Generate Signed Bundle / APK, select keystore, enter passwords, and finish wizard.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to enable Jetpack Compose preview?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Annotate composable functions with @Preview and open Compose preview panel in design view.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to migrate project to AndroidX?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Use Refactor > Migrate to AndroidX and update dependencies and imports automatically.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to profile app performance?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Use Android Profiler tools for CPU, Memory, and Energy; record sessions and analyze metrics.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to set up unit tests?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Add JUnit dependencies, create test classes under test/, and run tests via Run > All Tests.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to set up instrumentation tests?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Use Espresso framework dependencies, create tests under androidTest/, and run on emulator or device.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to customize theme with Material Components?",
    "label": "android-studio",
    "language": "en",
    "context": "How-to: Android Studio development",
    "answer": "Use MaterialComponents theme in styles.xml and use material widgets like com.google.android.material.button.MaterialButton.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Error: Gradle sync failed",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs due to dependency conflicts or network issues; check build.gradle versions and internet connectivity.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: Unable to resolve dependency",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs when repository missing or dependency name/version incorrect; add required repository or correct coordinates.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Error: AVD not found",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs when emulator image missing; create or install a system image in AVD Manager.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: Gradle daemon out of memory",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs when JVM heap too small; increase org.gradle JVM args in gradle.properties.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: Execution failed for task ':app:compileDebugJavaWithJavac'",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs due to Java compilation errors; check stack trace for code errors and fix accordingly.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Could not find com.android.tools.build:gradle",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs when Android plugin version or repository is missing; update plugin version or add Google Maven repo.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: Device not found",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs when USB debugging disabled or driver missing; enable developer options and install device drivers.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Error: Incompatible component versions",
    "label": "android-studio",
    "language": "en",
    "context": "Common Error: Android Studio troubleshooting",
    "answer": "Occurs when SDK tools and plugin versions mismatch; update Android Studio and SDK tools to compatible versions.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Error: No SDK found. Define SDK location",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs when ANDROID_HOME is not set or SDK path misconfigured; set correct SDK path in settings or environment.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Error: Deprecated Gradle features used in this build",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs when using old Gradle APIs; update plugins and dependencies to latest versions.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: Minimum supported Gradle version is X",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs when Gradle wrapper version too low; update gradle-wrapper.properties to required version.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: adb command not found",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs when platform-tools not in PATH; install or add SDK/platform-tools to PATH environment variable.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: Install refused: Device 'emulator-5554' does not have sufficient storage",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs when emulator storage full; wipe data in AVD Manager or increase storage size.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: Manifest merger failed",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs due to conflicting attributes in manifest; resolve conflicts with tools:replace or adjust manifests.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Error: Execution failed for task ':app:mergeDebugAssets'",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs when asset paths conflict or invalid files present; check asset directories and file names.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: Resource linking failed",
    "label": "android-studio",
    "language": "en",
    "context": "Specific Error: Android Studio error",
    "answer": "Occurs when XML layout has errors; check resources for missing attributes or syntax mistakes.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What does CSV stand for?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "CSV stands for Comma-Separated Values, a simple file format for tabular data.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Who invented CSV?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "CSV format originates from early spreadsheets and databases but has no single inventor.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is a CSV file?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "A CSV file stores tabular data in plain text, with each line representing a row and fields separated by commas.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is a delimiter in CSV?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "A delimiter is a character, typically a comma, that separates values in a CSV file.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is quoting in CSV?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "Quoting wraps fields containing delimiters or newlines in double quotes to preserve field integrity.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is RFC 4180?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "RFC 4180 is the standard that specifies the CSV format and conventions for interoperability.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a header row?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "A header row is the first line in a CSV file that lists column names.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "What is line break style in CSV?",
    "label": "csv",
    "language": "en",
    "context": "Factoid: CSV basics",
    "answer": "Line breaks can use LF (\\n), CR (\\r), or CRLF (\\r\\n) depending on platform conventions.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to open a CSV file in Python?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use the csv module: `import csv` then `with open('file.csv') as f: reader = csv.reader(f)` to iterate rows.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to read a CSV into pandas?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use `import pandas as pd` and `df = pd.read_csv('file.csv')` to load data into a DataFrame.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to write a DataFrame to CSV?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use `df.to_csv('file.csv', index=False)` to export DataFrame without index column.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to open CSV in Excel?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Double-click the file or use Excel's Import Text Wizard, specifying delimiter and format options.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to parse CSV in JavaScript?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use libraries like PapaParse: `Papa.parse(file, { complete: (res) => {...} })`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to import CSV in SQL?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use SQL commands like `LOAD DATA INFILE 'file.csv' INTO TABLE table_name FIELDS TERMINATED BY ','` for MySQL.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to use OpenCSV in Java?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Add opencsv dependency and use `CSVReader reader = new CSVReader(new FileReader('file.csv'));` to read lines.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to stream large CSV files?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use streaming APIs (e.g., Python csv.reader or pandas chunksize) to process files in smaller iterations.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to detect delimiter in CSV?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use Python's sniffer: `dialect = csv.Sniffer().sniff(sample)` to detect delimiter automatically.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to handle header rows?",
    "label": "csv",
    "language": "en",
    "context": "Descriptive: CSV operations",
    "answer": "Use parameters like `skiprows` or `header` in pandas, or manually skip the first row in csv.reader.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare CSV vs TSV.",
    "label": "csv",
    "language": "en",
    "context": "Comparison: CSV related formats",
    "answer": "CSV uses commas as delimiters; TSV uses tabs, beneficial when fields contain commas.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare CSV vs JSON.",
    "label": "csv",
    "language": "en",
    "context": "Comparison: CSV related formats",
    "answer": "CSV is flat and simpler for tables; JSON supports nested structures and complex data.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare pandas.read_csv vs pandas.read_table.",
    "label": "csv",
    "language": "en",
    "context": "Comparison: CSV related formats",
    "answer": "read_csv defaults to comma delimiter; read_table defaults to tab delimiter.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Compare RFC 4180 vs custom CSV formats.",
    "label": "csv",
    "language": "en",
    "context": "Comparison: CSV related formats",
    "answer": "RFC 4180 defines standard CSV; custom formats may use different delimiters, quoting rules.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare Excel CSV vs Unix CSV.",
    "label": "csv",
    "language": "en",
    "context": "Comparison: CSV related formats",
    "answer": "Excel CSV may use semicolon delimiter based on locale; Unix CSV usually uses commas.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare csv.reader vs DictReader in Python.",
    "label": "csv",
    "language": "en",
    "context": "Comparison: CSV related formats",
    "answer": "csv.reader returns lists per row; DictReader returns dictionaries mapping column names to values.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to skip blank lines when reading CSV?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Use `skip_blank_lines=True` in pandas or filter out empty rows manually in csv.reader loops.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to handle comments in CSV?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Use `comment='#'` parameter in pandas.read_csv or ignore lines starting with comment char in reader.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to convert CSV to JSON?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Read CSV into a DataFrame and use `df.to_json(orient='records')` to convert to JSON.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to merge multiple CSV files?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Use pandas: `pd.concat([pd.read_csv(f) for f in files])` then export or process combined DataFrame.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to filter rows in CSV file?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Read with argparse and filter by condition in code or use grep/awk command-line tools for quick filtering.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to replace missing values in CSV?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Read into pandas and use `df.fillna(value)` or `df.dropna()` to handle NaNs.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to change delimiter when writing CSV?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Use `df.to_csv('file.csv', sep=';')` to specify custom delimiter.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to detect encoding of CSV file?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Use chardet library: `chardet.detect(open('file.csv','rb').read())` to guess file encoding.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to handle multiline fields in CSV?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Ensure quoting is enabled and use `quotechar` and `escapechar` parameters to properly parse multiline entries.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to load CSV in R?",
    "label": "csv",
    "language": "en",
    "context": "How-to: CSV processing",
    "answer": "Use `read.csv('file.csv', header=TRUE, sep=',')` in base R or `readr::read_csv()` for faster performance.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: _csv.Error: newline inside string",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs when fields contain unescaped newlines; ensure proper quoting or use quoting=csv.QUOTE_ALL.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: pandas.errors.ParserError",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs due to malformed CSV or unexpected number of columns; adjust `error_bad_lines=False` or fix file.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: UnicodeDecodeError",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs when file encoding mismatches default; specify `encoding` parameter (e.g., 'utf-8','latin1').",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: CParserError: Expected fields",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs when rows have varying number of fields; inspect delimiter and quoting rules.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: field larger than field limit",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs when CSV field exceeds internal size limit; increase `csv.field_size_limit()` setting.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: MemoryError when loading CSV",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs on large files exceeding memory; use chunksize in pandas or stream processing.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: KeyError accessing column",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs when referencing a non-existent column name; verify header names or use `usecols`.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: InvalidHeaderError: No columns to parse from file",
    "label": "csv",
    "language": "en",
    "context": "Common Error: CSV handling",
    "answer": "Occurs when file is empty or header row invalid; check file content and skiprows.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: csv.Error: iterator should return strings, not bytes",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when reading in binary mode; open file with text mode `'r'` instead of `'rb'`.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: pandas.errors.DtypeWarning",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when columns have mixed types; specify `dtype` or use `low_memory=False`.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: ValueError: Expected 2 fields in line 3",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when delimiter appears inside unquoted field; fix quoting or escape delimiters.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: pandas._libs.lib.NoSuchObjectError",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when DataFrame column not found; check case sensitivity and column names.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: TypeError: Object of type datetime is not JSON serializable",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when converting DF with datetime to JSON; format dates or convert to string.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: ValueError: Buffer has wrong number of dimensions",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when passing 2D array to reader expecting 1D; flatten or adjust array shape.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: julian_date out of range in CSV date parsing",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when pandas date parser fails on out-of-range dates; provide `parse_dates` and `infer_datetime_format`.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Error: pd.errors.EmptyDataError: No columns to parse",
    "label": "csv",
    "language": "en",
    "context": "Specific Error: CSV error",
    "answer": "Occurs when CSV file is empty or header row missing; verify file content before loading.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "What is Maven?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "Maven is a build automation and project management tool for Java, based on a Project Object Model (POM).",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Who develops Maven?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "Apache Maven is an open-source project developed by the Apache Software Foundation.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is a POM file?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "A POM (pom.xml) file defines project configuration, dependencies, plugins, and build settings.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What are Maven lifecycles?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "Maven defines lifecycles such as default, clean, and site, each composed of build phases.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is a Maven repository?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "A repository is a location where Maven stores and retrieves project artifacts (local, central, or remote).",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is dependency management in Maven?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "Dependency management defines and controls versions of transitive dependencies in a parent POM.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is a Maven plugin?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "A plugin provides goals (tasks) that can be bound to lifecycle phases to extend Maven functionality.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is an artifact in Maven?",
    "label": "maven",
    "language": "en",
    "context": "Factoid: Maven definition",
    "answer": "An artifact is a file, usually a JAR, produced by the build and identified by groupId, artifactId, and version.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to install Maven?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Download the binary from Maven website, unpack it, set M2_HOME and add MAVEN_HOME/bin to PATH.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to create a new Maven project?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Run `mvn archetype:generate` with groupId, artifactId, version, and package prompts.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to add a dependency?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Add a <dependency> element with groupId, artifactId, and version under <dependencies> in pom.xml.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to build a project?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Run `mvn clean install` to compile code, run tests, and install artifact to local repository.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to run tests?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Use `mvn test` to execute unit tests with Surefire plugin.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "How to generate site documentation?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Run `mvn site` to produce project reports and documentation in the target/site directory.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to configure a plugin?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Under <build><plugins> in pom.xml, add <plugin> with groupId, artifactId, version, and configuration.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to skip tests during build?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Use `mvn install -DskipTests` or set <skipTests>true</skipTests> in Surefire plugin.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to use multi-module projects?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Define a parent POM with <modules>, list child module directories, and build parent to build all.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to override settings.xml?",
    "label": "maven",
    "language": "en",
    "context": "Descriptive: Maven usage",
    "answer": "Use `-s path/to/settings.xml` to specify custom global settings for repositories and credentials.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Compare Maven vs Gradle.",
    "label": "maven",
    "language": "en",
    "context": "Comparison: Maven concepts",
    "answer": "Maven uses XML POM and convention over configuration; Gradle uses Groovy/Kotlin DSL with more flexible configuration.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare clean vs install phases.",
    "label": "maven",
    "language": "en",
    "context": "Comparison: Maven concepts",
    "answer": "clean removes target directory; install compiles, tests, packages, and installs to local repo.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare dependency vs dependencyManagement.",
    "label": "maven",
    "language": "en",
    "context": "Comparison: Maven concepts",
    "answer": "<dependencies> adds runtime dependencies; <dependencyManagement> sets versions for inheritance.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare local vs remote repository.",
    "label": "maven",
    "language": "en",
    "context": "Comparison: Maven concepts",
    "answer": "Local repo is on developer machine; remote repo (e.g., Central) is shared and accessed over network.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare SNAPSHOT vs release versions.",
    "label": "maven",
    "language": "en",
    "context": "Comparison: Maven concepts",
    "answer": "SNAPSHOT denotes ongoing development version with updates; release is immutable and versioned.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare plugin vs extension.",
    "label": "maven",
    "language": "en",
    "context": "Comparison: Maven concepts",
    "answer": "Plugin binds to lifecycle and provides goals; extension modifies Maven core behaviour using SPI.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to deploy artifact to remote repository?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Use `mvn deploy` with distributionManagement configured in POM and credentials in settings.xml.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to set proxy for Maven?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Define <proxy> under <proxies> in settings.xml with host, port, username, and password.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to use Maven profiles?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Define <profiles> in POM or settings.xml and activate with `-P profileId` or through conditions.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to customize build output directory?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Set <directory> under <build> in POM to change target directory.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "How to bump project version automatically?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Use Versions Maven Plugin: `mvn versions:set -DnewVersion=x.y.z`.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to analyze dependency tree?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Run `mvn dependency:tree` to view project dependencies and conflicts.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to exclude transitive dependencies?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Use <exclusions> under a <dependency> to omit specified transitive artifacts.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to configure checksum policy?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "In settings.xml under <repository>, set <checksumPolicy>fail or warn for checksum validation.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to generate effective POM?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Run `mvn help:effective-pom` to display merged POM including inherited and default values.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to integrate SonarQube with Maven?",
    "label": "maven",
    "language": "en",
    "context": "How-to: Maven build",
    "answer": "Use SonarQube Maven Plugin: `mvn sonar:sonar` with server configuration in settings.xml.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: Could not resolve dependencies",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs when artifact not found or network issues; check repository URLs and dependency coordinates.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Plugin not found for prefix",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs when pluginGroup not configured; add pluginGroup in settings or fully qualify plugin coordinates.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: No goals specified",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs when Maven requires a phase or goal; specify mvn clean install or mvn package.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: Build failure due to test errors",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs when unit tests fail; review test reports and fix failing tests.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Error: Invalid POM: /pom.xml",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs due to malformed XML; validate XML syntax and POM structure.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Error: Access denied to repository",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs when credentials missing or incorrect; configure server credentials in settings.xml.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Warning: Local repository is missing metadata",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs when metadata files are corrupt; run `mvn clean install -U` to update snapshots.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: JAVA_HOME is not defined",
    "label": "maven",
    "language": "en",
    "context": "Common Error: Maven troubleshooting",
    "answer": "Occurs when environment variable not set; define JAVA_HOME to JDK installation directory.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "[ERROR] The POM for groupId:artifactId:version is missing",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when artifact not in any configured repository; install locally or correct version.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "[ERROR] Non-resolvable parent POM",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when parent POM not found; ensure parent coordinates and repository settings are correct.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "[ERROR] Plugin execution not covered by lifecycle",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when plugin not bound to any phase; configure executions in POM with phase binding.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "[ERROR] Could not transfer artifact",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when network unreachable or authentication failed; check proxy, credentials, and repository URL.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "[ERROR] An API incompatibility was encountered",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when plugin or dependency uses unsupported Maven API version; update plugin or Maven version.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "[ERROR] Failed to read artifact descriptor",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when pom.xml cannot be read or parsed; check repository metadata and POM syntax.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "[ERROR] Unknown lifecycle phase",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when mistyping lifecycle phase; use mvn help:lifecycles to list valid phases.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "[ERROR] No plugin found for prefix 'xxx'",
    "label": "maven",
    "language": "en",
    "context": "Specific Error: Maven error",
    "answer": "Occurs when pluginGroup missing; configure pluginGroups in settings.xml or fully qualify groupId.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is an API?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "An API (Application Programming Interface) is a set of rules and protocols allowing different software applications to communicate.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Who uses APIs?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "Developers use APIs to integrate services, access data, and leverage functionalities from other applications.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "What is a REST API?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "A REST API follows Representational State Transfer principles, using HTTP methods and stateless communication.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "What is GraphQL API?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "GraphQL is a query language and runtime allowing clients to request exactly the data they need via a single endpoint.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is SOAP API?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "SOAP (Simple Object Access Protocol) is a protocol using XML messages over HTTP or other transports, with strict standards.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is Web API in .NET?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "ASP.NET Web API is a framework for building HTTP services that can be consumed by various clients.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What are API endpoints?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "Endpoints are specific URLs exposed by an API where clients send requests to access resources or perform actions.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is API authentication?",
    "label": "api",
    "language": "en",
    "context": "Factoid: API basics",
    "answer": "Authentication verifies client identity using mechanisms like API keys, OAuth tokens, or JWTs.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to document an API?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Use OpenAPI/Swagger specification to define paths, parameters, responses, and generate interactive docs.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to version an API?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Include version in URL (/v1/resources) or in headers (Accept-Version), and maintain backward compatibility.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to handle rate limiting?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Monitor request counts per client, enforce limits, and return HTTP 429 with Retry-After header.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to implement pagination?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Support query parameters like page and limit, and include metadata (total count, next URL) in responses.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to secure an API?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Use HTTPS, implement authentication/authorization, validate inputs, and sanitize outputs.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to mock an API?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Use tools like Postman mock server, json-server, or create dummy endpoints for testing.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to handle API errors?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Return appropriate HTTP status codes with JSON error object containing code and message.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to support CORS?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Configure Access-Control-Allow-Origin and other headers on server or use middleware.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to consume an API in JavaScript?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Use fetch or axios: `fetch(url).then(res=>res.json()).then(data=>{})`.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to test an API?",
    "label": "api",
    "language": "en",
    "context": "Descriptive: API design",
    "answer": "Use tools like Postman or automated tests with frameworks like JUnit (REST-assured) or pytest (requests).",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare REST vs SOAP APIs.",
    "label": "api",
    "language": "en",
    "context": "Comparison: API types",
    "answer": "REST is lightweight using JSON/HTTP; SOAP is heavier using XML and WS-* standards.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Compare REST vs GraphQL.",
    "label": "api",
    "language": "en",
    "context": "Comparison: API types",
    "answer": "REST has multiple endpoints per resource; GraphQL uses single endpoint with flexible queries.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare API key vs OAuth.",
    "label": "api",
    "language": "en",
    "context": "Comparison: API types",
    "answer": "API keys are simple tokens for auth; OAuth provides delegated access with scopes and tokens.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare HTTP GET vs POST.",
    "label": "api",
    "language": "en",
    "context": "Comparison: API types",
    "answer": "GET retrieves data and is idempotent; POST creates resources and can change server state.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare synchronous vs asynchronous APIs.",
    "label": "api",
    "language": "en",
    "context": "Comparison: API types",
    "answer": "Synchronous APIs return immediate responses; asynchronous may return job IDs and require polling.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Compare public vs private APIs.",
    "label": "api",
    "language": "en",
    "context": "Comparison: API types",
    "answer": "Public APIs are open to external developers; private APIs are internal for organizational use.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to create a REST API with Node.js?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Use Express: define routes with HTTP methods, implement handlers, and return JSON responses.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to build an API with Flask in Python?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Install Flask, define @app.route endpoints, implement functions, and run `app.run()`.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to secure API with JWT?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Generate JWT on login, return to client, and verify token in Authorization header for protected routes.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to implement CORS in Spring Boot?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Configure CorsRegistry in WebMvcConfigurer or use @CrossOrigin on controllers.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to rate limit an API in Express?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Use express-rate-limit middleware with windowMs and max options.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "How to document API with Swagger UI?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Add swagger-ui-express, serve OpenAPI JSON, and mount UI at /api-docs endpoint.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to deploy API to AWS Lambda?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Package code, configure API Gateway with Lambda proxy integration, and deploy function.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to cache API responses?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Use HTTP cache headers or implement in-memory cache (e.g., Redis) to store frequent responses.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to implement HATEOAS in Spring HATEOAS?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Use EntityModel and add links via linkTo and methodOn to include hypermedia.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to batch API requests?",
    "label": "api",
    "language": "en",
    "context": "How-to: API implementation",
    "answer": "Accept array of operations in request body, process each operation, and return aggregated results.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: 404 Not Found",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs when endpoint or route is undefined; verify URL and route definitions.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error: 401 Unauthorized",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs when authentication is missing or invalid; require valid credentials or tokens.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: 500 Internal Server Error",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs on unhandled exceptions; handle errors and return structured responses.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: CORS policy blocked",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs when Access-Control-Allow-Origin header is missing or incorrect; configure CORS.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: 400 Bad Request",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs when request payload is malformed; validate input and return error details.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: 429 Too Many Requests",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs when rate limit exceeded; adjust client request frequency or increase limit.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: Schema validation failed",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs when request body does not match schema; enforce schema and return validation errors.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Missing required parameter",
    "label": "api",
    "language": "en",
    "context": "Common Error: API troubleshooting",
    "answer": "Occurs when expected query or path parameter is not provided; document parameters and validate.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: CORS header \u2018Access-Control-Allow-Origin\u2019 missing",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs when server does not set CORS headers; enable CORS middleware or configure headers.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: Unexpected end of JSON input",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs when response body is empty or truncated; ensure proper JSON response.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error: Invalid API key",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs when API key not recognized or expired; verify key and regenerate if needed.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: Token expired",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs when JWT token has expired; refresh token or re-authenticate to obtain new token.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: Maximum call stack exceeded",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs in recursive API call patterns; prevent infinite loops in client-side calls.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: Unrecognized Content-Type",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs when Content-Type header not supported by API; accept only allowed types.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: No response from server",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs when server unreachable or network issues; check server status and connectivity.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: Cannot deserialize instance",
    "label": "api",
    "language": "en",
    "context": "Specific Error: API error",
    "answer": "Occurs when JSON structure does not match expected model; adjust serialization settings or model.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is LINQ?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "LINQ (Language Integrated Query) is a .NET feature for querying collections using SQL-like syntax integrated into C# and VB.",
    "start_char": 0,
    "end_char": 124
  },
  {
    "question": "Who introduced LINQ?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "LINQ was introduced by Microsoft in .NET Framework 3.5 alongside C# 3.0.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "What are LINQ providers?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "Providers translate LINQ queries into specific formats, such as LINQ to Objects, LINQ to SQL, and LINQ to XML.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "What is IQueryable?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "IQueryable<T> represents a queryable data source that supports deferred execution and building expression trees.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "What is IEnumerable?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "IEnumerable<T> represents an in-memory collection that can be iterated and queried with LINQ operators.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is deferred execution?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "Deferred execution means a LINQ query is not executed until its results are enumerated.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is LINQ to SQL?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "LINQ to SQL is a provider that maps LINQ queries to SQL commands for querying relational databases.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What are lambda expressions in LINQ?",
    "label": "linq",
    "language": "en",
    "context": "Factoid: LINQ basics",
    "answer": "Lambda expressions define inline functions used as predicates or selectors in LINQ methods.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to perform a basic LINQ query on a list?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use syntax: `var result = from item in list where item.Property == value select item;` or method syntax: `list.Where(x => x.Property == value)`.",
    "start_char": 0,
    "end_char": 144
  },
  {
    "question": "How to project elements using Select?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `list.Select(x => new { x.Prop1, x.Prop2 })` to transform each element into a new form.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to filter collections using Where?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `collection.Where(x => x.Condition)` to return only elements satisfying the condition.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to sort collections using OrderBy?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `collection.OrderBy(x => x.Key)` or `OrderByDescending` to sort elements by a key.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to join two collections?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `from a in colA join b in colB on a.Id equals b.AId select new { a, b }` to perform inner join.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to group elements using GroupBy?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `collection.GroupBy(x => x.Key)` to group elements by a specified key.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to aggregate values?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `collection.Sum(x => x.Value)`, `Average`, `Min`, `Max`, or `Aggregate` for custom aggregation.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to paginate results with Skip and Take?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `collection.Skip((page-1)*pageSize).Take(pageSize)` to implement pagination.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to check existence using Any?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `collection.Any(x => x.Condition)` to determine if any element matches the condition.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to get a single element using SingleOrDefault?",
    "label": "linq",
    "language": "en",
    "context": "Descriptive: Query operations",
    "answer": "Use `collection.SingleOrDefault(x => x.Condition)` to retrieve one element or default if none.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare LINQ query syntax vs method syntax.",
    "label": "linq",
    "language": "en",
    "context": "Comparison: LINQ methods",
    "answer": "Query syntax uses SQL-like constructs `from...where...select`; method syntax uses chained extension methods like `Where()`, `Select()`.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "Compare IEnumerable vs IQueryable.",
    "label": "linq",
    "language": "en",
    "context": "Comparison: LINQ methods",
    "answer": "IEnumerable executes in-memory and supports immediate execution; IQueryable builds expression trees for deferred execution on remote data sources.",
    "start_char": 0,
    "end_char": 146
  },
  {
    "question": "Compare First vs FirstOrDefault.",
    "label": "linq",
    "language": "en",
    "context": "Comparison: LINQ methods",
    "answer": "First throws exception if no elements; FirstOrDefault returns default value when none found.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare Single vs SingleOrDefault.",
    "label": "linq",
    "language": "en",
    "context": "Comparison: LINQ methods",
    "answer": "Single throws if zero or multiple matches; SingleOrDefault returns default if none and throws on multiple matches.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare ToList vs ToArray.",
    "label": "linq",
    "language": "en",
    "context": "Comparison: LINQ methods",
    "answer": "ToList materializes results into a List<T>; ToArray creates an array T[]. Both execute the query immediately.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare Contains vs Any.",
    "label": "linq",
    "language": "en",
    "context": "Comparison: LINQ methods",
    "answer": "Contains checks for a specific value in sequence; Any uses a predicate for conditional existence checking.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to write a LINQ query with multiple where clauses?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Chain conditions in query: `from x in col where x.Age > 18 where x.Active select x;` or `col.Where(x => x.Age>18 && x.Active)`.",
    "start_char": 0,
    "end_char": 127
  },
  {
    "question": "How to use SelectMany for flattening collections?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use `col.SelectMany(x => x.SubCollection)` to flatten nested collections into a single sequence.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to use let in LINQ query syntax?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use `let y = x.Property` in query: `from x in col let y = x.Prop where y>0 select y;` to introduce sub-expressions.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to perform left outer join in LINQ?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use `join ... into` and `from ... in ... DefaultIfEmpty()` pattern for left join: `from a in A join b in B on a.Id equals b.AId into grp from b2 in grp.DefaultIfEmpty() select ...`.",
    "start_char": 0,
    "end_char": 181
  },
  {
    "question": "How to convert LINQ results to DataTable?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use `var table = result.CopyToDataTable();` after converting results to DataRow or use reflection to fill DataTable.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to dynamically build LINQ expressions?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use Expression trees: create ParameterExpression and Expression<Func<T,bool>> and compile to query.Provider.CreateQuery().",
    "start_char": 0,
    "end_char": 122
  },
  {
    "question": "How to use LINQ with XML?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use `XDocument.Load()` and LINQ to XML: `from el in doc.Descendants(\"Element\") select el.Attribute(\"Attr\").Value;`.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to use PLINQ for parallel queries?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use `collection.AsParallel().Where(...).Select(...).ToList()` to leverage multiple processors for query execution.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to handle null collections in LINQ?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use null-conditional operator: `collection?.Where(...).ToList()` to avoid NullReferenceException.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to implement paging in LINQ to SQL?",
    "label": "linq",
    "language": "en",
    "context": "How-to: Advanced queries",
    "answer": "Use `query.Skip(offset).Take(limit)` before materialization and execute on database provider for SQL OFFSET FETCH.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "InvalidOperationException: Sequence contains no elements",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Occurs when using First() or Single() on empty sequence; use FirstOrDefault() or check Any() before.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "InvalidOperationException: Sequence contains more than one element",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Occurs when using Single() but sequence has multiple matches; use First() or adjust predicate.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "ArgumentNullException: source is null",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Occurs when the collection is null; ensure collection is initialized or use null checks.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "NotSupportedException: LINQ to Entities does not recognize method",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Occurs when using unsupported .NET methods in LINQ to Entities; use supported methods or client evaluation.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "InvalidCastException in LINQ query",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Occurs when projecting to incorrect type; verify selectors and target anonymous/object types.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "SqlException: Incorrect syntax near",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Occurs in LINQ to SQL when generated SQL is invalid; inspect expression and adjust query.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "NullReferenceException in LINQ chain",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Occurs when element or property is null in query; use null-conditional operators before methods.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Deferred execution hiding exceptions",
    "label": "linq",
    "language": "en",
    "context": "Common Error: LINQ pitfalls",
    "answer": "Deferred execution delays exceptions until enumeration; materialize results with ToList() to catch early.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "InvalidOperationException: Outer sequence contains no matching element",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs when using DefaultIfEmpty incorrectly or expecting elements; ensure DefaultIfEmpty yields default.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "NotSupportedException: The query operator '...' is not supported",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs when using unsupported operator in provider; rewrite query to supported operations.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Expression of type 'System.Int32' cannot be used for assignment",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs when projecting into incompatible type in Select; ensure matching types in projection.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "SqlException: Context connection cannot be used",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs in EF when using wrong connection string; use correct DataContext or SqlConnection.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "NullReferenceException: Object reference not set to an instance",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs when query references nested property of null element; check for null or use where clause.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "InvalidOperationException: Multiple enumerations",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs when iterating IQueryable multiple times without caching; call ToList() to materialize.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "InvalidCastException: Unable to cast to entity type",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs when projecting into entity type; project into DTO or anonymous type instead.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "ArgumentException: Could not determine the mapping",
    "label": "linq",
    "language": "en",
    "context": "Specific Error: LINQ error",
    "answer": "Occurs when using LINQ to SQL with unmapped type; ensure classes are mapped to database tables.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is Qt?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "Qt is a cross-platform application and UI framework for building graphical user interfaces and applications in C++.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Who develops Qt?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "Qt is developed by The Qt Company and the open-source community under the LGPL and commercial licenses.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What languages does Qt support?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "Qt primarily uses C++, but also offers bindings for Python (PyQt, PySide), Java, and others.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a QWidget?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "QWidget is the base class for all UI objects in Qt, representing windows, dialogs, and controls.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is a signal in Qt?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "A signal is a Qt mechanism to notify other objects when an event occurs, such as a button click.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is a slot in Qt?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "A slot is a function that can be connected to a signal to handle events in Qt's signal-slot mechanism.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "What is Qt Creator?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "Qt Creator is the official cross-platform IDE designed to build and maintain Qt applications.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is QML?",
    "label": "qt",
    "language": "en",
    "context": "Factoid: Qt basics",
    "answer": "QML is Qt\u2019s declarative language for designing UI-centric and fluid user interfaces.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to create a Qt application?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Instantiate QApplication, create your main window widget, call show(), and enter the event loop with exec().",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to design UI with Qt Designer?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Use Qt Designer to drag-and-drop widgets, set properties, and save .ui files for use in code or via uic.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to connect a signal and slot?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Use QObject::connect(sender, &Sender::signal, receiver, &Receiver::slot) in C++, or connect in QML.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to load a UI file at runtime?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Use uic to compile UI or load dynamically with QUiLoader and .ui file path.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to layout widgets?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Use layout managers like QHBoxLayout, QVBoxLayout, or QGridLayout to arrange widgets in containers.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to style application with Qt Style Sheets?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Set stylesheet via QWidget::setStyleSheet() using CSS-like syntax to customize widget appearance.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to handle events in Qt?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Override event handlers like mousePressEvent() or install event filters with QObject::installEventFilter().",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to use Qt resource system?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Add resources to .qrc files, compile with rcc, and access via qrc:/ paths in code.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to internationalize Qt apps?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Use tr() for strings, lupdate to extract, Qt Linguist to translate, and lrelease to generate .qm files.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to use QNetworkAccessManager?",
    "label": "qt",
    "language": "en",
    "context": "Descriptive: Qt usage",
    "answer": "Instantiate QNetworkAccessManager, call get/post with QNetworkRequest, and connect to finished() signal.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare QWidget vs QQuickView.",
    "label": "qt",
    "language": "en",
    "context": "Comparison: Qt components",
    "answer": "QWidget is for traditional widget-based UIs; QQuickView is for QML-based scene graph UIs.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare signal-slot syntax old vs new.",
    "label": "qt",
    "language": "en",
    "context": "Comparison: Qt components",
    "answer": "Old uses SIGNAL()/SLOT() macros; new uses pointer-to-member functions for compile-time checks.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare blocking vs non-blocking network calls.",
    "label": "qt",
    "language": "en",
    "context": "Comparison: Qt components",
    "answer": "Blocking calls wait in current thread; non-blocking use signals and asynchronous API.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare qmake vs CMake for Qt builds.",
    "label": "qt",
    "language": "en",
    "context": "Comparison: Qt components",
    "answer": "qmake is Qt-specific build tool; CMake is general-purpose with Qt support via find_package.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare PyQt vs PySide.",
    "label": "qt",
    "language": "en",
    "context": "Comparison: Qt components",
    "answer": "PyQt is GPL/commercial licensed Python binding; PySide (Qt for Python) is LGPL licensed by Qt project.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare QML vs Widgets.",
    "label": "qt",
    "language": "en",
    "context": "Comparison: Qt components",
    "answer": "QML offers declarative, dynamic UIs; Widgets provide traditional C++ widget-based UIs.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to compile Qt from source?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Clone repository, run configure with options, then make and make install to build Qt libraries.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to upgrade Qt version in Qt Creator?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Open Options > Build & Run > Qt Versions, add new qmake path, and set for kits.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to use QThread for multithreading?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Subclass QThread or use worker objects moved to thread with moveToThread(), then start thread.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to display a modal dialog?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Instantiate QDialog, call exec() to show modally and block until closed.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to prevent UI freezing during long tasks?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Perform tasks in a separate thread or use QFuture and QtConcurrent to run asynchronously.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to integrate OpenGL with Qt?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Use QOpenGLWidget or QOpenGLWindow to render OpenGL content within Qt applications.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to bind C++ classes to QML?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Register types with qmlRegisterType<>() and import module in QML to instantiate C++ classes.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to implement custom widgets?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Subclass QWidget or QQuickItem, override paintEvent or updatePaintNode, and register for use.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to use Qt Charts module?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Add QtCharts to project, include <QtCharts> headers, and use QChartView and QLineSeries for plotting.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to deploy Qt application?",
    "label": "qt",
    "language": "en",
    "context": "How-to: Qt development",
    "answer": "Bundle Qt DLLs or .so, use windeployqt or linuxdeployqt, and include platforms plugins.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: QXcbConnection: Could not connect to display",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when running Qt app on Linux without DISPLAY set; set DISPLAY environment or use -platform offscreen.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "Error: Undefined reference to `vtable for MyClass'",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when missing Q_OBJECT macro or not running moc; add Q_OBJECT and run moc.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Warning: QObject::connect invalid signal",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when mismatched signal-slot signatures; ensure parameters and signatures match.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: Plugin cannot load library",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when Qt plugins (e.g., platforms) not found; deploy correct plugin directories.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: QML module not found",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when QML import path missing; set QML2_IMPORT_PATH or include qmldir.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Error: Meta-object code generation failed",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when moc tool fails; check header includes and Q_OBJECT usage.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Error: Segmentation fault in QPainter",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when painting outside paintEvent or on uninitialized pixmap; use correct paint context.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Warning: QStandardPaths: XDG_RUNTIME_DIR not set",
    "label": "qt",
    "language": "en",
    "context": "Common Error: Qt troubleshooting",
    "answer": "Occurs when runtime dir not defined; set XDG_RUNTIME_DIR to a writable directory.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: MOC: No rule to make target",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs when header not listed in project; add headers to CMake or .pro for moc processing.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: QML Plugin missing procedure",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs when plugin binary built with wrong Qt version; rebuild plugin against correct Qt.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: QSqlDatabase: QMYSQL driver not loaded",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs when SQL plugin missing; deploy qsqlmysql driver and dependencies.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "Error: QObject::connect: cannot connect",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs when signal or slot not found; fix signatures or ensure object lifetimes.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Segmentation fault: 11 with qmake",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs with incompatible qmake version; use correct qmake for Qt version.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "TypeError: Cannot read property of undefined in QML",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs when accessing property before object creation; ensure object exists or use onCompleted.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: QT_PLATFORM_PLUGIN_PATH is not set",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs when platform plugins location not found; set QT_PLUGIN_PATH or use deploy tools.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error parsing project file",
    "label": "qt",
    "language": "en",
    "context": "Specific Error: Qt error",
    "answer": "Occurs when .pro or CMakeLists.txt syntax invalid; correct file syntax and rerun qmake or cmake.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is a dictionary in programming?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "A dictionary (or map) is a collection of key-value pairs allowing fast lookup by key.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Which languages support dictionaries natively?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "Languages like Python, JavaScript (objects/Map), C# (Dictionary<TKey,TValue>), and Java (Map<K,V>) support dictionaries.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How is a dictionary different from an array?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "Dictionaries use keys for access; arrays use integer indices for ordered, sequential access.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is hashing in dictionaries?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "Hashing computes an index from a key using a hash function to store and retrieve values efficiently.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is a key in a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "A key is a unique identifier used to look up an associated value in the dictionary.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is a value in a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "A value is the data associated with a specific key in the dictionary.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "What is collision in hash tables?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "A collision occurs when two keys hash to the same index; resolved via chaining or open addressing.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is dictionary ordering?",
    "label": "dictionary",
    "language": "en",
    "context": "Factoid: Dictionary basics",
    "answer": "Dictionaries are unordered collections; some languages offer ordered dictionaries preserving insertion order.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to create a dictionary in Python?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use curly braces or dict(): `d = {'key': value}` or `d = dict(key=value)`.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to add an entry to a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use assignment: `d[new_key] = new_value` to add or update an entry.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to remove an entry from a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `del d[key]` or `d.pop(key)` to remove a key-value pair.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to iterate over keys?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `for key in d:` or `for key in d.keys():` to loop through dictionary keys.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to iterate over values?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `for value in d.values():` to loop through dictionary values.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to iterate over items?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `for key, val in d.items():` to loop through key-value pairs.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to check if a key exists?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `if key in d:` to determine if the key is present in the dictionary.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to get a default value?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `d.get(key, default)` to retrieve a value or return default if key not found.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to merge two dictionaries?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `d1.update(d2)` or `{**d1, **d2}` (Python 3.5+) to combine dictionaries.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to clear a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "Descriptive: Dictionary operations",
    "answer": "Use `d.clear()` to remove all entries from the dictionary.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "Compare Python dict vs list of tuples.",
    "label": "dictionary",
    "language": "en",
    "context": "Comparison: Dictionary types",
    "answer": "Dict provides O(1) key lookup; list of tuples requires O(n) search.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Compare HashMap vs TreeMap in Java.",
    "label": "dictionary",
    "language": "en",
    "context": "Comparison: Dictionary types",
    "answer": "HashMap is unordered with O(1) access; TreeMap is sorted with O(log n) access.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Compare Dictionary vs Hashtable in C#.",
    "label": "dictionary",
    "language": "en",
    "context": "Comparison: Dictionary types",
    "answer": "Dictionary<TKey,TValue> is generic and not thread-safe; Hashtable is non-generic and thread-safe with boxing.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare dict.get vs direct access.",
    "label": "dictionary",
    "language": "en",
    "context": "Comparison: Dictionary types",
    "answer": "get returns default when key missing; direct access raises KeyError if key not found.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare update() vs assignment for merging.",
    "label": "dictionary",
    "language": "en",
    "context": "Comparison: Dictionary types",
    "answer": "update overwrites existing keys; assignment only adds single entry per statement.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Compare ordered vs unordered dictionaries.",
    "label": "dictionary",
    "language": "en",
    "context": "Comparison: Dictionary types",
    "answer": "Ordered dicts preserve insertion order; unordered dicts have no guaranteed order.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to sort a dictionary by keys?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Use `for k in sorted(d):` to iterate sorted keys or create OrderedDict(sorted(d.items())).",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to sort a dictionary by values?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Use `sorted(d.items(), key=lambda x: x[1])` to get items sorted by value.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to invert a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Use `{v: k for k, v in d.items()}` to swap keys and values, ensuring values are unique.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to count occurrences with a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Use `collections.Counter(iterable)` or loop and `d[key] = d.get(key, 0) + 1`.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to handle nested dictionaries?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Access nested keys like `d[key1][key2]` or use `d.get(key1, {}).get(key2)`.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to deep copy a dictionary?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Use `copy.deepcopy(d)` to create a recursive copy of nested dictionaries.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to serialize a dictionary to JSON?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Import json and use `json.dumps(d)` to convert dictionary to JSON string.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to load a dictionary from JSON?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Use `d = json.loads(json_str)` to parse JSON string into a dictionary.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to check dictionary size?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Use `len(d)` to get the number of key-value pairs.",
    "start_char": 0,
    "end_char": 50
  },
  {
    "question": "How to use defaultdict?",
    "label": "dictionary",
    "language": "en",
    "context": "How-to: Dictionary usage",
    "answer": "Import `defaultdict` from collections to auto-create default values: `d = defaultdict(int)`.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "KeyError in Python dictionary",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when accessing missing key with `d[key]`; use `get()` or check key existence.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "TypeError: unhashable type",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when using mutable types like list as keys; use immutable types like tuples for keys.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "ValueError: dictionary update sequence element",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when update argument is not mapping or iterable of pairs; provide correct structure.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "AttributeError: 'dict' object has no attribute",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when calling wrong method name; check dict methods like keys, values, items.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "MemoryError with large dictionary",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when dictionary grows beyond available memory; consider using databases or disk-based stores.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Performance degradation on large dict",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when dictionary size is very large; use alternative data structures or optimize access patterns.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Unexpected behavior on modifying dict during iteration",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when changing size during iteration; iterate over copy or list of keys.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Missing closing brace in literal",
    "label": "dictionary",
    "language": "en",
    "context": "Common Error: Dictionary errors",
    "answer": "Occurs when dictionary literal syntax has unmatched braces; correct `{}` pairing.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "KeyError: 'username'",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs when dictionary has no key 'username'; verify key spelling or use `if 'username' in d:`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "TypeError: list objects are unhashable",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs when using list as key; convert list to tuple or use string representation.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "ValueError: too many values to unpack",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs when unpacking items incorrectly; ensure iterating `items()` yields pair tuples.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "AttributeError: 'NoneType' object has no attribute 'items'",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs when dictionary variable is None; initialize before use.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "json.decoder.JSONDecodeError",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs when JSON string malformed; inspect JSON format or use `strict=False`.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "ImportError: cannot import name 'OrderedDict'",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs in older Python versions; import from `collections` or upgrade interpreter.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "NameError: name 'd' is not defined",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs when dictionary variable 'd' is not in scope; declare and assign before use.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "TypeError: 'mappingproxy' object does not support item assignment",
    "label": "dictionary",
    "language": "en",
    "context": "Specific Error: Dictionary error",
    "answer": "Occurs when modifying a read-only dict view; convert to regular dict: `dict(mappingproxy)`.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is unit testing?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "Unit testing is the practice of testing individual components or functions of code in isolation.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Who pioneers unit testing?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "Unit testing practices were popularized by Kent Beck with the development of Extreme Programming and xUnit frameworks.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is a test case?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "A test case is a set of conditions and inputs used to verify that a unit of code behaves as expected.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "What is a unit test framework?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "A unit test framework is a library providing structures and assertions to write and run tests, like JUnit, NUnit, pytest.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "What is test-driven development?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "TDD is a development approach where tests are written before code implementation to drive design and ensure coverage.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "What is a mock object?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "A mock is a simulated object that mimics behavior of real dependencies for isolated unit testing.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is code coverage?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "Code coverage measures the percentage of code exercised by tests, indicating untested areas.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a test fixture?",
    "label": "unit-testing",
    "language": "en",
    "context": "Factoid: Unit Testing basics",
    "answer": "A fixture sets up the environment for tests, including data and dependencies, and tears it down afterward.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to write a simple unit test in Python?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Use unittest: import unittest, define a TestCase subclass with methods starting with test_, and call unittest.main().",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "How to group tests in pytest?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Create test files prefixed with test_ and define functions starting with test_, pytest auto-discovers and runs them.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to assert equality in JUnit?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Use `assertEquals(expected, actual)` in test methods within a class annotated with @Test.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to setup test fixtures in NUnit?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Use [SetUp] attribute on methods to run before each test, and [TearDown] for cleanup afterward.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to run tests automatically?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Integrate with CI tools like Jenkins or GitHub Actions to execute tests on each commit or pull request.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to mock dependencies in Java?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Use Mockito: annotate with @Mock, call MockitoAnnotations.openMocks(this), and define behavior with when().thenReturn().",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "How to test asynchronous code in JavaScript?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Use async/await in Jest: define test as async and await async functions, or use done callback for manual signaling.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to parametrize tests in pytest?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Use @pytest.mark.parametrize to run a test function with multiple input sets.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to measure code coverage in .NET?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Use tools like Coverlet or Visual Studio test coverage, and generate reports with ReportGenerator.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to organize test directories?",
    "label": "unit-testing",
    "language": "en",
    "context": "Descriptive: Writing Unit Tests",
    "answer": "Place test files in a separate test folder mirroring application structure for easy navigation and isolation.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare mocking vs stubbing.",
    "label": "unit-testing",
    "language": "en",
    "context": "Comparison: Test methodologies",
    "answer": "Mocks verify interactions and expectations; stubs provide predefined return values without behavior verification.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare TDD vs traditional testing.",
    "label": "unit-testing",
    "language": "en",
    "context": "Comparison: Test methodologies",
    "answer": "TDD writes tests before code driving design; traditional writes tests after implementation.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare unit tests vs integration tests.",
    "label": "unit-testing",
    "language": "en",
    "context": "Comparison: Test methodologies",
    "answer": "Unit tests focus on individual components; integration tests verify interactions between components.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare JUnit 4 vs JUnit 5.",
    "label": "unit-testing",
    "language": "en",
    "context": "Comparison: Test methodologies",
    "answer": "JUnit 5 uses new JUnit Platform and Jupiter API; JUnit 4 uses older annotations and runner model.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Compare pytest vs unittest.",
    "label": "unit-testing",
    "language": "en",
    "context": "Comparison: Test methodologies",
    "answer": "pytest offers concise syntax and powerful fixtures; unittest is part of standard library with xUnit style.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare Code Coverage vs Mutation Testing.",
    "label": "unit-testing",
    "language": "en",
    "context": "Comparison: Test methodologies",
    "answer": "Coverage measures executed code; mutation testing evaluates test suite quality by injecting faults.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to mock an HTTP request in Python?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Use responses library or unittest.mock to patch requests.get and define a fake response.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to simulate database in unit tests?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Use in-memory databases like SQLite or mock ORM sessions to isolate tests from production DB.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to record mock interactions in Mockito?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Use verify(mock).method(args) to assert method calls, times, and order after execution.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to test exception throwing?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Use assertRaises in unittest, pytest.raises in pytest, or @Test(expected=Exception.class) in JUnit.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to test private methods?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Test behavior via public methods; avoid testing private methods directly for better encapsulation.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to setup continuous testing in IDE?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Enable auto-test plugins like watch mode in Jest or live testing in Visual Studio Code.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to mock time-dependent code?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Use freezegun in Python or Mockito\u2019s Clock injection to control time in tests.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to handle flaky tests?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Identify nondeterminism, use retries, mock external dependencies, and ensure test isolation.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to generate test reports?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Use pytest-html, Surefire report in Maven, or NUnit XML report options for CI integration.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to stub file I/O operations?",
    "label": "unit-testing",
    "language": "en",
    "context": "How-to: Advanced Testing",
    "answer": "Use tmp_path fixture in pytest or mock open() to simulate file reading and writing.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: AssertionError in unit test",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs when expected and actual values differ; compare test inputs and update assertions or code.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Error: No tests ran",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs when test discovery fails; ensure test files/functions follow naming conventions.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: TimeoutException in tests",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs when async operations exceed default time; increase timeout or optimize code.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: ModuleNotFoundError in tests",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs when test imports wrong module path; add project root to PYTHONPATH or configure test runner.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: Flaky test failure",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs due to race conditions or nondeterminism; stabilize test environment and dependencies.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Memory leak in tests",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs when objects are not cleaned up; use teardown to release resources.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: Database connection error",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs when using real DB in tests; switch to mocks or in-memory DB.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "Error: Mock not applied",
    "label": "unit-testing",
    "language": "en",
    "context": "Common Error: Testing pitfalls",
    "answer": "Occurs when mocking target incorrectly; patch path must match import location in code under test.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "AttributeError: 'Mock' object has no attribute 'x'",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs when mock doesn\u2019t define attribute; use spec or set attribute on mock explicitly.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "TypeError: cannot unpack non-iterable NoneType",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs when test function returns None instead of iterable; return correct type or adjust unpacking.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "ImportError: No module named pytest",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs when pytest not installed; install via pip install pytest.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "java.lang.AssertionError",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs when JUnit assertion fails before expected; review assertion parameters and test logic.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: Expected 1 calls, but 0 were made.",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs when verify(mock).method() is called but method wasn\u2019t invoked; check test setup and call path.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: WebDriverException: Unable to locate element",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs in UI tests when element selector wrong; update selector or wait for element.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: Response status code was not 200",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs when HTTP stub returns different code; adjust stub or assertion for expected status.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: Expected no exceptions but got X",
    "label": "unit-testing",
    "language": "en",
    "context": "Specific Error: Unit Test error",
    "answer": "Occurs when code under test throws unexpected exception; catch and handle or adjust test expectations.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "What is TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "TensorFlow is an open-source machine learning framework developed by Google for building and deploying ML models.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Who developed TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "TensorFlow was developed by the Google Brain team and released under the Apache 2.0 license.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a tensor in TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "A tensor is a multi-dimensional array used as the primary data structure in TensorFlow operations.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is the TensorFlow execution model?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "TensorFlow uses a graph-based execution model, constructing a computational graph before running.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What languages does TensorFlow support?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "TensorFlow has APIs for Python, C++, Java, JavaScript, Go, and Swift.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "What is TensorFlow Lite?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "TensorFlow Lite is a lightweight solution for running TensorFlow models on mobile and IoT devices.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is TensorBoard?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "TensorBoard is a visualization tool for inspecting and debugging TensorFlow graphs and metrics.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is Keras in TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "Factoid: TensorFlow basics",
    "answer": "Keras is a high-level API integrated into TensorFlow for building and training neural networks.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to install TensorFlow in Python?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `pip install tensorflow` or `pip install tensorflow-gpu` for GPU support.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to create a constant tensor?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `tf.constant(value, dtype)` to create an immutable tensor with a fixed value.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to create a variable in TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `tf.Variable(initial_value)` for mutable stateful tensors.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "How to perform matrix multiplication?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `tf.matmul(a, b)` to compute matrix product of two tensors.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "How to build a simple neural network with Keras?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `tf.keras.Sequential` to stack layers like Dense, then compile and fit the model.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to load a dataset in TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `tf.data` API: `tf.data.Dataset.from_tensor_slices` and apply transformations.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to use TensorBoard callbacks?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Pass `tf.keras.callbacks.TensorBoard(log_dir)` to model.fit to log metrics.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to save a model in TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `model.save('path')` for SavedModel format or `model.save_weights()` for weights only.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to load a saved model?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `tf.keras.models.load_model('path')` to load a SavedModel.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "How to convert a Keras model to TensorFlow Lite?",
    "label": "tensorflow",
    "language": "en",
    "context": "Descriptive: TensorFlow usage",
    "answer": "Use `tf.lite.TFLiteConverter.from_keras_model(model)` and `converter.convert()`.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Compare TensorFlow v1 vs v2.",
    "label": "tensorflow",
    "language": "en",
    "context": "Comparison: TensorFlow concepts",
    "answer": "TF v2 has eager execution by default and simplified APIs; v1 uses graph-mode with sessions.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare TensorFlow vs PyTorch.",
    "label": "tensorflow",
    "language": "en",
    "context": "Comparison: TensorFlow concepts",
    "answer": "TensorFlow emphasizes production deployment and graphs; PyTorch uses dynamic graphs and is popular in research.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare tf.data vs numpy arrays.",
    "label": "tensorflow",
    "language": "en",
    "context": "Comparison: TensorFlow concepts",
    "answer": "tf.data pipelines support efficient input pipelines; numpy arrays are in-memory and not optimized for large datasets.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare SavedModel vs HDF5 format.",
    "label": "tensorflow",
    "language": "en",
    "context": "Comparison: TensorFlow concepts",
    "answer": "SavedModel includes graph, weights and assets; HDF5 saves only model architecture and weights.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare tf.function vs eager mode.",
    "label": "tensorflow",
    "language": "en",
    "context": "Comparison: TensorFlow concepts",
    "answer": "tf.function compiles Python functions to graphs for performance; eager runs operations immediately for debugging.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare Estimators vs Keras API.",
    "label": "tensorflow",
    "language": "en",
    "context": "Comparison: TensorFlow concepts",
    "answer": "Estimators offer high-level training loops; Keras provides intuitive model building and training interfaces.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to write a custom training loop?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use `tf.GradientTape()` to compute gradients and apply optimizers manually.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to implement data augmentation?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use `tf.image` functions like flip, rotate, and map transformations in the Dataset pipeline.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to distribute training on multiple GPUs?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use `tf.distribute.MirroredStrategy()` and wrap model creation and compile inside strategy.scope().",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to monitor training with callbacks?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use callbacks like EarlyStopping, ModelCheckpoint, and TensorBoard during model.fit.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to fine-tune a pretrained model?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Load a pretrained model, set trainable layers, and continue training on new data.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to export a TensorFlow model for serving?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use `tf.saved_model.save(model, export_dir)` to export for TensorFlow Serving.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to use TPU with TensorFlow?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use `tf.distribute.TPUStrategy` and connect to TPU runtime, wrapping model code in strategy scope.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to profile TensorFlow performance?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use TensorBoard profiler plugin or `tf.profiler.experimental` API.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "How to handle imbalanced datasets?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Use class_weight in model.fit or sample data to balance classes.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "How to integrate TensorFlow with NumPy?",
    "label": "tensorflow",
    "language": "en",
    "context": "How-to: TensorFlow development",
    "answer": "Convert between tensors and arrays with `tensor.numpy()` and `tf.convert_to_tensor()`.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: GPU support not available",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs when CUDA/cuDNN not installed or GPU incompatible; verify installation and drivers.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: Graph execution error",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs when shape mismatches or invalid operations in graph; inspect stack trace and tensor shapes.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: ResourceExhaustedError",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs when GPU memory is insufficient; reduce batch size or model size.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "Error: InvalidArgumentError",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs when invalid argument values passed to ops; check input types and shapes.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: ModuleNotFoundError: No module named 'tensorflow'",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs when TensorFlow not installed in environment; install via pip.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Error: Could not create cudnn handle",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs due to cuDNN version mismatch or missing library; install compatible cuDNN.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: Failed to get convolution algorithm",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs when GPU memory limited; set tf.config.set_soft_device_placement(True) or reduce batch size.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Mixed precision requires tf.keras.experimental",
    "label": "tensorflow",
    "language": "en",
    "context": "Common Error: TensorFlow troubleshooting",
    "answer": "Occurs when mixed precision not properly enabled; use `tf.keras.mixed_precision.set_global_policy`.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "InvalidArgumentError: You must feed a value for placeholder",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs in TF v1 if using placeholders without feed_dict; migrate to tf.function or provide feed_dict.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Failed to convert object of type <class 'float'> to Tensor",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs when mixing python floats with tf.Tensor; wrap in tf.constant().",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "TypeError: Cannot convert numpy.ndarray to EagerTensor",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs when passing numpy array where Tensor expected; use tf.convert_to_tensor().",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "AttributeError: module 'tensorflow' has no attribute 'Session'",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs in TF v2 where sessions deprecated; use eager execution or tf.compat.v1.Session().",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "ValueError: Shapes (x,) and (y,) are incompatible",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs when tensor shapes mismatch in operations; ensure broadcasting or reshape tensors.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "ImportError: DLL load failed",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs on Windows due to missing MSVC runtime; install Visual C++ Redistributable.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Failed to call optimizer.apply_gradients",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs when gradients None; check trainable variables and loss calculation.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "UnknownError:  DNN library not found",
    "label": "tensorflow",
    "language": "en",
    "context": "Specific Error: TensorFlow error",
    "answer": "Occurs when oneDNN optimizations missing; install tensorflow with CPU optimizations or rebuild from source.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is Apache Spark?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "Apache Spark is an open-source, distributed computing system for big data processing with in-memory capabilities.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Who developed Apache Spark?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "Apache Spark was originally developed at UC Berkeley's AMPLab and is now maintained by the Apache Software Foundation.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "What is an RDD in Spark?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "An RDD (Resilient Distributed Dataset) is an immutable distributed collection of objects that can be processed in parallel.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What programming languages does Spark support?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "Spark supports Scala, Java, Python (PySpark), and R.",
    "start_char": 0,
    "end_char": 52
  },
  {
    "question": "What is Spark SQL?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "Spark SQL is a module for structured data processing using DataFrames and SQL queries.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "What is a DataFrame in Spark?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "A DataFrame is a distributed collection of data organized into named columns, similar to a table.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is Spark Streaming?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "Spark Streaming is a component for processing live data streams in real time.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "What is Spark MLlib?",
    "label": "apache-spark",
    "language": "en",
    "context": "Factoid: Spark basics",
    "answer": "MLlib is Spark's scalable machine learning library providing algorithms for classification, regression, clustering, and more.",
    "start_char": 0,
    "end_char": 125
  },
  {
    "question": "How to initialize a SparkSession in Python?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Use `from pyspark.sql import SparkSession` and `spark = SparkSession.builder.appName('App').getOrCreate()`.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to create an RDD from a text file?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Use `sc.textFile('path')` on SparkContext to read a text file into an RDD.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to read a CSV into a DataFrame?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Use `spark.read.csv('file.csv', header=True, inferSchema=True)` to load CSV data.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to cache a DataFrame?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Call `df.cache()` or `df.persist(StorageLevel.MEMORY_ONLY)` to cache the DataFrame in memory.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to write DataFrame to Parquet?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Use `df.write.parquet('output_path')` to store data in Parquet format.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to perform a join between DataFrames?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Use `df1.join(df2, on='key', how='inner')` to join two DataFrames on a key column.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to filter rows in Spark SQL?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Use `df.filter(df.column > value)` or register temp view and run `spark.sql()` with WHERE clause.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to apply a UDF in Spark?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Define function, register with `spark.udf.register`, and use in `selectExpr` or with `df.withColumn`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to use Spark Streaming DStreams?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Use `ssc = StreamingContext(sc, batchInterval)` and `ssc.socketTextStream(host, port)` to process streams.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to train a model with MLlib?",
    "label": "apache-spark",
    "language": "en",
    "context": "Descriptive: Spark usage",
    "answer": "Instantiate an algorithm (e.g., `LogisticRegression`), set parameters, call `.fit(df)` to train.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare RDD vs DataFrame in Spark.",
    "label": "apache-spark",
    "language": "en",
    "context": "Comparison: Spark components",
    "answer": "RDD is low-level and untyped; DataFrame is optimized with Catalyst and has schema for performance.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare DataFrame vs Dataset in Spark.",
    "label": "apache-spark",
    "language": "en",
    "context": "Comparison: Spark components",
    "answer": "Dataset combines strong typing with optimization; DataFrame is essentially Dataset[Row] without compile-time types.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "Compare Spark SQL vs Hive.",
    "label": "apache-spark",
    "language": "en",
    "context": "Comparison: Spark components",
    "answer": "Spark SQL runs in-memory with faster execution; Hive translates queries to MapReduce by default.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare batch vs streaming in Spark.",
    "label": "apache-spark",
    "language": "en",
    "context": "Comparison: Spark components",
    "answer": "Batch processes static datasets; streaming processes continuous data in micro-batches or Continuous Processing.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare caching vs checkpointing in Spark.",
    "label": "apache-spark",
    "language": "en",
    "context": "Comparison: Spark components",
    "answer": "Caching stores lineage for quick access; checkpointing truncates lineage and saves to reliable storage for fault tolerance.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare local vs cluster master in SparkSession.",
    "label": "apache-spark",
    "language": "en",
    "context": "Comparison: Spark components",
    "answer": "local runs Spark on a single machine; cluster connects to external cluster manager like YARN or Mesos.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to repartition an RDD or DataFrame?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Use `rdd.repartition(numPartitions)` or `df.repartition(numPartitions)` to change number of partitions.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to coalesce partitions in Spark?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Use `df.coalesce(n)` to decrease partitions without full shuffle.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to handle missing data in DataFrame?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Use `df.na.drop()` to remove or `df.na.fill(value)` to fill missing values.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to broadcast a variable in Spark?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Use `sc.broadcast(variable)` to efficiently send read-only data to all nodes.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to checkpoint an RDD?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Set `sc.setCheckpointDir(path)` and call `rdd.checkpoint()` to materialize lineage to storage.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to perform window functions in Spark SQL?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Import Window, define `winSpec = Window.partitionBy().orderBy()`, then use `df.withColumn('rank', rank().over(winSpec))`.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "How to read from Kafka stream in Spark Structured Streaming?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Use `spark.readStream.format('kafka').option('kafka.bootstrap.servers',...).load()` to create streaming DataFrame.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to write stream output to console?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Call `streamingDF.writeStream.format('console').start()` to output streaming results to console.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to monitor Spark application UI?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Access Spark UI on `http://driver:4040` during execution to inspect jobs and stages.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to tune Spark executor memory?",
    "label": "apache-spark",
    "language": "en",
    "context": "How-to: Spark development",
    "answer": "Set `spark.executor.memory` in SparkConf or SparkSession.builder config to allocate executor JVM memory.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Error: Task not serializable",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs when functions capture non-serializable objects; ensure closures use simple data and broadcast variables.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Error: OutOfMemoryError in executor",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs when working set exceeds memory; increase memory or reduce data size or use more partitions.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Error: Driver lost",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs when driver fails or times out; check driver logs and ensure resource availability.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: shuffle merge failed",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs during shuffle if files missing or corrupted; increase retries or use stable storage.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: schema inference failed",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs when data has inconsistent types; specify schema explicitly.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Error: Could not find or load main class",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs when application jar not properly packaged; include main class in manifest or use --class flag.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: Dependencies not found",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs when jars missing on classpath; use `--jars` or include dependencies in assembly.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: SparkSession.builder.appName is not defined",
    "label": "apache-spark",
    "language": "en",
    "context": "Common Error: Spark troubleshooting",
    "answer": "Occurs when SparkSession import incorrect; import from pyspark.sql import SparkSession.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "AnalysisException: Path does not exist",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Occurs when input path is invalid or HDFS not accessible; verify path and permissions.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "AnalysisException: Table not found",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Occurs when querying non-existent table; ensure catalog and database are correct and table created.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "SparkException: Could not load matching files",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Occurs when pattern-based path has no files; check glob pattern and file availability.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "IllegalArgumentException: requirement failed",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Occurs when function arguments invalid; verify code and input parameter values.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "java.lang.ClassCastException",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Occurs when casting RDD elements to wrong type; check transformations and data types.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "TimeoutException: Job aborted due to stage failure",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Occurs when tasks repeatedly fail; investigate root cause in executor logs.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "java.net.BindException: Address already in use",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Occurs when port conflict on driver or UI; configure different port.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "org.apache.spark.SparkException: Task not serializable",
    "label": "apache-spark",
    "language": "en",
    "context": "Specific Error: Spark error",
    "answer": "Same as above; ensure all objects referenced are serializable or broadcasted.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "What is a class in OOP?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "A class is a blueprint or template defining properties (attributes) and behaviors (methods) for objects.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Who introduced the concept of classes?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "Classes were introduced by Simula 67 language designers Ole-Johan Dahl and Kristen Nygaard.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is an object instance?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "An object is a runtime instance of a class containing specific state and behavior defined by its class.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is encapsulation?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "Encapsulation is the bundling of data and methods within a class, restricting direct access to some components.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is inheritance?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "Inheritance allows a class (subclass) to inherit fields and methods from another class (superclass).",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is polymorphism?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "Polymorphism allows objects to be treated as instances of their parent class, supporting method overriding.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "What is a constructor?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "A constructor is a special method invoked when creating an object instance to initialize its state.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What is a destructor?",
    "label": "class",
    "language": "en",
    "context": "Factoid: Class concept",
    "answer": "A destructor is a method called when an object is destroyed to release resources; in some languages it's implicit.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to define a class in Java?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Use `public class ClassName { private int field; public ClassName() {} void method() {} }`.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to define a class in Python?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Use `class ClassName:` indentation, define `def __init__(self):` and methods with `self` parameter.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to define a class in C++?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Use `class ClassName { public: ClassName(); void method(); private: int field; };`.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to instantiate a class in C#?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Use `ClassName obj = new ClassName();` to create a new object instance.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to implement inheritance in Java?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Use `class SubClass extends SuperClass { ... }` and optionally `implements Interface` for interfaces.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to implement interfaces in PHP?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Use `class MyClass implements InterfaceName { public function method() {} }`.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to call superclass constructor in Kotlin?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Use `class Sub(val x: Int): Super(x)` to delegate to superclass constructor.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to implement abstract class in C++?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Declare at least one pure virtual function: `virtual void f() = 0;`, then subclass must override.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to use nested classes in Java?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Define class inside another: `class Outer { static class Inner { } }` and instantiate with `new Outer.Inner()`.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to use class properties in TypeScript?",
    "label": "class",
    "language": "en",
    "context": "Descriptive: Defining classes",
    "answer": "Define `class C { constructor(public prop: string) {} }` which auto-creates property.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare class vs struct in C++.",
    "label": "class",
    "language": "en",
    "context": "Comparison: Class concepts",
    "answer": "Classes default to private access; structs default to public. Both support methods and fields similarly.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare class vs interface in Java.",
    "label": "class",
    "language": "en",
    "context": "Comparison: Class concepts",
    "answer": "Class can have implementation and state; interface only declares methods (Java 8+ allows default methods).",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare static vs instance methods.",
    "label": "class",
    "language": "en",
    "context": "Comparison: Class concepts",
    "answer": "Static methods belong to class and cannot access instance data; instance methods require object and access its fields.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare public vs private members.",
    "label": "class",
    "language": "en",
    "context": "Comparison: Class concepts",
    "answer": "Public members visible everywhere; private members accessible only within defining class.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare inheritance vs composition.",
    "label": "class",
    "language": "en",
    "context": "Comparison: Class concepts",
    "answer": "Inheritance reuses behavior via subclassing; composition embeds objects to delegate functionality.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare abstract class vs interface in C#.",
    "label": "class",
    "language": "en",
    "context": "Comparison: Class concepts",
    "answer": "Abstract classes can have fields and constructors; interfaces only declare methods and properties.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to override a method in Java?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "In subclass define method with same signature and annotate with @Override above the method.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to call parent class method in Python?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Use `super().method(args)` inside subclass to invoke parent implementation.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to implement multiple inheritance in C++?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Define class Sub: public Base1, public Base2 { ... } and resolve ambiguity using scope resolution.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to prevent inheritance in C#?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Declare class as sealed with `public sealed class MyClass { }` to disallow subclassing.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to implement singleton pattern in Java?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Use private constructor, static instance field, and public static getInstance() method returning single instance.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to use mixins in Python?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Define small classes and inherit in order `class C(Base1, Base2):` using cooperative multiple inheritance.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to serialize a class to JSON in C#?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Use JsonSerializer: `JsonSerializer.Serialize(myObject)` or Newtonsoft.Json `JsonConvert.SerializeObject()`.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to implement copy constructor in C++?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Define constructor `ClassName(const ClassName& other)` copying fields to enable object copying.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to define class constants in PHP?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Use `class MyClass { const CONST_NAME = 'value'; }` and access with `MyClass::CONST_NAME`.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to dynamic create class at runtime in JavaScript?",
    "label": "class",
    "language": "en",
    "context": "How-to: Class usage",
    "answer": "Use `class C {}`, assign to variable `let C = class {}` or use Function constructor for dynamic behavior.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Error: Cannot instantiate abstract class",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs when trying to create object of abstract class; instantiate concrete subclass instead.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Method does not override or implement a method from a supertype",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs when @Override annotation used but method signature mismatches; correct signature.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: Undefined reference to ClassName",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs in C++ when implementation file not linked; include .cpp in build or link object files.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: Unexpected indent",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs in Python when class or method indentation is incorrect; align code blocks properly.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: Class name conflicts with filename",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs in Java when public class name differs from file name; rename file to match class.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: Cannot find symbol",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs in Java when referencing class or variable that is not imported or out of scope; import or qualify.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Error: Invalid base class",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs in C++ when inheriting from non-class type; inherit only from class/struct types.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: Duplicate class name",
    "label": "class",
    "language": "en",
    "context": "Common Error: Class issues",
    "answer": "Occurs when two classes in same package have same name; use unique names or different packages.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "TypeError: 'int' object is not callable",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs when class name conflicts with variable name; ensure variable names do not shadow class.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "AttributeError: type object 'ClassName' has no attribute 'method'",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs when calling method on class instead of instance; create instance first: `obj.method()`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Segmentation fault accessing class member",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs in C++ when using uninitialized pointer or out-of-bounds; initialize pointers and check indices.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Error: Expected class decorator",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs in Python when using @ syntax incorrectly; verify decorator above class definition.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "CS0246: The type or namespace name 'ClassName' could not be found",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs in C# when class not imported via using or defined in project; add reference or using statement.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "error: no member named 'field' in 'ClassName'",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs in C++ when accessing nonexistent member; check class definition and spelling.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "JavaScript: Uncaught TypeError: Class constructor cannot be invoked without 'new'",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs when calling ES6 class without new; instantiate using `new ClassName()`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Fatal error: Declaration of SubClass must be compatible with BaseClass",
    "label": "class",
    "language": "en",
    "context": "Specific Error: Class error",
    "answer": "Occurs in PHP when subclass method signature differs; match parameter types and return types.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is Unity Game Engine?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "Unity is a cross-platform game engine by Unity Technologies for creating 2D, 3D, AR, and VR games.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Who developed Unity?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "Unity was developed by Unity Technologies and first released in 2005.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "What language does Unity use?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "Unity primarily uses C# for scripting, with limited support for UnityScript (deprecated).",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What platforms does Unity support?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "Unity supports Windows, macOS, Linux, iOS, Android, WebGL, consoles, and AR/VR devices.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is a GameObject in Unity?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "GameObject is the base class for all entities in a Unity scene, representing characters, props, and cameras.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "What is a Component in Unity?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "A Component adds functionality to GameObjects, such as transform, renderers, and custom scripts.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is the Unity Asset Store?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "The Asset Store is an online marketplace for purchasing and downloading assets like models, scripts, and plugins.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is a Scene in Unity?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Factoid: Unity basics",
    "answer": "A Scene is a collection of GameObjects saved as a level or environment within a Unity project.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to create a new project in Unity?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Open Unity Hub, click New Project, select template (2D/3D), set project name and location, then Create.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "How to add a script to a GameObject?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Create a C# script in Assets, then drag and drop it onto the GameObject in the Hierarchy or Inspector.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to move a GameObject?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Use transform.position in Update() or Translate() method to change its position each frame.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to detect collisions in Unity?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Use OnCollisionEnter(), OnTriggerEnter() callbacks on a MonoBehaviour attached to a GameObject with Collider.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to play an audio clip?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Add an AudioSource component and call audioSource.Play() in a script to play the clip.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to animate a character?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Use Animator component with Animation Controller and define states and transitions in the Animator window.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to use prefabs?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Create a GameObject in scene, drag it to Assets to make a Prefab, then instantiate using Instantiate(prefab).",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to build for Android?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Open Build Settings, select Android platform, configure player settings, connect device, then Build and Run.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How to use UI Canvas?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Add a Canvas GameObject, then UI elements like Button/Text as children and configure in the Canvas scaler.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to implement input controls?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Descriptive: Unity usage",
    "answer": "Use Input.GetAxis for axes or Input.GetButton/GetKey methods in Update() to handle player input.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare Update vs FixedUpdate in Unity.",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Comparison: Unity components",
    "answer": "Update runs every frame for general logic; FixedUpdate runs at fixed intervals for physics.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare Rigidbody vs Rigidbody2D.",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Comparison: Unity components",
    "answer": "Rigidbody is 3D physics; Rigidbody2D is for 2D physics with BoxCollider2D, etc.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Compare MonoBehaviour vs ScriptableObject.",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Comparison: Unity components",
    "answer": "MonoBehaviour attaches to scene GameObjects; ScriptableObject is an asset for data containers.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare OnCollisionEnter vs OnTriggerEnter.",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Comparison: Unity components",
    "answer": "OnCollisionEnter triggers on physics collision with Collider, OnTriggerEnter triggers when Collider marked as trigger.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "Compare Instantiate vs Object Pooling.",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Comparison: Unity components",
    "answer": "Instantiate creates new objects at runtime (costly); pooling reuses objects to improve performance.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare Transform.Translate vs Rigidbody.MovePosition.",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Comparison: Unity components",
    "answer": "Translate moves transform bypassing physics; MovePosition interacts with physics engine.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to load a new scene?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Use SceneManager.LoadScene(sceneName) after adding UnityEngine.SceneManagement namespace.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to save game data?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Use PlayerPrefs for simple data or serialize to JSON and write to Application.persistentDataPath.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to create a custom editor script?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Place script in Editor folder, extend Editor or EditorWindow class, and use OnInspectorGUI.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to implement AI navigation?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Use NavMesh components: bake NavMesh, add NavMeshAgent on character, and call agent.SetDestination().",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to apply post-processing effects?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Install Post-processing package, add PostProcessVolume and configure effects like Bloom and Color Grading.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to optimize performance?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Use Profiler, reduce draw calls, optimize scripts, use occlusion culling and LOD groups.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to implement multiplayer networking?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Use Mirror or MLAPI packages to synchronize GameObjects over network.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to customize build player settings?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Open Player Settings and modify resolution, icons, scripting backend, and other options.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to integrate ads in Unity?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Use Unity Ads package, initialize Ads SDK, and call Advertisement.Show() for placement.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to animate UI elements?",
    "label": "unity-game-engine",
    "language": "en",
    "context": "How-to: Unity development",
    "answer": "Use Animation or Animator on UI GameObjects, and animate RectTransform properties.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: NullReferenceException in Unity script",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs when accessing a GameObject or component that is not assigned; assign reference in Inspector.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: Cannot find namespace 'UnityEngine'",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs when missing using directives or incorrect assembly references; ensure UnityEngine namespace is imported.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Error: InvalidCastException casting Component",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs when GetComponent returns incorrect type; use correct generic type or TryGetComponent.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Shader compilation failed",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs when shader code has errors; check console for details and fix syntax.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Warning: Overlapping BoxColliders",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs when colliders in same position; adjust size or position to prevent overlap.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: Build failed with exit code 1",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs on compile errors; review console errors and fix scripts before building.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: Missing reference exception",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs when scene has broken references; reassign missing assets in Inspector.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: VR device not detected",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Common Error: Unity troubleshooting",
    "answer": "Occurs when XR plugin not configured; enable correct XR plugin in Project Settings.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: ArgumentException: The Object you want to instantiate is null",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when passing null prefab to Instantiate; assign prefab in script or Inspector.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: CS0120: An object reference is required to access non-static member",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when calling instance method statically; call method on instance of class.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: LOD error: Could not find LODGroup",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when missing LODGroup component on GameObject; add component or update script references.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: Scene not added to build settings",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when loading scene not included in Build Settings; add scene to Scenes In Build.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: Physics update outside FixedUpdate warning",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when using physics code in Update; move physics operations to FixedUpdate.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: Materials with same texture causing batching issues",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when materials share texture but settings differ; use same material or enable GPU instancing.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: Coroutines not running",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when MonoBehaviour is disabled or object destroyed; ensure script enabled and persistent.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Error: Unsupported texture format",
    "label": "unity-game-engine",
    "language": "en",
    "context": "Specific Error: Unity error",
    "answer": "Occurs when importing texture with incompatible format for platform; change import settings.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is sorting in computer science?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "Sorting is the process of arranging elements in a list or array in a particular order, typically ascending or descending.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Who invented bubble sort?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "Bubble sort was first described by Ivan Sutherland in 1956 as an example of exchange sort.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "What is the time complexity of merge sort?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "Merge sort has a time complexity of O(n log n) in the worst, average, and best cases.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is an in-place sort?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "An in-place sort rearranges elements within the original data structure using only a constant amount of extra space.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "What is a stable sorting algorithm?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "A stable sort preserves the relative order of elements with equal keys during sorting.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "What is the space complexity of quicksort?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "Quicksort has O(log n) space complexity on average due to recursion stack; worst-case O(n).",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is the best-case time complexity of bubble sort?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "In the best case (already sorted), bubble sort can detect no swaps and run in O(n).",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is a comparison sort?",
    "label": "sorting",
    "language": "en",
    "context": "Factoid: Sorting basics",
    "answer": "A comparison sort determines order by comparing pairs of elements using a comparison operator.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How does bubble sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Bubble sort repeatedly steps through the list, compares adjacent items, and swaps them if they are in the wrong order.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How does insertion sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Insertion sort builds a sorted list by repeatedly inserting the next element into its correct position in the already-sorted part.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How does selection sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Selection sort repeatedly selects the minimum (or maximum) element from the unsorted part and swaps it with the first unsorted element.",
    "start_char": 0,
    "end_char": 135
  },
  {
    "question": "How does merge sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Merge sort divides the list in half, recursively sorts each half, and then merges the sorted halves into a single sorted list.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How does quicksort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Quicksort picks a pivot, partitions the array into elements less and greater than the pivot, and recursively sorts the partitions.",
    "start_char": 0,
    "end_char": 130
  },
  {
    "question": "How does heap sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Heapsort builds a heap from the array, then repeatedly extracts the maximum and rebuilds the heap to produce sorted output.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "How does counting sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Counting sort counts occurrences of each value, computes positions, and places elements in output array in order.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How does radix sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Radix sort processes digits of numbers from least to most significant, using a stable sort at each digit position.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How does shell sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Shell sort starts with a large gap and performs gapped insertion sorts, reducing the gap until it becomes 1.",
    "start_char": 0,
    "end_char": 108
  },
  {
    "question": "How does bucket sort work?",
    "label": "sorting",
    "language": "en",
    "context": "Descriptive: Sorting algorithms",
    "answer": "Bucket sort distributes elements into buckets, sorts each bucket individually, then concatenates bucket contents.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "Compare quicksort vs mergesort.",
    "label": "sorting",
    "language": "en",
    "context": "Comparison: Sorting methods",
    "answer": "Quicksort is typically faster in practice but has worst-case O(n\u00b2); mergesort guarantees O(n log n) but uses extra space.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Compare bubble sort vs insertion sort.",
    "label": "sorting",
    "language": "en",
    "context": "Comparison: Sorting methods",
    "answer": "Insertion sort is generally faster on small or nearly sorted data; bubble sort is simpler but less efficient.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare selection sort vs bubble sort.",
    "label": "sorting",
    "language": "en",
    "context": "Comparison: Sorting methods",
    "answer": "Selection sort makes fewer swaps than bubble sort but has the same O(n\u00b2) comparisons.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare heap sort vs quicksort.",
    "label": "sorting",
    "language": "en",
    "context": "Comparison: Sorting methods",
    "answer": "Heapsort guarantees O(n log n) worst-case and is in-place; quicksort is often faster but with worst-case O(n\u00b2).",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare counting sort vs comparison sorts.",
    "label": "sorting",
    "language": "en",
    "context": "Comparison: Sorting methods",
    "answer": "Counting sort is O(n + k) and not comparison-based, requiring k range size; comparison sorts need O(n log n).",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare shell sort vs insertion sort.",
    "label": "sorting",
    "language": "en",
    "context": "Comparison: Sorting methods",
    "answer": "Shell sort generalizes insertion sort using gaps for faster initial moves, improving performance on larger arrays.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "How to implement bubble sort in Python?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Loop over list n-1 times, swap adjacent elements if out of order, and end early if no swaps in a pass.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to implement quicksort in JavaScript?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Write a recursive function that selects a pivot, partitions array into two subarrays, and concatenates sorted results.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to implement merge sort in Java?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Recursively split array, sort halves, then merge using temporary arrays to hold sorted elements.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to implement insertion sort in C++?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Iterate from index 1, take current element, shift larger sorted elements right, and insert element at correct position.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "How to implement counting sort?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Find max value, create count array, accumulate counts, then output elements based on counts into result array.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to implement heap sort in C#",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Build max heap, swap root with last element, reduce heap size, and heapify root repeatedly.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to implement shell sort in Python?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Choose gap sequence, perform gapped insertion sort for each gap value, reducing gap until 1.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to benchmark sorting algorithms in code?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Use timing functions around sort calls, run multiple trials, and compute average durations.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to sort a list of objects by key in Python?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Use `list.sort(key=lambda x: x.attribute)` or `sorted(list, key=lambda x: x.attr)`.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to sort linked list in Java?",
    "label": "sorting",
    "language": "en",
    "context": "How-to: Sorting implementation",
    "answer": "Use merge sort algorithm splitting list by fast-slow pointers then merging sorted halves.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Why does my quicksort run infinitely?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Occurs when partition doesn't reduce subarray sizes due to bad pivot; ensure pivot and indices update correctly.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Why bubble sort isn't sorting fully?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Occurs if you stop early on first sorted pass without verifying full order; ensure inner loops cover correct ranges.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Why merge sort uses extra memory?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Merge sort uses temporary arrays for merging; in-place variants require complex implementations.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Why insertion sort is slow on large data?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Insertion sort is O(n\u00b2) and degrades significantly as data size grows.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Why counting sort fails on negative numbers?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Counting sort implementation usually assumes non-negative keys; adjust count array offset for negatives.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Why heap sort slows on sorted input?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Heap building phase is O(n) regardless of input, but subsequent operations may still take O(log n) per extraction.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Why Python sort key vs compare methods differ?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Using custom comparator in older versions vs key functions behave differently; prefer key for stability.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Why recursion depth error in merge sort?",
    "label": "sorting",
    "language": "en",
    "context": "Common Error: Sorting pitfalls",
    "answer": "Occurs when list size large and recursion limit low; increase recursion limit or use iterative approach.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "IndexError: list index out of range during sort",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs when swap indices exceed list bounds; verify loop boundaries and index calculations.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "RecursionError: maximum recursion depth exceeded",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs in recursive sort like quicksort; reduce recursion depth or optimize pivot selection.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "MemoryError on merge sort large list",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs when merging large arrays uses too much memory; use in-place or iterative sorting.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "TypeError: '<' not supported between instances",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs when sorting heterogeneous types; provide key function to extract comparable attribute.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "IllegalArgumentException comparator returned null",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs in Java sort with comparator returning null; ensure comparator returns valid int.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "ConcurrentModificationException during sort",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs if list modified during iteration; avoid modifying collection while sorting.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "OutOfMemoryError Java heap space sorting large array",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs when sorting huge array in memory; use external sort algorithms or increase heap size.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Segmentation fault in C quicksort implementation",
    "label": "sorting",
    "language": "en",
    "context": "Specific Error: Sorting error",
    "answer": "Occurs due to invalid memory access; ensure correct pointer arithmetic and base case in recursion.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is authentication?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "Authentication is the process of verifying the identity of a user or system.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "What are common authentication methods?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "Methods include passwords, tokens, biometrics, and multi-factor authentication (MFA).",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is OAuth?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "OAuth is an open standard for token-based authorization allowing third-party applications limited access.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "What is SSO?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "Single Sign-On (SSO) enables users to authenticate once and gain access to multiple applications.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is JWT?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "JSON Web Token is a compact, URL-safe token format for securely transmitting claims between parties.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What is LDAP?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "LDAP (Lightweight Directory Access Protocol) is a protocol for accessing and maintaining distributed directory information.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "What is Kerberos?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "Kerberos is a network authentication protocol using tickets to allow nodes to prove identity over insecure networks.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "What is basic authentication?",
    "label": "authentication",
    "language": "en",
    "context": "Factoid: Authentication basics",
    "answer": "Basic auth sends credentials encoded in Base64 over HTTP headers, typically over HTTPS for security.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to implement basic auth in Express?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Use `express-basic-auth` middleware, configure users, and add `app.use(basicAuth({ users }))`.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to configure JWT in Node.js?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Generate token with `jsonwebtoken.sign(payload, secret)`, verify using `jsonwebtoken.verify()`, and use middleware.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to set up OAuth2 in Spring Boot?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Use Spring Security OAuth2 starter, configure client details, and annotate endpoints with @EnableResourceServer.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to integrate LDAP auth in Java?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Use Spring LDAP or Apache Directory LDAP API to connect and authenticate credentials against LDAP server.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "How to enable Windows authentication in IIS?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "In IIS Manager, select site > Authentication > enable Windows Authentication and disable anonymous.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to implement MFA in Django?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Use packages like django-two-factor-auth to add OTP devices and enforce two-step verification.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to configure SSO with SAML in ADFS?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Set up relying party trust in ADFS, configure endpoints, claims rules, and metadata exchange.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to use OAuth in mobile apps?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Use in-app browser or native SDK to obtain access token via authorization code flow.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to store passwords securely?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Hash using bcrypt or Argon2 with salt and sufficient work factor; never store plain text.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to implement session-based auth in Flask?",
    "label": "authentication",
    "language": "en",
    "context": "Descriptive: Auth implementation",
    "answer": "Use Flask-Login extension, define user_loader, and protect routes with @login_required.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare JWT vs sessions.",
    "label": "authentication",
    "language": "en",
    "context": "Comparison: Auth methods",
    "answer": "JWT is stateless, stored client-side; sessions are stateful, stored server-side.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Compare OAuth vs OpenID Connect.",
    "label": "authentication",
    "language": "en",
    "context": "Comparison: Auth methods",
    "answer": "OAuth is for authorization; OpenID Connect is identity layer on OAuth for authentication.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare basic auth vs digest auth.",
    "label": "authentication",
    "language": "en",
    "context": "Comparison: Auth methods",
    "answer": "Basic sends Base64-encoded credentials; digest uses MD5 hashing for challenge-response.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare SAML vs OAuth.",
    "label": "authentication",
    "language": "en",
    "context": "Comparison: Auth methods",
    "answer": "SAML uses XML-based assertions for SSO; OAuth uses JSON tokens for authorization.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Compare MFA vs 2FA.",
    "label": "authentication",
    "language": "en",
    "context": "Comparison: Auth methods",
    "answer": "Multi-factor authentication uses two or more factors; two-factor uses exactly two factors.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare LDAP vs Active Directory.",
    "label": "authentication",
    "language": "en",
    "context": "Comparison: Auth methods",
    "answer": "AD is Microsoft\u2019s LDAP-based directory with extra features; LDAP is protocol supported by AD and others.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to hash passwords in Python?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Use `bcrypt.hashpw(password, bcrypt.gensalt())` and store resulting hash for verification.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to verify JWT in Express?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Use `express-jwt` middleware with secret and algorithms to automatically verify tokens.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to configure CORS with credentials?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Set `credentials: true` on client and `app.use(cors({ origin, credentials: true }))` on server.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to revoke JWT tokens?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Maintain a blacklist of token IDs server-side and check on each request.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to implement refresh tokens?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Issue short-lived access tokens and long-lived refresh tokens for obtaining new access tokens.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to secure cookies in Flask?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Set `SESSION_COOKIE_HTTPONLY`, `SESSION_COOKIE_SECURE`, and `SESSION_COOKIE_SAMESITE` in config.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to integrate Google Sign-In?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Use OAuth client ID, include Google API script, and verify ID token server-side.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to enable HTTPS in Express?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Use `https.createServer({ key, cert }, app)` and redirect HTTP to HTTPS.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to implement role-based access control?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Define roles, assign to users, and create middleware checking `req.user.role` against allowed roles.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to configure Azure AD auth in .NET Core?",
    "label": "authentication",
    "language": "en",
    "context": "How-to: Auth development",
    "answer": "Use `AddMicrosoftIdentityWebApp` in Startup, configure `AzureAd` section in appsettings.json.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: invalid signature",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs when JWT signature fails verification; verify secret/key and algorithm.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: token expired",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs when token\u2019s exp claim is past; issue new token via refresh token.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "Error: no Bearer token",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs when Authorization header missing or malformed; include `Authorization: Bearer <token>`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: CSRF token missing or incorrect",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs in session-based auth requiring CSRF protection; include valid CSRF token in request headers.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: CORS preflight request failed",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs when server doesn\u2019t accept OPTIONS request; enable CORS middleware.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: LDAP bind failed",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs when credentials incorrect or server unreachable; verify DN and password.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: user not found",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs when lookup in database returns no user; ensure correct query and data seeded.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: password mismatch",
    "label": "authentication",
    "language": "en",
    "context": "Common Error: Auth troubleshooting",
    "answer": "Occurs when hash comparison fails; ensure correct hashing algorithm and stored salt.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: UnauthorizedError: jwt malformed",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs when JWT string is invalid format; check token structure and encoding.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "TypeError: Cannot read property 'split' of undefined",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs when Authorization header missing; verify `req.headers.authorization` exists.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "HttpModuleError: Missing credentials in basic auth",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs in NestJS when basic auth not configured; ensure BasicAuthGuard setup.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error: AADSTS70002: Application not found",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs in Azure AD when client ID incorrect; verify application registration in Azure portal.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: entry for scope not found",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs in OAuth when requested scope missing; add scope in client configuration.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: Redirect URI mismatch",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs when OAuth redirect URI not match; update redirect URIs in identity provider settings.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Invalid CSRF Token",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs when CSRF token invalid or missing; include correct token from server in form or header.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: Password hashing failed",
    "label": "authentication",
    "language": "en",
    "context": "Specific Error: Auth error",
    "answer": "Occurs when bcrypt module not installed or salt invalid; reinstall package and verify parameters.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is Go?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "Go (Golang) is an open-source, statically typed programming language designed at Google for simplicity and performance.",
    "start_char": 0,
    "end_char": 119
  },
  {
    "question": "Who developed Go?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "Go was developed by Robert Griesemer, Rob Pike, and Ken Thompson at Google, first released in 2009.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "What is a goroutine?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "A goroutine is a lightweight thread managed by the Go runtime, created with the `go` keyword.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is a channel in Go?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "A channel is a conduit for communication between goroutines, allowing safe data exchange.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is the Go garbage collector?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "Go features a concurrent garbage collector that automatically reclaims memory from unreachable objects.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "What is Go's package system?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "Go organizes code into packages, with each directory representing a package and import path.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is the Go toolchain?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "The Go toolchain includes `go build`, `go test`, `go fmt`, `go vet`, and other commands for development.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is an interface in Go?",
    "label": "go",
    "language": "en",
    "context": "Factoid: Go basics",
    "answer": "An interface is a type that defines method signatures; any type implementing those methods satisfies the interface.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to declare a variable in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Use `var x type` or shorthand `x := value` to declare and initialize variables.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to write a function in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Use `func name(params) returnType { body }`, e.g., `func add(a, b int) int { return a+b }`.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to handle errors in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Functions return `error` as a value; check `if err != nil` after calls for error handling.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to format code in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Use `go fmt` to automatically format Go source files according to style guidelines.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to run tests in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Write tests in files ending with `_test.go` and run `go test` to execute them.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to import modules in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Use `import \"module/path\"`, and manage dependencies with Go modules: `go mod init` and `go mod tidy`.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to build a Go project?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Run `go build` to compile the code in the current module or package.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to use defer in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Use `defer` before a function call to schedule it to run after the surrounding function returns.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to work with JSON in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Use `encoding/json` package: `json.Unmarshal` to parse and `json.Marshal` to generate JSON.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to connect to a database in Go?",
    "label": "go",
    "language": "en",
    "context": "Descriptive: Go usage",
    "answer": "Use `database/sql` with a driver: open with `sql.Open(driver, dsn)` and use `db.Query` or `db.Exec`.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare goroutine vs thread.",
    "label": "go",
    "language": "en",
    "context": "Comparison: Go features",
    "answer": "Goroutines are lightweight and multiplexed on OS threads by the Go runtime; threads are OS-level and heavier.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Compare channel vs mutex.",
    "label": "go",
    "language": "en",
    "context": "Comparison: Go features",
    "answer": "Channels communicate data safely between goroutines; mutexes protect shared memory via locking.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare Go modules vs GOPATH.",
    "label": "go",
    "language": "en",
    "context": "Comparison: Go features",
    "answer": "Modules manage dependencies per project with versioning; GOPATH uses a global workspace without explicit versions.",
    "start_char": 0,
    "end_char": 114
  },
  {
    "question": "Compare slice vs array in Go.",
    "label": "go",
    "language": "en",
    "context": "Comparison: Go features",
    "answer": "Arrays have fixed size and value semantics; slices are dynamic, refer to underlying arrays, and support length/capacity.",
    "start_char": 0,
    "end_char": 120
  },
  {
    "question": "Compare interface{} vs generics.",
    "label": "go",
    "language": "en",
    "context": "Comparison: Go features",
    "answer": "interface{} is an empty interface requiring type assertions; generics allow type-safe, parameterized code.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "Compare make vs new.",
    "label": "go",
    "language": "en",
    "context": "Comparison: Go features",
    "answer": "make initializes slices, maps, channels and returns the type; new allocates memory for any type and returns a pointer.",
    "start_char": 0,
    "end_char": 118
  },
  {
    "question": "How to start a goroutine?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Prefix a function call with `go`, e.g., `go doWork()` to execute it concurrently.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to send and receive on channels?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Use `ch <- value` to send and `val := <- ch` to receive from channel `ch`.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to implement select for channels?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Use `select { case msg := <-ch1: ... case ch2 <- val: ... default: ... }` for multiple channel operations.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to close a channel?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Call `close(ch)` to close channel `ch`, signaling no more values will be sent.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to range over a channel?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Use `for v := range ch { }` to receive values until channel is closed.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to create a buffered channel?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Use `make(chan T, capacity)` to create a channel with buffer size `capacity`.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to write a generic function in Go?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Use Go 1.18+ generics: `func Map[T any](s []T, f func(T) T) []T { ... }`.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to build a web server in Go?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Use `net/http`: `http.HandleFunc(\"/\", handler)` and `http.ListenAndServe(\":8080\", nil)`.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to parse command-line flags?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Use `flag` package: `var port = flag.Int(\"port\", 8080, \"port number\")` and `flag.Parse()`.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to implement middleware in Go HTTP server?",
    "label": "go",
    "language": "en",
    "context": "How-to: Go programming",
    "answer": "Wrap `http.Handler`: `func mw(next http.Handler) http.Handler { return http.HandlerFunc(func(w,r){/*pre*/ next.ServeHTTP(w,r)}) }`.",
    "start_char": 0,
    "end_char": 131
  },
  {
    "question": "Error: too many open files",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when file descriptors are not closed; ensure `defer file.Close()` after `os.Open`.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: send on closed channel",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when sending to a channel after it has been closed; check channel closure logic.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: goroutine leak",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when goroutine not terminated or blocked; use context cancellation or close channels.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: deadlock",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when goroutines wait on each other indefinitely; ensure channels are closed or buffered appropriately.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Error: nil pointer dereference",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when accessing methods or fields on nil pointer; check for nil before use.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: index out of range",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when slicing beyond bounds; validate slice lengths before indexing.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: cannot use type assertion",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when asserting to wrong type; use comma-ok form `v, ok := x.(T)` to safely assert.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: unresolved import",
    "label": "go",
    "language": "en",
    "context": "Common Error: Go runtime errors",
    "answer": "Occurs when module path incorrect or dependency not added; run `go mod tidy` or correct import path.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "panic: runtime error: invalid memory address",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs on nil pointer dereference; initialize variables before use.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "fatal error: all goroutines are asleep",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs when main goroutine exits but others are waiting; wait using sync.WaitGroup.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "cannot allocate memory",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs when allocation too large; reduce slice size or data usage.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "undefined: SomeFunction",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs when function not defined or wrong package; check function name and import.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "too many arguments in call to fmt.Println",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs when passing wrong number of arguments; check function signature.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "missing return at end of function",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs when function declared to return value but missing return; add return statement.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "cannot range over T (type is not slice)",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs when using range on non-iterable type; iterate over slice, map, or channel only.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "invalid type assertion: x.(T) (non-interface type T on left)",
    "label": "go",
    "language": "en",
    "context": "Specific Error: Go compiler/runtime error",
    "answer": "Occurs when asserting non-interface type; only interface values can be type asserted.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is Symfony?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "Symfony is a PHP framework for web applications and reusable PHP components.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Who develops Symfony?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "Symfony is developed and maintained by SensioLabs and an open-source community.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "What is a bundle in Symfony?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "A bundle is a structured set of files (controllers, services, config) that adds functionality.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "What is Doctrine in Symfony?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "Doctrine is the default ORM used by Symfony for database interactions via entities.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is Twig?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "Twig is the default templating engine in Symfony for writing clean, secure templates.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is the Symfony Console?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "The Symfony Console is a component for building CLI commands and applications.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "What is Symfony Flex?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "Symfony Flex is a tool to manage recipes, dependencies, and streamline Symfony project setup.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is environment in Symfony?",
    "label": "symfony",
    "language": "en",
    "context": "Factoid: Symfony basics",
    "answer": "Symfony uses environments (dev, prod) to load different configurations based on APP_ENV.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to install Symfony via Composer?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Run `composer create-project symfony/skeleton my_project` to create a new Symfony app.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to configure routes in Symfony?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Define routes in config/routes.yaml or with annotations in controller classes.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to create a controller?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Generate with `php bin/console make:controller` or manually create a Controller class extending AbstractController.",
    "start_char": 0,
    "end_char": 115
  },
  {
    "question": "How to render a template?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Use `$this->render('template.html.twig', ['var' => $value])` in a controller action.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to define services?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Configure in config/services.yaml or use PHP attribute #[AsService] on classes.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to use environment variables?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Define in .env files and access with `$_ENV['VAR']` or Symfony Dotenv component.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to handle forms?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Use FormBuilder to define form types and render with `createForm()` and `form_widget()` in Twig.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to send emails?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Configure Mailer DSN, create Email object, and use `MailerInterface->send()` service.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to validate data?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Use Validator component with constraints annotations like `@Assert\\NotBlank` on entity properties.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to use security component?",
    "label": "symfony",
    "language": "en",
    "context": "Descriptive: Symfony usage",
    "answer": "Configure firewalls, encoders, and access control in config/packages/security.yaml.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Compare Symfony vs Laravel.",
    "label": "symfony",
    "language": "en",
    "context": "Comparison: Symfony components",
    "answer": "Symfony is component-based and configurable; Laravel is opinionated with built-in tools and conventions.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare YAML vs XML config.",
    "label": "symfony",
    "language": "en",
    "context": "Comparison: Symfony components",
    "answer": "YAML is more concise and human-readable; XML is verbose but supports schemas and validation.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare Annotations vs Attributes for routing.",
    "label": "symfony",
    "language": "en",
    "context": "Comparison: Symfony components",
    "answer": "Annotations use docblocks; PHP 8 Attributes are native and offer better performance.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare PDO vs Doctrine DBAL.",
    "label": "symfony",
    "language": "en",
    "context": "Comparison: Symfony components",
    "answer": "PDO is low-level database access; DBAL adds abstraction layer with query builder and schema tools.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare Monolog vs native PHP logging.",
    "label": "symfony",
    "language": "en",
    "context": "Comparison: Symfony components",
    "answer": "Monolog offers channels, handlers, and formatting; native logging lacks advanced features.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare form types vs manual HTML forms.",
    "label": "symfony",
    "language": "en",
    "context": "Comparison: Symfony components",
    "answer": "Form types automate binding and validation; manual forms require custom handling.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to clear cache in Symfony?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Run `php bin/console cache:clear --env=prod` to clear and warm up cache.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to generate entities?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Use `php bin/console make:entity` and follow prompts to define fields.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to run migrations?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Use `php bin/console doctrine:migrations:diff` then `doctrine:migrations:migrate`.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to debug with the profiler?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Enable WebProfilerBundle and access toolbar or /_profiler URL for request details.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to configure logging channels?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Define channels and handlers in config/packages/monolog.yaml with channel names.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to enforce HTTPS?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Use `require_https` in routes or configure `access_control` requiring `IS_SECURE://`.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to create a custom command?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Generate with `php bin/console make:command` and implement execute() in the generated class.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to setup role-based access?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Define roles in security.yaml and use `is_granted('ROLE_ADMIN')` in controllers or Twig.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to test controllers?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Use Symfony WebTestCase and `createClient()` to simulate HTTP requests and assert responses.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to use translation in Twig?",
    "label": "symfony",
    "language": "en",
    "context": "How-to: Symfony development",
    "answer": "Use `{{ 'message.key'|trans }}` and define translations in translations/*.yaml files.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: ServiceNotFoundException",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs when a service is not defined; check services.yaml and service IDs.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: RouteNotFoundException",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs when generating or matching a route that doesn't exist; verify route names and paths.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: ClassNotFoundException",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs when class not autoloaded; run `composer dump-autoload` or check namespace.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: Circular reference detected",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs when services inject each other in a cycle; refactor to remove circular dependency.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: No route found for",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs in test clients or HTTP requests; ensure correct path and HTTP method.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error: Unable to load template",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs when Twig can't find template; verify template path and bundle notation.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Warning: The form's view data is expected to be of type",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs when form bound to wrong data type; ensure form type matches entity.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: env var not found",
    "label": "symfony",
    "language": "en",
    "context": "Common Error: Symfony troubleshooting",
    "answer": "Occurs when APP_ENV or other env variables missing; add to .env or server environment.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "ContextErrorException: Catchable Fatal Error",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs when PHP type mismatch or missing argument; check method signatures.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "MappingException: No mapping found for field",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs in Doctrine when entity property missing mapping; annotate or configure mapping.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Console exception: An exception has been thrown during the rendering of a template",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs when Twig error; check Twig syntax and variable existence.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "HTTP 419 Unknown CSRF token",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs when CSRF token invalid or expired; ensure token field present and form rendered correctly.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Deprecation Notice: Auto-registration of bundles is deprecated",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs when using flex autodiscovery; register bundles explicitly in bundles.php.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Warning: require(): Failed opening required",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs when file path wrong; verify kernel and project directory structure.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "ServiceCircularReferenceException",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs when service constructor injection causes cycle; use setter injection or refactor.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "AssetNotFoundException",
    "label": "symfony",
    "language": "en",
    "context": "Specific Error: Symfony error",
    "answer": "Occurs when webpack encore didn't build assets; run `encore dev` or `npm run build`.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "What is OpenCV?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "OpenCV (Open Source Computer Vision Library) is an open-source library for computer vision and machine learning.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "Who developed OpenCV?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "OpenCV was originally developed by Intel and is now supported by Willow Garage and Itseez.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "What languages does OpenCV support?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "OpenCV provides interfaces for C++, Python, Java, and JavaScript.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "What is Mat in OpenCV?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "Mat is the primary image container class in OpenCV, representing multi-dimensional dense numerical arrays.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "What is cascade classifier?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "A cascade classifier is an object detection method that uses a series of boosted classifiers applied in sequence.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "What is Haar feature in OpenCV?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "Haar features are simple rectangular features used by cascade classifiers for face and object detection.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "What is the default image color order in OpenCV?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "OpenCV uses BGR (Blue, Green, Red) color order rather than RGB.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "What is cv::VideoCapture used for?",
    "label": "opencv",
    "language": "en",
    "context": "Factoid: OpenCV basics",
    "answer": "VideoCapture is a class used to capture video from cameras or video files.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to read an image?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `cv::imread(path, flags)` in C++ or `cv2.imread(path, flags)` in Python to load images.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to display an image?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `imshow(windowName, image)` and `waitKey()` to show images in a window.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to convert color spaces?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `cvtColor(src, dst, code)` with codes like `COLOR_BGR2GRAY` to convert images.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to resize an image?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `resize(src, dst, Size(width, height))` or `cv2.resize(src, (w, h))`.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to draw shapes on images?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use functions like `rectangle`, `circle`, `line`, and `putText` to annotate images.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to access pixel values?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `image.at<type>(y, x)` in C++ or `image[y, x]` in Python to read/write pixels.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to apply Gaussian blur?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `GaussianBlur(src, dst, Size(ksize, ksize), sigmaX)` for smoothing.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to detect edges?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `Canny(image, edges, threshold1, threshold2)` for edge detection.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to perform thresholding?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `threshold(src, dst, thresh, maxVal, type)` with types like `THRESH_BINARY`.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to find contours?",
    "label": "opencv",
    "language": "en",
    "context": "Descriptive: Common operations",
    "answer": "Use `findContours(binaryImage, contours, hierarchy, mode, method)` to retrieve object outlines.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Compare cv::Mat vs cv::UMat.",
    "label": "opencv",
    "language": "en",
    "context": "Comparison: Algorithms",
    "answer": "Mat is CPU memory-based; UMat is unified memory for transparent GPU acceleration.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Compare imread flags IMREAD_COLOR vs IMREAD_GRAYSCALE.",
    "label": "opencv",
    "language": "en",
    "context": "Comparison: Algorithms",
    "answer": "IMREAD_COLOR loads BGR color image; IMREAD_GRAYSCALE loads single-channel grayscale image.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare Canny vs Sobel edge detectors.",
    "label": "opencv",
    "language": "en",
    "context": "Comparison: Algorithms",
    "answer": "Canny uses multi-stage detector for accurate edges; Sobel uses gradient magnitude to detect edges.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare findContours RETR_LIST vs RETR_TREE.",
    "label": "opencv",
    "language": "en",
    "context": "Comparison: Algorithms",
    "answer": "RETR_LIST retrieves all contours without hierarchy; RETR_TREE retrieves full hierarchy and nested contours.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "Compare HoughLines vs HoughLinesP.",
    "label": "opencv",
    "language": "en",
    "context": "Comparison: Algorithms",
    "answer": "HoughLines detects lines in polar coords; HoughLinesP detects line segments with probabilistic method.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Compare SIFT vs ORB features.",
    "label": "opencv",
    "language": "en",
    "context": "Comparison: Algorithms",
    "answer": "SIFT is scale-invariant with high accuracy (patented); ORB is faster, free, and oriented FAST-based.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "How to convert Mat to grayscale in Python?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)`.",
    "start_char": 0,
    "end_char": 53
  },
  {
    "question": "How to save an image to file?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `cv::imwrite(path, image)` in C++ or `cv2.imwrite(path, image)` in Python.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to perform template matching?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `matchTemplate(image, template, method)` and `minMaxLoc()` to find best match.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to detect faces with Haar cascades?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Load cascade with `CascadeClassifier`, then `detectMultiScale` on grayscale image.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to track objects using meanshift?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Specify ROI, compute histogram, use `calcBackProject`, then call `meanShift` for tracking.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to perform perspective transform?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `getPerspectiveTransform(srcPts, dstPts)` and `warpPerspective(src, dst, M, size)`.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to stitch images into panorama?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `Stitcher` class with `create()` and `stitch(images, pano)` method.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to calibrate camera using chessboard?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `findChessboardCorners`, `cornerSubPix`, and `calibrateCamera` to get camera matrix.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to apply morphological operations?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `erode`, `dilate`, `morphologyEx` with structuring elements to process binary images.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to use DNN module to run models?",
    "label": "opencv",
    "language": "en",
    "context": "How-to: Advanced operations",
    "answer": "Use `readNetFrom...` functions, set input blob, then `forward()` to get network output.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: assertion failed in imshow",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when image is empty; ensure `imread` succeeded and image not empty before showing.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: cannot open camera",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when VideoCapture device index invalid; verify correct index or camera availability.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: OpenCV was built without CUDA support",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when using UMat functions; build OpenCV with CUDA flag enabled.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Error: shape mismatch in resize",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when dst size doesn't match expected channels; specify correct width, height, and channels.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Error: unknown interpolation method",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when using incorrect flag in resize; use valid interpolation constants.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: failed to load cascade classifier",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when XML file path incorrect; ensure cascade file exists and path is correct.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: no image data",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when processing empty image; check file path and read flags.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Error: DNN backend not available",
    "label": "opencv",
    "language": "en",
    "context": "Common Error: OpenCV troubleshooting",
    "answer": "Occurs when backend not compiled; enable backend in build or use alternate backend.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "TypeError: Cannot read property 'cols' of undefined",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs in JavaScript binding when Mat object not created; ensure `cv.Mat()` returned valid Mat.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "cv::Exception: sizes of input arguments do not match",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs when operations require same-sized images; resize or crop images to match dimensions.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "ImportError: No module named cv2",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs when Python OpenCV not installed; install `opencv-python` via pip.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "AttributeError: module 'cv2' has no attribute 'DataFrame'",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs when using wrong OpenCV contrib modules; install `opencv-contrib-python`.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "error: (-215:Assertion failed) !_img.empty()",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs when image path wrong or file corrupted; check path and image file integrity.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "cv2.error: OpenCV(4.xx) :-1: error: in function 'imshow'",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs when GUI backend not available; use `cv2.startWindowThread()` or check environment.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "cv2.error: OpenCV(4.xx) :-2: error: in function 'warpPerspective'",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs when transform matrix invalid; verify homography points and matrix type.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "cv2.error: OpenCV(4.xx) :-215:Assertion failed in 'cvtColor'",
    "label": "opencv",
    "language": "en",
    "context": "Specific Error: OpenCV error",
    "answer": "Occurs when image channels mismatch conversion code; use correct conversion flag for input image.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is Matplotlib?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "Matplotlib is a Python plotting library for creating static, interactive, and animated visualizations.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Who develops Matplotlib?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "Matplotlib is developed by John D. Hunter and an active open-source community.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "What is a figure in Matplotlib?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "A figure is the top-level container for all plot elements, including axes, titles, and graphics.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is an Axes in Matplotlib?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "An Axes is the area on which data is plotted, containing the X and Y (and possibly Z) axes.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is pyplot?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "pyplot is a Matplotlib module providing a MATLAB-like interface for creating figures and plots.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is a backend in Matplotlib?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "A backend is the rendering engine for drawing plots, handling GUI integration or file output.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is a colormap?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "A colormap maps numerical data to colors, used in heatmaps, scatter plots, and other plots.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What file formats does Matplotlib support?",
    "label": "matplotlib",
    "language": "en",
    "context": "Factoid: Matplotlib basics",
    "answer": "Matplotlib supports PNG, PDF, SVG, EPS, and JPG among other file formats.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to plot a line graph?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.plot(x, y)` after importing `import matplotlib.pyplot as plt`, then `plt.show()`.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to create a scatter plot?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.scatter(x, y, c='color', marker='o')` to plot data points.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to label axes?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.xlabel('X Label')` and `plt.ylabel('Y Label')` before `plt.show()`.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to add a title?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.title('Title')` to add a title to the current axes.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to display a legend?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.legend()` after labeling plot elements with `label='name'`.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to save a figure to file?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.savefig('filename.png', dpi=300)` before `plt.show()`.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "How to change figure size?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.figure(figsize=(width, height))` to set figure dimensions in inches.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to use subplots?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `fig, axes = plt.subplots(nrows, ncols)` to create multiple axes.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to customize ticks?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.xticks(ticks, labels)` and `plt.yticks()` to set tick locations and labels.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to plot bar charts?",
    "label": "matplotlib",
    "language": "en",
    "context": "Descriptive: Plot creation",
    "answer": "Use `plt.bar(categories, values)` for vertical bars or `plt.barh()` for horizontal bars.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare plt.plot vs plt.scatter",
    "label": "matplotlib",
    "language": "en",
    "context": "Comparison: Matplotlib components",
    "answer": "plot connects points with lines; scatter plots points individually without connecting lines.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare figure vs axes",
    "label": "matplotlib",
    "language": "en",
    "context": "Comparison: Matplotlib components",
    "answer": "Figure is the container; axes is the plotting area within the figure.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Compare tight_layout vs subplot_adjust",
    "label": "matplotlib",
    "language": "en",
    "context": "Comparison: Matplotlib components",
    "answer": "tight_layout automatically adjusts spacing; subplot_adjust manually sets parameters.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare 'ggplot' style vs 'seaborn' style",
    "label": "matplotlib",
    "language": "en",
    "context": "Comparison: Matplotlib components",
    "answer": "'ggplot' mimics R's ggplot2; 'seaborn' offers statistical plot aesthetics by default.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare interactive vs non-interactive mode",
    "label": "matplotlib",
    "language": "en",
    "context": "Comparison: Matplotlib components",
    "answer": "Interactive mode updates plots in real-time; non-interactive requires explicit `plt.show()`.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare RGB vs RGBA colors",
    "label": "matplotlib",
    "language": "en",
    "context": "Comparison: Matplotlib components",
    "answer": "RGB specifies red-green-blue; RGBA includes an alpha transparency channel.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to plot multiple lines on same axes?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Call `plt.plot(x1, y1)` and `plt.plot(x2, y2)` before `plt.show()`.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to annotate points on plot?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.annotate('text', xy=(x,y), xytext=(x_offset, y_offset))`.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "How to create a histogram?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.hist(data, bins=10, edgecolor='black')` to plot distribution.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to plot a boxplot?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.boxplot(data)` to visualize data quartiles and outliers.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to create heatmap?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.imshow(matrix, cmap='viridis', aspect='auto')` for matrix data.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to use twin axes?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `ax2 = ax1.twinx()` to create second Y-axis sharing the same X-axis.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to plot a pie chart?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.pie(sizes, labels=labels, autopct='%1.1f%%')` to show percentages.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to set log scale?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.xscale('log')` or `plt.yscale('log')` for logarithmic axes.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to adjust subplot spacing?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.subplots_adjust(wspace=0.3, hspace=0.3)` to set spacing.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to include error bars in plot?",
    "label": "matplotlib",
    "language": "en",
    "context": "How-to: Plot customization",
    "answer": "Use `plt.errorbar(x, y, yerr=errors)` to display error bars.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "ModuleNotFoundError: No module named 'matplotlib'",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when Matplotlib not installed; install via `pip install matplotlib`.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "ValueError: x and y must have same first dimension",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when x and y arrays differ in length; ensure they match.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "TypeError: unhashable type: 'numpy.ndarray'",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when using array as dict key; convert to tuple or freeze array.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "RuntimeError: interactive mode is off",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when interactive mode disabled; call `plt.ion()` or use `plt.show()`.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Warning: Tight layout not applied",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when figure elements overlap; call `plt.tight_layout()` before showing figure.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "ValueError: bins must be non-negative real numbers",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when bins argument invalid; provide positive integer or sequence.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "AttributeError: 'AxesSubplot' object has no attribute 'legend'",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when using wrong variable; ensure calling legend on correct axes object.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "MemoryError plotting large dataset",
    "label": "matplotlib",
    "language": "en",
    "context": "Common Error: Plotting issues",
    "answer": "Occurs when plotting too many points; downsample or use more efficient plotting methods.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "NameError: name 'plt' is not defined",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs when `import matplotlib.pyplot as plt` not executed; add import statement.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "AttributeError: module 'matplotlib' has no attribute 'pyplot'",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs when Matplotlib installation incomplete; reinstall or upgrade Matplotlib.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "ValueError: Invalid RGB or RGBA argument",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs when color argument invalid; use valid color format (string, tuple, or hex).",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "TypeError: 'Figure' object is not subscriptable",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs when indexing figure as array; use `fig.axes[index]` instead of `fig[index]`.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "RuntimeError: Canvas is already initialized",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs when creating multiple figures without closing; call `plt.close()` before new figure.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "UserWarning: Matplotlib is building the font cache",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs on first run; wait for cache build or pre-cache fonts.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "ValueError: shape mismatch: objects cannot be broadcast",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs in plotting functions requiring matching dimensions; verify data shapes.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "KeyError in plotting style",
    "label": "matplotlib",
    "language": "en",
    "context": "Specific Error: Matplotlib error",
    "answer": "Occurs when style name invalid; use `plt.style.available` to view available styles.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is .htaccess?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": ".htaccess is a configuration file used by Apache web server to define directory-level settings.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Who uses .htaccess?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": "Web developers and administrators use .htaccess to manage redirects, access control, and other settings.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Where is .htaccess located?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": ".htaccess files reside in the directory they affect, allowing per-directory configuration.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How does .htaccess work?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": "Apache reads .htaccess files on each request and applies directives before serving content.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What directives go in .htaccess?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": "Directives like RewriteRule, Redirect, ErrorDocument, and access control (Require, Order, Deny) can be defined.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "What is AllowOverride?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": "AllowOverride in httpd.conf determines which directives can be overridden by .htaccess.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "What is mod_rewrite?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": "mod_rewrite is an Apache module enabling URL rewriting through RewriteEngine and RewriteRule.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "What is .htpasswd?",
    "label": ".htaccess",
    "language": "en",
    "context": "Factoid: .htaccess basics",
    "answer": ".htpasswd is a file storing username:hashed-password pairs for basic HTTP authentication in .htaccess.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to enable .htaccess overrides?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Set AllowOverride All for the target directory in Apache\u2019s main config and restart Apache.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to redirect HTTP to HTTPS?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use RewriteEngine On and RewriteCond %{HTTPS} !=on, then RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301].",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to set custom error pages?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use ErrorDocument 404 /404.html and place the HTML file in the web root.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to block IP addresses?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use Require not ip 192.168.1.0/24 or Deny from 203.0.113.5 in .htaccess.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to password protect a directory?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use AuthType Basic, AuthName, AuthUserFile path/to/.htpasswd, and Require valid-user directives.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to disable directory listing?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use Options -Indexes to prevent Apache from listing directory contents.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to set default index file?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use DirectoryIndex index.php index.html to define the default served file.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to enable Gzip compression?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use <IfModule mod_deflate.c> AddOutputFilterByType DEFLATE text/html text/css application/javascript </IfModule>.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to set cache control headers?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Use Header set Cache-Control \"max-age=31536000, public\" to leverage browser caching.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to rewrite URL with .htaccess?",
    "label": ".htaccess",
    "language": "en",
    "context": "Descriptive: .htaccess usage",
    "answer": "Enable RewriteEngine and use RewriteRule patterns to map user-friendly URLs to scripts.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare .htaccess vs httpd.conf.",
    "label": ".htaccess",
    "language": "en",
    "context": "Comparison: .htaccess directives",
    "answer": "httpd.conf is server-wide; .htaccess applies per-directory and is read on each request.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare AllowOverride All vs None.",
    "label": ".htaccess",
    "language": "en",
    "context": "Comparison: .htaccess directives",
    "answer": "All allows .htaccess directives; None disables .htaccess processing for performance.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare mod_rewrite vs mod_alias.",
    "label": ".htaccess",
    "language": "en",
    "context": "Comparison: .htaccess directives",
    "answer": "mod_rewrite offers advanced regex-based rewrites; mod_alias provides simple Redirect directives.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare Redirect vs RewriteRule.",
    "label": ".htaccess",
    "language": "en",
    "context": "Comparison: .htaccess directives",
    "answer": "Redirect performs simple URL redirects; RewriteRule allows complex pattern matching and conditions.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "Compare Order, Deny, Allow vs Require.",
    "label": ".htaccess",
    "language": "en",
    "context": "Comparison: .htaccess directives",
    "answer": "Order/Deny/Allow is older syntax; Require is newer Apache 2.4 directive for access control.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Compare FilesMatch vs DirectoryMatch.",
    "label": ".htaccess",
    "language": "en",
    "context": "Comparison: .htaccess directives",
    "answer": "FilesMatch applies directives to files matching regex; DirectoryMatch applies to matching directory paths.",
    "start_char": 0,
    "end_char": 106
  },
  {
    "question": "How to deny access to files by extension?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use <FilesMatch \"\\.(config|ini)$\"> Require all denied </FilesMatch>.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to force download of files?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use <FilesMatch \"\\.(pdf|zip)$\"> Header set Content-Disposition \"attachment\" </FilesMatch>.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to remove .php extension from URL?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use RewriteRule ^([^.]+)$ $1.php [L], enabling URLs without .php.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to block referral spam?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use RewriteCond %{HTTP_REFERER} spamdomain.com [NC] RewriteRule .* - [F].",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to set PHP version using .htaccess?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Add AddHandler application/x-httpd-php74 .php (specific to hosting environment).",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to enable CORS in .htaccess?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use Header set Access-Control-Allow-Origin \"*\" to allow cross-origin requests.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to apply caching for images?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use <FilesMatch \"\\.(jpg|png)$\"> Header set Cache-Control \"max-age=2592000\" </FilesMatch>.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to prevent hotlinking of images?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use RewriteCond %{HTTP_REFERER} !^$ RewriteCond %{HTTP_REFERER} !^https?://(www\\.)?yourdomain.com [NC] RewriteRule \\.(jpg|png)$ - [F].",
    "start_char": 0,
    "end_char": 134
  },
  {
    "question": "How to disable caching for development?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use Header set Cache-Control \"no-cache, no-store, must-revalidate\".",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to redirect www to non-www?",
    "label": ".htaccess",
    "language": "en",
    "context": "How-to: .htaccess techniques",
    "answer": "Use RewriteCond %{HTTP_HOST} ^www\\.(.*)$ [NC] RewriteRule ^ https://%1%{REQUEST_URI} [L,R=301].",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "500 Internal Server Error .htaccess",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when .htaccess syntax is invalid; check Apache error log for directive issues.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "403 Forbidden .htaccess override",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when AllowOverride is disabled in main config; enable relevant AllowOverride.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "404 Not Found after rewrite",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when RewriteRule target path incorrect; verify file exists and path is correct.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Too many redirects",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when redirect rules loop; refine conditions to prevent infinite redirect loops.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "File not allowed by server configuration",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when access denied by <Files> or Require directives; adjust rules accordingly.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "RewriteBase not working",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when base path incorrect; set correct relative path for RewriteBase.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Syntax error in .htaccess",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when directive spelling or syntax wrong; correct the line reported in error log.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "DID NOT RETURN from rewrite rule",
    "label": ".htaccess",
    "language": "en",
    "context": "Common Error: .htaccess troubleshooting",
    "answer": "Occurs when flags missing; add [L] or [R] to ensure rule stops or redirects properly.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "AH00037: No matching DirectoryIndex",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when DirectoryIndex directive doesn't match any file; specify correct index files.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "AH00526: Syntax error on line",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when .htaccess contains unrecognized directive; fix based on error log line.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "AH01797: Options FollowSymLinks not allowed here",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when FollowSymLinks disabled; use SymLinksIfOwnerMatch or enable in main config.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "AH01630: client denied by server configuration",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when Require or Deny directives block access; adjust access rules.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "AH00957: mod_rewrite: could not open code image",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when module not loaded; enable mod_rewrite in Apache modules.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "AH02217: RewriteEngine not allowed here",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when RewriteEngine used in context not permitted; allow in directory or vhost context.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "AH01071: Got error 'Primary script unknown'",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when PHP-FPM misconfiguration; ensure correct SCRIPT_FILENAME and fastcgi settings.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "AH00548: Invalid command 'Header'",
    "label": ".htaccess",
    "language": "en",
    "context": "Specific Error: .htaccess error",
    "answer": "Occurs when mod_headers not enabled; enable module with a2enmod headers and restart.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "What is HTTP?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "HTTP (Hypertext Transfer Protocol) is the foundation of data communication on the World Wide Web.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "Who invented HTTP?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "HTTP was invented by Tim Berners-Lee and his team at CERN in 1989-1991.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What is the default port for HTTP?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "The default port for HTTP is 80 for unencrypted traffic and 443 for HTTPS.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "What is a URL?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "A URL (Uniform Resource Locator) specifies the address of a resource on the web.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "What is an HTTP method?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "An HTTP method, such as GET, POST, PUT, DELETE, defines the action to be performed on a resource.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What are HTTP headers?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "HTTP headers carry metadata about the request or response, such as Content-Type or Authorization.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is HTTP/2?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "HTTP/2 is a binary, multiplexed version of HTTP designed for improved performance over HTTP/1.1.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is HTTPS?",
    "label": "http",
    "language": "en",
    "context": "Factoid: HTTP basics",
    "answer": "HTTPS is HTTP over TLS/SSL, providing encrypted and secure communication between client and server.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to make a GET request in JavaScript?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Use fetch('https://api.example.com').then(res => res.json()).then(data => console.log(data)).",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to send JSON data in a POST request?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Set header 'Content-Type: application/json' and use JSON.stringify(body) in the request body.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to read headers in Express?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Access req.headers object or use req.get('Header-Name') to retrieve a specific header.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to configure CORS for an API?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Enable CORS middleware on server or add appropriate Access-Control-Allow-* headers.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to handle query parameters in Node.js?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Use req.query object when using Express or URLSearchParams in pure Node.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to handle form data in PHP?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Use $_POST superglobal and configure enctype='multipart/form-data' for file uploads.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to send cookies in HTTP?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Include Set-Cookie header in response and browser sends Cookie header on subsequent requests.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to implement basic auth in HTTP?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Send Authorization header with 'Basic ' + base64(username:password) in each request.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to serve static files in Nginx?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Use location block with root or alias directives and try_files to serve static assets.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to enable gzip compression in Apache?",
    "label": "http",
    "language": "en",
    "context": "Descriptive: HTTP operations",
    "answer": "Enable mod_deflate and add 'AddOutputFilterByType DEFLATE text/html text/css application/javascript' in config.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare HTTP GET vs POST",
    "label": "http",
    "language": "en",
    "context": "Comparison: HTTP concepts",
    "answer": "GET requests retrieve data and are idempotent; POST requests submit data and may change server state.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "Compare HTTP/1.1 vs HTTP/2",
    "label": "http",
    "language": "en",
    "context": "Comparison: HTTP concepts",
    "answer": "HTTP/2 uses binary framing and multiplexing for performance; HTTP/1.1 uses plain text and one request per connection.",
    "start_char": 0,
    "end_char": 117
  },
  {
    "question": "Compare REST vs SOAP over HTTP",
    "label": "http",
    "language": "en",
    "context": "Comparison: HTTP concepts",
    "answer": "REST uses simple JSON over HTTP; SOAP uses XML envelopes and WS-* standards over HTTP.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Compare keep-alive vs close connection",
    "label": "http",
    "language": "en",
    "context": "Comparison: HTTP concepts",
    "answer": "Keep-alive reuses TCP connection for multiple requests; close terminates connection after each request.",
    "start_char": 0,
    "end_char": 103
  },
  {
    "question": "Compare 301 vs 302 redirect",
    "label": "http",
    "language": "en",
    "context": "Comparison: HTTP concepts",
    "answer": "301 is permanent redirect; 302 is temporary redirect, affecting cache and SEO differently.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Compare chunked transfer vs content-length",
    "label": "http",
    "language": "en",
    "context": "Comparison: HTTP concepts",
    "answer": "Chunked streaming sends data in chunks without predefined length; content-length specifies total size upfront.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "How to redirect HTTP to HTTPS in Nginx?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Use 'return 301 https://$host$request_uri;' inside server block listening on port 80.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to set custom HTTP status code in Express?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Use res.status(code).send(body) to set status and send response.",
    "start_char": 0,
    "end_char": 64
  },
  {
    "question": "How to parse JSON body in Node.js?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Use express.json() middleware or body-parser to parse incoming JSON request bodies.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to add security headers in HTTP?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Use Helmet middleware in Express or add headers like X-Content-Type-Options manually.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to stream file over HTTP in Python?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Use Flask send_file or Python's wsgi file wrapper to stream large files efficiently.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to use HTTP/2 with Nginx?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Configure 'listen 443 ssl http2;' and include SSL certificates in Nginx server block.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to compress HTTP response in Go?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Use gzip middleware or wrap http.ResponseWriter with gzip.Writer to compress responses.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to implement rate limiting in HTTP?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Use token bucket or leaky bucket algorithm in middleware to limit requests per time window.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to configure long polling with HTTP?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Keep HTTP connection open until data available, then respond and reconnect client.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to use HTTP pipelining?",
    "label": "http",
    "language": "en",
    "context": "How-to: HTTP techniques",
    "answer": "Send multiple HTTP requests without waiting for responses, supported in HTTP/1.1 with caution.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Error: 404 Not Found",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs when requested resource does not exist or path is incorrect.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Error: 500 Internal Server Error",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs due to unhandled exceptions on server; check server logs for stack trace.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: CORS policy blocked",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs when Access-Control-Allow-Origin header missing or incorrect.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "Error: ECONNREFUSED",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs when connection to server refused; verify server is running and port is open.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: SSL certificate not trusted",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs when certificate is self-signed or missing CA chain; install proper certificates.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: Mixed content",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs when HTTPS page loads HTTP resources; use HTTPS for all assets.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Error: Payload Too Large (413)",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs when request body exceeds server limits; increase client_max_body_size or equivalent.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: 502 Bad Gateway",
    "label": "http",
    "language": "en",
    "context": "Common Error: HTTP troubleshooting",
    "answer": "Occurs when upstream server is down or misconfigured behind proxy.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "TypeError: Failed to fetch",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs in browser when network request fails; check URL and network connectivity.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "net::ERR_CERT_DATE_INVALID",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs when SSL certificate expired; renew certificate.",
    "start_char": 0,
    "end_char": 55
  },
  {
    "question": "Error: socket hang up",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs when server closes connection prematurely; check server timeout settings.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: malformed HTTP response",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs when proxy or server sends invalid HTTP; inspect raw response for errors.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: write EPIPE",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs when writing to closed socket; handle client disconnect gracefully.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: HEADERS_TOO_LARGE",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs in HTTP/2 when headers exceed size limits; reduce header size or increase limit.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: HTTP 401 Unauthorized",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs when authentication credentials missing or invalid; include proper Authorization header.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: ENOTFOUND",
    "label": "http",
    "language": "en",
    "context": "Specific Error: HTTP error",
    "answer": "Occurs when DNS lookup fails; verify domain name and DNS configuration.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What is a socket?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "A socket is an endpoint for sending or receiving data across a network.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What are socket types?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "Common types include stream (TCP) and datagram (UDP) sockets.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "Who invented sockets?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "Berkeley Sockets API was introduced in 1983 in BSD Unix by Bill Joy.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "What is localhost?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "Localhost refers to the loopback network interface (127.0.0.1) on a host.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "What is a port in networking?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "A port is a logical division for network services identified by a number (0\u201365535).",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is TCP socket?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "A TCP socket provides reliable, connection-oriented data transmission.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "What is UDP socket?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "A UDP socket provides connectionless, best-effort datagram delivery.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "What is a UNIX domain socket?",
    "label": "sockets",
    "language": "en",
    "context": "Factoid: Socket basics",
    "answer": "A UNIX domain socket allows inter-process communication on the same host.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to create a TCP socket in Python?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Use `s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)` and call `s.connect((host, port))`.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to bind a socket to an address?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Use `s.bind((host, port))` before `s.listen()` for a server socket.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to listen for connections?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Call `s.listen(backlog)` to enable a server socket to accept connections.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to accept a connection?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Use `conn, addr = s.accept()` to accept incoming TCP connections.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to send data over socket?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Use `s.send(data)` or `conn.sendall(data)` to transmit bytes.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "How to receive data from socket?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Use `s.recv(bufsize)` or `conn.recv(bufsize)` to read bytes.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to close a socket?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Call `s.close()` to close the socket and free its resources.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to set socket timeout?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Use `s.settimeout(seconds)` to set blocking operations timeout.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "How to use non-blocking socket?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Call `s.setblocking(False)` to make socket operations non-blocking.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "How to create a UDP socket?",
    "label": "sockets",
    "language": "en",
    "context": "Descriptive: Socket operations",
    "answer": "Use `socket.socket(socket.AF_INET, socket.SOCK_DGRAM)` for datagram communication.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Compare blocking vs non-blocking sockets.",
    "label": "sockets",
    "language": "en",
    "context": "Comparison: Socket types",
    "answer": "Blocking sockets wait for operations to complete; non-blocking return immediately with error if no data.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "Compare TCP vs UDP sockets.",
    "label": "sockets",
    "language": "en",
    "context": "Comparison: Socket types",
    "answer": "TCP is reliable and ordered; UDP is faster but unreliable and connectionless.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Compare IPv4 vs IPv6 sockets.",
    "label": "sockets",
    "language": "en",
    "context": "Comparison: Socket types",
    "answer": "IPv4 uses 32-bit addresses; IPv6 uses 128-bit addresses for a larger address space.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Compare UNIX domain vs IP sockets.",
    "label": "sockets",
    "language": "en",
    "context": "Comparison: Socket types",
    "answer": "UNIX domain sockets are for local IPC; IP sockets communicate over network interfaces.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Compare socket vs HTTP connection.",
    "label": "sockets",
    "language": "en",
    "context": "Comparison: Socket types",
    "answer": "Socket is low-level byte stream; HTTP is application protocol on top of TCP sockets.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Compare select vs poll vs epoll.",
    "label": "sockets",
    "language": "en",
    "context": "Comparison: Socket types",
    "answer": "select and poll scale poorly with many fds; epoll is Linux-specific optimized event notification.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to implement a simple TCP server in Python?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Use socket.socket, bind, listen, accept loop, and handle client connections with send/recv.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to implement a simple UDP server in Python?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Use socket.socket with SOCK_DGRAM and call `recvfrom` and `sendto` for datagram exchange.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to use select for multiplexing?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Import select, call `select.select(read_list, write_list, error_list, timeout)` to monitor sockets.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to enable address reuse?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Use `s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)` before binding.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to handle multiple connections using threads?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Spawn new thread per client after `accept()`, passing the connected socket to handler function.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "How to use ssl.wrap_socket?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Wrap a socket with SSL: `ssl_sock = ssl.wrap_socket(sock, server_side=True, certfile, keyfile)`.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to send JSON over sockets?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Serialize JSON with `json.dumps` and encode to bytes before `send`, then decode and load on recv.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to implement a socket client in Java?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Use `Socket socket = new Socket(host, port)` and `InputStream`/`OutputStream` for communication.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to broadcast a UDP message?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Enable broadcast with `sock.setsockopt(SOL_SOCKET, SO_BROADCAST, 1)` and use `sendto` to broadcast address.",
    "start_char": 0,
    "end_char": 107
  },
  {
    "question": "How to implement timeout-based retry?",
    "label": "sockets",
    "language": "en",
    "context": "How-to: Socket programming",
    "answer": "Wrap send/recv in try/except catching socket.timeout and retry specified number of times.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: Address already in use",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when binding to a port still in TIME_WAIT; use SO_REUSEADDR or wait for release.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: Connection refused",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when no server listening on target port; ensure server is running and accessible.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: Connection reset by peer",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when the remote side closes connection unexpectedly; handle disconnections gracefully.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: Timed out",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when socket operation exceeds timeout; adjust timeout or retry logic.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Error: Broken pipe",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when writing to closed socket; check connection status before sending.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error: Network is unreachable",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when network interface down or destination unreachable; verify network settings.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: Invalid argument",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when passing incorrect parameters to socket functions; verify API usage.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error: Too many open files",
    "label": "sockets",
    "language": "en",
    "context": "Common Error: Socket issues",
    "answer": "Occurs when OS limit of file descriptors reached; close sockets properly or increase limit.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "OSError: [Errno 98] Address already in use",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs when port already bound; use SO_REUSEADDR or select a free port.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "socket.timeout",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs when socket operation exceeds timeout; catch exception and retry or adjust timeout.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "BlockingIOError: [Errno 11] Resource temporarily unavailable",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs for non-blocking sockets with no data; handle EAGAIN and retry.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "ssl.SSLError: SSL handshake failed",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs on invalid certificates or protocol mismatch; verify certs and SSL versions.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "UnicodeEncodeError on send",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs when sending non-bytes data; encode string to bytes before sending.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "TypeError: a bytes-like object is required",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs when passing string to send; encode to bytes.",
    "start_char": 0,
    "end_char": 52
  },
  {
    "question": "ConnectionResetError: [Errno 104] Connection reset by peer",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs when peer resets connection; detect and reconnect or alert user.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "select.error: file descriptor out of range",
    "label": "sockets",
    "language": "en",
    "context": "Specific Error: Socket error",
    "answer": "Occurs when fd number exceeds FD_SETSIZE; use poll/epoll for large number of sockets.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is OOP?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "Object-Oriented Programming (OOP) is a paradigm based on the concept of objects containing data and behavior.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "Who pioneered OOP?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "OOP concepts were introduced by Ole-Johan Dahl and Kristen Nygaard in the Simula language (1960s).",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "What is a class in OOP?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "A class is a blueprint defining attributes and methods for objects.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "What is an object in OOP?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "An object is an instance of a class containing state (fields) and behavior (methods).",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "What is encapsulation?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "Encapsulation bundles data and methods and restricts direct access to an object's internals.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is inheritance?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "Inheritance allows a class to derive properties and behavior from another class.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "What is polymorphism?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "Polymorphism enables objects to be treated as instances of their parent class and use overridden methods.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "What is abstraction?",
    "label": "oop",
    "language": "en",
    "context": "Factoid: OOP basics",
    "answer": "Abstraction simplifies complex reality by modeling classes appropriate to the problem.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to define a class in Java?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Use `public class ClassName { private int field; public ClassName(){} void method(){} }`.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to create an object in C++?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Use `ClassName obj;` for stack allocation or `ClassName* obj = new ClassName();` for heap.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to implement inheritance in Python?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Use `class Child(Parent):` and call `super().__init__()` in constructor.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to override methods in C#?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Declare method in base with `virtual` and override in derived with `override` keyword.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to implement polymorphism in C++?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Use virtual functions in base class and override them in derived classes.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to hide implementation details?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Use access modifiers (private/protected) to encapsulate internal members.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to achieve multiple inheritance in C++?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Specify multiple base classes: `class Child: public Base1, public Base2 {}`.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to use interfaces in Java?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Define with `interface I { ... }` and implement with `class C implements I {}`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to use abstract classes in PHP?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Declare `abstract class Base { abstract protected function f(); }` and extend in subclass.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to use mixins in Dart?",
    "label": "oop",
    "language": "en",
    "context": "Descriptive: Defining OOP structures",
    "answer": "Use `class A with Mixin1, Mixin2 {}` to compose behaviors into class A.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Compare class vs struct in C++",
    "label": "oop",
    "language": "en",
    "context": "Comparison: OOP principles",
    "answer": "Classes default to private members; structs default to public. Both support methods and inheritance.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Compare interface vs abstract class in Java",
    "label": "oop",
    "language": "en",
    "context": "Comparison: OOP principles",
    "answer": "Interfaces declare methods without state; abstract classes can have state and implemented methods.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare composition vs inheritance",
    "label": "oop",
    "language": "en",
    "context": "Comparison: OOP principles",
    "answer": "Composition embeds objects for reuse; inheritance extends behavior but tightens coupling.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare method overloading vs overriding",
    "label": "oop",
    "language": "en",
    "context": "Comparison: OOP principles",
    "answer": "Overloading uses same name with different signatures; overriding replaces base method in subclass.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "Compare virtual vs pure virtual function",
    "label": "oop",
    "language": "en",
    "context": "Comparison: OOP principles",
    "answer": "Virtual has default implementation; pure virtual (`=0`) forces derived classes to implement.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare polymorphism vs encapsulation",
    "label": "oop",
    "language": "en",
    "context": "Comparison: OOP principles",
    "answer": "Polymorphism relates to behavior substitution; encapsulation hides internal state.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to implement getter and setter in Java?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Provide public methods `getField()` and `setField()` to access and modify private fields.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to call base class constructor in C#?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Use `public Derived(): base(params) {}` to invoke base class constructor.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "How to implement operator overloading in C++?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Define `ReturnType operator+(const Class& other)` inside class or as friend function.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to use traits in PHP",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Use `use TraitName;` inside class to include trait methods and properties.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to implement Singleton pattern in C++?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Use private constructor, static instance method, and return a single static object reference.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to implement dependency injection in OOP?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Pass dependencies via constructor or setter methods rather than creating them internally.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to serialize objects in Python?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Use `pickle.dump(obj, file)` and `pickle.load(file)` to serialize and deserialize objects.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to create abstract methods in C++?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Declare `virtual void f() = 0;` in base class making it abstract.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to combine multiple behaviors in Ruby",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Use Modules and `include` them in classes to mix in methods.",
    "start_char": 0,
    "end_char": 60
  },
  {
    "question": "How to use Lombok for OOP in Java?",
    "label": "oop",
    "language": "en",
    "context": "How-to: OOP implementations",
    "answer": "Use annotations like `@Data` to auto-generate getters, setters, constructors at compile time.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: slicing objects error in Python",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs when slicing not defined for object; implement `__getitem__` or convert to sequence.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: cannot instantiate abstract class",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs in languages with abstract classes; instantiate a concrete subclass instead.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: ambiguous base class use",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs in C++ multiple inheritance when symbol found in multiple bases; qualify with scope resolution.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: method does not override or implement",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs when signature mismatches overridden method; ensure method name and parameters match exactly.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "Error: undefined reference to",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs in C++ linking when implementation missing; define methods or include compiled object.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Error: circular dependency",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs when classes depend on each other; use forward declarations or refactor to remove cycle.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: attribute not found",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs when accessing nonexistent property; check spelling and class definition.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: TypeError calling method",
    "label": "oop",
    "language": "en",
    "context": "Common Error: OOP pitfalls",
    "answer": "Occurs when method invoked with wrong arguments; verify signature and pass correct parameters.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "AttributeError: 'MyClass' object has no attribute 'x'",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs when attribute not defined in __init__; define attribute or check instance before access.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "TypeError: unhashable type: 'MyClass'",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs when using object as dict key without __hash__; implement __hash__ and __eq__ methods.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Segmentation fault in C++ OOP program",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs due to invalid memory access, likely dereferencing null pointers; check pointers and object lifetimes.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "NameError: name 'Base' is not defined",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs when base class not imported or defined before subclass; ensure correct import order.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "CS0508: return type must be 'void' to match overridden member",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs in C# when overridden method has different return type; match base method signature.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "TypeError: super() takes at least one argument",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs in Python 2 style when using super; use super(SubClass, self) or migrate to Python 3.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Linker error: multiple definition of `MyClass`",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs in C++ when class implementation in header included in multiple sources; use inline or put implementation in single .cpp.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "Cannot derive from sealed class",
    "label": "oop",
    "language": "en",
    "context": "Specific Error: OOP error",
    "answer": "Occurs in C# when attempting to inherit from a sealed class; remove inheritance or unseal class.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "What is Hadoop?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "Hadoop is an open-source framework for distributed storage and processing of big data using MapReduce.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Who develops Hadoop?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "Hadoop is maintained by the Apache Software Foundation as part of the Apache Hadoop project.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is HDFS?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "HDFS (Hadoop Distributed File System) is Hadoop\u2019s scalable, fault-tolerant file storage system.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "What is YARN?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "YARN (Yet Another Resource Negotiator) is Hadoop\u2019s cluster resource management and job scheduling system.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "What is MapReduce?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "MapReduce is a programming model for processing large datasets with a map() and a reduce() function.",
    "start_char": 0,
    "end_char": 100
  },
  {
    "question": "What language is Hadoop written in?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "Hadoop is primarily written in Java, with some native libraries in C++.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What is a Hadoop cluster?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "A Hadoop cluster is a collection of nodes running HDFS and YARN to process data in parallel.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is a NameNode?",
    "label": "hadoop",
    "language": "en",
    "context": "Factoid: Hadoop basics",
    "answer": "The NameNode is the master server that manages HDFS namespace and metadata for files and directories.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to install Hadoop on a single node?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Download Hadoop binary, extract archive, configure core-site.xml and hdfs-site.xml, format NameNode, and start HDFS and YARN daemons.",
    "start_char": 0,
    "end_char": 133
  },
  {
    "question": "How to create a directory in HDFS?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Use `hdfs dfs -mkdir /path/to/dir` to create a directory in the distributed file system.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to upload files to HDFS?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Use `hdfs dfs -put localfile /hdfs/path` to transfer local files into HDFS.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to list files in HDFS?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Use `hdfs dfs -ls /hdfs/path` to list files and directories in a given HDFS path.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to submit a MapReduce job?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Use `hadoop jar myjob.jar MainClass input_dir output_dir` to run a MapReduce job on YARN.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to check Hadoop daemons status?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Use `jps` to list running Java processes for NameNode, DataNode, ResourceManager, NodeManager.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to set replication factor?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Configure `dfs.replication` in hdfs-site.xml or use `-Ddfs.replication=3` at job submission.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "How to stop Hadoop services?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Run `stop-dfs.sh` and `stop-yarn.sh` scripts to gracefully shut down HDFS and YARN daemons.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to monitor Hadoop web UI?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Access NameNode UI on port 9870 and ResourceManager UI on port 8088 in a browser.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to configure Hadoop environment variables?",
    "label": "hadoop",
    "language": "en",
    "context": "Descriptive: Hadoop operations",
    "answer": "Set HADOOP_HOME, HADOOP_CONF_DIR, and add `$HADOOP_HOME/bin` to PATH in profile.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Compare HDFS vs local file system.",
    "label": "hadoop",
    "language": "en",
    "context": "Comparison: Hadoop components",
    "answer": "HDFS is distributed and fault-tolerant; local FS is single-node and lacks replication.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Compare MapReduce vs Spark.",
    "label": "hadoop",
    "language": "en",
    "context": "Comparison: Hadoop components",
    "answer": "MapReduce writes/intermediates to disk per stage; Spark caches data in memory for faster iterative processing.",
    "start_char": 0,
    "end_char": 110
  },
  {
    "question": "Compare NameNode vs DataNode.",
    "label": "hadoop",
    "language": "en",
    "context": "Comparison: Hadoop components",
    "answer": "NameNode manages metadata; DataNode stores actual data blocks on disk.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Compare YARN vs classic MapReduce.",
    "label": "hadoop",
    "language": "en",
    "context": "Comparison: Hadoop components",
    "answer": "YARN separates resource management from processing; classic MR handles both in its framework.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare block size defaults vs custom in HDFS.",
    "label": "hadoop",
    "language": "en",
    "context": "Comparison: Hadoop components",
    "answer": "Default block size is 128MB or 64MB; custom sizes affect data locality and performance.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare Hadoop 2.x vs 3.x.",
    "label": "hadoop",
    "language": "en",
    "context": "Comparison: Hadoop components",
    "answer": "Hadoop 3.x adds support for erasure coding, improved YARN scheduler, and HDFS federation enhancements.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to run HDFS fsck?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Use `hdfs fsck / -files -blocks -locations` to check file system health and list corrupt blocks.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to merge small files in HDFS?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Use `getmerge` or run a MapReduce job to combine small files into larger sequence files.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to enable Hadoop logs aggregation?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Set `yarn.log-aggregation-enable` to true in yarn-site.xml and configure remote log directory.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to configure HDFS high availability?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Set up two NameNodes in active-standby, configure Zookeeper quorum, and update HA settings in config.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to run a Hive query on Hadoop?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Launch Hive shell, use `CREATE EXTERNAL TABLE`, and run `SELECT` queries which execute MapReduce jobs.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "How to integrate HBase with Hadoop?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Install HBase, configure HDFS paths, start HBase master and region servers to store data in HDFS.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to set up Kerberos authentication for Hadoop?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Configure Kerberos realms, create Hadoop principals, update security settings in core-site.xml and hdfs-site.xml.",
    "start_char": 0,
    "end_char": 113
  },
  {
    "question": "How to re-balance HDFS cluster?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Run `hdfs balancer` to redistribute data blocks evenly across DataNodes based on capacity.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to build Hadoop from source?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Clone repository, install Maven, run `mvn package -Pdist,native -DskipTests`, and deploy built binaries.",
    "start_char": 0,
    "end_char": 104
  },
  {
    "question": "How to configure Hadoop to use S3 as storage?",
    "label": "hadoop",
    "language": "en",
    "context": "How-to: Hadoop administration",
    "answer": "Set `fs.s3a.endpoint` and credentials in core-site.xml to read/write data to Amazon S3.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Error: NameNode not formatted",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when HDFS not formatted; run `hdfs namenode -format` before starting.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Error: java.io.FileNotFoundException",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when HDFS directory or file path incorrect; verify path existence in HDFS.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: Connection refused to ResourceManager",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when YARN ResourceManager not running; start YARN daemons and check port.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: Block pool state is incomplete",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when DataNode registration fails; check Zookeeper and network connectivity.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: Could not find or load main class",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when Hadoop classpath misconfigured; set HADOOP_CLASSPATH correctly.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: No space left on device",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when disk capacity exhausted; free space or add DataNode storage.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "Error: Yarn RM webapp unavailable",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when ResourceManager webserver down; check logs and restart service.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: IllegalArgumentException blockSize",
    "label": "hadoop",
    "language": "en",
    "context": "Common Error: Hadoop troubleshooting",
    "answer": "Occurs when configured block size invalid; use multiple of HDFS default block size.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "java.net.UnknownHostException",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs when hostnames in config not resolvable; add to /etc/hosts or DNS.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "org.apache.hadoop.ipc.RemoteException AccessControlException",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs when permission denied on HDFS; adjust ACLs or HDFS permissions.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Yarn: Failed to connect to RM at /127.0.0.1:8032",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs when ResourceManager address incorrect; verify `yarn.resourcemanager.address`.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "NameNode SafeMode is ON",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs when HDFS not yet writable; exit safemode using `hdfs dfsadmin -safemode leave`.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "java.lang.OutOfMemoryError Java heap space",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs when JVM heap too small; increase HADOOP_HEAPSIZE in environment settings.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Cannot run program \"git\": error=2 No such file or directory",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs during build from source; install Git or configure PATH.",
    "start_char": 0,
    "end_char": 63
  },
  {
    "question": "org.apache.hadoop.yarn.exceptions.InvalidResourceRequestException",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs when memory or vcore requests out of allowed range; adjust `yarn.scheduler.maximum-allocation-mb`.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Hadoop filesystem closed",
    "label": "hadoop",
    "language": "en",
    "context": "Specific Error: Hadoop error",
    "answer": "Occurs when FS object closed prematurely; ensure correct use of FileSystem get and close methods.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "What is npm?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "npm (Node Package Manager) is the default package manager for Node.js.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Who maintains npm?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "npm is maintained by npm, Inc. and the open-source community.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "What is package.json?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "package.json defines project metadata, dependencies, scripts, and version.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "What is a semantic version?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "Semantic Versioning (SemVer) uses MAJOR.MINOR.PATCH to indicate API changes.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "What is npm registry?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "The npm registry is a public database of JavaScript packages accessible via npm commands.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "What is a global installation in npm?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "Global install (-g) installs packages system-wide for CLI use.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "What is npm script?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "npm scripts are custom commands defined in package.json under 'scripts' section.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "What is an npm scope?",
    "label": "npm",
    "language": "en",
    "context": "Factoid: npm basics",
    "answer": "Scope (@scope/name) is a namespace for related packages, often for organizations.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to install a package locally?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm install package-name` to add it under node_modules and update package-lock.json.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to save-dev a package?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm install package-name --save-dev` to add it under devDependencies.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to uninstall a package?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm uninstall package-name` to remove it and update dependencies.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to update all packages?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm update` to install newer versions respecting SemVer ranges.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to run npm scripts?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm run script-name` to execute scripts defined in package.json.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "How to initialize a new project?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm init` or `npm init -y` to generate package.json with default values.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to install from a GitHub repository?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm install user/repo` to fetch and install directly from GitHub.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to audit for vulnerabilities?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm audit` to scan dependencies and `npm audit fix` to apply safe upgrades.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to view outdated packages?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm outdated` to list packages with newer versions available.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "How to list globally installed packages?",
    "label": "npm",
    "language": "en",
    "context": "Descriptive: npm operations",
    "answer": "Use `npm list -g --depth=0` to show top-level global packages.",
    "start_char": 0,
    "end_char": 62
  },
  {
    "question": "Compare npm vs yarn",
    "label": "npm",
    "language": "en",
    "context": "Comparison: npm concepts",
    "answer": "npm is default Node.js manager; Yarn offers faster installs and lockfile consistency.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare npm install vs npm ci",
    "label": "npm",
    "language": "en",
    "context": "Comparison: npm concepts",
    "answer": "install respects package.json semver; ci installs exactly from package-lock.json and cleans node_modules.",
    "start_char": 0,
    "end_char": 105
  },
  {
    "question": "Compare dependencies vs devDependencies",
    "label": "npm",
    "language": "en",
    "context": "Comparison: npm concepts",
    "answer": "dependencies are needed at runtime; devDependencies only for development and testing.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Compare local vs global install",
    "label": "npm",
    "language": "en",
    "context": "Comparison: npm concepts",
    "answer": "local installs to project; global makes CLI tools available system-wide.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "Compare npm audit vs npm outdated",
    "label": "npm",
    "language": "en",
    "context": "Comparison: npm concepts",
    "answer": "audit checks security issues; outdated shows version differences.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "Compare package.json vs package-lock.json",
    "label": "npm",
    "language": "en",
    "context": "Comparison: npm concepts",
    "answer": "package.json declares ranges; lockfile records exact resolved versions.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to create a custom npm script?",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Add script under 'scripts' in package.json e.g., \"build\": \"webpack\" then run `npm run build`.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to use npx?",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npx package-name` to execute binaries without installing globally.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to shrinkwrap npm dependencies?",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npm shrinkwrap` to lock down dependency tree similarly to lockfile.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to publish a package to npm",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npm publish` after logging in and ensuring version bump and proper package.json settings.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to scope a package",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Set `name` to `@scope/package-name` and publish under the scope with proper access.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to tag a release",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npm version patch/minor/major` to bump version and create Git tag.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to deprecate a package version",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npm deprecate package@version \"message\"` to warn users on install.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "How to link a local package",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npm link` in package and `npm link package-name` in consumer to symlink.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "How to configure npm proxy settings",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npm config set proxy http://proxy:port` and `https-proxy` accordingly.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "How to cache npm registry responses",
    "label": "npm",
    "language": "en",
    "context": "How-to: npm usage",
    "answer": "Use `npm config set cache /path/to/cache --global` to specify cache directory.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: E404 Not Found",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs when package not in registry; verify package name and registry URL.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: EACCES permission denied",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs when global install lacks permissions; fix with sudo or change npm global dir.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: ENOENT missing script",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs when running undefined npm script; check 'scripts' in package.json.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: peer dependency missing",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs when package expects a peer; install required peer dependency manually.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: conflict with existing package",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs on version mismatch or existing lockfile; remove node_modules and reinstall.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: maximum call stack size exceeded",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs when circular dependency in package; refactor imports to avoid loops.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Error: cannot find module",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs when dependency not installed; run `npm install` and check package.json.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Warning: unsupported engine",
    "label": "npm",
    "language": "en",
    "context": "Common Error: npm issues",
    "answer": "Occurs when Node.js version not in engines field; upgrade/downgrade Node or update engines.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: EBUSY resource busy or locked",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs on Windows when file locked; close processes or clear npm cache.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "npm ERR! code ENOTFOUND",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs when DNS lookup fails for registry; check network settings and registry URL.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "npm WARN deprecated",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs when installing deprecated package; consider upgrading or replacing.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: cb() never called",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs due to cache corruption; clear npm cache with `npm cache clean --force`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Error: EPERM operation not permitted",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs on Windows permissions; run terminal as administrator or adjust folder permissions.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: Invalid package name",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs when name in package.json invalid; use lowercase, no spaces, and valid characters.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: Cannot read property 'split' of undefined",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs in npm when config file malformed; check .npmrc and package.json syntax.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "npm ERR! code ELIFECYCLE",
    "label": "npm",
    "language": "en",
    "context": "Specific Error: npm error",
    "answer": "Occurs when script exits non-zero; check script command and dependencies.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "What is Google Cloud Platform?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "Google Cloud Platform (GCP) is a suite of cloud computing services by Google, including compute, storage, and networking.",
    "start_char": 0,
    "end_char": 121
  },
  {
    "question": "Who operates GCP?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "GCP is operated and maintained by Google LLC.",
    "start_char": 0,
    "end_char": 45
  },
  {
    "question": "What is Compute Engine?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "Compute Engine is GCP\u2019s Infrastructure-as-a-Service offering for virtual machine instances.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "What is Google Kubernetes Engine?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "GKE is a managed Kubernetes service for deploying containerized applications.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "What is Cloud Storage?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "Cloud Storage is GCP\u2019s object storage service for unstructured data.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "What is BigQuery?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "BigQuery is a fully-managed, serverless data warehouse for analytics.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "What is Cloud Functions?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "Cloud Functions is a serverless execution environment for event-driven functions.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What is Cloud Pub/Sub?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Factoid: GCP basics",
    "answer": "Cloud Pub/Sub is a messaging service for asynchronous event ingestion and delivery.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "How to create a VM in Compute Engine?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Go to GCP Console > Compute Engine > VM instances > Create Instance, configure machine type, OS, and network, then click Create.",
    "start_char": 0,
    "end_char": 128
  },
  {
    "question": "How to deploy a container on GKE?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Use gcloud CLI: `gcloud container clusters create CLUSTER`, `kubectl apply -f deployment.yaml` to deploy containers.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "How to upload files to Cloud Storage?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Use `gsutil cp localfile gs://bucket-name/` or Cloud Console Storage browser to upload files.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to run a BigQuery query?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Go to BigQuery UI, select project, write SQL in the query editor, and click Run.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to write a Cloud Function?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "In Cloud Console, navigate to Cloud Functions > Create Function, select runtime, write code inline or from source, and deploy.",
    "start_char": 0,
    "end_char": 126
  },
  {
    "question": "How to publish messages to Pub/Sub?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Use `gcloud pubsub topics publish TOPIC --message 'msg'` or client libraries to publish messages.",
    "start_char": 0,
    "end_char": 97
  },
  {
    "question": "How to set up Cloud SQL?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Go to SQL in Console, click Create instance, choose MySQL/PostgreSQL, configure settings, and connect client.",
    "start_char": 0,
    "end_char": 109
  },
  {
    "question": "How to configure IAM roles?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Navigate to IAM & Admin, select member, click Edit, add predefined or custom roles, and Save.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to enable billing for a project?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "In Console, go to Billing, link a billing account to your project to enable service usage.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to view logs in Cloud Logging?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Descriptive: GCP operations",
    "answer": "Go to Logging > Logs Explorer, select resource and filter logs to view entries.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Compare Compute Engine vs App Engine",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Comparison: GCP services",
    "answer": "Compute Engine provides VMs for full control; App Engine is a PaaS for building scalable web apps without managing servers.",
    "start_char": 0,
    "end_char": 123
  },
  {
    "question": "Compare Cloud Functions vs Cloud Run",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Comparison: GCP services",
    "answer": "Functions are event-driven with single-purpose functions; Cloud Run runs containerized apps with HTTP triggers.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "Compare Cloud Storage vs Persistent Disk",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Comparison: GCP services",
    "answer": "Cloud Storage is object storage for files; Persistent Disk is block storage attached to VMs.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Compare BigQuery vs Cloud SQL",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Comparison: GCP services",
    "answer": "BigQuery is for large-scale analytics; Cloud SQL is managed relational database service for transactional workloads.",
    "start_char": 0,
    "end_char": 116
  },
  {
    "question": "Compare Cloud Pub/Sub vs Cloud Tasks",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Comparison: GCP services",
    "answer": "Pub/Sub is for real-time messaging; Cloud Tasks is for managing asynchronous task queues.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Compare Cloud Spanner vs Firestore",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Comparison: GCP services",
    "answer": "Spanner is horizontally scalable relational database; Firestore is NoSQL document database for mobile/web apps.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to set up VPC networks?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "In VPC network console, click Create VPC, define subnets, IP ranges, and firewall rules.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "How to configure load balancing?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Use Network Services > Load balancing, choose HTTP(S) or TCP/UDP, configure backend services and health checks.",
    "start_char": 0,
    "end_char": 111
  },
  {
    "question": "How to encrypt data at rest?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Enable Customer-Managed Encryption Keys (CMEK) in service settings, and provide a Cloud KMS key.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to schedule tasks with Cloud Scheduler?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Go to Scheduler, click Create Job, set frequency and target HTTP or Pub/Sub, then create job.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to deploy Terraform on GCP?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Install Terraform, write .tf files with Google provider, run `terraform init`, `plan`, and `apply`.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to monitor metrics in Cloud Monitoring?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Create metrics dashboards, add charts using resource metrics, and set up alerting policies.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to migrate VM to GCP?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Use Migrate for Compute Engine to import VMs from on-prem or other clouds into Compute Engine.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "How to use Transfer Service for S3?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Configure Transfer > Amazon S3, provide credentials and bucket names, and schedule data transfers.",
    "start_char": 0,
    "end_char": 98
  },
  {
    "question": "How to integrate Cloud Build with GitHub?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Enable Cloud Build GitHub app, connect repo, and configure triggers for automated builds.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to implement granular IAM with folders?",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "How-to: GCP configuration",
    "answer": "Organize resources in folders, set IAM policies at folder level for inheritance and separation.",
    "start_char": 0,
    "end_char": 95
  },
  {
    "question": "Error: Permission denied (403)",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when IAM role lacks permission; assign required roles to the service account or user.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "Error: Quota exceeded",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when you exceed resource quotas; request quota increase or optimize usage.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: Not Found (404)",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when resource name or path is incorrect; verify resource identifiers.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Error: Rate Limit Exceeded",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when API call frequency too high; implement retries with exponential backoff.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: Billing account disabled",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when billing issues; re-enable billing or update payment method.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Error: Service not enabled",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when API not enabled; enable service in APIs & Services console.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "Error: Invalid credentials",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when service account key invalid; regenerate key and update configuration.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: Network not found",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Common Error: GCP troubleshooting",
    "answer": "Occurs when VPC name incorrect; verify network exists in the selected region.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error 400: Required field missing",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs when API request missing mandatory field; include required parameters in request.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error 401: Invalid OAuth token",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs when OAuth token expired or invalid; refresh token or obtain new credentials.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error 409: Conflict",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs when resource already exists; use update methods or delete existing resource.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error 429: Too Many Requests",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs when rate limit exceeded; back off and retry after Retry-After header.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "Error 500: Internal Server Error",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs on server-side failure; retry request and check Google Cloud status.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: PROJECT_ID not set",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs when environment variable missing; set GOOGLE_CLOUD_PROJECT or use --project flag.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: SSL certificate verify failed",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs when TLS issues; update CA certificates or disable verification for testing.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "Error: zone 'X' is not valid",
    "label": "google-cloud-platform",
    "language": "en",
    "context": "Specific Error: GCP error",
    "answer": "Occurs when specifying unavailable zone; list available zones and use correct one.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "What is Jenkins?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "Jenkins is an open-source automation server used for CI/CD pipelines.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Who maintains Jenkins?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "Jenkins is maintained by the open-source community under the Jenkins project.",
    "start_char": 0,
    "end_char": 77
  },
  {
    "question": "What is a Jenkins pipeline?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "A pipeline defines automated build, test, and deploy processes as code.",
    "start_char": 0,
    "end_char": 71
  },
  {
    "question": "What is Jenkinsfile?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "Jenkinsfile is a text file that contains pipeline definition using Groovy syntax.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "What are Jenkins agents?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "Agents are nodes that run pipeline steps delegated by the Jenkins master.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "What is a freestyle job?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "Freestyle job is a flexible build job type with configurable build steps.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "What is Blue Ocean?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "Blue Ocean is a modern UI for Jenkins pipelines with better visualization.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "What is Declarative Pipeline?",
    "label": "jenkins",
    "language": "en",
    "context": "Factoid: jenkins basics",
    "answer": "Declarative Pipeline is a simpler, opinionated syntax for defining Jenkins pipelines.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to install Jenkins on Linux?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Use `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -` then `apt install jenkins`.",
    "start_char": 0,
    "end_char": 112
  },
  {
    "question": "How to create a new pipeline?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Navigate to New Item, select Pipeline, name it, and define pipeline script or SCM.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to configure credentials?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Go to Credentials > System > Global, add credentials (SSH, username/password) for use in pipelines.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to set up Git integration?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Install Git plugin, configure Git SCM in job, and provide repository URL and credentials.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to add an agent node?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Manage Jenkins > Manage Nodes, click New Node, configure agent details and launch method.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "How to install plugins?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Manage Jenkins > Manage Plugins, browse Available tab, select plugins and install.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "How to configure email notifications?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Install Email Extension plugin, configure SMTP server in Manage Jenkins, add mail step in pipeline.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to back up Jenkins configuration?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Use ThinBackup plugin or copy JENKINS_HOME directory to secure location.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "How to secure Jenkins?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Enable CSRF protection, use matrix-based security, and disable anonymous access in security settings.",
    "start_char": 0,
    "end_char": 101
  },
  {
    "question": "How to trigger builds via webhook?",
    "label": "jenkins",
    "language": "en",
    "context": "Descriptive: jenkins usage",
    "answer": "Configure GitHub webhook to Jenkins URL and enable GitHub hook trigger in job settings.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "Compare Jenkins vs Travis CI",
    "label": "jenkins",
    "language": "en",
    "context": "Comparison: jenkins concepts",
    "answer": "Jenkins is self-hosted with extensive plugins; Travis CI is hosted with simpler configuration.",
    "start_char": 0,
    "end_char": 94
  },
  {
    "question": "Compare Freestyle vs Pipeline jobs",
    "label": "jenkins",
    "language": "en",
    "context": "Comparison: jenkins concepts",
    "answer": "Freestyle uses UI config steps; Pipeline uses code in Jenkinsfile for versioning.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Compare Declarative vs Scripted Pipeline",
    "label": "jenkins",
    "language": "en",
    "context": "Comparison: jenkins concepts",
    "answer": "Declarative offers structured steps; Scripted allows full Groovy control with imperative syntax.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "Compare Jenkins master vs agent",
    "label": "jenkins",
    "language": "en",
    "context": "Comparison: jenkins concepts",
    "answer": "Master orchestrates jobs; agents execute build steps to offload work.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Compare Blue Ocean vs Classic UI",
    "label": "jenkins",
    "language": "en",
    "context": "Comparison: jenkins concepts",
    "answer": "Blue Ocean provides modern pipeline views; Classic UI is older and less visual.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "Compare Pipeline plugin vs Multibranch Pipeline",
    "label": "jenkins",
    "language": "en",
    "context": "Comparison: jenkins concepts",
    "answer": "Pipeline plugin runs single pipeline; Multibranch auto-scans branches for Jenkinsfiles.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to write a simple Jenkinsfile?",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use `pipeline { agent any stages { stage('Build') { steps { sh 'make' } } } }`.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to run parallel stages?",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use `parallel { stage('Test A') { ... } stage('Test B') { ... } }` in Declarative Pipeline.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to prompt for input?",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use `input { message 'Proceed?' }` step to pause pipeline for manual approval.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to use stash and unstash?",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use `stash name: 'files', includes: '**/*'` and later `unstash 'files'` to share files.",
    "start_char": 0,
    "end_char": 87
  },
  {
    "question": "How to use credentials binding",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use `withCredentials([usernamePassword(...)]) { ... }` to inject secrets into environment.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to set environment variables",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use `environment { VAR = 'value' }` block in Declarative Pipeline.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "How to parameterize builds",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Define `parameters { string(name: 'BRANCH', defaultValue: 'main') }` in Declarative Pipeline.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to schedule builds",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use `triggers { cron('H 2 * * *') }` to run pipeline on schedule.",
    "start_char": 0,
    "end_char": 65
  },
  {
    "question": "How to configure distributed builds",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Label agents and use `agent { label 'linux' }` to allocate specific nodes.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to send Slack notifications",
    "label": "jenkins",
    "language": "en",
    "context": "How-to: jenkins techniques",
    "answer": "Use Slack Notification plugin and `slackSend channel: '#ci', message: 'Build done'` step.",
    "start_char": 0,
    "end_char": 89
  },
  {
    "question": "Error: No agent found for label",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when no agent matches specified label; ensure agent is online and labeled correctly.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "Error: Script not found",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when Jenkinsfile missing in repository; add Jenkinsfile at root of branch.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "Error: permission denied",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when pipeline tries to access restricted steps; configure script security or approve signature.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "Error: 503 Service Unavailable",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when Jenkins is restarting or overloaded; wait for readiness or increase resources.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "Error: unable to obtain jid",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when agent connection fails; check agent logs and network connectivity.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Warning: Deprecation in pipeline syntax",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when using outdated syntax; update Jenkinsfile to supported Declarative syntax.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "Error: out of memory",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when Java heap insufficient; increase JENKINS_JAVA_OPTIONS or agent memory.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: plugin compatibility",
    "label": "jenkins",
    "language": "en",
    "context": "Common Error: jenkins troubleshooting",
    "answer": "Occurs when plugin versions conflict; update plugins or Jenkins core accordingly.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "hudson.AbortException: script returned exit code",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Means shell step failed; check exit code and logs for errors.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "java.lang.NoSuchMethodError",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Occurs when plugin mismatch; upgrade/downgrade plugin to match Jenkins core.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "org.jenkinsci.plugins.workflow.steps.FlowInterruptedException",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Occurs on manual abort; handle with try/catch in pipeline.",
    "start_char": 0,
    "end_char": 58
  },
  {
    "question": "AccessDeniedException",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Occurs when user lacks permission; assign proper roles in Security settings.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "Too many open files error",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Occurs when OS file descriptor limit reached; increase ulimit for Jenkins process.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "SSLHandshakeException",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Occurs when Jenkins master cannot verify agent SSL; configure truststore or disable SSL.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "groovy.lang.MissingPropertyException",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Occurs when referring undefined variable in Jenkinsfile; define variable or use env.VAR.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "UnsupportedOperationException: cannot access method",
    "label": "jenkins",
    "language": "en",
    "context": "Specific Error: jenkins error",
    "answer": "Occurs when sandbox blocks method; approve in In-process Script Approval.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "What is Next.js?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "Next.js is a React framework for server-side rendering and static site generation.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Who develops Next.js?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "Next.js is developed by Vercel and the open-source community.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "What is SSR in Next.js?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "SSR (Server-Side Rendering) renders pages on each request on the server.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "What is SSG in Next.js?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "SSG (Static Site Generation) pre-renders pages at build time as static HTML.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "What is ISR in Next.js?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "ISR (Incremental Static Regeneration) updates static pages after build based on a revalidation period.",
    "start_char": 0,
    "end_char": 102
  },
  {
    "question": "What are API routes?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "API routes allow building API endpoints in Next.js inside the /pages/api directory.",
    "start_char": 0,
    "end_char": 83
  },
  {
    "question": "What is a page in Next.js?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "A page is a React component exported from a file in the /pages directory, mapped to a route.",
    "start_char": 0,
    "end_char": 92
  },
  {
    "question": "What is App Router?",
    "label": "nextjs",
    "language": "en",
    "context": "Factoid: nextjs basics",
    "answer": "App Router is Next.js\u2019s new routing system using /app directory with React Server Components.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to create a Next.js app?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Run `npx create-next-app@latest my-app` to scaffold a new Next.js project.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "How to add a page?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Create a .js/.tsx file in /pages, export a React component as default.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "How to fetch data with getStaticProps?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Export `export async function getStaticProps() { return { props: {...} } }` from page.",
    "start_char": 0,
    "end_char": 86
  },
  {
    "question": "How to fetch data with getServerSideProps?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Export `export async function getServerSideProps() { return { props: {...} } }`.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "How to use useRouter hook?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Import `useRouter` from 'next/router' and call inside component to access route info.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "How to link between pages?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Use `import Link from 'next/link'` and `<Link href='/about'><a>About</a></Link>`.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to add CSS modules?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Create .module.css file, import styles in component, and use className={styles.className}.",
    "start_char": 0,
    "end_char": 90
  },
  {
    "question": "How to deploy to Vercel?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Push to GitHub and import project in Vercel dashboard for automatic deployment.",
    "start_char": 0,
    "end_char": 79
  },
  {
    "question": "How to configure custom server?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Create server.js with Express, import next, handle custom routes, and start with node server.js.",
    "start_char": 0,
    "end_char": 96
  },
  {
    "question": "How to create dynamic routes?",
    "label": "nextjs",
    "language": "en",
    "context": "Descriptive: nextjs usage",
    "answer": "Name file [id].js in /pages and use getStaticPaths/getStaticProps for static dynamic routing.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "Compare Next.js vs Create React App",
    "label": "nextjs",
    "language": "en",
    "context": "Comparison: nextjs concepts",
    "answer": "CRA generates client-side app; Next.js enables SSR, SSG, and API routes.",
    "start_char": 0,
    "end_char": 72
  },
  {
    "question": "Compare Next.js vs Gatsby",
    "label": "nextjs",
    "language": "en",
    "context": "Comparison: nextjs concepts",
    "answer": "Gatsby is SSG-focused with GraphQL; Next.js supports SSR, SSG, ISR and hybrid rendering.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Compare getStaticProps vs getServerSideProps",
    "label": "nextjs",
    "language": "en",
    "context": "Comparison: nextjs concepts",
    "answer": "getStaticProps runs at build; getServerSideProps runs per request.",
    "start_char": 0,
    "end_char": 66
  },
  {
    "question": "Compare Pages Router vs App Router",
    "label": "nextjs",
    "language": "en",
    "context": "Comparison: nextjs concepts",
    "answer": "Pages Router uses /pages; App Router uses /app with server components.",
    "start_char": 0,
    "end_char": 70
  },
  {
    "question": "Compare SSR vs SSG",
    "label": "nextjs",
    "language": "en",
    "context": "Comparison: nextjs concepts",
    "answer": "SSR renders on each request; SSG renders once at build.",
    "start_char": 0,
    "end_char": 55
  },
  {
    "question": "Compare client-side vs server-side routing",
    "label": "nextjs",
    "language": "en",
    "context": "Comparison: nextjs concepts",
    "answer": "Client-side uses Next.js Link/Ajax; server-side navigates via full-page requests.",
    "start_char": 0,
    "end_char": 81
  },
  {
    "question": "How to add TypeScript support?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Rename files to .ts/.tsx, add tsconfig.json via `npx tsc --init`, and install types.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "How to set environment variables?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Add .env.local file with NEXT_PUBLIC_VAR=value, accessible via process.env.NEXT_PUBLIC_VAR.",
    "start_char": 0,
    "end_char": 91
  },
  {
    "question": "How to add middleware?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Create middleware.ts in root, export middleware function using NextResponse for edge runtime.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How to customize 404 page?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Create pages/404.js exporting custom component to override default 404 page.",
    "start_char": 0,
    "end_char": 76
  },
  {
    "question": "How to customize Document?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Create pages/_document.js and extend Document to customize html and body tags.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "How to enable i18n?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Configure i18n locales and defaultLocale in next.config.js.",
    "start_char": 0,
    "end_char": 59
  },
  {
    "question": "How to use Image component?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Import Next/Image and use `<Image src='/img.png' width={500} height={300} />` for optimized images.",
    "start_char": 0,
    "end_char": 99
  },
  {
    "question": "How to integrate analytics?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Use next/script to add analytics script or use Vercel Analytics SDK.",
    "start_char": 0,
    "end_char": 68
  },
  {
    "question": "How to implement authentication?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Use next-auth library for session-based auth and JWT support.",
    "start_char": 0,
    "end_char": 61
  },
  {
    "question": "How to optimize performance?",
    "label": "nextjs",
    "language": "en",
    "context": "How-to: nextjs techniques",
    "answer": "Use React.lazy, dynamic imports, and Image optimization, and analyze with Lighthouse.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: Hydration failed",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs when HTML generated on server mismatches client; ensure same render output.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: Module not found",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs when importing wrong path; verify case-sensitive filenames and correct import.",
    "start_char": 0,
    "end_char": 85
  },
  {
    "question": "Error: getStaticProps must be exported",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs when using getStaticProps without exporting it; add export keyword.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "Error: Invalid hook call",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs when React hooks used outside function component; ensure correct usage.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: process is not defined",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs when using process.env without NEXT_PUBLIC prefix; use NEXT_PUBLIC_ env vars.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: CSS modules not working",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs when naming file not ending .module.css; rename accordingly.",
    "start_char": 0,
    "end_char": 67
  },
  {
    "question": "Error: No matching page for route",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs when file not in /pages or /app; ensure correct directory and filename.",
    "start_char": 0,
    "end_char": 78
  },
  {
    "question": "Error: 500 Internal Server Error",
    "label": "nextjs",
    "language": "en",
    "context": "Common Error: nextjs troubleshooting",
    "answer": "Occurs due to runtime exception; inspect server logs for stack trace.",
    "start_char": 0,
    "end_char": 69
  },
  {
    "question": "Error: Cannot find module 'next'",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs when Next.js not installed; run `npm install next react react-dom`.",
    "start_char": 0,
    "end_char": 74
  },
  {
    "question": "TypeError: window is not defined",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs when accessing window during SSR; guard with `typeof window !== 'undefined'`.",
    "start_char": 0,
    "end_char": 84
  },
  {
    "question": "Error: Duplicate keys in Link",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs when nested <a> inside <Link> without anchor child; wrap properly.",
    "start_char": 0,
    "end_char": 73
  },
  {
    "question": "Error: Unexpected token import",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs when using import outside module; ensure file in pages or use next/babel.",
    "start_char": 0,
    "end_char": 80
  },
  {
    "question": "Error: ReferenceError document is not defined",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs when using document in SSR; check `typeof document !== 'undefined'`.",
    "start_char": 0,
    "end_char": 75
  },
  {
    "question": "Error: API route returned undefined",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs when API handler doesn't return response; send response via res.json or res.send.",
    "start_char": 0,
    "end_char": 88
  },
  {
    "question": "Error: Module parse failed",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs when webpack cannot parse file; add loader for file type in next.config.js.",
    "start_char": 0,
    "end_char": 82
  },
  {
    "question": "Error: next build failed",
    "label": "nextjs",
    "language": "en",
    "context": "Specific Error: nextjs error",
    "answer": "Occurs due to TypeScript errors or config issues; run build with verbose logging for details.",
    "start_char": 0,
    "end_char": 93
  },
  {
    "question": "How do you use MongoDB with Java?",
    "label": "mongodb,java",
    "language": "en",
    "context": "MongoDB can be easily integrated with Java applications.",
    "answer": "You can use the MongoDB Java Driver to connect and interact with MongoDB. Example:\n```java\nMongoClient mongoClient = new MongoClient(new MongoClientURI(\"mongodb://localhost:27017\"));\nMongoDatabase database = mongoClient.getDatabase(\"database_name\");\n```",
    "start_char": 0,
    "end_char": 300
  },
  {
    "question": "How do you implement a schema in MongoDB using Mongoose?",
    "label": "mongodb,mongoose",
    "language": "en",
    "context": "Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js.",
    "answer": "You can define a schema using Mongoose like this:\n```javascript\nconst mongoose = require('mongoose');\nconst schema = new mongoose.Schema({ key: String, value: Number });\nconst Model = mongoose.model('ModelName', schema);\n```",
    "start_char": 0,
    "end_char": 300
  },
  {
    "question": "How to connect PostgreSQL with NestJS?",
    "label": "nestjs,postgresql",
    "language": "en",
    "context": "To connect PostgreSQL with NestJS, you need to use the `@nestjs/typeorm` library and configure `TypeOrmModule`.",
    "answer": "The steps to connect PostgreSQL with NestJS are as follows: 1. Install the necessary packages: 2. Configure `TypeOrmModule` in `app.module.ts`: 3. Create an entity for your data table: 4. Start the application: Once you complete the above steps, NestJS will connect to your PostgreSQL database.",
    "start_char": 0,
    "end_char": 1220
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "nodejs,heroku",
    "language": "en",
    "context": "Heroku is a cloud platform that allows you to deploy and manage Node.js applications easily.",
    "answer": "The steps to deploy a Node.js application to Heroku are as follows: 1. Install Heroku CLI: 2. Log in to Heroku: 3. Create a new app on Heroku: 4. Push the source code to Heroku: 5. Open the app: Once you complete the above steps, your Node.js app will be deployed to Heroku.",
    "start_char": 0,
    "end_char": 682
  },
  {
    "question": "How to use Docker to containerize a Python application?",
    "label": "docker,python",
    "language": "en",
    "context": "Docker allows you to create and manage containers for your application.",
    "answer": "The steps to containerize a Python application using Docker are as follows: 1. Create a `Dockerfile` file in the root directory of the application: 2. Build the Docker image: 3. Running the container from the image: Once you have completed the above steps, your Python application will be running in a Docker container.",
    "start_char": 0,
    "end_char": 682
  },
  {
    "question": "How to configure Nginx as a reverse proxy for a Node.js application?",
    "label": "nginx,nodejs",
    "language": "en",
    "context": "Nginx can be used as a reverse proxy to forward requests to a Node.js application.",
    "answer": "The steps to configure Nginx as a reverse proxy for a Node.js application are as follows: 1. Install Nginx: 2. Create a configuration file for the application: 3. Enable configuration: 4. Test Nginx configuration: 5. Restart Nginx: Once you complete the above steps, Nginx will forward requests to your Node.js application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to deploy a React application to Vercel?",
    "label": "react,vercel",
    "language": "en",
    "context": "Vercel is a ng to deploy React applications easily.",
    "answer": "The steps to deploy a React application to Vercel are as follows: 1. Install Vercel CLI: 2. Log in to Vercel: 3. Deploy the application: 4. Open the application: Once you complete the above steps, your React application will be deployed on Vercel.",
    "start_char": 0,
    "end_char": 682
  },
  {
    "question": "How to use WebSocket in a Node.js application?",
    "label": "nodejs,websocket",
    "language": "en",
    "context": "WebSocket allows two-way communication between the client and the server in real time.",
    "answer": "The steps to use WebSocket in a Node.js application are as follows: 1. Install the `ws` library: 2. Create a WebSocket server: 3. Connect from client: Once you complete the above steps, your Node.js application will be able to communicate in real-time via WebSocket.",
    "start_char": 0,
    "end_char": 682
  },
  {
    "question": "How to use GraphQL in an Express application?",
    "label": "express,graphql",
    "language": "en",
    "context": "GraphQL is a query language for APIs, allowing you to request the exact data you need.",
    "answer": "Steps to use GraphQL in Express apps are as follows: 1. Install the required packages: 2. Create the GraphQL schema: 3. Configure Express to use GraphQL: Once you complete the above steps, you can access the GraphQL API at `http://localhost:4000/graphql`.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Firebase Authentication in a React app?",
    "label": "react,firebase",
    "language": "en",
    "context": "Firebase Authentication provides easy user authentication methods for web applications.",
    "answer": "The steps to use Firebase Authentication in a React app are as follows: 1. Install Firebase: 2. Configure Firebase in the app: 3. Add login functionality: Once you complete the above steps, you should be able to authenticate users in your React app via Firebase.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular app with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to get and send data.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react,redux",
    "language": "en",
    "context": "Redux is a popular state management library for React applications.",
    "answer": "The steps to use Redux in a React application are as follows: 1. Install Redux and React-Redux: 2. Create store: 3. Provide a store for the application: 4. Create reducer: 5. Connect the component to Redux: Once you've completed the above steps, your React app should be able to manage state with Redux.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js applications are as follows: 1. Install Axios: 2. Create a service to call API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, allowing you to use TypeScript features in your applications.",
    "answer": "Steps to use TypeScript in an Angular application are as follows: 1. Create a new component: 2. Use TypeScript in the component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js application are as follows: 1. Install Axios: 2. Create a service to call the API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript Script, which allows you to use TypeScript features in your application.",
    "answer": "Steps to use TypeScript in an Angular application are as follows: 1. Create a new component: 2. Use TypeScript in the component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js application are as follows: 1. Install Axios: 2. Create a service to call the API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, which allows you to use TypeScript features in your your application.",
    "answer": "Steps to use TypeScript in Angular application are as follows: 1. Create a new component: 2. Use TypeScript in the component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js application are as follows: 1. Install Axios: 2. Create a service to call the API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, allowing you to use TypeScript features in your application.",
    "answer": "Steps to use TypeScript in an Angular application Angular application is as follows: 1. Create a new component: 2. Using TypeScript in component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react,redux",
    "language": "en",
    "context": "Redux is a popular state management library for React applications.",
    "answer": "The steps to use Redux in a React application are as follows: 1. Install Redux and React-Redux: 2. Create store: 3. Provide a store for the application: 4. Create reducer: 5. Connecting components to Redux: Once you complete the above steps, your React app will be able to manage state using Redux.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js app?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js apps.",
    "answer": "The steps to use Axios to call API in a Vue.js app are as follows: 1. Install Axios: 2. Create a service to call the API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, allowing you to use TypeScript features in your application.",
    "answer": "The steps to use TypeScript in an Angular application are as follows: 1. Create a new component: 2. Using TypeScript in component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react,redux",
    "language": "en",
    "context": "Redux is a popular state management library for React applications.",
    "answer": "The steps to use Redux in a React application are as follows: 1. Install Redux and React-Redux: 2. Create store: 3. Provide a store for the application: 4. Create reducer: 5. Connect the component to Redux: Once you've completed the above steps, your React app should be able to manage state with Redux.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js applications are as follows: 1. Install Axios: 2. Create a service to call API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, allowing you to use TypeScript features in your application.",
    "answer": "The steps to use TypeScript in an Angular application are as follows: 1. Create a new component: 2. Using TypeScript in component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react,redux",
    "language": "en",
    "context": "Redux is a popular state management library for React applications.",
    "answer": "The steps to use Redux in a React application are as follows: 1. Install Redux and React-Redux: 2. Create store: 3. Provide a store for the application: 4. Create reducer: 5. Connect the component to Redux: Once you've completed the above steps, your React app should be able to manage state with Redux.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js applications are as follows: 1. Install Axios: 2. Create a service to call API: 3. Use service in component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, allowing you to use TypeScript features in your application.",
    "answer": "Steps to use TypeScript in an Angular application are as follows: 1. Create a new component: 2. Use TypeScript in the component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in a component: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, which allows you to use TypeScript features in your application.",
    "answer": "Steps to use TypeScript in Angular application are as follows: 1. Create a new component: 2. Use TypeScript in the component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data data.",
    "answer": "Steps to configure Angular application with REST API are as follows: 1. Create a service to call API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react,redux",
    "language": "en",
    "context": "Redux is a popular state management library for React applications.",
    "answer": "The steps to use Redux in a React application are as follows: 1. Install Redux and React-Redux: 2. Create store: 3. Provide a store for the application: 4. Create reducer: 5. Connect the component to Redux: Once you've completed the above steps, your React app should be able to manage state with Redux.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js applications are as follows: 1. Install Axios: 2. Create a service to call API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, allowing you to use TypeScript features in your application.",
    "answer": "The steps to use TypeScript in an Angular application are as follows: 1. Create a new component: 2. Using TypeScript in component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data whether.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react,redux",
    "language": "en",
    "context": "Redux is a popular state management library for React applications.",
    "answer": "The steps to use Redux in a React application are as follows: 1. Install Redux and React-Redux: 2. Create store: 3. Provide a store for the application: 4. Create reducer: 5. Connecting components to Redux: Once you complete the above steps, your React app will be able to manage state using Redux.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js app?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js apps.",
    "answer": "The steps to use Axios to call API in Vue.js apps are as follows: 1. Install Axios: 2. Create a service to call the API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use TypeScript in an Angular application?",
    "label": "angular,typescript",
    "language": "en",
    "context": "Angular is built on TypeScript, allowing you to use TypeScript features in your application.",
    "answer": "The steps to use TypeScript in an Angular application are as follows: 1. Create a new component: 2. Using TypeScript in component: 3. Display data in template: Once you complete the above steps, you will be able to use TypeScript in your Angular application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap in a React application?",
    "label": "react,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for creating beautiful and responsive user interfaces.",
    "answer": "The steps to use Bootstrap in a React application are as follows: 1. Install Bootstrap: 2. Import Bootstrap into the application: 3. Using Bootstrap classes in components: Once you complete the above steps, your React application will be able to use Bootstrap components.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to configure an Angular application with REST API?",
    "label": "angular,api",
    "language": "en",
    "context": "Angular can easily connect to REST API to fetch and send data whether.",
    "answer": "The steps to configure an Angular application with REST API are as follows: 1. Create a service to call the API: 2. Using service in component: 3. Display data in template: Once you complete the above steps, your Angular application will be able to fetch data from the REST API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react,redux",
    "language": "en",
    "context": "Redux is a popular state management library for React applications.",
    "answer": "The steps to use Redux in a React application are as follows: 1. Install Redux and React-Redux: 2. Create store: 3. Provide a store for the application: 4. Create reducer: 5. Connect the component to Redux: Once you've completed the above steps, your React app should be able to manage state with Redux.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a RESTful API using Express and MongoDB?",
    "label": "express,mongodb",
    "language": "en",
    "context": "Express is a web framework for Node.js, and MongoDB is a NoSQL database.",
    "answer": "The steps to create a RESTful API using Express and MongoDB are as follows: 1. Set up a new Node.js project: 2. Install required packages: 3. Create a basic Express server: 4. Define a Mongoose model: 5. Create RESTful routes: 6. Start the server: Once you've completed the above steps, your Express application should be able to handle basic RESTful API requests with MongoDB.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Docker Compose to manage multi-container applications?",
    "label": "docker,compose",
    "language": "en",
    "context": "Docker Compose simplifies the management of multi-container Docker applications.",
    "answer": "The steps to use Docker Compose are as follows: 1. Create a `docker-compose.yml` file: 2. Start the application: 3. Access the web service: 4. Stop the application:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple Angular application?",
    "label": "angular",
    "language": "en",
    "context": "Angular is a platform for building mobile and desktop web applications.",
    "answer": "The steps to create a simple Angular application are as follows:\n\n1. Install Angular CLI:\n   - Run the command `npm install -g @angular/cli`.\n\n2. Create a new Angular application:\n   - Run `ng new my-angular-app` and follow the prompts.\n\n3. Navigate to the application directory:\n   - Use `cd my-angular-app`.\n\n4. Serve the application:\n   - Run `ng serve` to start the development server.\n\n5. Open a web browser:\n   - Navigate to `http://localhost:4200` to see your Angular application running.",
    "start_char": 0,
    "end_char": 200
  },
  {
    "question": "How to use Vue Router in a Vue.js application?",
    "label": "vue,router",
    "language": "en",
    "context": "Vue Router is the official router for Vue.js, enabling navigation between components.",
    "answer": "The steps to use Vue Router in a Vue.js application are as follows: 1. Install Vue Router: 2. Create a router configuration: 3. Integrate the router into your Vue instance: 4. Use `<router-view>` in your App component: Once you've completed the above steps, your Vue.js application should be able to navigate between the Home and About components using Vue Router.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Axios to call API in a Vue.js application?",
    "label": "vue,axios",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests in Vue.js applications.",
    "answer": "The steps to use Axios to call API in Vue.js applications are as follows: 1. Install Axios: 2. Create a service to call API: 3. Using the service in the component: Once you've completed the above steps, your Vue.js app should be able to fetch data from the API using Axios.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a RESTful API using Express and MongoDB?",
    "label": "express,mongodb",
    "language": "en",
    "context": "Express is a web framework for Node.js, and MongoDB is a NoSQL database.",
    "answer": "The steps to create a RESTful API using Express and MongoDB are as follows: 1. Set up a new Node.js project: 2. Install required packages: 3. Create a basic Express server: 4. Define a Mongoose model: 5. Create RESTful routes: 6. Start the server: Once you've completed the above steps, your Express application should be able to handle basic RESTful API requests with MongoDB.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple Angular application?",
    "label": "angular",
    "language": "en",
    "context": "Angular is a platform for building mobile and desktop web applications.",
    "answer": "The steps to create a simple Angular application are as follows:\n\n1. Install Angular CLI:\n   - Run the command `npm install -g @angular/cli`.\n\n2. Create a new Angular application:\n   - Run `ng new my-angular-app` and follow the prompts.\n\n3. Navigate to the application directory:\n   - Use `cd my-angular-app`.\n\n4. Serve the application:\n   - Run `ng serve` to start the development server.\n\n5. Open a web browser:\n   - Navigate to `http://localhost:4200` to see your Angular application running.",
    "start_char": 0,
    "end_char": 200
  },
  {
    "question": "How to use Docker Compose to manage multi-container applications?",
    "label": "docker,compose",
    "language": "en",
    "context": "Docker Compose simplifies the management of multi-container Docker applications.",
    "answer": "The steps to use Docker Compose are as follows: 1. Create a `docker-compose.yml` file: 2. Start the application: 3. Access the web service: 4. Stop the application:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement authentication in a Node.js application?",
    "label": "nodejs,authentication",
    "language": "en",
    "context": "Implementing authentication is crucial for securing applications.",
    "answer": "The steps to implement authentication in a Node.js application are as follows: 1. Install required packages: 2. Set up Express server: 3. Create a user model (for example, using Mongoose): 4. Create registration and login routes: 5. Start the server: Once you've completed the above steps, your Node.js application should be able to handle user registration and authentication.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement a simple CRUD application using Angular and Spring Boot?",
    "label": "angular,springboot",
    "language": "en",
    "context": "Combining Angular with Spring Boot allows for a full-stack application.",
    "answer": "The steps to implement a simple CRUD application using Angular and Spring Boot are as follows: 1. Set up Spring Boot application: 2. Create a model class: 3. Create a repository interface: 4. Create a REST controller: 5. Set up Angular application: 6. Create a service to interact with the API: 7. Use the service in a component: Once you've completed the above steps, your Angular application should be able to perform CRUD operations with the Spring Boot backend.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Git for version control in a project?",
    "label": "git,versioncontrol",
    "language": "en",
    "context": "Git is a distributed version control system that helps manage code changes.",
    "answer": "The steps to use Git for version control are as follows: 1. Initialize a new Git repository: 2. Add files to the staging area: 3. Commit changes: 4. Create a new branch: 5. Push changes to a remote repository: 6. Pull changes from a remote repository: 7. View commit history:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement error handling in a JavaScript application?",
    "label": "javascript,errorhandling",
    "language": "en",
    "context": "Error handling is crucial for maintaining application stability.",
    "answer": "The steps to implement error handling in a JavaScript application are as follows: 1. Use try-catch blocks: 2. Handle asynchronous errors: 3. Use global error handlers: 4. Log errors to an external service:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Python's Flask framework to create a web application?",
    "label": "python,flask",
    "language": "en",
    "context": "Flask is a lightweight WSGI web application framework in Python.",
    "answer": "The steps to create a web application using Flask are as follows: 1. Install Flask: 2. Create a basic Flask application: 3. Run the application: 4. Access the application:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement a simple chat application using Socket.IO and Node.js?",
    "label": "nodejs,socketio",
    "language": "en",
    "context": "Socket.IO enables real-time, bidirectional communication between web clients and servers.",
    "answer": "The steps to implement a simple chat application using Socket.IO and Node.js are as follows: 1. Set up a new Node.js project: 2. Install required packages: 3. Create a basic Express server with Socket.IO: 4. Create an HTML file (index.html): 5. Run the application: 6. Open a web browser:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use the Fetch API to make HTTP requests in JavaScript?",
    "label": "javascript,fetch",
    "language": "en",
    "context": "The Fetch API provides a modern way to make HTTP requests in JavaScript.",
    "answer": "The steps to use the Fetch API to make HTTP requests are as follows: 1. Make a GET request: 2. Make a POST request: 3. Handle errors:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple Python web application using Flask?",
    "label": "python,flask",
    "language": "en",
    "context": "Flask is a lightweight web framework for Python.",
    "answer": "The steps to create a simple web application using Flask are as follows: 1. Install Flask: 2. Create a basic Flask application: 3. Run the application: 4. Access the application:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Git to manage version control in a project?",
    "label": "git,versioncontrol",
    "language": "en",
    "context": "Git is a distributed version control system that helps manage code changes.",
    "answer": "The steps to use Git for version control are as follows: 1. Initialize a new Git repository: 2. Add files to the staging area: 3. Commit changes: 4. Create a new branch: 5. Push changes to a remote repository: 6. Pull changes from a remote repository: 7. View commit history:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement error handling in a JavaScript application?",
    "label": "javascript,errorhandling",
    "language": "en",
    "context": "Error handling is crucial for maintaining application stability.",
    "answer": "The steps to implement error handling in a JavaScript application are as follows: 1. Use try-catch blocks: 2. Handle asynchronous errors: 3. Use global error handlers: 4. Log errors to an external service:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple CRUD application using Angular and Spring Boot?",
    "label": "angular,springboot",
    "language": "en",
    "context": "Combining Angular with Spring Boot allows for a full-stack application.",
    "answer": "The steps to create a simple CRUD application using Angular and Spring Boot are as follows: 1. Set up Spring Boot application: 2. Create a model class: 3. Create a repository interface: 4. Create a REST controller: 5. Set up Angular application: 6. Create a service to interact with the API: 7. Use the service in a component: Once you've completed the above steps, your Angular application should be able to perform CRUD operations with the Spring Boot backend.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use the Java Stream API for data processing?",
    "label": "java,streamapi",
    "language": "en",
    "context": "The Java Stream API provides a functional approach to processing sequences of elements.",
    "answer": "The steps to use the Java Stream API for data processing are as follows: 1. Create a list of items: 2. Use streams to filter and process data: 3. Use streams to perform operations like mapping and reducing: 4. Use parallel streams for performance: Once you've completed the above steps, you can effectively use the Java Stream API for data processing tasks.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement a simple machine learning model using Python and scikit-learn?",
    "label": "python,machinelearning,scikit-learn",
    "language": "en",
    "context": "Scikit-learn is a popular library for machine learning in Python.",
    "answer": "The steps to implement a simple machine learning model using Python and scikit-learn are as follows: 1. Install scikit-learn: 2. Import necessary libraries: 3. Load the dataset: 4. Split the dataset into training and testing sets: 5. Create and train the model: 6. Make predictions: 7. Evaluate the model: Once you've completed the above steps, you will have a simple machine learning model that can classify iris species based on the dataset.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple web server using Node.js?",
    "label": "nodejs,http",
    "language": "en",
    "context": "Node.js allows you to create a web server easily using the built-in HTTP module.",
    "answer": "The steps to create a simple web server using Node.js are as follows: 1. Create a new JavaScript file (e.g., `server.js`). 2. Import the HTTP module: 3. Create the server: 4. Start the server: 5. Run the server: 6. Access the server:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use Bootstrap to style a web application?",
    "label": "html,css,bootstrap",
    "language": "en",
    "context": "Bootstrap is a popular CSS framework for building responsive web applications.",
    "answer": "The steps to use Bootstrap to style a web application are as follows: 1. Include Bootstrap in your project: 2. Create a responsive layout: 3. Add Bootstrap components: 4. Customize styles:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to connect to a MySQL database using Python?",
    "label": "python,mysql",
    "language": "en",
    "context": "Connecting to a MySQL database allows you to perform database operations using Python.",
    "answer": "The steps to connect to a MySQL database using Python are as follows: 1. Install the MySQL connector: 2. Import the connector in your Python script: 3. Establish a connection to the database: 4. Create a cursor object: 5. Execute a query: 6. Close the connection: Once you've completed the above steps, you should be able to connect to your MySQL database and execute queries.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple REST API using Flask?",
    "label": "python,flask,api",
    "language": "en",
    "context": "Flask is a lightweight framework for building web applications and APIs in Python.",
    "answer": "The steps to create a simple REST API using Flask are as follows: 1. Install Flask: 2. Create a new Python file (e.g., `app.py`). 3. Import Flask and create an app instance: 4. Define a simple route: 5. Run the application: 6. Test the API:",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use jQuery to manipulate the DOM?",
    "label": "javascript,jquery,dom",
    "language": "en",
    "context": "jQuery is a fast, small, and feature-rich JavaScript library that simplifies DOM manipulation.",
    "answer": "The steps to use jQuery to manipulate the DOM are as follows: 1. Include jQuery in your HTML file: 2. Use jQuery to select elements: 3. Change CSS styles: 4. Add event listeners: 5. Manipulate the DOM: Once you've completed the above steps, you can effectively use jQuery to manipulate the DOM in your web application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement pagination in a web application using Angular?",
    "label": "angular,pagination",
    "language": "en",
    "context": "Pagination is essential for displaying large datasets in manageable chunks.",
    "answer": "The steps to implement pagination in an Angular application are as follows: 1. Install Angular Material for UI components: 2. Create a component for displaying paginated data: 3. Import MatPaginatorModule in your module: 4. Use MatPaginator in your component template: 5. Implement pagination logic in your component: 6. Style the paginator: Once you've completed these steps, your Angular application will support pagination for displaying large datasets effectively.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement a simple to-do list application using React?",
    "label": "react,todolist",
    "language": "en",
    "context": "React is a popular library for building user interfaces, including to-do list applications.",
    "answer": "The steps to implement a simple to-do list application using React are as follows: 1. Create a new React application: 2. Create a ToDo component: 3. Use the ToDo component in your main App component: 4. Run the application: Once you've completed these steps, you will have a functional to-do list application built with React.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use CSS Grid to create a responsive layout?",
    "label": "css,grid,responsive",
    "language": "en",
    "context": "CSS Grid is a powerful layout system that allows for responsive design.",
    "answer": "The steps to use CSS Grid to create a responsive layout are as follows: 1. Define a grid container: 2. Create grid items: 3. Style grid items: 4. Make it responsive: Once you've completed these steps, you will have a responsive layout using CSS Grid.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement authentication in a web application using JWT?",
    "label": "jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are a compact way to securely transmit information between parties.",
    "answer": "The steps to implement authentication using JWT are as follows: 1. Install necessary packages: 2. Create a user model: 3. Create a registration endpoint: 4. Create a login endpoint that issues a JWT: 5. Protect routes using middleware: 6. Use the middleware to protect routes: Once you've completed these steps, your web application will have JWT-based authentication.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple chart using Chart.js?",
    "label": "javascript,chartjs",
    "language": "en",
    "context": "Chart.js is a popular library for creating charts in web applications.",
    "answer": "The steps to create a simple chart using Chart.js are as follows: 1. Include Chart.js in your HTML file: 2. Create a canvas element for the chart: 3. Set up the chart data and configuration: 4. Run your application: Once you've completed these steps, you will have a simple bar chart displayed using Chart.js.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement a simple file upload feature in a web application?",
    "label": "html,upload",
    "language": "en",
    "context": "File upload features are common in web applications for user-generated content.",
    "answer": "The steps to implement a simple file upload feature are as follows: 1. Create an HTML form for file upload: 2. Handle the form submission using JavaScript: 3. Set up a server to handle the file upload: 4. Test the file upload: Once you've completed these steps, you will have a functional file upload feature in your web application.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple weather application using the OpenWeatherMap API?",
    "label": "javascript,api,weather",
    "language": "en",
    "context": "Using APIs allows you to fetch real-time data for applications.",
    "answer": "The steps to create a simple weather application using the OpenWeatherMap API are as follows: 1. Sign up for an API key at OpenWeatherMap. 2. Create an HTML file for the application: 3. Add JavaScript to fetch weather data: 4. Style the application using CSS: 5. Run the application: Once you've completed these steps, you will have a simple weather application that fetches data from the OpenWeatherMap API.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple image gallery using HTML, CSS, and JavaScript?",
    "label": "html,css,javascript,gallery",
    "language": "en",
    "context": "Image galleries are a common feature in web applications for displaying photos.",
    "answer": "The steps to create a simple image gallery are as follows: 1. Create an HTML structure for the gallery: 2. Style the gallery using CSS: 3. Add JavaScript for interactivity (optional): 4. Run the application: Once you've completed these steps, you will have a simple image gallery that displays images and can respond to user interactions.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to implement a simple chat application using Firebase?",
    "label": "javascript,firebase,chat",
    "language": "en",
    "context": "Firebase provides a real-time database that can be used for chat applications.",
    "answer": "The steps to implement a simple chat application using Firebase are as follows: 1. Set up a Firebase project: 2. Add Firebase to your web application: htmljavascript const firebaseConfig = { apiKey: 'YOUR_API_KEY', authDomain: 'YOUR_AUTH_DOMAIN', databaseURL: 'YOUR_DATABASE_URL', projectId: 'YOUR_PROJECT_ID', storageBucket: 'YOUR_STORAGE_BUCKET', messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', appId: 'YOUR_APP_ID' }; firebase.initializeApp(firebaseConfig); const database = firebase.database(); html <div> ...",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to create a simple e-commerce product page using HTML and CSS?",
    "label": "html,css,ecommerce",
    "language": "en",
    "context": "E-commerce product pages are essential for online shopping websites.",
    "answer": "The steps to create a simple e-commerce product page are as follows: 1. Create the HTML structure: 2. Style the product page using CSS: 3. Add interactivity (optional): 4. Run the application: Once you've completed these steps, you will have a simple e-commerce product page.",
    "start_char": 0,
    "end_char": 1020
  },
  {
    "question": "How to use MongoDB with Mongoose in a Node.js application?",
    "label": "nodejs,mongodb,mongoose",
    "language": "en",
    "context": "Mongoose is an ODM library for MongoDB and Node.js, providing a schema-based solution to model data.",
    "answer": "Steps: 1. Install dependencies: 2. Connect to MongoDB: 3. Define a schema: 4. Create and save documents:",
    "start_char": 0,
    "end_char": 606
  },
  {
    "question": "How to implement authentication using JWT in Express.js?",
    "label": "nodejs,express,jwt,authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is a compact and secure way of transmitting information between parties as a JSON object.",
    "answer": "Steps: 1. Install required packages: 2. Create a token: 3. Verify token in middleware: 4. Apply middleware to protected routes:",
    "start_char": 0,
    "end_char": 747
  },
  {
    "question": "How to create a responsive layout using Tailwind CSS?",
    "label": "css,tailwind,responsive-design",
    "language": "en",
    "context": "Tailwind CSS is a utility-first CSS framework that enables rapid UI development with responsive design support.",
    "answer": "Steps: 1. Add Tailwind CSS to your project: 2. Use responsive utility classes: 3. Use grid or flexbox layout:",
    "start_char": 0,
    "end_char": 553
  },
  {
    "question": "How to center a div using CSS Flexbox?",
    "label": "frontend,css,flexbox",
    "language": "en",
    "context": "Centering elements is a common layout task in frontend development, and Flexbox provides a simple solution.",
    "answer": "To center a `div` using CSS Flexbox both vertically and horizontally: 1. Wrap your target `div` inside a container. 2. Apply Flexbox styles to the container. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox",
    "start_char": 0,
    "end_char": 723
  },
  {
    "question": "How to make API requests using Fetch in JavaScript?",
    "label": "frontend,javascript,fetch",
    "language": "en",
    "context": "Fetch API is a modern interface that allows you to make HTTP requests in JavaScript.",
    "answer": "To make API requests using Fetch API in JavaScript: 1. Use the `fetch()` method to make a GET request: 2. For POST requests: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "start_char": 0,
    "end_char": 767
  },
  {
    "question": "How to create a REST API using Express.js?",
    "label": "backend,nodejs,express,api",
    "language": "en",
    "context": "Express.js is a Node.js framework used to build REST APIs easily.",
    "answer": "Steps to create a REST API using Express.js: 1. Initialize the project: 2. Create `index.js`: 3. Run the server: 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 624
  },
  {
    "question": "How to connect MongoDB with Mongoose in Node.js?",
    "label": "backend,nodejs,mongodb,mongoose",
    "language": "en",
    "context": "Mongoose is an ODM library for MongoDB in Node.js that simplifies database operations.",
    "answer": "To connect MongoDB with Mongoose in Node.js:\n\n1. Install packages:\n```bash\nnpm install mongoose\n```\n\n2. Create a file `db.js`:\n```javascript\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost:27017/myapp', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => {\n  console.log('MongoDB connected');\n}).catch(err => {\n  console.error('Connection error', err);\n});\n```\n\n📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 528
  },
  {
    "question": "How to create a simple chatbot using Rasa?",
    "label": "ai,nlp,rasa,chatbot",
    "language": "en",
    "context": "Rasa is an open-source framework for building conversational AI chatbots using NLU and dialogue management.",
    "answer": "Steps to create a chatbot using Rasa:\n\n1. Install Rasa:\n```bash\npip install rasa\n```\n\n2. Initialize a project:\n```bash\nrasa init\n```\n\n3. Train your model:\n```bash\nrasa train\n```\n\n4. Talk to your bot:\n```bash\nrasa shell\n```\n\n5. Customize `nlu.yml`, `rules.yml`, and `stories.yml` for your intents and responses.\n\n📚 Reference: https://rasa.com/docs/",
    "start_char": 0,
    "end_char": 442
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "backend,nodejs,auth,jwt",
    "language": "en",
    "context": "JWT (JSON Web Token) is a standard used for securely transmitting information between parties as a JSON object.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install necessary packages: 2. Create a `login.js` route handler: 📚 Reference: https://jwt.io/introduction/",
    "start_char": 0,
    "end_char": 678
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "devops,nodejs,heroku",
    "language": "en",
    "context": "Heroku is a platform that allows you to deploy, manage, and scale applications in a variety of languages, including Node.js.",
    "answer": "To deploy a Node.js app to Heroku:\n\n1. Install Heroku CLI:\n```bash\nbrew install heroku\n```\n\n2. Initialize git and push your code:\n```bash\ngit init\nheroku create\ngit add .\ngit commit -m \"Initial commit\"\ngit push heroku master\n```\n\n3. Open the deployed app:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 442
  },
  {
    "question": "How to use Redis for caching in a Node.js application?",
    "label": "backend,nodejs,redis,caching",
    "language": "en",
    "context": "Redis is an in-memory data structure store that is commonly used as a cache and message broker.",
    "answer": "To use Redis for caching in Node.js: 1. Install Redis and `redis` package: 2. Connect to Redis in your Node.js app: 3. Set and get cache data: 📚 Reference: https://redis.io/documentation",
    "start_char": 0,
    "end_char": 577
  },
  {
    "question": "How to deploy a React app using Netlify?",
    "label": "devops,frontend,react,netlify",
    "language": "en",
    "context": "Netlify is a platform for continuous deployment and hosting of web applications, including React apps.",
    "answer": "Steps to deploy a React app to Netlify:\n\n1. Build the React app:\n```bash\nnpm run build\n```\n\n2. Create a Netlify account and link to GitHub repository.\n\n3. Deploy via Netlify interface:\n- Choose your GitHub repo.\n- Netlify auto detects the `build` folder for deployment.\n\n4. Visit your live app URL.\n\n📚 Reference: https://docs.netlify.com/",
    "start_char": 0,
    "end_char": 439
  },
  {
    "question": "How to integrate Stripe payment gateway in Node.js?",
    "label": "backend,nodejs,stripe,payments",
    "language": "en",
    "context": "Stripe is a popular payment gateway for processing online payments in web applications.",
    "answer": "To integrate Stripe payment gateway in Node.js: 1. Install Stripe SDK: 2. Set up Stripe in your app: 📚 Reference: https://stripe.com/docs/payments",
    "start_char": 0,
    "end_char": 646
  },
  {
    "question": "How to set up CORS in an Express.js application?",
    "label": "backend,nodejs,express,cors",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources on a web server depending on the origin of the request.",
    "answer": "To set up CORS in an Express.js application:\n\n1. Install CORS middleware:\n```bash\nnpm install cors\n```\n\n2. Use CORS middleware in your `index.js`:\n```javascript\nconst cors = require('cors');\nconst express = require('express');\nconst app = express();\n\napp.use(cors()); // Allow all origins\napp.get('/data', (req, res) => {\n  res.json({ message: 'Data accessible from any origin' });\n});\n```\n\n📚 Reference: https://expressjs.com/en/resources/middleware/cors.html",
    "start_char": 0,
    "end_char": 448
  },
  {
    "question": "How to use GraphQL with Express.js?",
    "label": "backend,nodejs,graphql,express",
    "language": "en",
    "context": "GraphQL is a query language for your API, and Express.js can be used to create a server for GraphQL.",
    "answer": "Steps to use GraphQL with Express.js: 1. Install required packages: 2. Set up a simple GraphQL server: 📚 Reference: https://www.graphql.org/",
    "start_char": 0,
    "end_char": 704
  },
  {
    "question": "How to implement server-side pagination in Node.js?",
    "label": "backend,nodejs,pagination",
    "language": "en",
    "context": "Server-side pagination is a technique to limit the number of items sent to the client, improving performance for large datasets.",
    "answer": "Steps to implement server-side pagination in Node.js: 1. Use query parameters to specify the `page` and `limit`: 2. Example request: `/items?page=2&limit=10` 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link",
    "start_char": 0,
    "end_char": 587
  },
  {
    "question": "How to implement OAuth2 authentication in Node.js?",
    "label": "backend,nodejs,auth,oauth2",
    "language": "en",
    "context": "OAuth2 is an authorization framework that allows third-party services to exchange credentials for access tokens.",
    "answer": "Steps to implement OAuth2 authentication in Node.js: 1. Install passport and OAuth2 strategy: 2. Set up OAuth2 strategy: 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 688
  },
  {
    "question": "How to handle file uploads in Node.js with Multer?",
    "label": "backend,nodejs,upload,files,multer",
    "language": "en",
    "context": "Multer is a Node.js middleware for handling `multipart/form-data` used for uploading files.",
    "answer": "To handle file uploads in Node.js using Multer: 1. Install Multer: 2. Set up Multer in your application: 3. Create an `uploads/` folder to store files. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 686
  },
  {
    "question": "How to use MongoDB with Mongoose in a Node.js application?",
    "label": "backend,nodejs,mongodb,mongoose",
    "language": "en",
    "context": "Mongoose is an ODM (Object Data Modeling) library that provides a straightforward way to interact with MongoDB in Node.js.",
    "answer": "Steps to use MongoDB with Mongoose in Node.js: 1. Install Mongoose: 2. Connect to MongoDB using Mongoose: 3. Define a Mongoose model: 4. Use the model to interact with the database: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 679
  },
  {
    "question": "How to set up Jest testing in a Node.js application?",
    "label": "backend,nodejs,jest,testing",
    "language": "en",
    "context": "Jest is a testing framework for JavaScript, widely used for unit and integration testing in Node.js applications.",
    "answer": "To set up Jest in a Node.js application:\n\n1. Install Jest:\n```bash\nnpm install --save-dev jest\n```\n\n2. Add a test script to `package.json`:\n```json\n\"scripts\": {\n  \"test\": \"jest\"\n}\n```\n\n3. Create a test file (e.g., `app.test.js`):\n```javascript\nconst sum = (a, b) => a + b;\n\ntest('adds 1 + 2 to equal 3', () => {\n  expect(sum(1, 2)).toBe(3);\n});\n```\n\n4. Run the tests:\n```bash\nnpm test\n```\n\n📚 Reference: https://jestjs.io/docs/en/getting-started",
    "start_char": 0,
    "end_char": 438
  },
  {
    "question": "How to use WebSockets with Express.js for real-time communication?",
    "label": "backend,nodejs,express,websockets",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single, long-lived connection, commonly used for real-time communication in web apps.",
    "answer": "To use WebSockets with Express.js for real-time communication: 1. Install `socket.io` package: 2. Set up WebSocket server in your Express app: 3. Emit events on the client side to communicate with the server. 📚 Reference: https://socket.io/docs/",
    "start_char": 0,
    "end_char": 623
  },
  {
    "question": "How to integrate Google OAuth2 login in a Node.js application?",
    "label": "backend,nodejs,oauth2,google,auth",
    "language": "en",
    "context": "Google OAuth2 provides a secure way to allow users to sign in with their Google account.",
    "answer": "To integrate Google OAuth2 login in a Node.js application: 1. Install necessary packages: 2. Set up Google OAuth2 strategy: 3. Add routes for authentication and callback: 📚 Reference: https://developers.google.com/identity/protocols/oauth2",
    "start_char": 0,
    "end_char": 659
  },
  {
    "question": "How to perform image compression in Node.js?",
    "label": "backend,nodejs,image-processing",
    "language": "en",
    "context": "Image compression reduces the file size of an image to make it more suitable for web applications and faster loading.",
    "answer": "To perform image compression in Node.js:\n\n1. Install `sharp` package:\n```bash\nnpm install sharp\n```\n\n2. Compress an image using `sharp`:\n```javascript\nconst sharp = require('sharp');\n\nsharp('input.jpg')\n  .resize(800) // Resize the image to a width of 800px\n  .toFile('output.jpg', (err, info) => {\n    if (err) throw err;\n    console.log(info); // Output compressed image details\n  });\n```\n\n📚 Reference: https://sharp.pixelplumbing.com/",
    "start_char": 0,
    "end_char": 533
  },
  {
    "question": "How to use Redis in a Node.js application?",
    "label": "backend,nodejs,redis",
    "language": "en",
    "context": "Redis is an open-source, in-memory data structure store, used as a database, cache, and message broker.",
    "answer": "To use Redis in a Node.js application: 1. Install `redis` package: 2. Set up Redis client in your application: 3. Set and get values from Redis: 📚 Reference: https://redis.io/documentation",
    "start_char": 0,
    "end_char": 577
  },
  {
    "question": "How to use Sequelize with PostgreSQL in a Node.js application?",
    "label": "backend,nodejs,sequelize,postgresql",
    "language": "en",
    "context": "Sequelize is a promise-based Node.js ORM that supports various SQL-based databases, including PostgreSQL.",
    "answer": "Steps to use Sequelize with PostgreSQL in Node.js: 1. Install Sequelize and PostgreSQL driver: 2. Set up Sequelize connection: 3. Define a model: 4. Synchronize the model and interact with the database: 📚 Reference: https://sequelize.org/docs/",
    "start_char": 0,
    "end_char": 749
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "backend,nodejs,heroku,deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that enables developers to build, run, and operate applications entirely in the cloud.",
    "answer": "To deploy a Node.js application on Heroku: 1. Install Heroku CLI: 2. Initialize a git repository in your project folder: 3. Create a Heroku app: 4. Add a `Procfile` in your root directory (this tells Heroku how to run your app): 5. Push your code to Heroku: 6. Open your app in the browser: 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 640
  },
  {
    "question": "How to implement JWT authentication in a Node.js application?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are used for securely transmitting information between client and server as a JSON object.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install necessary packages: 2. Create a route to issue JWT token: 3. Create a middleware to verify the JWT token: 4. Protect routes with JWT middleware: 📚 Reference: https://jwt.io/",
    "start_char": 0,
    "end_char": 790
  },
  {
    "question": "How to use Angular CLI to create a new Angular project?",
    "label": "frontend,angular,cli",
    "language": "en",
    "context": "Angular CLI is a command-line interface tool that helps automate the workflow of Angular applications.",
    "answer": "To create a new Angular project using Angular CLI:\n\n1. Install Angular CLI globally:\n```bash\nnpm install -g @angular/cli\n```\n\n2. Create a new Angular project:\n```bash\nng new my-angular-app\n```\n\n3. Navigate to the project directory:\n```bash\ncd my-angular-app\n```\n\n4. Serve the application locally:\n```bash\nng serve\n```\n5. Open your browser and go to `http://localhost:4200` to view your app.\n\n📚 Reference: https://angular.io/cli",
    "start_char": 0,
    "end_char": 507
  },
  {
    "question": "How to configure CORS in an Express.js application?",
    "label": "backend,nodejs,express,cors",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a mechanism to allow or restrict resources on a web server based on the origin of the request.",
    "answer": "Steps to configure CORS in an Express.js application: 1. Install the `cors` package: 2. Use CORS middleware in your Express app: 3. To restrict CORS to certain origins, you can configure it: 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 607
  },
  {
    "question": "How to integrate Stripe for payments in a Node.js application?",
    "label": "backend,nodejs,stripe,payments",
    "language": "en",
    "context": "Stripe is a payment processing platform that allows you to accept payments in your applications.",
    "answer": "Steps to integrate Stripe in a Node.js application: 1. Install the Stripe package: 2. Set up your Stripe secret key: 3. Create a payment intent on the server: 4. On the client side, use the Stripe.js library to handle the payment: 📚 Reference: https://stripe.com/docs/payments",
    "start_char": 0,
    "end_char": 694
  },
  {
    "question": "How to deploy an Angular application to Firebase Hosting?",
    "label": "frontend,angular,firebase,hosting,deployment",
    "language": "en",
    "context": "Firebase Hosting is a service provided by Firebase for hosting web applications with fast and secure delivery.",
    "answer": "Steps to deploy an Angular application to Firebase Hosting: 1. Install Firebase CLI globally: 2. Login to Firebase CLI: 3. Initialize Firebase in your project directory: 4. Choose Firebase Hosting and select your Firebase project. 5. Build your Angular app for production: 6. Deploy the application to Firebase Hosting: 📚 Reference: https://firebase.google.com/docs/hosting",
    "start_char": 0,
    "end_char": 513
  },
  {
    "question": "How to use Python for web scraping?",
    "label": "python,web-scraping",
    "language": "en",
    "context": "Web scraping is the process of extracting data from websites using a script or program.",
    "answer": "Steps to use Python for web scraping: 1. Install required libraries: 2. Make an HTTP request to fetch the page content: 3. Parse the HTML content with BeautifulSoup: 4. Extract data from the page: 📚 Reference: https://realpython.com/beautiful-soup-web-scraper-python/",
    "start_char": 0,
    "end_char": 466
  },
  {
    "question": "How to use Python to automate sending emails?",
    "label": "python,automation,email",
    "language": "en",
    "context": "Python can be used to automate tasks like sending emails using libraries such as `smtplib`.",
    "answer": "Steps to use Python for sending automated emails: 1. Import the necessary libraries: 2. Set up the email details: 3. Create the email message: 4. Send the email: 📚 Reference: https://realpython.com/python-send-email/#sending-email-with-python",
    "start_char": 0,
    "end_char": 761
  },
  {
    "question": "How to use Docker for containerizing a Node.js application?",
    "label": "backend,nodejs,docker,containerization",
    "language": "en",
    "context": "Docker is a platform for automating the deployment of applications inside lightweight, portable containers.",
    "answer": "Steps to use Docker for containerizing a Node.js application: 1. Install Docker on your machine: Follow the instructions at https://docs.docker.com/get-docker/ 2. Create a `Dockerfile` in the root of your Node.js project: 3. Build the Docker image: 4. Run the Docker container: 5. Your Node.js app is now running in a Docker container. 📚 Reference: https://www.docker.com/",
    "start_char": 0,
    "end_char": 515
  },
  {
    "question": "How to set up and use MongoDB in a Node.js application?",
    "label": "backend,nodejs,mongodb",
    "language": "en",
    "context": "MongoDB is a NoSQL database that uses a document-oriented data model. It is widely used in Node.js applications for data storage.",
    "answer": "Steps to set up and use MongoDB in a Node.js application: 1. Install MongoDB locally or use a cloud service like MongoDB Atlas. 2. Install `mongoose` package to interact with MongoDB: 3. Connect to MongoDB in your Node.js app: 4. Define a model for your data: 5. Create and save data to MongoDB: 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 722
  },
  {
    "question": "How to use Git for version control in a Node.js project?",
    "label": "backend,nodejs,git,version-control",
    "language": "en",
    "context": "Git is a distributed version control system that helps track changes in source code during software development.",
    "answer": "Steps to use Git for version control in a Node.js project: 1. Initialize a Git repository in your project folder: 2. Add files to the staging area: 3. Commit the changes: 4. Set up a remote repository (e.g., GitHub): 5. Push your code to the remote repository: 6. Pull changes from the remote repository (if collaborating with others): 📚 Reference: https://git-scm.com/",
    "start_char": 0,
    "end_char": 586
  },
  {
    "question": "How to implement a RESTful API using Express.js?",
    "label": "backend,nodejs,express,api",
    "language": "en",
    "context": "RESTful APIs are a set of rules and conventions for building HTTP-based services in a stateless manner.",
    "answer": "Steps to implement a RESTful API using Express.js: 1. Install Express.js: 2. Set up the Express application: 3. Define routes for your API: 4. Start the server: 5. Test the API using Postman or cURL. 📚 Reference: https://expressjs.com/",
    "start_char": 0,
    "end_char": 639
  },
  {
    "question": "How to use JWT with Passport.js in a Node.js application?",
    "label": "backend,nodejs,jwt,passport,authentication",
    "language": "en",
    "context": "Passport.js is a popular authentication middleware for Node.js that can integrate with various strategies, including JWT.",
    "answer": "Steps to use JWT with Passport.js in a Node.js application: 1. Install the necessary packages: 2. Set up Passport with JWT strategy: 3. Protect your routes with Passport's JWT authentication: 4. Generate a JWT token and send it to the client during login: 📚 Reference: https://www.passportjs.org/packages/passport-jwt/",
    "start_char": 0,
    "end_char": 803
  },
  {
    "question": "How to implement server-side rendering (SSR) with React?",
    "label": "frontend,react,ssr",
    "language": "en",
    "context": "Server-side rendering (SSR) with React allows rendering the initial HTML page on the server before sending it to the client, improving SEO and performance.",
    "answer": "Steps to implement SSR with React: 1. Set up an Express server to handle the React app rendering: 2. Create a basic Express server (`server.js`): 3. Set up Babel and Webpack to transpile React JSX syntax for the server. 4. Make sure to use `ReactDOMServer.renderToString()` for SSR instead of `ReactDOM.render()`. 5. Now, your React app will render on the server and send a fully rendered page to the client. 📚 Reference: https://reactjs.org/docs/react-dom-server.html",
    "start_char": 0,
    "end_char": 614
  },
  {
    "question": "How to use Redux for state management in React?",
    "label": "frontend,react,redux,statemanagement",
    "language": "en",
    "context": "Redux is a state management library for JavaScript applications, commonly used with React to manage the state in a predictable way.",
    "answer": "Steps to use Redux in a React application: 1. Install Redux and React-Redux: 2. Create actions to describe state changes: 3. Create a reducer to manage the state: 4. Create a store to hold the application state: 5. Wrap your React app with the `Provider` component to connect it to the Redux store: 6. Use `useDispatch` and `useSelector` hooks in your components to interact with the Redux store: 📚 Reference: https://redux.js.org/",
    "start_char": 0,
    "end_char": 779
  },
  {
    "question": "How to set up an ESLint configuration for a Node.js project?",
    "label": "backend,nodejs,eslint,code-quality",
    "language": "en",
    "context": "ESLint is a static code analysis tool used to find and fix problems in JavaScript code, improving code quality and consistency.",
    "answer": "Steps to set up ESLint for a Node.js project: 1. Install ESLint as a development dependency: 2. Initialize ESLint configuration: 3. Follow the prompts to choose the style and rules you prefer (e.g., Airbnb, Standard, etc.). 4. Create or edit `.eslintrc.js` file to configure rules: 5. Add an `eslint` script to `package.json`: 6. Run ESLint to check your code: 📚 Reference: https://eslint.org/",
    "start_char": 0,
    "end_char": 628
  },
  {
    "question": "How to use the Fetch API in JavaScript to make HTTP requests?",
    "label": "frontend,js,fetch,api",
    "language": "en",
    "context": "The Fetch API is a modern JavaScript API used for making HTTP requests in web applications.",
    "answer": "Steps to use the Fetch API in JavaScript: 1. Make a GET request to fetch data from an API: 2. Make a POST request to send data to an API: 3. Handle errors using `.catch()` to catch any issues with the request. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",
    "start_char": 0,
    "end_char": 642
  },
  {
    "question": "How to implement JWT authentication in a Node.js application?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are used for secure authentication in modern web applications, allowing users to log in and access protected resources.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install necessary packages: 2. Set up a user registration route to hash the password: 3. Set up a login route that checks the password and generates a JWT: 4. Protect routes with JWT middleware: 5. Apply the middleware to protected routes: 📚 Reference: https://jwt.io/",
    "start_char": 0,
    "end_char": 878
  },
  {
    "question": "How to use Docker for containerizing a Node.js application?",
    "label": "backend,nodejs,docker",
    "language": "en",
    "context": "Docker is a platform for automating the deployment, scaling, and management of containerized applications.",
    "answer": "Steps to containerize a Node.js application with Docker: 1. Install Docker on your machine: Visit the official Docker website and follow the installation instructions for your operating system. 2. Create a `Dockerfile` in the root of your Node.js project: 3. Build the Docker image: 4. Run the container from the image: 5. Your Node.js app should now be running inside a Docker container, accessible at `http://localhost:3000`. 📚 Reference: https://www.docker.com/",
    "start_char": 0,
    "end_char": 720
  },
  {
    "question": "How to optimize React performance with React.memo?",
    "label": "frontend,react,performance",
    "language": "en",
    "context": "React.memo is a higher-order component used to optimize performance by memoizing functional components and preventing unnecessary re-renders.",
    "answer": "Steps to use React.memo for performance optimization: 1. Wrap the component with `React.memo`: 2. `React.memo` will prevent the component from re-rendering if the props haven't changed. 3. Use `React.memo` with functional components to improve performance by avoiding unnecessary re-renders. 4. You can also pass a custom comparison function to `React.memo` if you need more control over prop comparison: 5. Use `React.memo` when the component has heavy rendering or when the props are expensive to compute. 📚...",
    "start_char": 0,
    "end_char": 641
  },
  {
    "question": "How to implement a REST API using Express in Node.js?",
    "label": "backend,nodejs,express,rest-api",
    "language": "en",
    "context": "Express is a minimal and flexible Node.js web application framework used for building web APIs.",
    "answer": "Steps to implement a REST API using Express: 1. Install Express: 2. Create a basic Express app (`app.js`): 3. Add a route to handle GET requests: 4. Add a route to handle POST requests: 5. Use Express middleware to handle JSON request bodies: 6. Test the API with tools like Postman or CURL. 📚 Reference: https://expressjs.com/",
    "start_char": 0,
    "end_char": 738
  },
  {
    "question": "How to connect a Node.js application to a MongoDB database?",
    "label": "backend,nodejs,mongodb,db",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in flexible, JSON-like documents. Mongoose is often used to connect Node.js applications to MongoDB.",
    "answer": "Steps to connect a Node.js application to MongoDB: 1. Install Mongoose: 2. Create a connection to the MongoDB database: 3. Define a schema for your data: 4. Perform CRUD operations, such as creating a new user: 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 737
  },
  {
    "question": "How to deploy a React application to Heroku?",
    "label": "frontend,react,heroku,deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that allows developers to deploy, manage, and scale applications quickly.",
    "answer": "Steps to deploy a React application to Heroku: 1. Install the Heroku CLI: Visit https://devcenter.heroku.com/articles/heroku-cli and follow the installation instructions for your operating system. 2. Build the React application: This will generate a `build/` directory that contains the optimized production files. 3. Create a `server.js` file in the root of your project: 4. Create a `Procfile` in the root of your project with the following content: 5. Push your code to Heroku: 6. Visit your application on...",
    "start_char": 0,
    "end_char": 828
  },
  {
    "question": "How to implement error handling in an Express.js application?",
    "label": "backend,express,error-handling",
    "language": "en",
    "context": "Error handling is a key part of building robust APIs and web applications, ensuring that errors are properly managed and communicated to the client.",
    "answer": "Steps to implement error handling in an Express.js application: 1. Use a middleware to handle errors: 2. Define a route that could throw an error: 3. Attach the error handling middleware to the app after defining all your routes: 4. Customize the error handling logic to handle different error types, such as 404 for not found errors or 400 for bad requests. 5. Ensure all unhandled errors are caught and properly logged for debugging purposes. 📚 Reference: https://expressjs.com/en/guide/using-middleware.htm...",
    "start_char": 0,
    "end_char": 744
  },
  {
    "question": "How to use Redux for state management in a React application?",
    "label": "frontend,react,redux,state-management",
    "language": "en",
    "context": "Redux is a state management library for JavaScript applications that is most commonly used with React for managing the application state.",
    "answer": "Steps to use Redux for state management in a React application: 1. Install Redux and React-Redux: 2. Create a Redux store to hold the state: 3. Provide the store to the React app using `Provider` from React-Redux: 4. Use `useSelector` to access the Redux state in a component: 5. Dispatch actions to modify the state using `useDispatch`: 📚 Reference: https://react-redux.js.org/",
    "start_char": 0,
    "end_char": 860
  },
  {
    "question": "How to implement pagination in a React application?",
    "label": "frontend,react,pagination",
    "language": "en",
    "context": "Pagination is a technique used to divide large sets of data into smaller, more manageable parts and improve performance in React applications.",
    "answer": "Steps to implement pagination in a React application: 1. Install the necessary pagination package (optional, or create custom pagination): 2. Create a pagination component that accepts current page and page count as props: 3. Handle the page change event in the parent component and fetch the appropriate data: 4. Style the pagination component using CSS. 📚 Reference: https://react-paginate.js.org/",
    "start_char": 0,
    "end_char": 732
  },
  {
    "question": "How to implement Google OAuth in a Node.js application?",
    "label": "backend,nodejs,oauth,google-authentication",
    "language": "en",
    "context": "OAuth allows third-party applications to grant limited access to users' accounts on a service without sharing their credentials.",
    "answer": "Steps to implement Google OAuth in a Node.js application: 1. Install necessary packages: 2. Set up Google OAuth credentials on Google Developer Console: 3. Configure Passport with Google OAuth strategy: 4. Set up the authentication routes: 5. Handle user session with `express-session`. 📚 Reference: https://www.passportjs.org/packages/passport-google-oauth20/",
    "start_char": 0,
    "end_char": 813
  },
  {
    "question": "How to set up MongoDB with Mongoose in a Node.js application?",
    "label": "backend,nodejs,mongodb,mongoose",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in flexible, JSON-like documents. Mongoose is an Object Data Modeling (ODM) library for MongoDB and Node.js.",
    "answer": "Steps to set up MongoDB with Mongoose in a Node.js application: 1. Install MongoDB and Mongoose: 2. Connect to MongoDB using Mongoose: 3. Define a Mongoose model: 4. Create and save a document to the database: 5. Query the database to retrieve documents: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 818
  },
  {
    "question": "How to create a REST API using Node.js and Express?",
    "label": "backend,nodejs,express,api",
    "language": "en",
    "context": "A RESTful API is a way of designing networked applications that allows different services to communicate over HTTP.",
    "answer": "Steps to create a REST API using Node.js and Express: 1. Install Express and initialize the project: 2. Create an Express app and define routes: 3. Start the server and test the API endpoints: 4. Use Postman or any HTTP client to test GET and POST requests: 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 675
  },
  {
    "question": "How to implement JWT (JSON Web Token) authentication in a Node.js application?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) are a compact and secure way of transmitting information between a client and a server as a JSON object, often used for authentication.",
    "answer": "Steps to implement JWT authentication in a Node.js application: 1. Install necessary packages: 2. Create a JWT signing function: 3. Create a login route that authenticates the user and generates a token: 4. Create a middleware to verify the token on protected routes: 5. Protect routes by using the middleware: 📚 Reference: https://www.digitalocean.com/community/tutorials/nodejs-jwt-expressjs",
    "start_char": 0,
    "end_char": 792
  },
  {
    "question": "How to optimize the performance of a React application?",
    "label": "frontend,react,performance,optimization",
    "language": "en",
    "context": "Optimizing the performance of a React application is crucial to ensuring fast load times and a smooth user experience.",
    "answer": "Steps to optimize the performance of a React application: 1. Use React's `React.memo` for functional components to prevent unnecessary re-renders: 2. Use `shouldComponentUpdate` for class components to control when re-rendering happens: 3. Code-split your application using React's `React.lazy` and `Suspense` to load only the necessary parts of your app: 4. Use the `useEffect` hook to perform side effects only when necessary, avoiding unnecessary re-renders: 5. Optimize images and assets by using formats ...",
    "start_char": 0,
    "end_char": 772
  },
  {
    "question": "How to use WebSockets in a Node.js application?",
    "label": "backend,nodejs,websockets",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single TCP connection, allowing real-time communication between clients and servers.",
    "answer": "Steps to use WebSockets in a Node.js application: 1. Install `ws` package for WebSocket support: 2. Create a WebSocket server in your Node.js app: 3. Create a WebSocket client to connect to the server: 4. Ensure the server is listening on the correct port and that the client connects properly. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 818
  },
  {
    "question": "How to use React Router for navigation in a React application?",
    "label": "frontend,react,react-router",
    "language": "en",
    "context": "React Router is a popular routing library for React applications that allows you to implement navigation between different views or pages.",
    "answer": "Steps to use React Router for navigation in a React application: 1. Install React Router: 2. Set up the `BrowserRouter` component in your app: 3. Create different components for each route: 4. Use `Link` to navigate between pages without reloading the page: 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 752
  },
  {
    "question": "How to use the fetch API to make HTTP requests in JavaScript?",
    "label": "frontend,js,fetch",
    "language": "en",
    "context": "The Fetch API provides a simple interface for making HTTP requests in JavaScript, allowing you to fetch resources asynchronously.",
    "answer": "Steps to use the fetch API to make HTTP requests in JavaScript: 1. Make a GET request using fetch: 2. Make a POST request with JSON data: 3. Handle errors using the `.catch` method for better error management. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "start_char": 0,
    "end_char": 630
  },
  {
    "question": "How to handle errors in asynchronous JavaScript using async/await?",
    "label": "frontend,js,async-await,error-handling",
    "language": "en",
    "context": "Async/await is a modern approach in JavaScript for handling asynchronous operations, making the code cleaner and more readable.",
    "answer": "Steps to handle errors in asynchronous JavaScript using async/await: 1. Declare an async function to handle asynchronous code: 2. Use the `try` block to run the asynchronous code and the `catch` block to handle any errors that occur during the process. 3. Call the async function to execute the operation and catch any errors: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 605
  },
  {
    "question": "How to deploy a React application to a production server?",
    "label": "frontend,react,deploy,production",
    "language": "en",
    "context": "Deploying a React application to a production server involves building the app and configuring the server for optimal performance.",
    "answer": "Steps to deploy a React application to a production server: 1. Build the React application for production: 2. Install a static server to serve the build folder: 3. Serve the production build on a local server: 4. Upload the contents of the `build` folder to your production server. 5. Configure your web server (e.g., Nginx or Apache) to serve the React app's static files and set up routing. 📚 Reference: https://reactjs.org/docs/deployment.html",
    "start_char": 0,
    "end_char": 607
  },
  {
    "question": "How to create a Web API using Flask in Python?",
    "label": "backend,python,flask,api",
    "language": "en",
    "context": "Flask is a lightweight framework for building web applications in Python, including APIs and server-side logic.",
    "answer": "Steps to create a Web API using Flask in Python: 1. Install Flask: 2. Create a simple Flask app and define a route: 3. Start the Flask server: 4. Test the API using Postman or your browser by navigating to `http://localhost:5000/api`. 5. Add more routes for different endpoints and methods as needed. 📚 Reference: https://flask.palletsprojects.com/en/2.1.x/",
    "start_char": 0,
    "end_char": 718
  },
  {
    "question": "How to integrate a Node.js backend with a React frontend?",
    "label": "backend,nodejs,react,integration",
    "language": "en",
    "context": "Integrating a Node.js backend with a React frontend allows for a full-stack JavaScript application where React handles the user interface and Node.js serves the backend logic.",
    "answer": "Steps to integrate a Node.js backend with a React frontend: 1. Set up a Node.js server using Express: 2. Set up the React frontend and make API calls to the backend: 3. In your React component, use `fetch` to call the backend API: 4. Ensure both the frontend and backend are running on different ports, and use a proxy to avoid CORS issues in development. 📚 Reference: https://reactjs.org/docs/proxying-api-requests-in-development.html",
    "start_char": 0,
    "end_char": 776
  },
  {
    "question": "How to set up environment variables in a Node.js project?",
    "label": "backend,nodejs,environment-variables",
    "language": "en",
    "context": "Environment variables are used to store sensitive data like API keys and configuration settings outside of your source code.",
    "answer": "Steps to set up environment variables in a Node.js project: 1. Install the `dotenv` package: 2. Create a `.env` file in the root of your project and add environment variables: 3. In your Node.js application, require and configure `dotenv` to load the variables: 4. Use the environment variables throughout your application by accessing them via `process.env`. 5. Ensure `.env` is added to your `.gitignore` file to prevent sensitive data from being committed to version control. 📚 Reference: https://www.npmjs...",
    "start_char": 0,
    "end_char": 641
  },
  {
    "question": "How to implement JWT (JSON Web Tokens) authentication in a Node.js application?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties, often used for authentication and authorization in web applications.",
    "answer": "Steps to implement JWT authentication in a Node.js application: 1. Install the required packages: 2. Create a route to issue a JWT token after successful login: 3. Protect routes by verifying the JWT token: 4. Use the `verifyToken` middleware on protected routes. 📚 Reference: https://jwt.io/introduction/",
    "start_char": 0,
    "end_char": 838
  },
  {
    "question": "How to implement pagination in a Node.js API?",
    "label": "backend,nodejs,pagination",
    "language": "en",
    "context": "Pagination allows you to split large sets of data into smaller, manageable chunks, improving performance and user experience in APIs.",
    "answer": "Steps to implement pagination in a Node.js API: 1. Calculate the page and limit parameters from the query string: 2. Calculate the skip value to determine which records to fetch: 3. Fetch the paginated data from your database using skip and limit: 4. Return metadata like total pages and current page for client-side handling: 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 687
  },
  {
    "question": "How to create a RESTful API with Express.js?",
    "label": "backend,nodejs,express,api",
    "language": "en",
    "context": "Express.js is a minimal and flexible Node.js web application framework that provides a robust set of features to develop web and mobile applications, including the ability to create RESTful APIs.",
    "answer": "Steps to create a RESTful API with Express.js: 1. Install Express.js: 2. Set up the Express application: 3. Create routes for your API: 4. Test the API using Postman or curl. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 775
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "backend,nodejs,heroku,deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that enables developers to build, run, and operate applications entirely in the cloud, making it easy to deploy Node.js applications.",
    "answer": "Steps to deploy a Node.js application to Heroku: 1. Install the Heroku CLI: 2. Log in to Heroku via the command line: 3. Initialize a Git repository if not already done: 4. Create a new Heroku application: 5. Deploy your application to Heroku: 6. Visit the deployed app via the URL provided by Heroku. 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 563
  },
  {
    "question": "How to handle errors in an Express.js application?",
    "label": "backend,nodejs,express,error-handling",
    "language": "en",
    "context": "Error handling is an essential part of building robust Node.js applications, particularly in Express.js, to ensure proper responses for different failure scenarios.",
    "answer": "Steps to handle errors in an Express.js application: 1. Create a middleware to catch errors: 2. Use `try...catch` blocks to handle errors in async code: 3. Customize error handling for different status codes or types of errors (e.g., 404 for not found). 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 596
  },
  {
    "question": "How to implement role-based access control (RBAC) in a Node.js application?",
    "label": "backend,nodejs,rbac,access-control",
    "language": "en",
    "context": "Role-based access control (RBAC) is a method for restricting system access to authorized users, and is commonly implemented in web applications to control user permissions.",
    "answer": "Steps to implement RBAC in a Node.js application: 1. Define user roles (e.g., 'admin', 'user', 'guest'). 2. Create a middleware to check the user's role for protected routes: 3. Protect routes by using the role-checking middleware: 4. Assign roles to users when they register or authenticate. 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 632
  },
  {
    "question": "How to use MongoDB with Mongoose in a Node.js application?",
    "label": "backend,nodejs,mongodb,mongoose",
    "language": "en",
    "context": "MongoDB is a NoSQL database, and Mongoose is an ODM (Object Data Modeling) library that provides a straightforward way to interact with MongoDB from Node.js applications.",
    "answer": "Steps to use MongoDB with Mongoose in a Node.js application: 1. Install Mongoose and MongoDB driver: 2. Connect to MongoDB using Mongoose: 3. Define a schema and model for your data: 4. Interact with the database using Mongoose methods: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 684
  },
  {
    "question": "How to use WebSockets for real-time communication in a Node.js application?",
    "label": "backend,nodejs,websockets,real-time",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single TCP connection, and are commonly used in real-time applications like chat apps, live notifications, and gaming.",
    "answer": "Steps to use WebSockets for real-time communication in a Node.js application: 1. Install the `ws` library: 2. Set up a WebSocket server in Node.js: 3. Connect to the WebSocket server from the frontend using JavaScript: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 776
  },
  {
    "question": "How to use JWT (JSON Web Tokens) for authentication in a Node.js application?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are a compact, URL-safe means of representing claims to be transferred between two parties, often used for authentication and authorization in web applications.",
    "answer": "Steps to use JWT for authentication in a Node.js application: 1. Install the `jsonwebtoken` library: 2. Create a JWT when the user logs in: 3. Send the token in the response to the client: 4. Verify the JWT in protected routes: 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 633
  },
  {
    "question": "How to set up a basic RESTful API with Express.js?",
    "label": "backend,nodejs,express,api",
    "language": "en",
    "context": "RESTful APIs are a way of providing interoperability between computer systems on the internet. Express.js is a minimal web framework for Node.js that can be used to set up APIs.",
    "answer": "Steps to set up a basic RESTful API with Express.js: 1. Install Express.js: 2. Create an Express app and define routes: 3. Test the API using Postman or any API testing tool. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 478
  },
  {
    "question": "How to implement caching in Node.js using Redis?",
    "label": "backend,nodejs,redis,caching",
    "language": "en",
    "context": "Caching is a technique used to store data in a temporary storage location (cache) to reduce the time it takes to access frequently used data. Redis is a popular in-memory data store used for caching.",
    "answer": "Steps to implement caching in Node.js using Redis: 1. Install the `redis` client for Node.js: 2. Set up Redis client in your application: 3. Implement caching for API responses: 4. Test caching behavior using your API. 📚 Reference: https://redis.io/topics/quickstart",
    "start_char": 0,
    "end_char": 599
  },
  {
    "question": "How to use MongoDB aggregation framework for complex queries?",
    "label": "backend,mongodb,aggregation,queries",
    "language": "en",
    "context": "The aggregation framework in MongoDB provides a powerful set of tools for performing complex queries, transforming and manipulating data before returning it.",
    "answer": "Steps to use MongoDB aggregation framework for complex queries:\n\n1. Define the aggregation pipeline:\n```javascript\ndb.collection.aggregate([\n  { $match: { status: 'active' } },\n  { $group: { _id: '$category', total: { $sum: '$amount' } } },\n  { $sort: { total: -1 } }\n]);\n```\n\n2. Use operators like `$match`, `$group`, `$sort`, `$project`, etc. to build your pipeline.\n\n3. Execute the aggregation query to get the results.\n\n📚 Reference: https://docs.mongodb.com/manual/reference/operator/aggregation/",
    "start_char": 0,
    "end_char": 421
  },
  {
    "question": "How to implement a basic authentication system using Passport.js in Node.js?",
    "label": "backend,nodejs,passport,authentication",
    "language": "en",
    "context": "Passport.js is a simple, unobtrusive authentication middleware for Node.js that can be used to implement various types of authentication strategies.",
    "answer": "Steps to implement basic authentication with Passport.js: 1. Install Passport.js and the Local strategy: 2. Set up Passport in your application: 3. Serialize and deserialize user information: 4. Use Passport middleware in your routes: 📚 Reference: http://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 636
  },
  {
    "question": "How to integrate Stripe payment gateway in a Node.js application?",
    "label": "backend,nodejs,stripe,payment",
    "language": "en",
    "context": "Stripe is a widely used payment processing platform that allows you to accept payments online. You can integrate it into your Node.js application to handle transactions.",
    "answer": "Steps to integrate Stripe payment gateway in a Node.js application: 1. Install Stripe's Node.js SDK: 2. Set up Stripe in your application: 3. Create a route to handle payment processing: 4. Create a frontend form to collect payment details and send the token to the backend. 📚 Reference: https://stripe.com/docs/payments/accept-a-payment",
    "start_char": 0,
    "end_char": 693
  },
  {
    "question": "How to handle file uploads in Express.js using Multer?",
    "label": "backend,nodejs,express,multer,file-upload",
    "language": "en",
    "context": "Multer is a middleware for handling `multipart/form-data`, used for uploading files in Node.js applications, often with Express.js.",
    "answer": "Steps to handle file uploads with Multer in Express.js: 1. Install Multer: 2. Set up Multer in your application: 3. Use Multer in your route to handle file uploads: 4. Handle errors, such as file size limits and unsupported file types. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 508
  },
  {
    "question": "How to perform pagination with MongoDB in a Node.js application?",
    "label": "backend,nodejs,mongodb,pagination",
    "language": "en",
    "context": "Pagination helps in splitting data into pages to be displayed in chunks, improving user experience and server performance. MongoDB offers several ways to implement pagination.",
    "answer": "Steps to perform pagination with MongoDB in a Node.js application: 1. Define a route for fetching paginated data: 2. Use `skip` and `limit` to control the number of documents returned. 3. Optionally, you can return total count of documents to calculate total pages. 📚 Reference: https://docs.mongodb.com/manual/reference/method/cursor.skip/",
    "start_char": 0,
    "end_char": 469
  },
  {
    "question": "How to secure your Express.js API with HTTPS?",
    "label": "backend,nodejs,express,https,security",
    "language": "en",
    "context": "Using HTTPS ensures encrypted communication between your server and clients, increasing the security of sensitive data.",
    "answer": "Steps to secure an Express.js API with HTTPS: 1. Obtain an SSL/TLS certificate (you can use Let's Encrypt for free certificates). 2. Install the `https` module: 3. Modify your Express app to listen for HTTPS requests: 4. Redirect HTTP traffic to HTTPS (optional): 📚 Reference: https://expressjs.com/en/api.html#https",
    "start_char": 0,
    "end_char": 689
  },
  {
    "question": "How to connect MongoDB to a Node.js application?",
    "label": "backend,nodejs,mongodb,connection",
    "language": "en",
    "context": "MongoDB is a NoSQL database, and you can connect it to your Node.js application using the `mongoose` library or the native MongoDB driver.",
    "answer": "Steps to connect MongoDB to a Node.js application: 1. Install the `mongoose` library: 2. Connect to MongoDB using `mongoose.connect`: 3. Define your schema and model: 4. Use the model to interact with your MongoDB data. 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 573
  },
  {
    "question": "How to implement JWT authentication in an Express.js application?",
    "label": "backend,nodejs,express,jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are used for secure user authentication in modern web applications. With JWT, you can ensure that users are authenticated and authorize access to different parts of your application.",
    "answer": "Steps to implement JWT authentication in an Express.js application: 1. Install the necessary packages: 2. Create a route to register a new user and hash the password: 3. Create a route to login the user and generate a JWT token: 4. Protect routes with JWT middleware: 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 785
  },
  {
    "question": "How to handle CORS (Cross-Origin Resource Sharing) in an Express.js application?",
    "label": "backend,nodejs,express,cors",
    "language": "en",
    "context": "CORS is a security feature implemented in browsers to prevent malicious websites from making requests to your server on behalf of the user. In Express.js, you can configure CORS to allow or restrict cross-origin requests.",
    "answer": "Steps to handle CORS in an Express.js application: 1. Install the CORS middleware: 2. Enable CORS in your Express app: 3. Configure CORS for specific routes or origins: 4. You can also handle pre-flight requests by responding to `OPTIONS` method: 📚 Reference: https://expressjs.com/en/resources/middleware/cors.html",
    "start_char": 0,
    "end_char": 457
  },
  {
    "question": "How to create a RESTful API in Node.js with Express?",
    "label": "backend,nodejs,express,restful-api",
    "language": "en",
    "context": "A RESTful API is a set of rules that allow systems to communicate with each other using HTTP methods. With Node.js and Express, you can easily create a RESTful API to handle requests.",
    "answer": "Steps to create a RESTful API in Node.js with Express: 1. Install Express and create a basic server: 2. Define the API routes (GET, POST, PUT, DELETE): 3. Test your API using Postman or cURL. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 715
  },
  {
    "question": "How to use MongoDB Atlas with a Node.js application?",
    "label": "backend,nodejs,mongodb-atlas,cloud-database",
    "language": "en",
    "context": "MongoDB Atlas is a cloud database service provided by MongoDB that allows you to host your MongoDB databases in the cloud. You can easily connect your Node.js application to MongoDB Atlas.",
    "answer": "Steps to use MongoDB Atlas with a Node.js application: 1. Create a MongoDB Atlas account and set up a cluster. 2. Get your connection string from the MongoDB Atlas dashboard. 3. Install the `mongoose` package: 4. Connect to MongoDB Atlas from your Node.js application: 5. Perform database operations like querying, inserting, and updating data as needed. 📚 Reference: https://docs.atlas.mongodb.com/getting-started/",
    "start_char": 0,
    "end_char": 624
  },
  {
    "question": "How to implement file upload validation in Node.js?",
    "label": "backend,nodejs,file-upload,validation",
    "language": "en",
    "context": "When handling file uploads in a Node.js application, it’s important to validate the files to ensure they meet the necessary criteria (e.g., file type, size) before saving them to the server.",
    "answer": "Steps to implement file upload validation in Node.js: 1. Install Multer and configure the upload limits and file filters: 2. Create the Multer instance with file validation options: 3. Use Multer to handle file uploads and return an error if validation fails: 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 729
  },
  {
    "question": "What is the difference between a process and a thread in operating systems?",
    "label": "os,processes,threads,concurrency",
    "language": "en",
    "context": "Processes and threads are both fundamental units of execution in an operating system.",
    "answer": "A process is an independent program in execution with its own memory space, while a thread is a smaller unit of a process that shares the same memory space with other threads. Threads are lightweight and allow concurrent execution within a single process, whereas processes are heavier and isolated. Thread communication is easier and faster compared to inter-process communication (IPC).",
    "start_char": 0,
    "end_char": 441
  },
  {
    "question": "How does the DNS (Domain Name System) work on the internet?",
    "label": "networking,dns,internet",
    "language": "en",
    "context": "DNS translates human-friendly domain names into IP addresses used by computers to locate services and devices on the internet.",
    "answer": "When a user types a URL into a browser, the DNS system resolves the domain name to its corresponding IP address. The process involves several steps: querying a recursive DNS resolver, which may check its cache, or contact a root server, then a TLD server, and finally an authoritative server to retrieve the IP address. The browser can then connect to the target server using the resolved IP address.",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "What are the advantages of using microservices over monolithic architecture?",
    "label": "architecture,microservices,software",
    "language": "en",
    "context": "Microservices is an architectural style that structures an application as a collection of small, independently deployable services.",
    "answer": "Microservices offer benefits such as independent deployment, scalability, and maintainability. Each service can be developed and deployed separately, enabling teams to work autonomously. This reduces the impact of changes and allows better fault isolation. Unlike monoliths, microservices can be scaled individually and use different technologies suited to specific needs.",
    "start_char": 0,
    "end_char": 455
  },
  {
    "question": "How do relational databases ensure data integrity?",
    "label": "database,sql,relational,integrity",
    "language": "en",
    "context": "Relational databases use various mechanisms to maintain the accuracy and consistency of data.",
    "answer": "Data integrity in relational databases is ensured through constraints like primary keys, foreign keys, unique constraints, and check constraints. Transactions enforce atomicity, consistency, isolation, and durability (ACID). These rules prevent invalid data entry and maintain logical relationships between tables, even during concurrent operations or failures.",
    "start_char": 0,
    "end_char": 456
  },
  {
    "question": "What is CI/CD and how does it improve software development?",
    "label": "devops,cicd,automation",
    "language": "en",
    "context": "CI/CD stands for Continuous Integration and Continuous Deployment/Delivery, which automates the stages of software delivery.",
    "answer": "CI/CD automates the integration, testing, and deployment of code changes. Continuous Integration ensures that changes are automatically built and tested, reducing integration issues. Continuous Delivery/Deployment allows code to be automatically pushed to production or staging environments. This results in faster release cycles, early bug detection, and consistent delivery pipelines.",
    "start_char": 0,
    "end_char": 476
  },
  {
    "question": "What is the difference between a process and a thread in operating systems?",
    "label": "os,processes,threads,concurrency",
    "language": "en",
    "context": "Processes and threads are both fundamental units of execution in an operating system.",
    "answer": "A process is an independent program in execution with its own memory space, while a thread is a smaller unit of a process that shares the same memory space with other threads. Threads are lightweight and allow concurrent execution within a single process, whereas processes are heavier and isolated. Thread communication is easier and faster compared to inter-process communication (IPC).",
    "start_char": 0,
    "end_char": 441
  },
  {
    "question": "How does the DNS (Domain Name System) work on the internet?",
    "label": "networking,dns,internet",
    "language": "en",
    "context": "DNS translates human-friendly domain names into IP addresses used by computers to locate services and devices on the internet.",
    "answer": "When a user types a URL into a browser, the DNS system resolves the domain name to its corresponding IP address. The process involves several steps: querying a recursive DNS resolver, which may check its cache, or contact a root server, then a TLD server, and finally an authoritative server to retrieve the IP address. The browser can then connect to the target server using the resolved IP address.",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "What are the advantages of using microservices over monolithic architecture?",
    "label": "architecture,microservices,software",
    "language": "en",
    "context": "Microservices is an architectural style that structures an application as a collection of small, independently deployable services.",
    "answer": "Microservices offer benefits such as independent deployment, scalability, and maintainability. Each service can be developed and deployed separately, enabling teams to work autonomously. This reduces the impact of changes and allows better fault isolation. Unlike monoliths, microservices can be scaled individually and use different technologies suited to specific needs.",
    "start_char": 0,
    "end_char": 455
  },
  {
    "question": "How do relational databases ensure data integrity?",
    "label": "database,sql,relational,integrity",
    "language": "en",
    "context": "Relational databases use various mechanisms to maintain the accuracy and consistency of data.",
    "answer": "Data integrity in relational databases is ensured through constraints like primary keys, foreign keys, unique constraints, and check constraints. Transactions enforce atomicity, consistency, isolation, and durability (ACID). These rules prevent invalid data entry and maintain logical relationships between tables, even during concurrent operations or failures.",
    "start_char": 0,
    "end_char": 456
  },
  {
    "question": "What is CI/CD and how does it improve software development?",
    "label": "devops,cicd,automation",
    "language": "en",
    "context": "CI/CD stands for Continuous Integration and Continuous Deployment/Delivery, which automates the stages of software delivery.",
    "answer": "CI/CD automates the integration, testing, and deployment of code changes. Continuous Integration ensures that changes are automatically built and tested, reducing integration issues. Continuous Delivery/Deployment allows code to be automatically pushed to production or staging environments. This results in faster release cycles, early bug detection, and consistent delivery pipelines.",
    "start_char": 0,
    "end_char": 476
  },
  {
    "question": "How to set up JWT authentication in a Node.js application?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JWT is a compact, URL-safe means of representing claims to be transferred between two parties, typically used for user authentication in web applications.",
    "answer": "Steps to set up JWT authentication in a Node.js application: 1. Install required packages: 2. Create a route to handle user registration and password hashing: 3. Create a route to handle login and token generation: 4. Protect routes with JWT middleware: 5. Apply middleware to protected routes:",
    "start_char": 0,
    "end_char": 889
  },
  {
    "question": "How to implement rate limiting in a Node.js API?",
    "label": "backend,nodejs,rate-limiting,api",
    "language": "en",
    "context": "Rate limiting is used to control the number of requests a client can make to your API within a given time period to prevent abuse and ensure performance stability.",
    "answer": "Steps to implement rate limiting in a Node.js API: 1. Install the required package: 2. Set up rate limiting middleware: 3. Apply the limiter globally or to specific routes: 4. You can also configure custom rate limits for different routes:",
    "start_char": 0,
    "end_char": 577
  },
  {
    "question": "How to connect a MongoDB database to a Node.js application?",
    "label": "backend,nodejs,mongodb,connection",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in flexible, JSON-like documents. Connecting a Node.js application to MongoDB allows you to perform CRUD operations.",
    "answer": "Steps to connect a MongoDB database to a Node.js application: 1. Install Mongoose, a popular MongoDB ODM: 2. Connect to MongoDB using Mongoose: 3. Create a model and perform operations on the database:",
    "start_char": 0,
    "end_char": 556
  },
  {
    "question": "How to implement file upload in an Express.js application?",
    "label": "backend,nodejs,express,file-upload",
    "language": "en",
    "context": "File upload functionality allows users to upload files to the server. In Express.js, Multer is a popular middleware for handling multipart form-data, which is used for uploading files.",
    "answer": "Steps to implement file upload in an Express.js application: 1. Install Multer: 2. Set up Multer for file handling: 3. Handle the file upload in your route:",
    "start_char": 0,
    "end_char": 494
  },
  {
    "question": "How to enable HTTPS in an Express.js application?",
    "label": "backend,nodejs,express,https",
    "language": "en",
    "context": "HTTPS is an extension of HTTP that uses SSL/TLS to encrypt the communication between the client and the server. Enabling HTTPS ensures that data transmitted is secure.",
    "answer": "Steps to enable HTTPS in an Express.js application: 1. Create or obtain an SSL certificate. 2. Set up an HTTPS server using the `https` module in Node.js:",
    "start_char": 0,
    "end_char": 537
  },
  {
    "question": "How to use environment variables in a Node.js application?",
    "label": "backend,nodejs,environment-variables",
    "language": "en",
    "context": "Environment variables are used to store configuration settings for your application, such as database URLs and API keys, separate from the application code.",
    "answer": "Steps to use environment variables in a Node.js application: 1. Install the `dotenv` package: 2. Create a `.env` file in the root directory: 3. Load the environment variables in your application: 4. Use the environment variables in your application logic.",
    "start_char": 0,
    "end_char": 526
  },
  {
    "question": "How to perform authentication with Google OAuth in a Node.js application?",
    "label": "backend,nodejs,oauth,authentication",
    "language": "en",
    "context": "Google OAuth allows users to log in using their Google account credentials. It is commonly used for single sign-on (SSO) integrations in web applications.",
    "answer": "Steps to perform authentication with Google OAuth in a Node.js application: 1. Install the necessary packages: 2. Set up Google OAuth strategy in Passport.js:",
    "start_char": 0,
    "end_char": 543
  },
  {
    "question": "How to use Redis for caching in a Node.js application?",
    "label": "backend,nodejs,redis,caching",
    "language": "en",
    "context": "Redis is an in-memory data structure store used as a cache to speed up data retrieval and improve performance by storing frequently accessed data in memory.",
    "answer": "Steps to use Redis for caching in a Node.js application: 1. Install the Redis client for Node.js: 2. Connect to Redis: 3. Set data in the cache: 4. Retrieve data from the cache:",
    "start_char": 0,
    "end_char": 548
  },
  {
    "question": "How to create a simple REST API with Express.js?",
    "label": "backend,nodejs,express,api",
    "language": "en",
    "context": "A REST API allows different software systems to communicate with each other over HTTP. Express.js simplifies the creation of REST APIs in Node.js.",
    "answer": "Steps to create a simple REST API with Express.js:\n\n1. Install Express.js:\n```bash\nnpm install express\n```\n\n2. Set up your Express server:\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/api/data', (req, res) => {\n  res.json({ message: 'Hello, world!' });\n});\n\napp.listen(3000, () => {\n  console.log('Server running on port 3000');\n});\n```",
    "start_char": 0,
    "end_char": 280
  },
  {
    "question": "How to set up WebSockets in a Node.js application?",
    "label": "backend,nodejs,websockets,real-time",
    "language": "en",
    "context": "WebSockets allow for two-way communication between client and server in real-time. They are commonly used for chat applications, live notifications, and gaming.",
    "answer": "Steps to set up WebSockets in a Node.js application:\n\n1. Install the `ws` package:\n```bash\nnpm install ws\n```\n\n2. Create a WebSocket server:\n```javascript\nconst WebSocket = require('ws');\nconst wss = new WebSocket.Server({ port: 8080 });\n\nwss.on('connection', (ws) => {\n  console.log('Client connected');\n  ws.send('Hello from server');\n\n  ws.on('message', (message) => {\n    console.log(`Received: ${message}`);\n  });\n});\n```",
    "start_char": 0,
    "end_char": 415
  },
  {
    "question": "How to set up Cross-Origin Resource Sharing (CORS) in a Node.js application?",
    "label": "backend,nodejs,cors,security",
    "language": "en",
    "context": "CORS is a mechanism that allows or restricts resources to be requested from a domain outside the domain from which the resource originated. It's important for securing APIs and web services.",
    "answer": "Steps to set up CORS in a Node.js application:\n\n1. Install the `cors` package:\n```bash\nnpm install cors\n```\n\n2. Configure CORS middleware in your Express app:\n```javascript\nconst express = require('express');\nconst cors = require('cors');\n\nconst app = express();\n\napp.use(cors());\n```\n\n3. You can also customize CORS options:\n```javascript\napp.use(cors({ origin: 'http://example.com' }));\n```",
    "start_char": 0,
    "end_char": 369
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "deployment,nodejs,heroku",
    "language": "en",
    "context": "Heroku is a platform as a service (PaaS) that allows developers to build, run, and operate applications entirely in the cloud. It simplifies the process of deploying Node.js applications.",
    "answer": "Steps to deploy a Node.js application to Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Log in to your Heroku account:\n```bash\nheroku login\n```\n\n3. Initialize a Git repository and commit your changes:\n```bash\ngit init\ngit add .\ngit commit -m 'Initial commit'\n```\n\n4. Create a Heroku app:\n```bash\nheroku create\n```\n\n5. Push your code to Heroku:\n```bash\ngit push heroku master\n```\n\n6. Open the app in a browser:\n```bash\nheroku open\n```",
    "start_char": 0,
    "end_char": 544
  },
  {
    "question": "How to use async/await in a Node.js application?",
    "label": "backend,nodejs,async-await",
    "language": "en",
    "context": "Async/await is a modern way to handle asynchronous code in JavaScript. It allows you to write asynchronous code in a more synchronous, readable manner.",
    "answer": "Steps to use async/await in a Node.js application: 1. Define an async function: 2. Call the async function: 3. Handle errors with try/catch:",
    "start_char": 0,
    "end_char": 426
  },
  {
    "question": "How to implement middleware in Express.js?",
    "label": "backend,nodejs,express,middleware",
    "language": "en",
    "context": "Middleware functions are functions that have access to the request, response, and the next middleware in the request-response cycle. They are used for tasks such as logging, authentication, or error handling.",
    "answer": "Steps to implement middleware in Express.js:\n\n1. Create a simple middleware function:\n```javascript\nconst myMiddleware = (req, res, next) => {\n  console.log('Request received');\n  next();\n};\n```\n\n2. Apply the middleware globally or to specific routes:\n```javascript\napp.use(myMiddleware);\n// Or for a specific route\napp.get('/myroute', myMiddleware, (req, res) => {\n  res.send('Hello world');\n});\n```",
    "start_char": 0,
    "end_char": 320
  },
  {
    "question": "How to handle errors in a Node.js application?",
    "label": "backend,nodejs,error-handling",
    "language": "en",
    "context": "Error handling is an important part of building robust applications. In Node.js, errors can be handled using `try/catch` blocks or custom error handling middleware.",
    "answer": "Steps to handle errors in a Node.js application:\n\n1. Use `try/catch` for synchronous code:\n```javascript\ntry {\n  throw new Error('Something went wrong');\n} catch (error) {\n  console.error(error.message);\n}\n```\n\n2. Use error-handling middleware in Express.js:\n```javascript\napp.use((err, req, res, next) => {\n  console.error(err);\n  res.status(500).send('Something went wrong');\n});\n```",
    "start_char": 0,
    "end_char": 308
  },
  {
    "question": "How to implement pagination in a Node.js application?",
    "label": "backend,nodejs,pagination",
    "language": "en",
    "context": "Pagination allows you to limit the number of results returned in a request, which is useful for APIs that return large datasets.",
    "answer": "Steps to implement pagination in a Node.js application:\n\n1. Define the pagination parameters in your request, such as `page` and `limit`.\n```javascript\nconst page = req.query.page || 1;\nconst limit = req.query.limit || 10;\n```\n\n2. Use these parameters to query your database with the correct offset:\n```javascript\nconst offset = (page - 1) * limit;\nconst results = await Model.find().skip(offset).limit(limit);\n```",
    "start_char": 0,
    "end_char": 351
  },
  {
    "question": "How to implement session management in a Node.js application?",
    "label": "backend,nodejs,session-management",
    "language": "en",
    "context": "Session management allows you to persist user data across requests. In Node.js, you can manage sessions using the `express-session` middleware.",
    "answer": "Steps to implement session management in a Node.js application:\n\n1. Install the `express-session` package:\n```bash\nnpm install express-session\n```\n\n2. Set up session middleware:\n```javascript\nconst session = require('express-session');\n\napp.use(session({\n  secret: 'your-secret-key',\n  resave: false,\n  saveUninitialized: true,\n}));\n```\n\n3. Use session data in your routes:\n```javascript\napp.get('/login', (req, res) => {\n  req.session.user = { username: 'alice' };\n  res.send('Logged in');\n});\n```",
    "start_char": 0,
    "end_char": 395
  },
  {
    "question": "How to use JWT for user authentication in a Node.js API?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are used to authenticate users in a stateless way, typically in RESTful APIs. They allow for secure token-based authentication.",
    "answer": "Steps to use JWT for user authentication in a Node.js API:\n\n1. Install required packages:\n```bash\nnpm install jsonwebtoken bcryptjs\n```\n\n2. Create a registration endpoint to store users with hashed passwords:\n```javascript\nconst bcrypt = require('bcryptjs');\n\napp.post('/register', async (req, res) => {\n  const hashedPassword = await bcrypt.hash(req.body.password, 10);\n  // Store hashed password in the database\n});\n```",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "How to use the `fetch` API in a Node.js application?",
    "label": "frontend,nodejs,fetch,api",
    "language": "en",
    "context": "The `fetch` API allows you to make HTTP requests in modern JavaScript. It's used for making API calls and handling responses.",
    "answer": "Steps to use the `fetch` API in a Node.js application:\n\n1. Install the `node-fetch` package for Node.js:\n```bash\nnpm install node-fetch\n```\n\n2. Use `fetch` to make API calls:\n```javascript\nconst fetch = require('node-fetch');\n\nfetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data));\n```",
    "start_char": 0,
    "end_char": 313
  },
  {
    "question": "How to implement file upload functionality in a Node.js application?",
    "label": "backend,nodejs,file-upload",
    "language": "en",
    "context": "File upload functionality is essential for many web applications, allowing users to send files to the server, such as images, documents, or videos.",
    "answer": "Steps to implement file upload functionality in a Node.js application: 1. Install the `multer` package: 2. Set up multer to handle file uploads: 3. Use the `upload` middleware in your route:",
    "start_char": 0,
    "end_char": 453
  },
  {
    "question": "How to secure a Node.js application using HTTPS?",
    "label": "backend,nodejs,security,https",
    "language": "en",
    "context": "HTTPS (HyperText Transfer Protocol Secure) ensures that the data transmitted between a client and server is encrypted, preventing man-in-the-middle attacks.",
    "answer": "Steps to secure a Node.js application using HTTPS:\n\n1. Obtain an SSL certificate from a trusted Certificate Authority (CA).\n\n2. Install the `https` module and your SSL certificate:\n```javascript\nconst https = require('https');\nconst fs = require('fs');\n\nconst options = {\n  key: fs.readFileSync('path/to/your/private-key.pem'),\n  cert: fs.readFileSync('path/to/your/certificate.pem'),\n};\n\nhttps.createServer(options, app).listen(443, () => {\n  console.log('Server running on HTTPS');\n});\n```",
    "start_char": 0,
    "end_char": 348
  },
  {
    "question": "How to use environment variables in a Node.js application?",
    "label": "backend,nodejs,environment-variables",
    "language": "en",
    "context": "Environment variables allow you to store configuration details securely, such as database credentials, API keys, and secret tokens, separate from your application code.",
    "answer": "Steps to use environment variables in a Node.js application:\n\n1. Install the `dotenv` package:\n```bash\nnpm install dotenv\n```\n\n2. Create a `.env` file in the root directory of your project to store environment variables:\n```.env\nDB_HOST=localhost\nDB_USER=admin\nDB_PASS=password\n```\n\n3. Load the variables in your application:\n```javascript\nrequire('dotenv').config();\nconsole.log(process.env.DB_HOST); // localhost\n```",
    "start_char": 0,
    "end_char": 373
  },
  {
    "question": "How to implement caching in a Node.js application?",
    "label": "backend,nodejs,caching,performance",
    "language": "en",
    "context": "Caching improves performance by temporarily storing data, such as API responses or database queries, to reduce the need for repetitive and time-consuming operations.",
    "answer": "Steps to implement caching in a Node.js application: 1. Install a caching library like `node-cache` or `redis`: 2. Set up a cache in your application:",
    "start_char": 0,
    "end_char": 405
  },
  {
    "question": "How to integrate a database into a Node.js application?",
    "label": "backend,nodejs,databases,mongodb,postgresql",
    "language": "en",
    "context": "Integrating a database into a Node.js application allows you to persist data. Popular choices include MongoDB (NoSQL) and PostgreSQL (SQL).",
    "answer": "Steps to integrate MongoDB into a Node.js application:\n\n1. Install the `mongoose` package for MongoDB:\n```bash\nnpm install mongoose\n```\n\n2. Connect to MongoDB:\n```javascript\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost:27017/mydatabase', { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(() => console.log('Database connected'))\n  .catch((err) => console.error(err));\n```",
    "start_char": 0,
    "end_char": 286
  },
  {
    "question": "How to handle rate limiting in a Node.js API?",
    "label": "backend,nodejs,rate-limiting",
    "language": "en",
    "context": "Rate limiting helps protect APIs from abuse by limiting the number of requests a user can make in a given period.",
    "answer": "Steps to handle rate limiting in a Node.js API:\n\n1. Install the `express-rate-limit` package:\n```bash\nnpm install express-rate-limit\n```\n\n2. Set up rate limiting middleware:\n```javascript\nconst rateLimit = require('express-rate-limit');\n\nconst limiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit to 100 requests per window\n});\n\napp.use(limiter);\n```",
    "start_char": 0,
    "end_char": 282
  },
  {
    "question": "How to implement OAuth 2.0 authentication in a Node.js application?",
    "label": "backend,nodejs,oauth2.0,authentication",
    "language": "en",
    "context": "OAuth 2.0 is an authorization framework that allows third-party applications to access user data without exposing user credentials.",
    "answer": "Steps to implement OAuth 2.0 authentication in a Node.js application: 1. Install the necessary packages, such as `passport` and `passport-oauth2`: 2. Set up OAuth2 strategy in your application:",
    "start_char": 0,
    "end_char": 438
  },
  {
    "question": "How to use WebSockets in a React application?",
    "label": "frontend,react,websockets,real-time",
    "language": "en",
    "context": "WebSockets in a React application allow real-time communication with the server, making it ideal for chat apps, live feeds, and notifications.",
    "answer": "Steps to use WebSockets in a React application: 1. Install the `socket.io-client` package: 2. Establish a WebSocket connection in a React component:",
    "start_char": 0,
    "end_char": 375
  },
  {
    "question": "How to use Redux for state management in a React application?",
    "label": "frontend,react,redux,state-management",
    "language": "en",
    "context": "Redux is a popular state management library for React applications, helping to manage the global state of the app in a predictable way.",
    "answer": "Steps to use Redux in a React application:\n\n1. Install the necessary packages:\n```bash\nnpm install redux react-redux\n```\n\n2. Create a Redux store:\n```javascript\nimport { createStore } from 'redux';\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'UPDATE_STATE':\n      return { ...state, data: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n```",
    "start_char": 0,
    "end_char": 332
  },
  {
    "question": "How to handle form validation in React?",
    "label": "frontend,react,form-validation",
    "language": "en",
    "context": "Form validation is crucial for ensuring that users input valid data before submitting a form. React offers different methods to handle form validation.",
    "answer": "Steps to handle form validation in React:\n\n1. Use controlled components for form inputs:\n```javascript\nconst [inputValue, setInputValue] = useState('');\n\nconst handleChange = (e) => {\n  setInputValue(e.target.value);\n};\n``` \n2. Validate input in the `onSubmit` handler:\n```javascript\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  if (inputValue.trim() === '') {\n    alert('Input cannot be empty');\n    return;\n  }\n  // Submit form\n};\n```",
    "start_char": 0,
    "end_char": 368
  },
  {
    "question": "How to implement JWT authentication in a Node.js application?",
    "label": "backend,nodejs,authentication,jwt",
    "language": "en",
    "context": "JWT (JSON Web Token) is a compact and self-contained way for securely transmitting information between parties as a JSON object. It's widely used for authentication in web applications.",
    "answer": "Steps to implement JWT authentication in a Node.js application: 1. Install `jsonwebtoken` and `bcryptjs` for password hashing and JWT creation: 2. Create a route for user login, where JWT will be generated:",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "How to set up a MongoDB database for a Node.js application?",
    "label": "backend,nodejs,mongodb,database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in a flexible, JSON-like format, making it suitable for applications requiring fast and scalable data storage.",
    "answer": "Steps to set up MongoDB in a Node.js application:\n\n1. Install the `mongoose` package:\n```bash\nnpm install mongoose\n```\n\n2. Connect to the MongoDB database:\n```javascript\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost:27017/myapp', { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(() => console.log('Database connected'))\n  .catch((err) => console.error(err));\n```",
    "start_char": 0,
    "end_char": 226
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "backend,nodejs,deployment,heroku",
    "language": "en",
    "context": "Heroku is a cloud platform that allows you to deploy and manage web applications with ease. It supports multiple languages, including Node.js.",
    "answer": "Steps to deploy a Node.js application to Heroku:\n\n1. Install the Heroku CLI: https://devcenter.heroku.com/articles/heroku-cli\n\n2. Log in to your Heroku account:\n```bash\nheroku login\n```\n\n3. Initialize a Git repository and commit your code:\n```bash\ngit init\ngit add .\ngit commit -m 'Initial commit'\n```\n\n4. Create a new Heroku application and push your code:\n```bash\nheroku create\ngit push heroku master\n```",
    "start_char": 0,
    "end_char": 383
  },
  {
    "question": "How to optimize database queries in MongoDB?",
    "label": "backend,mongodb,performance,optimization",
    "language": "en",
    "context": "Optimizing database queries is essential for improving the performance of an application, especially when dealing with large datasets or high traffic.",
    "answer": "Steps to optimize MongoDB queries:\n\n1. Use indexes to speed up query performance:\n```javascript\ndb.collection.createIndex({ 'field': 1 });\n```\n\n2. Use the `explain()` method to analyze query performance:\n```javascript\ndb.collection.find({ field: 'value' }).explain('executionStats');\n```\n\n3. Avoid using `*` in projection and only retrieve necessary fields:\n```javascript\ndb.collection.find({}, { field1: 1, field2: 1 });\n```",
    "start_char": 0,
    "end_char": 331
  },
  {
    "question": "How to use Express middleware in a Node.js application?",
    "label": "backend,nodejs,express,middleware",
    "language": "en",
    "context": "Middleware functions in Express.js are used to perform specific tasks during the lifecycle of a request, such as logging, authentication, or error handling.",
    "answer": "Steps to use middleware in a Node.js application:\n\n1. Define a simple middleware function:\n```javascript\nconst middleware = (req, res, next) => {\n  console.log('Request received');\n  next();\n};\n```\n\n2. Use the middleware in your app:\n```javascript\napp.use(middleware);\n```\n\n3. Create error-handling middleware:\n```javascript\nconst errorHandler = (err, req, res, next) => {\n  console.error(err);\n  res.status(500).send('Something went wrong!');\n};\napp.use(errorHandler);\n```",
    "start_char": 0,
    "end_char": 355
  },
  {
    "question": "How to perform data validation in a Node.js application?",
    "label": "backend,nodejs,validation",
    "language": "en",
    "context": "Data validation ensures that the incoming data is correct, in the proper format, and meets the application's requirements before it's stored or processed.",
    "answer": "Steps to perform data validation in a Node.js application: 1. Install the `joi` package for validation: 2. Create a validation schema: 3. Validate data in the route handler:",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "How to connect a Node.js application to a PostgreSQL database?",
    "label": "backend,nodejs,postgresql,database",
    "language": "en",
    "context": "PostgreSQL is a powerful relational database system. Connecting it to a Node.js application allows you to store and retrieve structured data.",
    "answer": "Steps to connect a Node.js application to PostgreSQL:\n\n1. Install the `pg` package:\n```bash\nnpm install pg\n```\n\n2. Set up the PostgreSQL connection:\n```javascript\nconst { Client } = require('pg');\n\nconst client = new Client({\n  user: 'your-username',\n  host: 'localhost',\n  database: 'your-database',\n  password: 'your-password',\n  port: 5432,\n});\n\nclient.connect()\n  .then(() => console.log('Connected to PostgreSQL'))\n  .catch((err) => console.error('Connection error', err.stack));\n```",
    "start_char": 0,
    "end_char": 330
  },
  {
    "question": "How to use React Router for navigation in a React application?",
    "label": "frontend,react,react-router,react-router-dom",
    "language": "en",
    "context": "React Router is a standard library for routing in React, allowing you to navigate between different components and pages in a React app.",
    "answer": "Steps to use React Router in a React application:\n\n1. Install `react-router-dom`:\n```bash\nnpm install react-router-dom\n```\n\n2. Set up basic routing:\n```javascript\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/home' component={Home} />\n        <Route path='/about' component={About} />\n      </Switch>\n    </Router>\n  );\n};\n```",
    "start_char": 0,
    "end_char": 283
  },
  {
    "question": "How to implement user authentication in a React application using Firebase?",
    "label": "frontend,react,authentication,firebase",
    "language": "en",
    "context": "Firebase Authentication provides backend services to help authenticate users, including simple pass-through authentication using just a username and password.",
    "answer": "Steps to implement Firebase Authentication in a React application: 1. Install Firebase SDK: 2. Set up Firebase in your app: 3. Implement login functionality:",
    "start_char": 0,
    "end_char": 444
  },
  {
    "question": "How to create reusable components in React?",
    "label": "frontend,react,components,code-reusability",
    "language": "en",
    "context": "Reusable components in React help avoid repetition, improve code maintainability, and simplify the development process.",
    "answer": "Steps to create reusable components in React:\n\n1. Create a functional component:\n```javascript\nconst Button = ({ label, onClick }) => {\n  return <button onClick={onClick}>{label}</button>;\n};\n```\n\n2. Use the component in your app:\n```javascript\n<Button label='Submit' onClick={handleSubmit} />\n<Button label='Cancel' onClick={handleCancel} />\n```",
    "start_char": 0,
    "end_char": 233
  },
  {
    "question": "How to create a RESTful API using Express.js in Node.js?",
    "label": "backend,nodejs,express,restful-api",
    "language": "en",
    "context": "Express.js is a popular web framework for Node.js that simplifies the process of building web applications and APIs.",
    "answer": "Steps to create a RESTful API using Express.js:\n\n1. Install Express:\n```bash\nnpm install express\n```\n\n2. Set up a basic Express server:\n```javascript\nconst express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/api/users', (req, res) => {\n  res.json([{ id: 1, name: 'John Doe' }, { id: 2, name: 'Jane Doe' }]);\n});\n\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n```",
    "start_char": 0,
    "end_char": 374
  },
  {
    "question": "How to implement CORS in a Node.js application?",
    "label": "backend,nodejs,cors,security",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) allows a web application running at one origin to make requests to a server at a different origin. This is essential for enabling APIs to be accessed from different domains.",
    "answer": "Steps to implement CORS in a Node.js application:\n\n1. Install the `cors` package:\n```bash\nnpm install cors\n```\n\n2. Set up CORS in your app:\n```javascript\nconst cors = require('cors');\nconst express = require('express');\nconst app = express();\n\napp.use(cors()); // Enable CORS for all routes\n\napp.get('/api/data', (req, res) => {\n  res.json({ message: 'Data accessed successfully' });\n});\n\napp.listen(3000, () => {\n  console.log('Server is running');\n});\n```",
    "start_char": 0,
    "end_char": 308
  },
  {
    "question": "How to implement file upload in a Node.js application using Multer?",
    "label": "backend,nodejs,multer,file-upload",
    "language": "en",
    "context": "Multer is a middleware for handling `multipart/form-data`, which is used for uploading files in Node.js applications.",
    "answer": "Steps to implement file upload using Multer in Node.js: 1. Install Multer: 2. Set up Multer in your Express app:",
    "start_char": 0,
    "end_char": 448
  },
  {
    "question": "How to create a login page in React with form validation?",
    "label": "frontend,react,forms,validation",
    "language": "en",
    "context": "In React, you can create a login page with form validation using controlled components, state management, and form validation techniques.",
    "answer": "Steps to create a login page in React with form validation: 1. Create a form component with controlled inputs:",
    "start_char": 0,
    "end_char": 465
  },
  {
    "question": "How to use React hooks like useState and useEffect in a functional component?",
    "label": "frontend,react,react-hooks,useState,useEffect",
    "language": "en",
    "context": "React hooks such as `useState` and `useEffect` allow you to manage state and side effects in functional components.",
    "answer": "Steps to use `useState` and `useEffect` in a React functional component:\n\n1. Use `useState` to declare state variables:\n```javascript\nconst [count, setCount] = useState(0);\n``` \n2. Use `useEffect` to perform side effects like fetching data or subscribing to events:\n```javascript\nuseEffect(() => {\n  console.log('Component mounted');\n  return () => console.log('Component unmounted');\n}, []); // Empty array means it runs only once, after mount.\n```",
    "start_char": 0,
    "end_char": 211
  },
  {
    "question": "How to optimize images for web performance?",
    "label": "frontend,web-performance,optimization,images",
    "language": "en",
    "context": "Optimizing images for the web reduces file sizes, improves load times, and enhances user experience.",
    "answer": "Steps to optimize images for web performance:\n\n1. Use modern image formats like WebP or AVIF, which offer better compression without quality loss.\n2. Compress images using tools like ImageOptim, TinyPNG, or an online compressor.\n3. Serve images at the appropriate size using `srcset` or `picture` element in HTML for responsive designs.\n4. Implement lazy loading for images, so they load only when visible on the screen:\n```html\n<img src='image.jpg' loading='lazy' />\n```",
    "start_char": 0,
    "end_char": 298
  },
  {
    "question": "How to implement pagination in a MongoDB query?",
    "label": "backend,mongodb,pagination",
    "language": "en",
    "context": "Pagination is a technique used to divide large data sets into smaller chunks to improve performance and usability in applications.",
    "answer": "Steps to implement pagination in a MongoDB query:\n\n1. Use `skip()` and `limit()` methods to control the data returned:\n```javascript\nconst page = 2; // Current page\nconst limit = 10; // Items per page\n\nconst results = await db.collection('items')\n  .find()\n  .skip((page - 1) * limit)\n  .limit(limit)\n  .toArray();\n```",
    "start_char": 0,
    "end_char": 211
  },
  {
    "question": "How to use Git for version control in a Node.js project?",
    "label": "backend,nodejs,git,version-control",
    "language": "en",
    "context": "Git is a distributed version control system that helps developers manage changes to their codebase over time.",
    "answer": "Steps to use Git for version control in a Node.js project:\n\n1. Initialize a Git repository in your project folder:\n```bash\ngit init\n```\n\n2. Add files to the staging area:\n```bash\ngit add .\n```\n\n3. Commit the changes:\n```bash\ngit commit -m 'Initial commit'\n```\n\n4. Create a GitHub repository and push the code:\n```bash\ngit remote add origin https://github.com/username/repository.git\ngit push -u origin master\n```",
    "start_char": 0,
    "end_char": 355
  },
  {
    "question": "How to use environment variables in a Node.js application?",
    "label": "backend,nodejs,environment-variables",
    "language": "en",
    "context": "Environment variables allow you to store configuration settings and sensitive information outside of the codebase.",
    "answer": "Steps to use environment variables in a Node.js application:\n\n1. Install the `dotenv` package:\n```bash\nnpm install dotenv\n```\n\n2. Create a `.env` file to store your environment variables:\n```.env\nDB_HOST=localhost\nDB_USER=root\nDB_PASS=password\n```\n\n3. Load the environment variables in your app:\n```javascript\nrequire('dotenv').config();\nconsole.log(process.env.DB_HOST);\n```",
    "start_char": 0,
    "end_char": 271
  },
  {
    "question": "How to use Axios for making HTTP requests in React?",
    "label": "frontend,react,axios,http-requests",
    "language": "en",
    "context": "Axios is a promise-based HTTP client for JavaScript that works both in the browser and Node.js.",
    "answer": "Steps to use Axios for HTTP requests in React:\n\n1. Install Axios:\n```bash\nnpm install axios\n```\n\n2. Make an HTTP request to an API endpoint:\n```javascript\nimport axios from 'axios';\n\nconst fetchData = async () => {\n  try {\n    const response = await axios.get('https://api.example.com/data');\n    console.log(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nuseEffect(() => {\n  fetchData();\n}, []);\n```",
    "start_char": 0,
    "end_char": 330
  },
  {
    "question": "How to implement JWT (JSON Web Tokens) authentication in a Node.js app?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) is a compact, URL-safe means of representing claims to be transferred between two parties. It is widely used for authentication and authorization.",
    "answer": "Steps to implement JWT authentication in a Node.js app: 1. Install dependencies: 2. Create a login route that generates a JWT token:",
    "start_char": 0,
    "end_char": 482
  },
  {
    "question": "How to handle asynchronous operations in Node.js using async/await?",
    "label": "backend,nodejs,async-await,asynchronous",
    "language": "en",
    "context": "Async/await is a syntactic sugar over promises in JavaScript, making asynchronous code easier to write and read.",
    "answer": "Steps to handle asynchronous operations in Node.js using async/await:\n\n1. Use `async` keyword before a function declaration:\n```javascript\nconst fetchData = async () => {\n  const data = await fetch('https://api.example.com');\n  const result = await data.json();\n  return result;\n};\n```\n2. Use `await` inside an `async` function to pause execution until a promise is resolved:\n```javascript\nconst getUserData = async () => {\n  const user = await getUserFromDatabase();\n  return user;\n};\n```",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "How to set up a simple HTTP server using Node.js and the built-in HTTP module?",
    "label": "backend,nodejs,http-server",
    "language": "en",
    "context": "Node.js provides an HTTP module that can be used to create a simple server and handle HTTP requests.",
    "answer": "Steps to set up a simple HTTP server in Node.js:\n\n1. Create a server using the built-in HTTP module:\n```javascript\nconst http = require('http');\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello, World!');\n});\n\nserver.listen(3000, () => {\n  console.log('Server running at http://localhost:3000/');\n});\n```",
    "start_char": 0,
    "end_char": 257
  },
  {
    "question": "How to create a responsive layout using Flexbox in CSS?",
    "label": "frontend,css,flexbox,layout",
    "language": "en",
    "context": "Flexbox is a CSS layout module that allows you to design complex layouts with a flexible and efficient way to distribute space between items in a container.",
    "answer": "Steps to create a responsive layout using Flexbox:\n\n1. Define a flex container:\n```css\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n```\n2. Create flexible items within the container:\n```css\n.item {\n  flex: 1;\n  min-width: 200px;\n  margin: 10px;\n}\n```",
    "start_char": 0,
    "end_char": 220
  },
  {
    "question": "How to debug JavaScript code in the browser using Chrome DevTools?",
    "label": "frontend,js,debugging,chrome-devtools",
    "language": "en",
    "context": "Chrome DevTools is a set of web authoring and debugging tools built into Google Chrome that helps developers to debug JavaScript code and inspect HTML, CSS, and network activity.",
    "answer": "Steps to debug JavaScript code in Chrome DevTools:\n\n1. Open DevTools by pressing `F12` or right-clicking and selecting 'Inspect'.\n2. Go to the 'Sources' tab where you can find the scripts loaded by the page.\n3. Set breakpoints in your code by clicking on the line number.\n4. Reload the page and the debugger will pause at the breakpoints, allowing you to step through your code.\n5. You can inspect variables, watch expressions, and check call stacks to troubleshoot your code.",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "How to fetch data from an API in React using the Fetch API?",
    "label": "frontend,react,fetch,api",
    "language": "en",
    "context": "The Fetch API provides a way to fetch resources asynchronously across the network. It is widely used in React applications to request data from an API.",
    "answer": "Steps to fetch data from an API in React using the Fetch API:\n\n1. Use the `useEffect` hook to make an API request when the component mounts:\n```javascript\nuseEffect(() => {\n  fetch('https://api.example.com/data')\n    .then(response => response.json())\n    .then(data => setData(data))\n    .catch(error => console.error('Error fetching data:', error));\n}, []);\n```",
    "start_char": 0,
    "end_char": 265
  },
  {
    "question": "How to implement form validation in React using Formik?",
    "label": "frontend,react,formik,form-validation",
    "language": "en",
    "context": "Formik is a popular library for handling forms in React. It simplifies form validation, handling of form state, and submission.",
    "answer": "Steps to implement form validation in React using Formik: 1. Install Formik: 2. Use Formik in your component:",
    "start_char": 0,
    "end_char": 476
  },
  {
    "question": "How to use the `useEffect` hook in React for data fetching?",
    "label": "frontend,react,useEffect,data-fetching",
    "language": "en",
    "context": "The `useEffect` hook is used to handle side effects in React components, such as data fetching or subscribing to events.",
    "answer": "Steps to use the `useEffect` hook in React for data fetching:\n\n1. Use the `useEffect` hook to fetch data from an API when the component mounts:\n```javascript\nuseEffect(() => {\n  const fetchData = async () => {\n    const response = await fetch('https://api.example.com/data');\n    const result = await response.json();\n    setData(result);\n  };\n  fetchData();\n}, []);\n```",
    "start_char": 0,
    "end_char": 206
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "backend,nodejs,heroku,deploy",
    "language": "en",
    "context": "Heroku is a platform as a service (PaaS) that enables developers to deploy, manage, and scale applications. Node.js applications can be easily deployed on Heroku.",
    "answer": "Steps to deploy a Node.js application on Heroku:\n\n1. Install the Heroku CLI:\n```bash\nbrew install heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Initialize a git repository if not already initialized:\n```bash\ngit init\n```\n\n4. Create a Heroku application:\n```bash\nheroku create\n```\n\n5. Push the code to Heroku:\n```bash\ngit push heroku master\n```\n\n6. Open the app:\n```bash\nheroku open\n```",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "How to implement a RESTful API using Express in Node.js?",
    "label": "backend,nodejs,express,restful-api",
    "language": "en",
    "context": "Express is a minimal and flexible Node.js web application framework that provides a robust set of features to build web and mobile applications, including RESTful APIs.",
    "answer": "Steps to implement a RESTful API using Express in Node.js: 1. Install Express and other dependencies: 2. Create the Express app and set up routes:",
    "start_char": 0,
    "end_char": 598
  },
  {
    "question": "How to use the `useState` hook in React to manage component state?",
    "label": "frontend,react,useState,state-management",
    "language": "en",
    "context": "The `useState` hook is used to declare and manage state variables in functional components in React.",
    "answer": "Steps to use the `useState` hook in React:\n\n1. Import `useState` from React:\n```javascript\nimport React, { useState } from 'react';\n```\n\n2. Declare a state variable and its setter function:\n```javascript\nconst [count, setCount] = useState(0);\n```\n\n3. Update the state using the setter function:\n```javascript\n<button onClick={() => setCount(count + 1)}>Increment</button>\n<p>{count}</p>\n```",
    "start_char": 0,
    "end_char": 184
  },
  {
    "question": "How to set up a MongoDB database and connect it to a Node.js application?",
    "label": "backend,nodejs,mongodb,setup",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in flexible, JSON-like documents. It can be integrated with Node.js applications using the Mongoose library for easier management of data.",
    "answer": "Steps to set up a MongoDB database and connect it to a Node.js app:\n\n1. Install MongoDB and Mongoose:\n```bash\nnpm install mongoose\n```\n\n2. Connect to the MongoDB database:\n```javascript\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost/mydb', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nmongoose.connection.on('connected', () => {\n  console.log('Connected to MongoDB');\n});\n```",
    "start_char": 0,
    "end_char": 244
  },
  {
    "question": "How to create a RESTful API with Django REST Framework?",
    "label": "backend,python,django,rest-api",
    "language": "en",
    "context": "Django REST Framework (DRF) is a powerful toolkit for building Web APIs in Django, providing a range of features such as authentication, serialization, and view sets.",
    "answer": "Steps to create a RESTful API with Django REST Framework:\n\n1. Install Django and DRF:\n```bash\npip install django djangorestframework\n```\n\n2. Set up Django project and app:\n```bash\ndjango-admin startproject myproject\ncd myproject\ndjango-admin startapp api\n```\n\n3. Create a model in `api/models.py`:\n```python\nfrom django.db import models\n\nclass User(models.Model):\n  name = models.CharField(max_length=100)\n  email = models.EmailField()\n```",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "How to implement pagination in a Node.js application?",
    "label": "backend,nodejs,pagination",
    "language": "en",
    "context": "Pagination allows you to divide a large set of results into smaller, manageable chunks. In Node.js, pagination can be implemented in a variety of ways, often using query parameters.",
    "answer": "Steps to implement pagination in a Node.js app:\n\n1. Use query parameters to determine the page and page size:\n```javascript\napp.get('/api/users', (req, res) => {\n  const page = parseInt(req.query.page) || 1;\n  const pageSize = parseInt(req.query.pageSize) || 10;\n  const startIndex = (page - 1) * pageSize;\n  const endIndex = page * pageSize;\n\n  // Get data based on pagination parameters\n  const users = getUsers().slice(startIndex, endIndex);\n  res.json({ users, page, pageSize });\n});\n```",
    "start_char": 0,
    "end_char": 287
  },
  {
    "question": "How to set up a CORS policy in a Node.js application?",
    "label": "backend,nodejs,cors,security",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) is a security feature that allows or restricts resources to be requested from a domain different from the one from which the first resource was served.",
    "answer": "Steps to set up a CORS policy in a Node.js app:\n\n1. Install the `cors` package:\n```bash\nnpm install cors\n```\n\n2. Use `cors` in your Express app:\n```javascript\nconst cors = require('cors');\nconst app = express();\napp.use(cors()); // Allows all origins\n```",
    "start_char": 0,
    "end_char": 153
  },
  {
    "question": "How to use WebSockets for real-time communication in Node.js?",
    "label": "backend,nodejs,websockets,real-time",
    "language": "en",
    "context": "WebSockets provide a way to open a persistent connection between a client and server, allowing real-time communication.",
    "answer": "Steps to use WebSockets in Node.js:\n\n1. Install `ws` library:\n```bash\nnpm install ws\n```\n\n2. Set up WebSocket server:\n```javascript\nconst WebSocket = require('ws');\nconst wss = new WebSocket.Server({ port: 8080 });\n\nwss.on('connection', (ws) => {\n  ws.on('message', (message) => {\n    console.log('received: %s', message);\n  });\n  ws.send('Hello, client');\n});\n```",
    "start_char": 0,
    "end_char": 248
  },
  {
    "question": "How to implement lazy loading in React?",
    "label": "frontend,react,lazy-loading",
    "language": "en",
    "context": "Lazy loading is a design pattern that delays the loading of non-essential resources at the point the page is initially loaded. In React, lazy loading helps to optimize the performance by reducing the amount of code loaded initially.",
    "answer": "Steps to implement lazy loading in React:\n\n1. Use React's `React.lazy()` function to load components lazily:\n```javascript\nconst LazyComponent = React.lazy(() => import('./LazyComponent'));\n```\n\n2. Use `Suspense` to show a fallback while the component is loading:\n```javascript\n<Suspense fallback={<div>Loading...</div>}>\n  <LazyComponent />\n</Suspense>\n```",
    "start_char": 0,
    "end_char": 270
  },
  {
    "question": "How to implement JWT authentication in a React application?",
    "label": "frontend,react,jwt,authentication",
    "language": "en",
    "context": "JWT authentication is commonly used to secure React applications. It allows for secure token-based user authentication and authorization.",
    "answer": "Steps to implement JWT authentication in React: 1. On the backend, create an authentication endpoint that returns a JWT token upon successful login. 2. On the React side, store the JWT token in localStorage or sessionStorage after successful login: 3. Send the JWT token with each request in the Authorization header:",
    "start_char": 0,
    "end_char": 345
  },
  {
    "question": "How to create a responsive layout using CSS Flexbox?",
    "label": "frontend,css,flexbox,responsive",
    "language": "en",
    "context": "Flexbox is a CSS layout module that allows you to design a flexible and responsive layout structure without using floats or positioning.",
    "answer": "Steps to create a responsive layout using Flexbox:\n\n1. Define a flex container:\n```css\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n```\n\n2. Style the flex items:\n```css\n.item {\n  flex: 1 1 200px; /* Grow, shrink, base width */\n  margin: 10px;\n}\n```\n\n3. HTML structure:\n```html\n<div class=\"container\">\n  <div class=\"item\">1</div>\n  <div class=\"item\">2</div>\n  <div class=\"item\">3</div>\n</div>\n```",
    "start_char": 0,
    "end_char": 335
  },
  {
    "question": "How to configure Nginx to serve a React application?",
    "label": "devops,nginx,react,configuration",
    "language": "en",
    "context": "Nginx can be used as a reverse proxy or static file server. React applications are typically served as static files after being built.",
    "answer": "Steps to configure Nginx to serve a React app:\n\n1. Build your React app:\n```bash\nnpm run build\n```\n\n2. Copy the `build` folder to your server, e.g., `/var/www/my-app`.\n\n3. Edit the Nginx config file (e.g., `/etc/nginx/sites-available/default`):\n```nginx\nserver {\n  listen 80;\n  server_name yourdomain.com;\n\n  root /var/www/my-app;\n  index index.html index.htm;\n\n  location / {\n    try_files $uri /index.html;\n  }\n}\n```\n\n4. Reload Nginx:\n```bash\nsudo systemctl reload nginx\n```",
    "start_char": 0,
    "end_char": 476
  },
  {
    "question": "How to secure a Node.js REST API using API keys?",
    "label": "backend,nodejs,security,api-keys",
    "language": "en",
    "context": "API keys are used to control access to APIs by identifying the calling program or user. They should be securely stored and verified on each request.",
    "answer": "Steps to secure a Node.js REST API using API keys:\n\n1. Define and store an API key (e.g., in `.env`):\n```env\nAPI_KEY=123456abcdef\n```\n\n2. Add middleware to validate the API key:\n```javascript\napp.use((req, res, next) => {\n  const key = req.headers['x-api-key'];\n  if (key !== process.env.API_KEY) {\n    return res.status(403).json({ message: 'Forbidden' });\n  }\n  next();\n});\n```",
    "start_char": 0,
    "end_char": 334
  },
  {
    "question": "How to implement form validation using Formik in React?",
    "label": "frontend,react,formik,form-validation",
    "language": "en",
    "context": "Formik is a popular library for building and managing forms in React. It simplifies form validation, handling state, and submission.",
    "answer": "Steps to implement form validation with Formik: 1. Install Formik and Yup: 2. Create a form with validation:",
    "start_char": 0,
    "end_char": 552
  },
  {
    "question": "How to use Git rebase to maintain a clean commit history?",
    "label": "tools,git,version-control,rebase",
    "language": "en",
    "context": "Git rebase allows you to integrate changes from one branch into another. It rewrites commit history, making it cleaner than merging in some cases.",
    "answer": "Steps to use Git rebase:\n\n1. Switch to your feature branch:\n```bash\ngit checkout feature-branch\n```\n\n2. Rebase with the main branch:\n```bash\ngit rebase main\n```\n\n3. Resolve any conflicts that appear, then continue:\n```bash\ngit add .\ngit rebase --continue\n```\n\n4. Push changes (force if needed):\n```bash\ngit push --force\n```",
    "start_char": 0,
    "end_char": 294
  },
  {
    "question": "How to handle file uploads in a Node.js Express server?",
    "label": "backend,nodejs,express,file-upload",
    "language": "en",
    "context": "Handling file uploads allows users to send files to your server. In Node.js, `multer` is a middleware commonly used for multipart/form-data.",
    "answer": "Steps to handle file uploads:\n\n1. Install multer:\n```bash\nnpm install multer\n```\n\n2. Configure multer middleware:\n```javascript\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n```\n\n3. Create a POST route to handle the upload:\n```javascript\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded successfully');\n});\n```",
    "start_char": 0,
    "end_char": 317
  },
  {
    "question": "How to use environment variables in a React application?",
    "label": "frontend,react,env-variables,configuration",
    "language": "en",
    "context": "Environment variables allow you to store configuration values outside of your source code. In React, they must be prefixed with `REACT_APP_`.",
    "answer": "Steps to use environment variables:\n\n1. Create a `.env` file in the root of your project:\n```env\nREACT_APP_API_URL=https://api.example.com\n```\n\n2. Access the variable in React code:\n```javascript\nconst apiUrl = process.env.REACT_APP_API_URL;\n```\n\n3. Restart the dev server to apply changes.",
    "start_char": 0,
    "end_char": 256
  },
  {
    "question": "How to build a dark mode toggle in React using Tailwind CSS?",
    "label": "frontend,react,tailwind,darkmode",
    "language": "en",
    "context": "Tailwind CSS has built-in support for dark mode. You can toggle dark mode using classes or by managing a theme state in React.",
    "answer": "Steps to build a dark mode toggle:\n\n1. Enable dark mode in Tailwind config:\n```js\n// tailwind.config.js\ndarkMode: 'class',\n```\n\n2. Toggle a class on the root element:\n```javascript\nconst [dark, setDark] = useState(false);\n\nuseEffect(() => {\n  document.documentElement.classList.toggle('dark', dark);\n}, [dark]);\n```\n\n3. Use Tailwind's dark classes:\n```html\n<div className=\"bg-white dark:bg-gray-800 text-black dark:text-white\">\n  Content\n</div>\n```",
    "start_char": 0,
    "end_char": 401
  },
  {
    "question": "How to create a reusable component in React?",
    "label": "frontend,react,components,reusability",
    "language": "en",
    "context": "Reusable components in React allow for consistent UI and maintainable code by encapsulating functionality and design.",
    "answer": "Steps to create a reusable component:\n\n1. Create a new file `Button.js`:\n```javascript\nconst Button = ({ text, onClick }) => (\n  <button onClick={onClick} className=\"px-4 py-2 bg-blue-500 text-white\">\n    {text}\n  </button>\n);\nexport default Button;\n```\n\n2. Use it in another component:\n```javascript\nimport Button from './Button';\n<Button text=\"Click Me\" onClick={() => alert('Clicked')} />\n```",
    "start_char": 0,
    "end_char": 325
  },
  {
    "question": "How to perform CRUD operations using Firebase Firestore in a React app?",
    "label": "frontend,react,firebase,firestore",
    "language": "en",
    "context": "Firebase Firestore is a cloud-based NoSQL database. It provides easy SDK integration with React for real-time and asynchronous data operations.",
    "answer": "Steps for CRUD with Firestore: 1. Set up Firebase in your React project. 2. Initialize Firestore: 3. Perform operations:",
    "start_char": 0,
    "end_char": 531
  },
  {
    "question": "How to implement session-based authentication in Express.js?",
    "label": "backend,nodejs,express,authentication,sessions",
    "language": "en",
    "context": "Session-based authentication stores session data on the server and uses a session ID to identify users across multiple requests.",
    "answer": "Steps to implement session-based authentication in Express.js: 1. Install required packages: 2. Set up `express-session` middleware: 3. Create login route to store user data in session: 4. Create middleware to protect routes: 5. Use the middleware for protected routes: 📚 Reference: https://expressjs.com/en/resources/middleware/session.html",
    "start_char": 0,
    "end_char": 983
  },
  {
    "question": "How to use environment variables in a Node.js application?",
    "label": "backend,nodejs,environment-variables",
    "language": "en",
    "context": "Environment variables help you manage sensitive configuration data like API keys, database credentials, and app settings.",
    "answer": "Steps to use environment variables in Node.js: 1. Install `dotenv` package: 2. Create a `.env` file in the root directory: 3. Load the `.env` file in your code: 4. Use environment variables throughout your app: 5. Never commit `.env` files to version control: Add `.env` to your `.gitignore` file. 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 651
  },
  {
    "question": "How to connect a React application to a REST API?",
    "label": "frontend,react,rest-api",
    "language": "en",
    "context": "React applications often need to fetch data from REST APIs to display dynamic content.",
    "answer": "Steps to connect React to a REST API: 1. Use `fetch` or install Axios: 2. Fetch data in a component using `useEffect`: 📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 621
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "backend,nodejs,heroku,deploy",
    "language": "en",
    "context": "Heroku is a cloud platform that lets you deploy and manage Node.js apps with ease.",
    "answer": "Steps to deploy Node.js app to Heroku: 1. Install the Heroku CLI: 2. Log in to Heroku and create an app: 3. Make sure your app has a `Procfile`: 4. Commit your code and push to Heroku: 5. Visit your app: 📚 Reference: https://devcenter.heroku.com/articles/getting-started-with-nodejs",
    "start_char": 0,
    "end_char": 673
  },
  {
    "question": "How to secure your Express.js app with Helmet?",
    "label": "backend,nodejs,express,security,helmet",
    "language": "en",
    "context": "Helmet helps secure Express apps by setting various HTTP headers that protect against common vulnerabilities.",
    "answer": "Steps to use Helmet in Express.js:\n\n1. Install Helmet:\n```bash\nnpm install helmet\n```\n\n2. Import and apply Helmet middleware:\n```javascript\nconst helmet = require('helmet');\napp.use(helmet());\n```\n\n3. Optional: Customize Helmet settings:\n```javascript\napp.use(helmet({\n  contentSecurityPolicy: false\n}));\n```\n\n4. Test headers with a tool like curl or securityheaders.com\n\n📚 Reference: https://www.npmjs.com/package/helmet",
    "start_char": 0,
    "end_char": 452
  },
  {
    "question": "How to hash passwords securely using bcrypt in Node.js?",
    "label": "nodejs,bcrypt,password-security,backend",
    "language": "en",
    "context": "Hashing passwords is a critical step in securing user credentials. Bcrypt is a widely used library for hashing passwords in Node.js.",
    "answer": "Steps to hash passwords securely using bcrypt in Node.js: 1. Install bcrypt: 2. Import bcrypt: 3. Hash the password: 4. Compare passwords during login: 📚 Reference: https://www.npmjs.com/package/bcrypt",
    "start_char": 0,
    "end_char": 821
  },
  {
    "question": "How to validate email addresses using Regex in JavaScript?",
    "label": "javascript,regex,validation,frontend",
    "language": "en",
    "context": "Validating email inputs in a form is an essential step in ensuring data integrity. Regular expressions (Regex) are commonly used for this purpose.",
    "answer": "Steps to validate email addresses using Regex in JavaScript: 1. Define a regular expression for email: 2. Create a function to validate the input: 3. Test the function: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions",
    "start_char": 0,
    "end_char": 592
  },
  {
    "question": "How to deploy a Node.js application on Vercel?",
    "label": "nodejs,deployment,vercel,cloud",
    "language": "en",
    "context": "Vercel is a platform for frontend and backend deployment. It can also host Node.js applications by configuring the correct file structure.",
    "answer": "Steps to deploy a Node.js application on Vercel:\n\n1. Create a Vercel account at https://vercel.com/.\n\n2. Install the Vercel CLI:\n```bash\nnpm install -g vercel\n```\n\n3. Prepare your project:\n- Ensure you have an `index.js` or `api/index.js` file.\n- Add a `vercel.json` file to configure the entry point if needed.\n\n4. Initialize the deployment:\n```bash\nvercel\n```\n\n5. Follow the CLI prompts to link your project and deploy.\n\n📚 Reference: https://vercel.com/docs",
    "start_char": 0,
    "end_char": 580
  },
  {
    "question": "How to create a dropdown menu in React using Tailwind CSS?",
    "label": "react,tailwindcss,frontend,ui",
    "language": "en",
    "context": "A dropdown menu is a common UI component. React makes it easy to manage UI state, and Tailwind CSS provides the styling utilities.",
    "answer": "Steps to create a dropdown menu in React using Tailwind CSS: 1. Install Tailwind CSS: Follow the Tailwind installation guide for React: https://tailwindcss.com/docs/guides/create-react-app 2. Create a functional component with state: 📚 Reference: https://tailwindcss.com/docs",
    "start_char": 0,
    "end_char": 821
  },
  {
    "question": "How to train a BERT model on a custom text dataset?",
    "label": "nlp,bert,deep-learning,transformers",
    "language": "en",
    "context": "BERT (Bidirectional Encoder Representations from Transformers) is a powerful transformer-based language model. You can fine-tune it on your own dataset using Hugging Face's Transformers library.",
    "answer": "Steps to train a BERT model on a custom text dataset: 1. Install necessary libraries: 2. Prepare your dataset: Ensure your dataset is in CSV or JSON format and contains input-output pairs. 3. Load dataset: 4. Tokenize: 5. Fine-tune BERT: 📚 Reference: https://huggingface.co/transformers/",
    "start_char": 0,
    "end_char": 1163
  },
  {
    "question": "How to implement JWT authentication in a Node.js application?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) are used to securely transmit information between a client and a server as a JSON object. They can be used for authentication and authorization in a Node.js application.",
    "answer": "Steps to implement JWT authentication in a Node.js application: 1. Install the necessary packages: 2. Set up user registration and password hashing: 3. Create a login route to generate the JWT token: 4. Protect routes with JWT middleware: 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 1116
  },
  {
    "question": "How to configure a MySQL database in a Node.js application?",
    "label": "backend,nodejs,mysql,database",
    "language": "en",
    "context": "MySQL is a popular relational database management system. Configuring MySQL in a Node.js application enables you to interact with a MySQL database using Node.js.",
    "answer": "Steps to configure a MySQL database in a Node.js application: 1. Install the MySQL driver: 2. Set up the MySQL connection: 3. Perform database queries: 4. Close the connection: 📚 Reference: https://www.mysql.com/",
    "start_char": 0,
    "end_char": 730
  },
  {
    "question": "How to handle form validation in React?",
    "label": "frontend,react,form-validation",
    "language": "en",
    "context": "Form validation is essential in web applications to ensure user input is correct. In React, you can validate forms using controlled components and custom validation logic.",
    "answer": "Steps to handle form validation in React: 1. Create a form component with controlled inputs: 2. Implement validation logic: 3. Handle form submission with validation: 4. Render the form and validate on submission: 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 799
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "backend,nodejs,heroku,deploy",
    "language": "en",
    "context": "Heroku is a cloud platform that lets you deploy, manage, and scale applications. Deploying a Node.js app to Heroku is simple using Git and the Heroku CLI.",
    "answer": "Steps to deploy a Node.js application to Heroku:\n\n1. Install the Heroku CLI:\n```bash\ncurl https://cli-assets.heroku.com/install.sh | sh\n```\n\n2. Log in to Heroku from the terminal:\n```bash\nheroku login\n```\n\n3. Initialize a Git repository in your Node.js project:\n```bash\ngit init\n```\n\n4. Create a Heroku app:\n```bash\nheroku create\n```\n\n5. Push your code to Heroku:\n```bash\ngit push heroku master\n```\n\n6. Open the app in a browser:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 637
  },
  {
    "question": "How to handle file uploads in Node.js using Multer?",
    "label": "backend,nodejs,multer,file-upload",
    "language": "en",
    "context": "Multer is a middleware for handling multipart/form-data, primarily used for uploading files in Node.js applications.",
    "answer": "Steps to handle file uploads in Node.js using Multer: 1. Install Multer: 2. Set up Multer storage and file filter options: 3. Use the Multer middleware for file upload handling: 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 850
  },
  {
    "question": "How to create a serverless function in AWS Lambda?",
    "label": "backend,aws,lambda,serverless",
    "language": "en",
    "context": "AWS Lambda lets you run code without provisioning or managing servers. It is used for serverless computing where you can execute code in response to events.",
    "answer": "Steps to create a serverless function in AWS Lambda: 1. Log in to AWS Management Console and go to Lambda service. 2. Click on 'Create function' and choose 'Author from scratch'. 3. Set a function name, runtime (Node.js, Python, etc.), and role for execution permissions. 4. Write your function code in the editor or upload a zip file containing your function code. 5. Configure triggers such as API Gateway or S3 for your function. 6. Test the function by configuring test events in the Lambda console. 📚 Ref...",
    "start_char": 0,
    "end_char": 641
  },
  {
    "question": "How to set up MongoDB in a Docker container?",
    "label": "backend,mongodb,docker,container",
    "language": "en",
    "context": "MongoDB can be run in a Docker container for easy deployment and management. Docker containers provide a lightweight and consistent environment to run MongoDB.",
    "answer": "Steps to set up MongoDB in a Docker container:\n\n1. Pull the MongoDB Docker image:\n```bash\ndocker pull mongo\n```\n\n2. Run the MongoDB container:\n```bash\ndocker run --name mongodb -d -p 27017:27017 mongo\n```\n\n3. Access the MongoDB instance:\n```bash\ndocker exec -it mongodb mongo\n```\n\n4. To connect from a Node.js application:\n```javascript\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost:27017/mydb');\n```\n\n📚 Reference: https://hub.docker.com/_/mongo",
    "start_char": 0,
    "end_char": 513
  },
  {
    "question": "How to create a REST API in Express.js?",
    "label": "backend,express,api,rest",
    "language": "en",
    "context": "Express.js is a minimal and flexible Node.js web application framework that provides a robust set of features to build web and mobile applications.",
    "answer": "Steps to create a REST API in Express.js:\n\n1. Install Express.js:\n```bash\nnpm install express\n```\n\n2. Create an Express app:\n```javascript\nconst express = require('express');\nconst app = express();\napp.use(express.json());\n\napp.get('/api/users', (req, res) => {\n  res.json([{ id: 1, name: 'John Doe' }]);\n});\n\napp.listen(3000, () => {\n  console.log('Server is running on port 3000');\n});\n```\n\n3. Test the API with Postman or a similar tool.\n\n📚 Reference: https://expressjs.com/",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to implement a basic authentication system in Flask?",
    "label": "backend,flask,python,authentication",
    "language": "en",
    "context": "Flask is a micro web framework written in Python. It is used for developing web applications and APIs.",
    "answer": "Steps to implement basic authentication in Flask: 1. Install Flask and Flask-Login: 2. Set up the Flask app with user authentication: 3. Define a user class and login route: 4. Protect routes with login required: 📚 Reference: https://flask-login.readthedocs.io/en/latest/",
    "start_char": 0,
    "end_char": 1124
  },
  {
    "question": "How to set up a Django application?",
    "label": "backend,django,python,web-development",
    "language": "en",
    "context": "Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design.",
    "answer": "Steps to set up a Django application:\n\n1. Install Django:\n```bash\npip install django\n```\n\n2. Create a Django project:\n```bash\ndjango-admin startproject myproject\n```\n\n3. Create a Django app:\n```bash\npython manage.py startapp myapp\n```\n\n4. Set up database configuration and models.\n\n5. Run the development server:\n```bash\npython manage.py runserver\n```\n\n6. Access the Django app in the browser at http://127.0.0.1:8000/\n\n📚 Reference: https://www.djangoproject.com/",
    "start_char": 0,
    "end_char": 513
  },
  {
    "question": "How to implement server-side rendering (SSR) in Next.js?",
    "label": "frontend,nextjs,ssr,react",
    "language": "en",
    "context": "Server-Side Rendering (SSR) in Next.js allows pages to be pre-rendered on the server before being sent to the client. This results in faster load times and better SEO.",
    "answer": "Steps to implement SSR in Next.js: 1. Create a Next.js project: 2. Create a page that uses SSR: 3. Run the Next.js app: 📚 Reference: https://nextjs.org/docs/basic-features/pages#server-side-rendering",
    "start_char": 0,
    "end_char": 883
  },
  {
    "question": "How to add authentication to a React application using Firebase?",
    "label": "frontend,react,firebase,authentication",
    "language": "en",
    "context": "Firebase provides an easy-to-use authentication system that allows you to authenticate users using email/password, Google, Facebook, etc.",
    "answer": "Steps to add authentication to a React application using Firebase: 1. Install Firebase SDK: 2. Initialize Firebase in your app: 3. Set up authentication functions (sign up, login): 4. Add authentication state listener: 📚 Reference: https://firebase.google.com/docs/auth/web/start",
    "start_char": 0,
    "end_char": 906
  },
  {
    "question": "How to use the fetch API in JavaScript?",
    "label": "frontend,javascript,api,fetch",
    "language": "en",
    "context": "The fetch API allows you to make HTTP requests in JavaScript. It's a modern alternative to XMLHttpRequest.",
    "answer": "Steps to use the fetch API in JavaScript: 1. Make a GET request: 2. Make a POST request with data: 3. Handle errors with try-catch: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",
    "start_char": 0,
    "end_char": 928
  },
  {
    "question": "How to create a custom React hook?",
    "label": "frontend,react,custom-hook",
    "language": "en",
    "context": "Custom hooks in React allow you to encapsulate logic and reuse it across multiple components.",
    "answer": "Steps to create a custom React hook: 1. Define the custom hook function: 2. Use the custom hook in a component: 📚 Reference: https://reactjs.org/docs/hooks-custom.html",
    "start_char": 0,
    "end_char": 944
  },
  {
    "question": "How to deploy a React application using Netlify?",
    "label": "frontend,react,netlify,deploy",
    "language": "en",
    "context": "Netlify is a platform for deploying and hosting static websites and web applications, including those built with React.",
    "answer": "Steps to deploy a React application using Netlify:\n\n1. Build your React app:\n```bash\nnpm run build\n```\n\n2. Push the build folder to a Git repository (GitHub, GitLab, etc.).\n\n3. Log in to Netlify and create a new site from Git.\n\n4. Connect your Git repository to Netlify.\n\n5. Set the build command and publish directory:\n   - Build command: `npm run build`\n   - Publish directory: `build`\n\n6. Deploy the site.\n\n📚 Reference: https://docs.netlify.com/site-deploys/create-deploys/",
    "start_char": 0,
    "end_char": 536
  },
  {
    "question": "How to use GraphQL with React?",
    "label": "frontend,react,graphql",
    "language": "en",
    "context": "GraphQL is a query language for APIs, and it provides a more flexible and efficient alternative to REST APIs. You can use it with React using Apollo Client or Relay.",
    "answer": "Steps to use GraphQL with React: 1. Install Apollo Client and GraphQL: 2. Set up Apollo Client: 3. Create a query and use it in your component: 📚 Reference: https://www.apollographql.com/docs/react/",
    "start_char": 0,
    "end_char": 1031
  },
  {
    "question": "How to use Firebase Realtime Database in a React app?",
    "label": "frontend,react,firebase,realtime-database",
    "language": "en",
    "context": "Firebase Realtime Database allows you to store and sync data in real time with your application.",
    "answer": "Steps to use Firebase Realtime Database in a React app: 1. Install Firebase SDK: 2. Initialize Firebase in your app: 3. Write data to Firebase Realtime Database: 4. Read data from Firebase Realtime Database: 📚 Reference: https://firebase.google.com/docs/database/web/start",
    "start_char": 0,
    "end_char": 1019
  },
  {
    "question": "How to manage state in React using Redux?",
    "label": "frontend,react,redux,state-management",
    "language": "en",
    "context": "Redux is a state management library that is often used with React applications to manage global state in a predictable way.",
    "answer": "Steps to manage state in React using Redux: 1. Install Redux and React-Redux: 2. Create a Redux store: 3. Provide the store to your React app: 4. Use the state in your component: 📚 Reference: https://redux.js.org/introduction/getting-started",
    "start_char": 0,
    "end_char": 1066
  },
  {
    "question": "How to create a Docker container for a Node.js app?",
    "label": "devops,docker,nodejs,container",
    "language": "en",
    "context": "Docker is a platform that allows you to automate the deployment of applications inside lightweight, portable containers.",
    "answer": "Steps to create a Docker container for a Node.js app:\n\n1. Create a Dockerfile:\n```dockerfile\nFROM node:14\n\nWORKDIR /app\n\nCOPY package*.json ./\n\nRUN npm install\n\nCOPY . .\n\nEXPOSE 3000\n\nCMD [\"node\", \"server.js\"]\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t my-node-app .\n```\n\n3. Run the Docker container:\n```bash\ndocker run -p 3000:3000 my-node-app\n```\n\n4. Verify the app is running by accessing `http://localhost:3000`\n\n📚 Reference: https://docs.docker.com/get-started/part2/",
    "start_char": 0,
    "end_char": 746
  },
  {
    "question": "How to set up MongoDB in a Node.js application?",
    "label": "backend,mongodb,nodejs,databases",
    "language": "en",
    "context": "MongoDB is a NoSQL database that is commonly used with Node.js applications.",
    "answer": "Steps to set up MongoDB in a Node.js application: 1. Install MongoDB Node.js driver: 2. Connect to MongoDB server: 3. Perform database operations (e.g., insert, query): 📚 Reference: https://mongodb.github.io/node-mongodb-native/",
    "start_char": 0,
    "end_char": 1029
  },
  {
    "question": "How to set up a basic Express server in Node.js?",
    "label": "backend,express,nodejs,server",
    "language": "en",
    "context": "Express is a minimal and flexible Node.js web application framework that provides a robust set of features for building web and mobile applications.",
    "answer": "Steps to set up a basic Express server in Node.js:\n\n1. Install Express:\n```bash\nnpm install express\n```\n\n2. Create a basic Express server:\n```javascript\nconst express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) => {\n  res.send('Hello, World!');\n});\n\napp.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}/`);\n});\n```\n\n3. Run the server:\n```bash\nnode server.js\n```\n\n📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "How to use useEffect in React?",
    "label": "frontend,react,useEffect,hooks",
    "language": "en",
    "context": "useEffect is a hook in React that lets you perform side effects in function components, such as fetching data, directly interacting with the DOM, or subscribing to external services.",
    "answer": "Steps to use useEffect in React: 1. Import useEffect from React: 2. Use useEffect inside a component: 3. Run the effect on component mount, update, or unmount: 📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 660
  },
  {
    "question": "How to implement a loading spinner in React?",
    "label": "frontend,react,loading,spinner",
    "language": "en",
    "context": "A loading spinner is commonly used to show the user that the application is busy performing an operation.",
    "answer": "Steps to implement a loading spinner in React: 1. Create a loading spinner component: 2. Use the spinner in a parent component: 3. Style the spinner (CSS): 📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 789
  },
  {
    "question": "How to add a CSS animation to an element in React?",
    "label": "frontend,react,css,animation",
    "language": "en",
    "context": "CSS animations can be added to React components to enhance the user experience by adding dynamic visual effects.",
    "answer": "Steps to add a CSS animation to an element in React: 1. Define the animation in CSS: 2. Apply the animation class to a React component: 3. Make sure to import the CSS file: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/animation",
    "start_char": 0,
    "end_char": 666
  },
  {
    "question": "How to manage routes in React using React Router?",
    "label": "frontend,react,router,react-router",
    "language": "en",
    "context": "React Router is a standard library for routing in React applications. It allows for navigation between different views or components without reloading the page.",
    "answer": "Steps to manage routes in React using React Router: 1. Install React Router: 2. Set up routes in your app: 3. Create components for each route: 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 571
  },
  {
    "question": "How to use a REST API with Fetch in JavaScript?",
    "label": "frontend,javascript,api,fetch",
    "language": "en",
    "context": "Fetching data from a REST API is a common operation in JavaScript, often used for retrieving data from external services.",
    "answer": "Steps to use a REST API with Fetch in JavaScript: 1. Make a GET request to the API: 2. Make a POST request with data: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "start_char": 0,
    "end_char": 748
  },
  {
    "question": "How to implement pagination in React?",
    "label": "frontend,react,pagination",
    "language": "en",
    "context": "Pagination helps divide large amounts of data into smaller, more manageable parts, improving performance and user experience.",
    "answer": "Steps to implement pagination in React: 1. Define a state to manage the current page: 2. Slice the data based on the current page: 3. Create a function to change the page: 4. Render the paginated items and page buttons: 📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 828
  },
  {
    "question": "How to create a form in React?",
    "label": "frontend,react,form",
    "language": "en",
    "context": "Forms are used to collect user inputs in web applications. React provides a way to handle forms efficiently.",
    "answer": "Steps to create a form in React: 1. Define a state to manage form input: 2. Create the form element and bind input to state: 3. Handle form submission and validation if needed. 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 671
  },
  {
    "question": "How to implement a dark mode toggle in React?",
    "label": "frontend,react,darkmode",
    "language": "en",
    "context": "Dark mode is a popular feature in web applications that reduces eye strain by switching the color scheme to darker tones.",
    "answer": "Steps to implement a dark mode toggle in React: 1. Define a state for dark mode: 2. Toggle the dark mode state: 3. Apply dark mode styles conditionally: 4. Style dark and light modes in CSS: 📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 675
  },
  {
    "question": "How to make an HTTP GET request in JavaScript?",
    "label": "frontend,javascript,http,get",
    "language": "en",
    "context": "HTTP GET requests are commonly used to fetch data from a web server.",
    "answer": "Steps to make an HTTP GET request in JavaScript:\n\n1. Use the Fetch API:\n```javascript\nfetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n```\n\n2. Handle the response and errors.\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "start_char": 0,
    "end_char": 295
  },
  {
    "question": "How to implement state management in React using Redux?",
    "label": "frontend,react,redux,state-management",
    "language": "en",
    "context": "Redux is a state management library that helps manage the application state in a predictable manner.",
    "answer": "Steps to implement state management in React using Redux: 1. Install Redux and React-Redux: 2. Create Redux actions and reducers: 3. Create a Redux store and provide it to the application: 4. Connect Redux state to React components using `useSelector` and `useDispatch`: 📚 Reference: https://redux.js.org/",
    "start_char": 0,
    "end_char": 1060
  },
  {
    "question": "How to deploy a React app to Netlify?",
    "label": "frontend,react,netlify,deploy",
    "language": "en",
    "context": "Netlify is a platform that allows for easy deployment of React applications, offering continuous deployment, and automated build and deploy pipelines.",
    "answer": "Steps to deploy a React app to Netlify:\n\n1. Build the React app:\n```bash\nnpm run build\n```\n\n2. Push the code to a Git repository (GitHub, GitLab, etc.).\n\n3. Link the repository to Netlify:\n- Go to Netlify dashboard.\n- Click 'New site from Git'.\n- Select your Git provider and repository.\n\n4. Configure build settings:\n- Ensure the build command is `npm run build` and the publish directory is `build/`.\n\n5. Deploy the app.\n\n📚 Reference: https://docs.netlify.com/site-deploys/create-deploys/",
    "start_char": 0,
    "end_char": 392
  },
  {
    "question": "How to use map function in JavaScript?",
    "label": "frontend,javascript,map,function",
    "language": "en",
    "context": "The map function in JavaScript is used to iterate over an array and return a new array based on the result of the callback function for each element.",
    "answer": "Steps to use the map function in JavaScript: 1. Define an array to iterate over: 2. Use the map function to transform the array: 3. You can also use map to manipulate object arrays: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    "start_char": 0,
    "end_char": 679
  },
  {
    "question": "How to create a new file in Node.js?",
    "label": "backend,nodejs,file-system",
    "language": "en",
    "context": "Node.js provides a built-in module called fs (file system) that allows you to interact with the file system, including reading and writing files.",
    "answer": "Steps to create a new file in Node.js: 1. Require the fs module: 2. Use the `fs.writeFile` method to create a new file: 3. You can also create a file with the `fs.appendFile` method to add data to an existing file. 📚 Reference: https://nodejs.org/dist/latest-v16.x/docs/api/fs.html#fs_fs_writefile_file_data_options_callback",
    "start_char": 0,
    "end_char": 591
  },
  {
    "question": "How to handle errors in JavaScript using try-catch?",
    "label": "frontend,javascript,errors,try-catch",
    "language": "en",
    "context": "The try-catch statement in JavaScript allows you to handle errors gracefully, ensuring the program continues to run even after encountering an error.",
    "answer": "Steps to handle errors in JavaScript using try-catch: 1. Use try-catch block: 2. You can also include a `finally` block to execute code after try-catch, regardless of whether an error occurred: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch",
    "start_char": 0,
    "end_char": 546
  },
  {
    "question": "How to create a new array from an existing array in JavaScript?",
    "label": "frontend,javascript,array",
    "language": "en",
    "context": "JavaScript provides several methods to create a new array based on the original array, such as slice(), concat(), and spread syntax.",
    "answer": "Steps to create a new array in JavaScript: 1. Use the slice method to copy part of the array: 2. Use the concat method to combine arrays: 3. Use spread syntax to create a new array: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "start_char": 0,
    "end_char": 587
  },
  {
    "question": "How to fetch data from an API using Axios in JavaScript?",
    "label": "frontend,javascript,axios,api",
    "language": "en",
    "context": "Axios is a promise-based HTTP client for JavaScript that allows you to make HTTP requests, such as GET, POST, PUT, DELETE.",
    "answer": "Steps to fetch data from an API using Axios in JavaScript: 1. Install Axios: 2. Make a GET request with Axios: 3. Make a POST request with Axios: 📚 Reference: https://axios-http.com/",
    "start_char": 0,
    "end_char": 711
  },
  {
    "question": "How to set up a Node.js server with Express?",
    "label": "backend,nodejs,express,server",
    "language": "en",
    "context": "Express is a web application framework for Node.js that helps in creating a server and handling HTTP requests easily.",
    "answer": "Steps to set up a Node.js server with Express:\n\n1. Install Express:\n```bash\nnpm install express\n```\n\n2. Create a simple server:\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/', (req, res) => {\n  res.send('Hello, World!');\n});\n\napp.listen(3000, () => {\n  console.log('Server running on port 3000');\n});\n```\n\n3. Start the server:\n```bash\nnode app.js\n```\n\n📚 Reference: https://expressjs.com/en/starter/installing.html",
    "start_char": 0,
    "end_char": 417
  },
  {
    "question": "How to make an HTTP POST request using Fetch API?",
    "label": "frontend,javascript,http,post",
    "language": "en",
    "context": "HTTP POST requests are used to send data to a server. The Fetch API can be used to make such requests.",
    "answer": "Steps to make an HTTP POST request using Fetch API:\n\n1. Use Fetch to make a POST request:\n```javascript\nfetch('https://api.example.com/data', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ key: 'value' }),\n})\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "start_char": 0,
    "end_char": 469
  },
  {
    "question": "How to use LocalStorage to save data in JavaScript?",
    "label": "frontend,javascript,localstorage",
    "language": "en",
    "context": "LocalStorage allows you to store data on the client-side, even after the browser is closed.",
    "answer": "Steps to use LocalStorage to save data in JavaScript: 1. Set an item in LocalStorage: 2. Retrieve an item from LocalStorage: 3. Remove an item from LocalStorage: 4. Clear all items from LocalStorage: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 409
  },
  {
    "question": "How to add routing in a React application?",
    "label": "frontend,react,routing",
    "language": "en",
    "context": "React Router is a library used to manage routing in React applications, allowing for navigation between different views.",
    "answer": "Steps to add routing in a React application using React Router: 1. Install React Router: 2. Set up basic routing in your app: 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 485
  },
  {
    "question": "How to connect a MongoDB database to a Node.js application?",
    "label": "backend,nodejs,mongodb,db",
    "language": "en",
    "context": "MongoDB is a NoSQL database that can be easily integrated with Node.js using the Mongoose library.",
    "answer": "Steps to connect a MongoDB database to a Node.js application: 1. Install Mongoose: 2. Connect to the MongoDB database using Mongoose: 3. Define a model and interact with the database: 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 667
  },
  {
    "question": "How to create a simple CRUD API with Node.js and Express?",
    "label": "backend,nodejs,express,crud-api",
    "language": "en",
    "context": "A CRUD (Create, Read, Update, Delete) API is a common pattern for managing resources in a backend application.",
    "answer": "Steps to create a simple CRUD API with Node.js and Express: 1. Set up Express server: 2. Define routes for CRUD operations: 3. Start the server: 📚 Reference: https://expressjs.com/",
    "start_char": 0,
    "end_char": 707
  },
  {
    "question": "How to make a RESTful API using Flask in Python?",
    "label": "backend,python,flask,rest-api",
    "language": "en",
    "context": "Flask is a lightweight web framework for Python that is commonly used to build RESTful APIs.",
    "answer": "Steps to make a RESTful API using Flask in Python: 1. Install Flask: 2. Set up Flask app and routes: 3. Run the Flask app: 4. Make a GET request to `/items` endpoint: 📚 Reference: https://flask.palletsprojects.com/en/2.0.x/",
    "start_char": 0,
    "end_char": 554
  },
  {
    "question": "How to handle form validation in React?",
    "label": "frontend,react,form-validation",
    "language": "en",
    "context": "Form validation is an essential part of user input handling. React provides tools to validate inputs and handle form submission.",
    "answer": "Steps to handle form validation in React: 1. Create a form component: 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 484
  },
  {
    "question": "How to deploy a Python Flask app on Heroku?",
    "label": "backend,python,flask,heroku,deploy",
    "language": "en",
    "context": "Heroku is a cloud platform that allows for easy deployment of Python applications, including Flask apps.",
    "answer": "Steps to deploy a Python Flask app on Heroku:\n\n1. Create a `Procfile` in the project directory with the following content:\n```bash\nweb: python app.py\n```\n\n2. Install the Heroku CLI and log in:\n```bash\nheroku login\n```\n\n3. Initialize a git repository and push to Heroku:\n```bash\ngit init\nheroku create\ngit add .\ngit commit -m 'initial commit'\ngit push heroku master\n```\n\n4. Open the app in your browser:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/getting-started-with-python",
    "start_char": 0,
    "end_char": 657
  },
  {
    "question": "How to use async/await in JavaScript?",
    "label": "frontend,javascript,async-await",
    "language": "en",
    "context": "Async/await is a syntax in JavaScript that makes working with asynchronous code easier and more readable.",
    "answer": "Steps to use async/await in JavaScript: 1. Define an asynchronous function with the `async` keyword: 2. Call the asynchronous function: 3. Use `try/catch` for error handling: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 680
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "backend,nodejs,deploy,heroku",
    "language": "en",
    "context": "Heroku is a platform-as-a-service (PaaS) that allows developers to deploy applications quickly.",
    "answer": "Steps to deploy a Node.js application on Heroku:\n\n1. Create a `Procfile` in the project directory with the following content:\n```bash\nweb: node app.js\n```\n\n2. Install the Heroku CLI and log in:\n```bash\nheroku login\n```\n\n3. Initialize a git repository and push to Heroku:\n```bash\ngit init\nheroku create\ngit add .\ngit commit -m 'initial commit'\ngit push heroku master\n```\n\n4. Open the app in your browser:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/getting-started-with-nodejs",
    "start_char": 0,
    "end_char": 675
  },
  {
    "question": "How to create a basic React app?",
    "label": "frontend,react,create-app",
    "language": "en",
    "context": "React is a JavaScript library for building user interfaces, and creating a React app is simple with the Create React App tool.",
    "answer": "Steps to create a basic React app:\n\n1. Install Node.js and npm (if not already installed):\nDownload from https://nodejs.org/en/\n\n2. Create a new React app using Create React App:\n```bash\nnpx create-react-app my-app\n```\n\n3. Navigate to the app directory:\n```bash\ncd my-app\n```\n\n4. Start the development server:\n```bash\nnpm start\n```\n\n📚 Reference: https://reactjs.org/docs/create-a-new-react-app.html",
    "start_char": 0,
    "end_char": 439
  },
  {
    "question": "How to perform unit testing in Node.js?",
    "label": "backend,nodejs,unit-testing",
    "language": "en",
    "context": "Unit testing is a software testing technique where individual units of source code are tested in isolation.",
    "answer": "Steps to perform unit testing in Node.js:\n\n1. Install a testing framework like Mocha:\n```bash\nnpm install mocha --save-dev\n```\n\n2. Create a test file (e.g., `test.js`):\n```javascript\nconst assert = require('assert');\n\ndescribe('Math operations', function() {\n  it('should add two numbers correctly', function() {\n    assert.strictEqual(1 + 1, 2);\n  });\n});\n```\n\n3. Run the tests:\n```bash\nnpx mocha\n```\n\n📚 Reference: https://mochajs.org/",
    "start_char": 0,
    "end_char": 413
  },
  {
    "question": "How to handle CORS in a Node.js application?",
    "label": "backend,nodejs,cors",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a mechanism that allows many resources on a web page to be requested from another domain.",
    "answer": "Steps to handle CORS in a Node.js application:\n\n1. Install the `cors` middleware:\n```bash\nnpm install cors\n```\n\n2. Use the `cors` middleware in your Express app:\n```javascript\nconst express = require('express');\nconst cors = require('cors');\n\nconst app = express();\napp.use(cors());\n\napp.get('/data', (req, res) => {\n  res.json({ message: 'Hello, World!' });\n});\n\napp.listen(3000, () => {\n  console.log('Server running on port 3000');\n});\n```\n\n📚 Reference: https://expressjs.com/en/resources/middleware/cors.html",
    "start_char": 0,
    "end_char": 515
  },
  {
    "question": "How to set up a PostgreSQL database with Node.js?",
    "label": "backend,nodejs,postgresql,db",
    "language": "en",
    "context": "PostgreSQL is a powerful relational database system that can be used with Node.js through the `pg` package.",
    "answer": "Steps to set up a PostgreSQL database with Node.js: 1. Install the `pg` library: 2. Set up a connection to the database: 3. Run queries to interact with the database: 📚 Reference: https://node-postgres.com/",
    "start_char": 0,
    "end_char": 634
  },
  {
    "question": "How to use React Context for state management?",
    "label": "frontend,react,state-management",
    "language": "en",
    "context": "React Context is a way to manage state globally in a React application, passing data deeply through the component tree without props.",
    "answer": "Steps to use React Context for state management:\n\n1. Create a context:\n```javascript\nconst MyContext = React.createContext();\n```\n\n2. Wrap your components with the `Provider`:\n```javascript\n<MyContext.Provider value={/* state value */}>\n  <YourComponent />\n</MyContext.Provider>\n```\n\n3. Consume the context in a component:\n```javascript\nconst value = useContext(MyContext);\n```\n\n📚 Reference: https://reactjs.org/docs/context.html",
    "start_char": 0,
    "end_char": 329
  },
  {
    "question": "How to implement authentication in a Node.js app using Passport?",
    "label": "backend,nodejs,passport,authentication",
    "language": "en",
    "context": "Passport is a popular authentication middleware for Node.js, commonly used with Express.",
    "answer": "Steps to implement authentication in a Node.js app using Passport: 1. Install Passport and related packages: 2. Configure Passport for local authentication: 3. Use Passport in your Express app: 📚 Reference: http://www.passportjs.org/",
    "start_char": 0,
    "end_char": 585
  },
  {
    "question": "How to use Redux for state management in a React app?",
    "label": "frontend,react,redux,state-management",
    "language": "en",
    "context": "Redux is a state management library for JavaScript applications, often used with React to manage the application's state.",
    "answer": "Steps to use Redux for state management in a React app: 1. Install Redux and React-Redux: 2. Create a Redux store: 3. Use Redux in your React app: 📚 Reference: https://react-redux.js.org/",
    "start_char": 0,
    "end_char": 597
  },
  {
    "question": "How to use WebSockets in a Node.js application?",
    "label": "backend,nodejs,websockets",
    "language": "en",
    "context": "WebSockets provide a full-duplex communication channel over a single TCP connection, often used for real-time data exchange.",
    "answer": "Steps to use WebSockets in a Node.js application: 1. Install the `ws` library: 2. Create a WebSocket server: 3. Connect to the WebSocket server from a client: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 585
  },
  {
    "question": "How to implement rate limiting in an Express application?",
    "label": "backend,nodejs,express,rate-limiting",
    "language": "en",
    "context": "Rate limiting is used to control the rate at which clients can make requests to an API to prevent abuse or overload.",
    "answer": "Steps to implement rate limiting in an Express application:\n\n1. Install the `express-rate-limit` package:\n```bash\nnpm install express-rate-limit\n```\n\n2. Set up rate limiting middleware:\n```javascript\nconst rateLimit = require('express-rate-limit');\n\nconst limiter = rateLimit({\n  windowMs: 15 * 60 * 1000,  // 15 minutes\n  max: 100,  // limit each IP to 100 requests per windowMs\n});\n\napp.use(limiter);\n```\n\n📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 494
  },
  {
    "question": "How to handle errors in an Express application?",
    "label": "backend,nodejs,express,error-handling",
    "language": "en",
    "context": "Error handling is an essential part of developing a Node.js Express application to catch and handle runtime errors.",
    "answer": "Steps to handle errors in an Express application:\n\n1. Define an error handling middleware function:\n```javascript\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something went wrong!');\n});\n```\n\n2. Trigger an error by using `next()`:\n```javascript\napp.get('/', (req, res, next) => {\n  next(new Error('Sample Error')); // Manually trigger an error\n});\n```\n\n📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 357
  },
  {
    "question": "How to implement JWT authentication in a Node.js app?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) is a compact and secure way of transmitting information between parties as a JSON object.",
    "answer": "Steps to implement JWT authentication in a Node.js app: 1. Install the `jsonwebtoken` package: 2. Generate a JWT when the user logs in: 3. Verify the JWT for protected routes: 📚 Reference: https://www.digitalocean.com/community/tutorials/",
    "start_char": 0,
    "end_char": 600
  },
  {
    "question": "How to integrate Stripe for payments in a Node.js application?",
    "label": "backend,nodejs,stripe,payments",
    "language": "en",
    "context": "Stripe is a popular online payment gateway used to accept payments in web applications.",
    "answer": "Steps to integrate Stripe for payments in a Node.js application: 1. Install the `stripe` package: 2. Set up the Stripe API key in your application: 3. Create a payment intent: 4. Handle the payment on the client-side using Stripe.js. 📚 Reference: https://stripe.com/docs/payments",
    "start_char": 0,
    "end_char": 589
  },
  {
    "question": "How to build a REST API with Express and MongoDB?",
    "label": "backend,nodejs,express,mongodb,api",
    "language": "en",
    "context": "A REST API can be built easily using Express and MongoDB to handle HTTP requests and manage data.",
    "answer": "Steps to build a REST API with Express and MongoDB: 1. Install dependencies: 2. Connect to MongoDB using Mongoose: 3. Define a Mongoose model: 4. Create API routes: 📚 Reference: https://expressjs.com/en/starter/installing.html",
    "start_char": 0,
    "end_char": 599
  },
  {
    "question": "How to deploy a React application to Netlify?",
    "label": "frontend,react,deploy,netlify",
    "language": "en",
    "context": "Netlify is a platform that provides hosting for static websites and web applications.",
    "answer": "Steps to deploy a React application to Netlify:\n\n1. Build your React app for production:\n```bash\nnpm run build\n```\n\n2. Sign up/log in to Netlify and create a new site.\n\n3. Connect your Git repository or drag-and-drop the `build` folder into Netlify's UI.\n\n4. Wait for Netlify to deploy the app and visit the provided URL.\n\n📚 Reference: https://docs.netlify.com/",
    "start_char": 0,
    "end_char": 349
  },
  {
    "question": "How to implement file upload in an Express application?",
    "label": "backend,nodejs,express,file-upload",
    "language": "en",
    "context": "File uploads are common in web applications, allowing users to send files to the server.",
    "answer": "Steps to implement file upload in an Express application: 1. Install the `multer` package: 2. Set up multer for handling file uploads: 3. Create an upload route: 4. Configure the front-end to send files using `FormData`. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 497
  },
  {
    "question": "How to implement search functionality in MongoDB?",
    "label": "backend,mongodb,search",
    "language": "en",
    "context": "Search functionality is often required to allow users to find specific data from a collection.",
    "answer": "Steps to implement search functionality in MongoDB:\n\n1. Create an index for the field you want to search:\n```javascript\nUser.createIndex({ name: 'text' });\n```\n\n2. Perform a text search query:\n```javascript\nUser.find({ $text: { $search: 'John' } }, (err, users) => {\n  console.log(users);\n});\n```\n\n📚 Reference: https://docs.mongodb.com/manual/text-search/",
    "start_char": 0,
    "end_char": 379
  },
  {
    "question": "How to handle large datasets in Node.js?",
    "label": "backend,nodejs,large-datasets",
    "language": "en",
    "context": "Handling large datasets in Node.js requires efficient processing to avoid memory overload.",
    "answer": "Steps to handle large datasets in Node.js:\n\n1. Use streams to process large files chunk by chunk:\n```javascript\nconst fs = require('fs');\nconst readStream = fs.createReadStream('largefile.txt');\nreadStream.on('data', (chunk) => {\n  console.log('Received chunk:', chunk);\n});\n```\n\n2. Implement pagination for API requests.\n\n📚 Reference: https://nodejs.org/en/docs/guides/",
    "start_char": 0,
    "end_char": 374
  },
  {
    "question": "How to create a real-time chat application with Socket.io in Node.js?",
    "label": "backend,nodejs,socket.io,real-time",
    "language": "en",
    "context": "Socket.io allows real-time, bidirectional communication between clients and the server, ideal for chat applications.",
    "answer": "Steps to create a real-time chat application with Socket.io in Node.js: 1. Install `socket.io`: 2. Set up a basic server with Socket.io: 3. Connect the client to the server and send/receive messages. 📚 Reference: https://socket.io/docs/",
    "start_char": 0,
    "end_char": 597
  },
  {
    "question": "How to use the async/await pattern in Node.js?",
    "label": "backend,nodejs,async-await",
    "language": "en",
    "context": "The async/await pattern is a modern way to handle asynchronous operations in JavaScript, simplifying promise handling.",
    "answer": "Steps to use the async/await pattern in Node.js: 1. Define an `async` function: 2. Call the async function and handle errors using `try/catch`: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 463
  },
  {
    "question": "How to create a REST API with Flask?",
    "label": "backend,python,flask,api",
    "language": "en",
    "context": "Flask is a lightweight WSGI web application framework in Python that is useful for building REST APIs.",
    "answer": "Steps to create a REST API with Flask:\n\n1. Install Flask:\n```bash\npip install Flask\n```\n\n2. Create the Flask application:\n```python\nfrom flask import Flask, jsonify\napp = Flask(__name__)\n```\n\n3. Define a route to handle API requests:\n```python\n@app.route('/api', methods=['GET'])\ndef get_api_data():\n  return jsonify({'message': 'Hello, world!'})\n```\n\n4. Run the Flask application:\n```python\nif __name__ == '__main__':\n  app.run(debug=True)\n```\n\n📚 Reference: https://flask.palletsprojects.com/",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "How to add authentication to a Flask API?",
    "label": "backend,python,flask,authentication",
    "language": "en",
    "context": "Flask can easily integrate authentication mechanisms such as JWT or OAuth.",
    "answer": "Steps to add authentication to a Flask API: 1. Install Flask-JWT-Extended: 2. Initialize JWT manager: 3. Create a route to login and generate JWT: 4. Protect routes using JWT: 📚 Reference: https://flask-jwt-extended.readthedocs.io/",
    "start_char": 0,
    "end_char": 681
  },
  {
    "question": "How to perform a bulk insert in MongoDB?",
    "label": "backend,mongodb,bulk-insert",
    "language": "en",
    "context": "MongoDB allows inserting multiple documents at once using the `insertMany()` method for bulk insert operations.",
    "answer": "Steps to perform a bulk insert in MongoDB:\n\n1. Prepare your documents:\n```javascript\nconst documents = [\n  { name: 'Alice', age: 25 },\n  { name: 'Bob', age: 30 }\n];\n```\n\n2. Use `insertMany()` to insert the documents:\n```javascript\nconst result = await db.collection('users').insertMany(documents);\nconsole.log(`${result.insertedCount} documents were inserted`);\n```\n\n📚 Reference: https://docs.mongodb.com/manual/reference/method/db.collection.insertMany/",
    "start_char": 0,
    "end_char": 399
  },
  {
    "question": "How to configure CORS in an Express application?",
    "label": "backend,nodejs,express,cors",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) is a mechanism to allow or restrict resources to be requested from another domain.",
    "answer": "Steps to configure CORS in an Express application:\n\n1. Install the `cors` package:\n```bash\nnpm install cors\n```\n\n2. Use the CORS middleware in your application:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. Optionally, configure CORS with specific settings:\n```javascript\napp.use(cors({ origin: 'https://example.com' }));\n```\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 333
  },
  {
    "question": "How to use Sequelize ORM with MySQL?",
    "label": "backend,nodejs,sequelize,mysql,orm",
    "language": "en",
    "context": "Sequelize is a promise-based ORM for Node.js that supports multiple databases, including MySQL.",
    "answer": "Steps to use Sequelize ORM with MySQL: 1. Install Sequelize and MySQL2: 2. Set up the Sequelize instance and connect to MySQL: 3. Define a model: 4. Sync and perform operations: 📚 Reference: https://sequelize.org/master/",
    "start_char": 0,
    "end_char": 591
  },
  {
    "question": "How to use Redis for caching in Node.js?",
    "label": "backend,nodejs,redis,caching",
    "language": "en",
    "context": "Redis is a powerful in-memory data store that is often used for caching data to improve performance in web applications.",
    "answer": "Steps to use Redis for caching in Node.js:\n\n1. Install the Redis client:\n```bash\nnpm install redis\n```\n\n2. Set up Redis connection:\n```javascript\nconst redis = require('redis');\nconst client = redis.createClient();\n```\n\n3. Set data in the cache:\n```javascript\nclient.set('key', 'value', redis.print);\n```\n\n4. Get data from the cache:\n```javascript\nclient.get('key', (err, reply) => {\n  console.log(reply); // 'value'\n});\n```\n\n📚 Reference: https://redis.io/docs/",
    "start_char": 0,
    "end_char": 397
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "backend,nodejs,deploy,heroku",
    "language": "en",
    "context": "Heroku is a platform-as-a-service (PaaS) that allows developers to deploy, manage, and scale applications in a variety of languages, including Node.js.",
    "answer": "Steps to deploy a Node.js app to Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Initialize a Git repository and push your code to Heroku:\n```bash\ngit init\nheroku create\ngit add .\ngit commit -m 'initial commit'\ngit push heroku master\n```\n\n4. Open the deployed app:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 453
  },
  {
    "question": "How to implement pagination in MongoDB?",
    "label": "backend,mongodb,pagination",
    "language": "en",
    "context": "Pagination allows you to display a large number of results across multiple pages.",
    "answer": "Steps to implement pagination in MongoDB:\n\n1. Define the page and limit parameters:\n```javascript\nconst page = parseInt(req.query.page) || 1;\nconst limit = parseInt(req.query.limit) || 10;\n```\n\n2. Query the database with pagination:\n```javascript\nconst users = await User.find()\n  .skip((page - 1) * limit)\n  .limit(limit);\n```\n\n3. Return the paginated results:\n```javascript\nres.json({ users, page, limit });\n```\n\n📚 Reference: https://docs.mongodb.com/manual/reference/method/cursor.skip/",
    "start_char": 0,
    "end_char": 424
  },
  {
    "question": "How to handle file uploads in a React app?",
    "label": "frontend,react,file-upload",
    "language": "en",
    "context": "In a React application, you can handle file uploads by using `FormData` and sending the files to the server.",
    "answer": "Steps to handle file uploads in a React app: 1. Create a form with a file input field: 2. Handle file selection in the `onChange` handler: 3. Send the file to the server using `FormData` and `fetch`: 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 516
  },
  {
    "question": "How to create a GraphQL API with Apollo Server?",
    "label": "backend,graphql,apollo-server,api",
    "language": "en",
    "context": "Apollo Server is a community-driven GraphQL server that allows you to easily set up a GraphQL API.",
    "answer": "Steps to create a GraphQL API with Apollo Server: 1. Install Apollo Server and GraphQL: 2. Define your GraphQL schema: 3. Set up Apollo Server with your schema and resolvers: 📚 Reference: https://www.apollographql.com/docs/apollo-server/",
    "start_char": 0,
    "end_char": 570
  },
  {
    "question": "How to handle errors in Express?",
    "label": "backend,nodejs,express,error-handling",
    "language": "en",
    "context": "Error handling in Express can be done by using middleware to catch and respond to errors.",
    "answer": "Steps to handle errors in Express:\n\n1. Create an error-handling middleware:\n```javascript\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something went wrong!');\n});\n```\n\n2. Trigger errors in your routes:\n```javascript\napp.get('/', (req, res) => {\n  throw new Error('Example error');\n});\n```\n\n3. Handle the errors in your middleware and send a response accordingly.\n\n📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "How to optimize database queries in MongoDB?",
    "label": "backend,mongodb,performance,optimization",
    "language": "en",
    "context": "MongoDB provides several ways to optimize queries, such as using indexes and limiting results.",
    "answer": "Steps to optimize database queries in MongoDB:\n\n1. Create indexes on frequently queried fields:\n```javascript\ndb.users.createIndex({ 'name': 1 });\n```\n\n2. Use the `limit()` method to restrict the number of results:\n```javascript\ndb.users.find().limit(10);\n```\n\n3. Use projections to retrieve only necessary fields:\n```javascript\ndb.users.find({}, { 'name': 1, 'email': 1 });\n```\n\n📚 Reference: https://docs.mongodb.com/manual/tutorial/query-documents/",
    "start_char": 0,
    "end_char": 374
  },
  {
    "question": "How to deploy a React app with Firebase Hosting?",
    "label": "frontend,react,deployment,firebase",
    "language": "en",
    "context": "Firebase Hosting provides fast and secure hosting for your web app, including single-page apps like React.",
    "answer": "Steps to deploy a React app with Firebase Hosting:\n\n1. Install Firebase CLI:\n```bash\nnpm install -g firebase-tools\n```\n\n2. Initialize Firebase project:\n```bash\nfirebase init\n```\n\n3. Build your React app:\n```bash\nnpm run build\n```\n\n4. Deploy your app:\n```bash\nfirebase deploy\n```\n\n📚 Reference: https://firebase.google.com/docs/hosting",
    "start_char": 0,
    "end_char": 342
  },
  {
    "question": "How to create a middleware in Express?",
    "label": "backend,nodejs,express,middleware",
    "language": "en",
    "context": "Middleware functions in Express are used to process requests before they are sent to route handlers.",
    "answer": "Steps to create a middleware in Express:\n\n1. Create a middleware function:\n```javascript\nconst myMiddleware = (req, res, next) => {\n  console.log('Request received');\n  next();\n};\n```\n\n2. Use the middleware in the application:\n```javascript\napp.use(myMiddleware);\n```\n\n3. Define routes after the middleware:\n```javascript\napp.get('/', (req, res) => {\n  res.send('Hello, World!');\n});\n```\n\n📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 387
  },
  {
    "question": "How to secure a Node.js app using HTTPS?",
    "label": "backend,nodejs,security,https",
    "language": "en",
    "context": "Securing a Node.js app with HTTPS ensures that the data transmitted between the server and clients is encrypted.",
    "answer": "Steps to secure a Node.js app using HTTPS: 1. Obtain an SSL certificate: 2. Set up HTTPS in your Node.js server: 📚 Reference: https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/#https",
    "start_char": 0,
    "end_char": 468
  },
  {
    "question": "How to handle asynchronous code in JavaScript?",
    "label": "frontend,javascript,asynchronous,promises",
    "language": "en",
    "context": "JavaScript provides ways to handle asynchronous operations such as Promises, async/await, and callbacks.",
    "answer": "Steps to handle asynchronous code in JavaScript: 1. Using Promises: 2. Using async/await: 3. Using callbacks: 📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How to deploy a Django app to Heroku?",
    "label": "backend,python,django,deploy,heroku",
    "language": "en",
    "context": "Heroku is a platform-as-a-service (PaaS) that makes it easy to deploy and manage Django apps.",
    "answer": "Steps to deploy a Django app to Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Initialize a Git repository and commit your code:\n```bash\ngit init\ngit add .\ngit commit -m 'initial commit'\n```\n\n3. Create a new Heroku app:\n```bash\nheroku create\n```\n\n4. Push the code to Heroku:\n```bash\ngit push heroku master\n```\n\n5. Open your app:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 368
  },
  {
    "question": "How to handle session management in Express?",
    "label": "backend,nodejs,express,session",
    "language": "en",
    "context": "Express session middleware allows you to manage sessions in your application.",
    "answer": "Steps to handle session management in Express:\n\n1. Install the session middleware:\n```bash\nnpm install express-session\n```\n\n2. Set up session middleware:\n```javascript\nconst session = require('express-session');\napp.use(session({\n  secret: 'mysecret',\n  resave: false,\n  saveUninitialized: true\n}));\n```\n\n3. Use sessions in your routes:\n```javascript\napp.get('/login', (req, res) => {\n  req.session.user = 'Alice';\n  res.send('Logged in');\n});\n```\n\n📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 381
  },
  {
    "question": "How to implement authentication with JWT in Django?",
    "label": "backend,python,django,jwt,authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) can be used to authenticate users in Django applications.",
    "answer": "Steps to implement JWT authentication in Django: 1. Install the required packages: 2. Configure JWT authentication in settings.py: 3. Create token views to obtain and refresh JWT tokens: 📚 Reference: https://django-rest-framework-simplejwt.readthedocs.io/en/latest/",
    "start_char": 0,
    "end_char": 588
  },
  {
    "question": "How to add logging to a Node.js app?",
    "label": "backend,nodejs,logging",
    "language": "en",
    "context": "Logging is essential for debugging and monitoring the health of an application.",
    "answer": "Steps to add logging to a Node.js app: 1. Install a logging library like Winston: 2. Set up a logger instance: 3. Log messages in your app: 📚 Reference: https://github.com/winstonjs/winston",
    "start_char": 0,
    "end_char": 441
  },
  {
    "question": "How to use React Context API for state management?",
    "label": "frontend,react,state-management,context-api",
    "language": "en",
    "context": "React Context API allows you to share state across your components without passing props manually.",
    "answer": "Steps to use React Context API for state management: 1. Create a Context: 2. Create a provider component: 3. Use the context in child components: 📚 Reference: https://reactjs.org/docs/context.html",
    "start_char": 0,
    "end_char": 414
  },
  {
    "question": "How to optimize images for web performance?",
    "label": "frontend,web-performance,optimization,images",
    "language": "en",
    "context": "Optimizing images helps reduce page load time and improve performance on the web.",
    "answer": "Steps to optimize images for web performance: 1. Use the correct file format: 2. Compress images: 3. Resize images for different screen sizes: 4. Implement lazy loading: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/Performance/Optimizing_images",
    "start_char": 0,
    "end_char": 518
  },
  {
    "question": "How to create a RESTful API in Django?",
    "label": "backend,python,django,restful-api",
    "language": "en",
    "context": "Django can be used to create a RESTful API using Django REST framework (DRF).",
    "answer": "Steps to create a RESTful API in Django: 1. Install Django REST framework: 2. Add `rest_framework` to `INSTALLED_APPS` in settings.py. 3. Create a serializer class to define how to convert model data: 4. Create API views to handle HTTP methods (GET, POST, etc.): 5. Set up URL routing for API endpoints: 📚 Reference: https://www.django-rest-framework.org/",
    "start_char": 0,
    "end_char": 582
  },
  {
    "question": "How to validate forms in React?",
    "label": "frontend,react,forms,validation",
    "language": "en",
    "context": "Validating forms in React ensures that the data submitted is correct and prevents errors.",
    "answer": "Steps to validate forms in React: 1. Create a state for form fields: 2. Create a validation function: 3. Handle form submission: 4. Use controlled components for form fields: 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 416
  },
  {
    "question": "How to add authentication to a Node.js app using Passport?",
    "label": "backend,nodejs,passport,authentication",
    "language": "en",
    "context": "Passport.js is a simple authentication middleware for Node.js, supporting various authentication strategies.",
    "answer": "Steps to add authentication to a Node.js app using Passport: 1. Install Passport and related modules: 2. Set up Passport strategies: 3. Initialize Passport and session middleware in your app: 4. Set up login route: 📚 Reference: http://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 445
  },
  {
    "question": "How to use SQL JOIN to combine data from multiple tables?",
    "label": "backend,sql,join,queries",
    "language": "en",
    "context": "SQL JOIN allows you to combine rows from two or more tables based on a related column.",
    "answer": "Steps to use SQL JOIN:\n\n1. Use INNER JOIN to combine rows where there is a match in both tables:\n```sql\nSELECT * FROM orders\nINNER JOIN customers ON orders.customer_id = customers.id;\n```\n\n2. Use LEFT JOIN to combine all rows from the left table and matched rows from the right table:\n```sql\nSELECT * FROM orders\nLEFT JOIN customers ON orders.customer_id = customers.id;\n```\n\n3. Use RIGHT JOIN for the opposite of LEFT JOIN.\n\n📚 Reference: https://www.w3schools.com/sql/sql_join.asp",
    "start_char": 0,
    "end_char": 372
  },
  {
    "question": "How to set up a WebSocket server in Node.js?",
    "label": "backend,nodejs,websocket,real-time",
    "language": "en",
    "context": "WebSocket provides full-duplex communication channels over a single TCP connection, often used for real-time applications.",
    "answer": "Steps to set up a WebSocket server in Node.js: 1. Install the `ws` library: 2. Create a WebSocket server: 3. Connect to the WebSocket server from a client: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 419
  },
  {
    "question": "How to configure webpack for a React app?",
    "label": "frontend,webpack,react,configuration",
    "language": "en",
    "context": "Webpack is a module bundler that compiles and bundles JavaScript, CSS, and other assets.",
    "answer": "Steps to configure webpack for a React app: 1. Install necessary dependencies: 2. Create a `webpack.config.js` file: 3. Run the webpack dev server: 📚 Reference: https://webpack.js.org/guides/webpack-dev-server/",
    "start_char": 0,
    "end_char": 547
  },
  {
    "question": "How to create a Docker image for a Node.js app?",
    "label": "backend,nodejs,docker,containerization",
    "language": "en",
    "context": "Docker allows you to package applications and dependencies into a standardized unit for software development.",
    "answer": "Steps to create a Docker image for a Node.js app:\n\n1. Create a `Dockerfile` in your project directory:\n```Dockerfile\nFROM node:14\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD ['npm', 'start']\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t my-node-app .\n```\n\n3. Run the Docker container:\n```bash\ndocker run -p 3000:3000 my-node-app\n```\n\n📚 Reference: https://nodejs.org/en/docs/guides/nodejs-docker-webapp/",
    "start_char": 0,
    "end_char": 439
  },
  {
    "question": "How to implement pagination in React?",
    "label": "frontend,react,pagination",
    "language": "en",
    "context": "Pagination is a common feature in React for handling large sets of data by breaking them into multiple pages.",
    "answer": "Steps to implement pagination in React: 1. Set up a state for the current page and data: 2. Create a function to fetch data based on the current page: 3. Add pagination controls: 4. Display the data and pagination controls: 📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 453
  },
  {
    "question": "How to set up environment variables in Node.js?",
    "label": "backend,nodejs,environment-variables",
    "language": "en",
    "context": "Environment variables in Node.js are used to configure the environment in which your application runs.",
    "answer": "Steps to set up environment variables in Node.js: 1. Create a `.env` file in the root directory of your project: 2. Install the `dotenv` package: 3. Add the following code to load environment variables in your application: 4. Use the environment variables in your code: 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 448
  },
  {
    "question": "How to handle errors in Express.js?",
    "label": "backend,nodejs,express,error-handling",
    "language": "en",
    "context": "Error handling in Express.js ensures that errors are properly caught and managed.",
    "answer": "Steps to handle errors in Express.js: 1. Create an error-handling middleware: 2. Use `next()` to pass errors to the middleware: 3. Use custom error classes for more structured error handling: 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 389
  },
  {
    "question": "How to create a React hook to manage form state?",
    "label": "frontend,react,forms,custom-hook",
    "language": "en",
    "context": "Creating a custom React hook helps you to abstract logic related to managing form states.",
    "answer": "Steps to create a custom React hook for form state management: 1. Create a `useForm` hook: 2. Use the `useForm` hook in a form component: 📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 424
  },
  {
    "question": "How to set up an Nginx server to serve a Node.js app?",
    "label": "backend,nginx,nodejs,server-setup",
    "language": "en",
    "context": "Nginx can be used as a reverse proxy to forward requests to a Node.js app running on a different port.",
    "answer": "Steps to set up an Nginx server to serve a Node.js app: 1. Install Nginx on your server: 2. Configure Nginx to forward requests to your Node.js app: 3. Restart Nginx: 4. Start your Node.js app: 📚 Reference: https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-app-with-nginx-on-ubuntu-18-04",
    "start_char": 0,
    "end_char": 532
  },
  {
    "question": "How to use MongoDB with Mongoose in Node.js?",
    "label": "backend,mongodb,nodejs,mongoose",
    "language": "en",
    "context": "Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js.",
    "answer": "Steps to use MongoDB with Mongoose in Node.js: 1. Install Mongoose: 2. Connect to MongoDB using Mongoose: 3. Create a Mongoose schema and model: 4. Perform CRUD operations: 📚 Reference: https://mongoosejs.com/docs/guide.html",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "How to set up routing in an Express.js app?",
    "label": "backend,nodejs,express,routing",
    "language": "en",
    "context": "Routing in Express.js allows you to define how an app responds to client requests to different endpoints.",
    "answer": "Steps to set up routing in an Express.js app: 1. Create routes using `app.get`, `app.post`, etc.: 2. Organize routes into separate modules for scalability: 3. Use `app.use` to load the route module: 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 394
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "backend,nodejs,heroku,deployment",
    "language": "en",
    "context": "Heroku is a platform as a service (PaaS) that enables you to deploy and manage applications in the cloud.",
    "answer": "Steps to deploy a Node.js app to Heroku:\n\n1. Install Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Create a new Heroku app:\n```bash\nheroku create my-node-app\n```\n\n4. Push the code to Heroku:\n```bash\ngit push heroku master\n```\n\n5. Open the app in the browser:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 348
  },
  {
    "question": "How to set up Webpack for a production build?",
    "label": "frontend,webpack,production-build",
    "language": "en",
    "context": "Webpack is a powerful bundler that can also be configured for optimized production builds.",
    "answer": "Steps to set up Webpack for a production build: 1. Install production dependencies: 2. Create a `webpack.prod.js` configuration file: 3. Merge with common configuration using `webpack-merge`: 4. Run the production build: 📚 Reference: https://webpack.js.org/guides/production/",
    "start_char": 0,
    "end_char": 483
  },
  {
    "question": "How to set up a Redux store in a React app?",
    "label": "frontend,react,redux,store",
    "language": "en",
    "context": "Redux is a state management library used in React for managing application state globally.",
    "answer": "Steps to set up a Redux store in a React app: 1. Install Redux and React-Redux: 2. Create a reducer function: 3. Create the Redux store: 4. Wrap your application with the `Provider` component from React-Redux: 📚 Reference: https://redux.js.org/introduction/getting-started",
    "start_char": 0,
    "end_char": 482
  },
  {
    "question": "How to configure a MySQL database connection in Node.js?",
    "label": "backend,nodejs,mysql,configuration",
    "language": "en",
    "context": "Setting up a MySQL database connection in Node.js involves installing the MySQL package and configuring the connection.",
    "answer": "Steps to configure a MySQL database connection in Node.js: 1. Install MySQL package: 2. Create a connection to the MySQL database: 3. Connect to the database: 4. Perform queries: 📚 Reference: https://www.npmjs.com/package/mysql",
    "start_char": 0,
    "end_char": 372
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) authentication is a method for securing API endpoints and handling user authentication in Node.js apps.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install necessary packages: 2. Create a function to generate JWT tokens: 3. Hash user passwords using bcrypt: 4. Verify JWT token in routes: 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 517
  },
  {
    "question": "How to create a custom hook for form validation in React?",
    "label": "frontend,react,custom-hook,forms,validation",
    "language": "en",
    "context": "A custom hook for form validation abstracts the logic for handling form validation in React.",
    "answer": "Steps to create a custom hook for form validation in React: 1. Create the `useValidation` hook: 2. Use the `useValidation` hook in a form component: 📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 561
  },
  {
    "question": "How to create a REST API using Express.js?",
    "label": "backend,nodejs,express,rest-api",
    "language": "en",
    "context": "Express.js is a lightweight framework for building REST APIs in Node.js.",
    "answer": "Steps to create a REST API using Express.js: 1. Install Express.js: 2. Set up the server: 3. Create routes for the API: 4. Use middleware for JSON parsing: 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 395
  },
  {
    "question": "How to deploy a React app to Netlify?",
    "label": "frontend,react,netlify,deployment",
    "language": "en",
    "context": "Netlify is a platform for deploying and hosting static websites, including React apps.",
    "answer": "Steps to deploy a React app to Netlify:\n\n1. Build the React app:\n```bash\nnpm run build\n```\n\n2. Create a Netlify account and install Netlify CLI:\n```bash\nnpm install -g netlify-cli\n```\n\n3. Link your project with Netlify:\n```bash\nnetlify init\n```\n\n4. Deploy the app:\n```bash\nnetlify deploy --prod\n```\n\n5. Access your deployed app:\n```bash\nnetlify open\n```\n\n📚 Reference: https://docs.netlify.com/sites/deploys/",
    "start_char": 0,
    "end_char": 328
  },
  {
    "question": "How to use session in Express.js?",
    "label": "backend,nodejs,express,session",
    "language": "en",
    "context": "Sessions in Express.js are used to store data for individual users to persist between requests.",
    "answer": "Steps to use sessions in Express.js: 1. Install `express-session` package: 2. Set up the session middleware: 3. Store data in the session: 4. Access session data in a route: 📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 397
  },
  {
    "question": "How to use CSS Grid to create a two-column layout?",
    "label": "frontend,css,grid,layout",
    "language": "en",
    "context": "CSS Grid is a powerful layout system in CSS used for creating complex layouts.",
    "answer": "Steps to create a two-column layout using CSS Grid: 1. Create a container element with `display: grid`: 2. Place items inside the container: 3. Customize the layout: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout",
    "start_char": 0,
    "end_char": 307
  },
  {
    "question": "How to create a custom hook for handling API requests in React?",
    "label": "frontend,react,custom-hook,api",
    "language": "en",
    "context": "Custom hooks allow you to extract and reuse logic across components in React.",
    "answer": "Steps to create a custom hook for handling API requests in React: 1. Create the `useFetch` hook: 2. Use the `useFetch` hook in a component: 📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 559
  },
  {
    "question": "How to create a RESTful API in Flask?",
    "label": "backend,flask,api,restful",
    "language": "en",
    "context": "Flask is a micro web framework for Python, often used to build small web applications and APIs.",
    "answer": "Steps to create a RESTful API in Flask: 1. Install Flask: 2. Create a basic Flask app: 3. Create routes for your API: 4. Run the Flask app: 📚 Reference: https://flask.palletsprojects.com/en/2.0.x/",
    "start_char": 0,
    "end_char": 512
  },
  {
    "question": "How to set up a cron job in Linux?",
    "label": "linux,cron,job,scheduling",
    "language": "en",
    "context": "Cron jobs are scheduled tasks in Linux/Unix systems that run at specific intervals.",
    "answer": "Steps to set up a cron job in Linux:\n\n1. Open the cron table:\n```bash\ncrontab -e\n```\n\n2. Add a new cron job entry with the following format:\n```bash\n* * * * * /path/to/command\n```\nThe five asterisks represent (in order): minute, hour, day of the month, month, day of the week.\n\nFor example, to run a script every day at 2 AM:\n```bash\n0 2 * * * /path/to/script.sh\n```\n\n3. Save and exit the editor.\n\n4. Check your cron jobs:\n```bash\ncrontab -l\n```\n\n📚 Reference: https://linux.die.net/man/5/crontab",
    "start_char": 0,
    "end_char": 417
  },
  {
    "question": "How to implement role-based access control (RBAC) in a Node.js app?",
    "label": "backend,nodejs,rbac,access-control",
    "language": "en",
    "context": "RBAC is a method for restricting system access based on user roles in a Node.js application.",
    "answer": "Steps to implement RBAC in a Node.js app: 1. Define roles and permissions: 2. Create middleware to check user role and permissions: 3. Apply middleware in routes: 4. Ensure user roles are assigned correctly during authentication. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 428
  },
  {
    "question": "How to use the Fetch API to make HTTP requests in JavaScript?",
    "label": "frontend,api,fetch,http-requests",
    "language": "en",
    "context": "The Fetch API provides a simple way to make HTTP requests in JavaScript.",
    "answer": "Steps to use the Fetch API: 1. Make a GET request: 2. Make a POST request with data: 3. Use async/await for a cleaner approach: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",
    "start_char": 0,
    "end_char": 507
  },
  {
    "question": "How to use CSS Flexbox for responsive design?",
    "label": "frontend,css,flexbox,responsive-design",
    "language": "en",
    "context": "Flexbox is a layout model in CSS that allows for flexible and responsive layouts.",
    "answer": "Steps to use CSS Flexbox for responsive design: 1. Set the container to `display: flex`: 2. Use `flex-wrap` to allow items to wrap in smaller screens: 3. Use `media queries` to adjust layout for different screen sizes: 4. Set `flex` property on items for flexibility: 📚 Reference: https://css-tricks.com/snippets/css/a-guide-to-flexbox/",
    "start_char": 0,
    "end_char": 456
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "backend,nodejs,heroku,deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that allows easy deployment of Node.js applications.",
    "answer": "Steps to deploy a Node.js app to Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Create a new Heroku app:\n```bash\nheroku create\n```\n\n4. Deploy the app:\n```bash\ngit push heroku main\n```\n\n5. Open the deployed app in the browser:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 347
  },
  {
    "question": "How to set up a MongoDB database in Node.js?",
    "label": "backend,nodejs,mongodb,setup",
    "language": "en",
    "context": "MongoDB is a NoSQL database commonly used with Node.js for storing unstructured data.",
    "answer": "Steps to set up a MongoDB database in Node.js: 1. Install MongoDB Node.js driver: 2. Connect to the MongoDB database: 3. Perform database operations (e.g., insert data): 📚 Reference: https://mongodb.github.io/node-mongodb-native/",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "How to use CSS Grid to create a layout?",
    "label": "frontend,css,grid,layout",
    "language": "en",
    "context": "CSS Grid is a powerful layout system for creating complex web layouts.",
    "answer": "Steps to use CSS Grid to create a layout: 1. Set the container to `display: grid`: 2. Place items inside the container: 3. Customize the layout: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout",
    "start_char": 0,
    "end_char": 307
  },
  {
    "question": "How to create a custom hook for handling API requests in React?",
    "label": "frontend,react,custom-hook,api",
    "language": "en",
    "context": "Custom hooks allow you to extract and reuse logic across components in React.",
    "answer": "Steps to create a custom hook for handling API requests in React: 1. Create the `useFetch` hook: 2. Use the `useFetch` hook in a component: 📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 559
  },
  {
    "question": "How to deploy a React app to Netlify?",
    "label": "frontend,react,netlify,deployment",
    "language": "en",
    "context": "Netlify is a platform for deploying modern web projects, including React applications.",
    "answer": "Steps to deploy a React app to Netlify:\n\n1. Build your React app:\n```bash\nnpm run build\n```\n\n2. Create a Netlify account and log in.\n\n3. Click on 'New Site from Git' in your Netlify dashboard.\n\n4. Connect your Git repository (GitHub, GitLab, or Bitbucket) containing your React app.\n\n5. Set the build settings:\n    - Build Command: `npm run build`\n    - Publish Directory: `build`\n\n6. Click 'Deploy site'.\n\n📚 Reference: https://docs.netlify.com/sites/deploys/\n",
    "start_char": 0,
    "end_char": 322
  },
  {
    "question": "How to create a WebSocket server in Node.js?",
    "label": "backend,nodejs,websockets,server",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single TCP connection, often used for real-time applications.",
    "answer": "Steps to create a WebSocket server in Node.js: 1. Install `ws` library: 2. Create a WebSocket server: 3. Run the server: 4. Connect to the WebSocket server from a client: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 500
  },
  {
    "question": "How to create a GitHub Action for continuous integration?",
    "label": "devops,github-actions,ci,continuous-integration",
    "language": "en",
    "context": "GitHub Actions allow you to automate workflows, including continuous integration (CI) for your project.",
    "answer": "Steps to create a GitHub Action for CI: 1. Create a `.github/workflows/ci.yml` file in your repository. 2. Define your GitHub Action workflow: 3. Push the changes to GitHub. 4. GitHub will automatically run the action on each push to the `main` branch. 📚 Reference: https://docs.github.com/en/actions",
    "start_char": 0,
    "end_char": 507
  },
  {
    "question": "How to create a Docker container for a Node.js application?",
    "label": "devops,docker,nodejs,containerization",
    "language": "en",
    "context": "Docker is a platform used for developing, shipping, and running applications inside containers.",
    "answer": "Steps to create a Docker container for a Node.js app:\n\n1. Create a `Dockerfile` in your project root:\n```Dockerfile\nFROM node:14\n\nWORKDIR /app\nCOPY . .\nRUN npm install\nEXPOSE 3000\nCMD ['npm', 'start']\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t my-node-app .\n```\n\n3. Run the Docker container:\n```bash\ndocker run -p 3000:3000 my-node-app\n```\n\n4. Visit `http://localhost:3000` in your browser.\n\n📚 Reference: https://hub.docker.com/_/node",
    "start_char": 0,
    "end_char": 364
  },
  {
    "question": "How to set up ESLint in a JavaScript project?",
    "label": "frontend,eslint,js,linting",
    "language": "en",
    "context": "ESLint is a tool for identifying and fixing problems in JavaScript code by enforcing code quality standards.",
    "answer": "Steps to set up ESLint in a JavaScript project:\n\n1. Install ESLint:\n```bash\nnpm install eslint --save-dev\n```\n\n2. Initialize ESLint configuration:\n```bash\nnpx eslint --init\n```\n\n3. Choose your preferred configuration options (e.g., JavaScript modules, React, etc.).\n\n4. Add ESLint script to `package.json`:\n```json\n\"scripts\": {\n  \"lint\": \"eslint .\"\n}\n```\n\n5. Run ESLint to check your project:\n```bash\nnpm run lint\n```\n\n📚 Reference: https://eslint.org/docs/user-guide/getting-started",
    "start_char": 0,
    "end_char": 384
  },
  {
    "question": "How to use Redux for state management in React?",
    "label": "frontend,react,redux,state-management",
    "language": "en",
    "context": "Redux is a state management library commonly used in React applications to manage the application state in a predictable manner.",
    "answer": "Steps to use Redux in React: 1. Install Redux and React-Redux: 2. Create actions and reducers for state management: 3. Set up the Redux store and provider in your app: 4. Use Redux state in components: 📚 Reference: https://redux.js.org/introduction/getting-started",
    "start_char": 0,
    "end_char": 606
  },
  {
    "question": "How to use TypeScript in a Node.js project?",
    "label": "backend,typescript,nodejs,setup",
    "language": "en",
    "context": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript, offering type safety and better tooling support.",
    "answer": "Steps to use TypeScript in a Node.js project: 1. Install TypeScript and types for Node.js: 2. Create a `tsconfig.json` file: 3. Update `tsconfig.json` to include Node.js types: 4. Write your TypeScript code in `.ts` files in the `src` directory. 5. Compile TypeScript to JavaScript: 6. Run the compiled JavaScript code: 📚 Reference: https://www.typescriptlang.org/docs/",
    "start_char": 0,
    "end_char": 471
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "backend,nodejs,jwt,authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is a compact, URL-safe token used for securely transmitting information between parties in web applications.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install necessary libraries: 2. Create a user model and hash the password using bcrypt: 3. Generate a JWT token when the user logs in: 4. Protect routes with JWT authentication: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 517
  },
  {
    "question": "How to use the Fetch API in JavaScript?",
    "label": "frontend,js,fetch,api",
    "language": "en",
    "context": "The Fetch API provides an easy-to-use interface for making HTTP requests in JavaScript.",
    "answer": "Steps to use the Fetch API in JavaScript: 1. Make a simple GET request: 2. Make a POST request with data: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "How to set up a PostgreSQL database in Docker?",
    "label": "devops,docker,postgresql,setup",
    "language": "en",
    "context": "PostgreSQL is an open-source relational database management system. Docker allows you to containerize applications, including databases like PostgreSQL.",
    "answer": "Steps to set up PostgreSQL in Docker: 1. Pull the PostgreSQL image from Docker Hub: 2. Run the PostgreSQL container: 3. Connect to PostgreSQL from your local machine: 4. To connect from a Node.js application, use the `pg` package: 5. Example connection code: 📚 Reference: https://hub.docker.com/_/postgres",
    "start_char": 0,
    "end_char": 562
  },
  {
    "question": "How to deploy a React app on AWS S3?",
    "label": "frontend,react,aws,s3,deployment",
    "language": "en",
    "context": "AWS S3 (Simple Storage Service) is an object storage service that can host static websites, including React apps.",
    "answer": "Steps to deploy a React app on AWS S3: 1. Build your React app: 2. Create an S3 bucket in AWS Management Console. 3. Upload the contents of the `build` folder to the S3 bucket. 4. Configure the bucket for static website hosting in the bucket properties. 5. Set the index document (e.g., `index.html`) and error document (e.g., `index.html`). 6. Make the bucket public by adjusting the permissions. 7. Access your app using the S3 bucket URL or configure a custom domain. 📚 Reference: https://docs.aws.amazon.c...",
    "start_char": 0,
    "end_char": 392
  },
  {
    "question": "How to set up a MongoDB database in Docker?",
    "label": "devops,docker,mongodb,setup",
    "language": "en",
    "context": "MongoDB is a NoSQL database, and Docker allows you to quickly set it up in a containerized environment.",
    "answer": "Steps to set up MongoDB in Docker: 1. Pull the MongoDB image from Docker Hub: 2. Run the MongoDB container: 3. Connect to MongoDB from your local machine: 4. To connect from a Node.js application, use the `mongoose` package: 5. Example connection code: 📚 Reference: https://hub.docker.com/_/mongo",
    "start_char": 0,
    "end_char": 527
  },
  {
    "question": "How to deploy a Node.js app on Heroku?",
    "label": "backend,nodejs,heroku,deployment",
    "language": "en",
    "context": "Heroku is a platform as a service (PaaS) that allows you to deploy, manage, and scale applications in the cloud.",
    "answer": "Steps to deploy a Node.js app on Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Create a new Heroku app:\n```bash\nheroku create my-app\n```\n\n4. Push your app to Heroku using Git:\n```bash\ngit push heroku main\n```\n\n5. Access your app at the URL provided by Heroku.\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 317
  },
  {
    "question": "How to create a REST API using Express.js?",
    "label": "backend,nodejs,express,api",
    "language": "en",
    "context": "Express.js is a web framework for Node.js, often used for creating RESTful APIs.",
    "answer": "Steps to create a REST API using Express.js: 1. Install Express: 2. Set up the Express server: 3. Define other API endpoints such as POST, PUT, DELETE: 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 507
  },
  {
    "question": "How to use Axios to make HTTP requests in JavaScript?",
    "label": "frontend,axios,http-requests,js",
    "language": "en",
    "context": "Axios is a promise-based HTTP client for JavaScript, used for making requests from both the browser and Node.js.",
    "answer": "Steps to use Axios for HTTP requests in JavaScript: 1. Install Axios: 2. Make a GET request: 3. Make a POST request with data: 📚 Reference: https://axios-http.com/docs/intro",
    "start_char": 0,
    "end_char": 487
  },
  {
    "question": "How to use the async/await pattern in JavaScript?",
    "label": "frontend,js,async-await,promises",
    "language": "en",
    "context": "The async/await pattern is used to simplify working with promises in JavaScript, making asynchronous code easier to read and write.",
    "answer": "Steps to use async/await in JavaScript: 1. Create an async function: 2. Call the async function: 3. Use try/catch for error handling: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 495
  },
  {
    "question": "How to use the map function in JavaScript?",
    "label": "frontend,js,arrays,map",
    "language": "en",
    "context": "The map function in JavaScript allows you to iterate over an array and apply a function to each element, returning a new array.",
    "answer": "Steps to use the map function in JavaScript: 1. Define an array: 2. Use map to create a new array: 3. Use map with objects: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    "start_char": 0,
    "end_char": 464
  },
  {
    "question": "How to use localStorage in JavaScript?",
    "label": "frontend,js,localStorage",
    "language": "en",
    "context": "localStorage is a web API that allows you to store data persistently in the browser.",
    "answer": "Steps to use localStorage in JavaScript:\n\n1. Save data to localStorage:\n```javascript\nlocalStorage.setItem('key', 'value');\n```\n\n2. Retrieve data from localStorage:\n```javascript\nconst value = localStorage.getItem('key');\nconsole.log(value); // 'value'\n```\n\n3. Remove data from localStorage:\n```javascript\nlocalStorage.removeItem('key');\n```\n\n4. Clear all data from localStorage:\n```javascript\nlocalStorage.clear();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 387
  },
  {
    "question": "How to use Redux with React?",
    "label": "frontend,react,redux,state-management",
    "language": "en",
    "context": "Redux is a state management library often used with React to manage global application state.",
    "answer": "Steps to use Redux with React: 1. Install Redux and React-Redux: 2. Create a Redux store: 3. Set up the React app with the Redux provider: 4. Dispatch actions and connect components to the store: 📚 Reference: https://react-redux.js.org/introduction/quick-start",
    "start_char": 0,
    "end_char": 652
  },
  {
    "question": "How to set up a Node.js server with HTTPS?",
    "label": "backend,nodejs,https,security",
    "language": "en",
    "context": "Setting up an HTTPS server ensures secure communication by encrypting data between the server and the client.",
    "answer": "Steps to set up a Node.js server with HTTPS: 1. Install the `https` module: 2. Generate SSL certificates using OpenSSL: 3. Set up the HTTPS server in Node.js: 4. Ensure port 443 is open and accessible. 📚 Reference: https://nodejs.org/en/knowledge/HTTP/servers/how-to-create-an-HTTPS-server/",
    "start_char": 0,
    "end_char": 621
  },
  {
    "question": "How to use Git to version control a project?",
    "label": "devops,git,version-control",
    "language": "en",
    "context": "Git is a version control system that tracks changes in code and facilitates collaboration in development teams.",
    "answer": "Steps to use Git for version control: 1. Initialize a Git repository: 2. Add files to the staging area: 3. Commit changes to the repository: 4. Create a remote repository (e.g., on GitHub) and link it to your local repository: 5. Push changes to the remote repository: 6. Pull updates from the remote repository: 📚 Reference: https://git-scm.com/book/en/v2",
    "start_char": 0,
    "end_char": 499
  },
  {
    "question": "How to create a virtual environment in Python?",
    "label": "python,virtual-environment",
    "language": "en",
    "context": "A virtual environment is a tool to isolate dependencies for Python projects, ensuring that libraries are installed per project rather than globally.",
    "answer": "Steps to create a virtual environment in Python: 1. Install `virtualenv`: 2. Create a virtual environment: 3. Activate the virtual environment: 4. Install dependencies within the virtual environment: 5. Deactivate the virtual environment when done: 📚 Reference: https://docs.python.org/3/library/venv.html",
    "start_char": 0,
    "end_char": 444
  },
  {
    "question": "How to perform a basic SQL query to retrieve data?",
    "label": "sql,database,query",
    "language": "en",
    "context": "SQL (Structured Query Language) is used for managing and manipulating relational databases.",
    "answer": "Steps to perform a basic SQL query:\n\n1. Select data from a table:\n```sql\nSELECT column1, column2 FROM table_name;\n```\n\n2. Filter data using the `WHERE` clause:\n```sql\nSELECT column1, column2 FROM table_name WHERE condition;\n```\n\n3. Sort data using the `ORDER BY` clause:\n```sql\nSELECT column1, column2 FROM table_name ORDER BY column1 DESC;\n```\n\n4. Limit the number of rows returned:\n```sql\nSELECT column1, column2 FROM table_name LIMIT 10;\n```\n\n📚 Reference: https://www.w3schools.com/sql/",
    "start_char": 0,
    "end_char": 381
  },
  {
    "question": "How to configure CORS in a Node.js Express app?",
    "label": "backend,nodejs,express,cors",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) allows a web application to make requests to a server in a different domain.",
    "answer": "Steps to configure CORS in an Express app: 1. Install the `cors` package: 2. Import and use CORS middleware in your Express app: 3. To restrict the allowed origins, pass an options object: 📚 Reference: https://expressjs.com/en/resources/middleware/cors.html",
    "start_char": 0,
    "end_char": 467
  },
  {
    "question": "How to implement JWT (JSON Web Tokens) in Node.js?",
    "label": "backend,nodejs,jwt,security",
    "language": "en",
    "context": "JWT is a compact, URL-safe means of representing claims to be transferred between two parties, used widely for authentication in web applications.",
    "answer": "Steps to implement JWT in Node.js: 1. Install `jsonwebtoken` package: 2. Create and sign a token on successful login: 3. Verify the token for protected routes: 4. Protect routes using middleware: 📚 Reference: https://www.digitalocean.com/community/tutorials/nodejs-jwt-expressjs",
    "start_char": 0,
    "end_char": 632
  },
  {
    "question": "How to use Python to scrape data from a website?",
    "label": "python,web-scraping,beautifulsoup",
    "language": "en",
    "context": "Web scraping is the process of extracting data from websites. Python provides tools like BeautifulSoup and Requests for this task.",
    "answer": "Steps to scrape data using Python: 1. Install the necessary packages: 2. Send a GET request to the website: 3. Parse the HTML content using BeautifulSoup: 4. Extract the desired data: 📚 Reference: https://realpython.com/beautiful-soup-web-scraper-python/",
    "start_char": 0,
    "end_char": 428
  },
  {
    "question": "How to deploy a Flask app on Heroku?",
    "label": "backend,flask,heroku,deployment",
    "language": "en",
    "context": "Flask is a lightweight web framework for Python. You can deploy Flask apps on Heroku, a platform for hosting applications.",
    "answer": "Steps to deploy a Flask app on Heroku: 1. Install the necessary dependencies: 2. Create a `Procfile` to specify the startup command: 3. Create a `requirements.txt` file with the project dependencies: 4. Initialize a Git repository and deploy to Heroku: 5. Access your app using the Heroku app URL. 📚 Reference: https://devcenter.heroku.com/articles/getting-started-with-python",
    "start_char": 0,
    "end_char": 491
  },
  {
    "question": "How to create a RESTful API in Node.js?",
    "label": "backend,nodejs,restful-api",
    "language": "en",
    "context": "A RESTful API is an architectural style for building APIs that adhere to HTTP methods like GET, POST, PUT, and DELETE.",
    "answer": "Steps to create a RESTful API in Node.js: 1. Install Express: 2. Set up a basic Express app: 3. Add routes for CRUD operations: 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 513
  },
  {
    "question": "How to create a class in Python?",
    "label": "python,oop,class",
    "language": "en",
    "context": "In Python, a class is a blueprint for creating objects (instances). A class can define methods and properties for its objects.",
    "answer": "Steps to create a class in Python:\n\n1. Define the class using the `class` keyword:\n```python\nclass MyClass:\n  pass\n```\n\n2. Add an `__init__` method to initialize object properties:\n```python\nclass MyClass:\n  def __init__(self, name):\n    self.name = name\n```\n\n3. Create an instance of the class:\n```python\nobj = MyClass('John')\n```\n\n4. Access object properties and methods:\n```python\nprint(obj.name)\n```\n\n📚 Reference: https://realpython.com/python3-object-oriented-programming/",
    "start_char": 0,
    "end_char": 445
  },
  {
    "question": "How to create a custom exception in Python?",
    "label": "python,exception,custom-exception",
    "language": "en",
    "context": "In Python, you can define your own exceptions by creating a new class that inherits from the built-in `Exception` class.",
    "answer": "Steps to create a custom exception in Python:\n\n1. Define the custom exception class by inheriting from `Exception`:\n```python\nclass CustomError(Exception):\n  pass\n```\n\n2. Raise the custom exception in your code:\n```python\nraise CustomError('This is a custom error')\n```\n\n3. Handle the custom exception using `try-except` block:\n```python\ntry:\n  raise CustomError('This is a custom error')\nexcept CustomError as e:\n  print(f'Caught error: {e}')\n```\n\n📚 Reference: https://docs.python.org/3/tutorial/errors.html",
    "start_char": 0,
    "end_char": 392
  },
  {
    "question": "How to run a SQL query in Python?",
    "label": "python,sql,sqlite",
    "language": "en",
    "context": "Python can interact with databases using libraries like SQLite, which allows running SQL queries directly.",
    "answer": "Steps to run a SQL query in Python: 1. Import the SQLite library and connect to the database: 2. Create a cursor object to execute SQL queries: 3. Execute a SQL query: 4. Fetch the results of the query: 5. Commit and close the connection: 📚 Reference: https://docs.python.org/3/library/sqlite3.html",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to handle exceptions in Node.js?",
    "label": "nodejs,exception,errors",
    "language": "en",
    "context": "In Node.js, you can handle errors using `try-catch` blocks or handling error events on asynchronous operations.",
    "answer": "Steps to handle exceptions in Node.js: 1. Use `try-catch` for synchronous errors: 2. Handle asynchronous errors using callback pattern: 3. Use `process.on('uncaughtException')` for unhandled errors: 📚 Reference: https://nodejs.org/en/docs/guides/blocking-vs-non-blocking/",
    "start_char": 0,
    "end_char": 484
  },
  {
    "question": "How to use `Promise` in JavaScript?",
    "label": "javascript,promise,async",
    "language": "en",
    "context": "A `Promise` in JavaScript is an object representing the eventual completion or failure of an asynchronous operation.",
    "answer": "Steps to use `Promise` in JavaScript: 1. Create a new Promise: 2. Handle the result of the Promise: 3. Use `async-await` to handle Promises in a more readable way: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 567
  },
  {
    "question": "How to create a basic API with Flask?",
    "label": "python,flask,api",
    "language": "en",
    "context": "Flask is a lightweight framework for building web applications in Python. You can use it to create APIs quickly.",
    "answer": "Steps to create a basic API with Flask:\n\n1. Install Flask:\n```bash\npip install flask\n```\n\n2. Set up a basic Flask application:\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/api', methods=['GET'])\ndef hello_world():\n  return 'Hello, World!'\n\nif __name__ == '__main__':\n  app.run(debug=True)\n```\n\n3. Start the Flask app:\n```bash\npython app.py\n```\n\n4. Access the API at `http://localhost:5000/api`.\n\n📚 Reference: https://flask.palletsprojects.com/en/2.0.x/",
    "start_char": 0,
    "end_char": 396
  },
  {
    "question": "How to use `localStorage` in JavaScript?",
    "label": "javascript,web-storage,localStorage",
    "language": "en",
    "context": "`localStorage` allows web applications to store data in the user's browser persistently.",
    "answer": "Steps to use `localStorage` in JavaScript:\n\n1. Store data in `localStorage`:\n```javascript\nlocalStorage.setItem('key', 'value');\n```\n\n2. Retrieve data from `localStorage`:\n```javascript\nlet value = localStorage.getItem('key');\nconsole.log(value);\n```\n\n3. Remove data from `localStorage`:\n```javascript\nlocalStorage.removeItem('key');\n```\n\n4. Clear all data from `localStorage`:\n```javascript\nlocalStorage.clear();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 413
  },
  {
    "question": "How to use `setTimeout` in JavaScript?",
    "label": "javascript,timers,setTimeout",
    "language": "en",
    "context": "`setTimeout` is used to execute a function after a specified amount of time.",
    "answer": "Steps to use `setTimeout` in JavaScript:\n\n1. Call `setTimeout` to execute a function after a delay:\n```javascript\nsetTimeout(() => {\n  console.log('This will be printed after 2 seconds');\n}, 2000);\n```\n\n2. Use `clearTimeout` to cancel the timeout:\n```javascript\nlet timeoutId = setTimeout(() => {\n  console.log('This will not be printed');\n}, 2000);\n\nclearTimeout(timeoutId);\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/setTimeout",
    "start_char": 0,
    "end_char": 314
  },
  {
    "question": "How to sort an array in JavaScript?",
    "label": "javascript,array,sorting",
    "language": "en",
    "context": "Sorting an array in JavaScript is done using the `sort` method, which can sort numbers, strings, or custom objects.",
    "answer": "Steps to sort an array in JavaScript: 1. Sort an array of numbers: 2. Sort an array of strings: 3. Sort an array of objects by a property: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",
    "start_char": 0,
    "end_char": 580
  },
  {
    "question": "How to implement inheritance in Python?",
    "label": "python,oop,inheritance",
    "language": "en",
    "context": "Inheritance allows one class to inherit the attributes and methods from another class, facilitating code reuse in object-oriented programming.",
    "answer": "Steps to implement inheritance in Python:\n\n1. Define a base (parent) class:\n```python\nclass Animal:\n  def speak(self):\n    print('Animal makes a sound')\n```\n\n2. Define a subclass (child) class that inherits from the parent class:\n```python\nclass Dog(Animal):\n  def speak(self):\n    print('Woof')\n```\n\n3. Create an instance of the child class:\n```python\ndog = Dog()\n```\n\n4. Call the inherited method:\n```python\ndog.speak()  # Output: Woof\n```\n\n📚 Reference: https://realpython.com/python-inheritance/",
    "start_char": 0,
    "end_char": 442
  },
  {
    "question": "How to use `map()` function in Python?",
    "label": "python,function,map",
    "language": "en",
    "context": "The `map()` function in Python applies a given function to all items in an iterable (like a list) and returns an iterator.",
    "answer": "Steps to use `map()` function in Python:\n\n1. Define the function to be applied:\n```python\ndef square(x):\n  return x * x\n```\n\n2. Apply `map()` to an iterable:\n```python\nnumbers = [1, 2, 3, 4]\nsquared_numbers = map(square, numbers)\n```\n\n3. Convert the result to a list and print:\n```python\nprint(list(squared_numbers))  # Output: [1, 4, 9, 16]\n```\n\n📚 Reference: https://docs.python.org/3/library/functions.html#map",
    "start_char": 0,
    "end_char": 375
  },
  {
    "question": "How to handle JSON data in Python?",
    "label": "python,json,data-handling",
    "language": "en",
    "context": "Python provides a built-in module called `json` to work with JSON (JavaScript Object Notation) data.",
    "answer": "Steps to handle JSON data in Python:\n\n1. Import the `json` module:\n```python\nimport json\n```\n\n2. Parse a JSON string into a Python dictionary:\n```python\njson_data = '{\"name\": \"John\", \"age\": 30}'\ndata = json.loads(json_data)\n```\n\n3. Convert a Python dictionary to a JSON string:\n```python\npython_dict = {'name': 'John', 'age': 30}\njson_string = json.dumps(python_dict)\n```\n\n📚 Reference: https://docs.python.org/3/library/json.html",
    "start_char": 0,
    "end_char": 344
  },
  {
    "question": "How to use regular expressions in Python?",
    "label": "python,regex,regular-expression",
    "language": "en",
    "context": "The `re` module in Python allows you to work with regular expressions for searching, matching, and manipulating text.",
    "answer": "Steps to use regular expressions in Python:\n\n1. Import the `re` module:\n```python\nimport re\n```\n\n2. Use `re.search()` to find a match in a string:\n```python\nmatch = re.search(r'hello', 'hello world')\nif match:\n  print('Match found!')\n```\n\n3. Use `re.findall()` to find all matches:\n```python\nmatches = re.findall(r'+', '123 abc 456 def 789')\nprint(matches)  # Output: ['123', '456', '789']\n```\n\n📚 Reference: https://docs.python.org/3/library/re.html",
    "start_char": 0,
    "end_char": 432
  },
  {
    "question": "How to use `map()` in JavaScript?",
    "label": "javascript,array,map",
    "language": "en",
    "context": "`map()` in JavaScript is used to create a new array with the results of calling a provided function on every element in the calling array.",
    "answer": "Steps to use `map()` in JavaScript:\n\n1. Define an array:\n```javascript\nlet numbers = [1, 2, 3, 4]\n```\n\n2. Use `map()` to apply a function to each element:\n```javascript\nlet squaredNumbers = numbers.map(num => num * num)\n```\n\n3. Print the result:\n```javascript\nconsole.log(squaredNumbers)  // Output: [1, 4, 9, 16]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    "start_char": 0,
    "end_char": 373
  },
  {
    "question": "How to send an HTTP request in JavaScript?",
    "label": "javascript,http,request",
    "language": "en",
    "context": "In JavaScript, you can send HTTP requests using the `fetch()` API or older methods like `XMLHttpRequest`.",
    "answer": "Steps to send an HTTP request in JavaScript: 1. Use `fetch()` to send a GET request: 2. Send a POST request with JSON data: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "start_char": 0,
    "end_char": 493
  },
  {
    "question": "How to implement error handling in JavaScript?",
    "label": "javascript,errors,exception",
    "language": "en",
    "context": "In JavaScript, error handling is done using `try-catch` blocks or by listening to error events.",
    "answer": "Steps to implement error handling in JavaScript: 1. Use `try-catch` for synchronous errors: 2. Handle errors in asynchronous code with `try-catch` inside an `async` function: 3. Listen to error events for Node.js apps: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch",
    "start_char": 0,
    "end_char": 493
  },
  {
    "question": "How to perform array filtering in JavaScript?",
    "label": "javascript,array,filter",
    "language": "en",
    "context": "In JavaScript, the `filter()` method creates a new array with all elements that pass the test implemented by the provided function.",
    "answer": "Steps to perform array filtering in JavaScript:\n\n1. Define an array:\n```javascript\nlet numbers = [1, 2, 3, 4, 5]\n```\n\n2. Use `filter()` to select elements that satisfy a condition:\n```javascript\nlet evenNumbers = numbers.filter(num => num % 2 === 0)\n```\n\n3. Print the result:\n```javascript\nconsole.log(evenNumbers)  // Output: [2, 4]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",
    "start_char": 0,
    "end_char": 368
  },
  {
    "question": "How to use `reduce()` method in JavaScript?",
    "label": "javascript,array,reduce",
    "language": "en",
    "context": "`reduce()` is used to apply a function to each element in an array and reduce it to a single value, like summing all numbers.",
    "answer": "Steps to use `reduce()` in JavaScript:\n\n1. Define an array:\n```javascript\nlet numbers = [1, 2, 3, 4]\n```\n\n2. Use `reduce()` to accumulate a result:\n```javascript\nlet sum = numbers.reduce((accumulator, currentValue) => accumulator + currentValue, 0)\n```\n\n3. Print the result:\n```javascript\nconsole.log(sum)  // Output: 10\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "What is the difference between `let` and `var` in JavaScript?",
    "label": "javascript,let,var,variables",
    "language": "en",
    "context": "`let` and `var` are both used to declare variables, but they have different scoping rules.",
    "answer": "Difference between `let` and `var`: 1. `let` has block-level scope, while `var` has function-level scope. 2. `let` cannot be redeclared within the same scope, while `var` can. 3. `let` is hoisted but not initialized, whereas `var` is hoisted and initialized to `undefined`. Example with `let`: Example with `var`: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
    "start_char": 0,
    "end_char": 511
  },
  {
    "question": "What are Promises in JavaScript?",
    "label": "javascript,promises,async",
    "language": "en",
    "context": "Promises in JavaScript represent the eventual completion or failure of an asynchronous operation and its resulting value.",
    "answer": "Steps to use Promises in JavaScript: 1. Create a new Promise: 2. Handle resolved or rejected Promise: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "What is the difference between `==` and `===` in JavaScript?",
    "label": "javascript,operators,comparison",
    "language": "en",
    "context": "`==` is a loose equality operator that compares values for equality after type coercion, whereas `===` is a strict equality operator that compares both value and type.",
    "answer": "Difference between `==` and `===`:\n\n1. `==` performs type coercion before comparing values.\n2. `===` does not perform type coercion and requires both value and type to be the same.\n\nExample with `==`:\n```javascript\nconsole.log(5 == '5');  // Output: true\n```\n\nExample with `===`:\n```javascript\nconsole.log(5 === '5');  // Output: false\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality",
    "start_char": 0,
    "end_char": 410
  },
  {
    "question": "How to use `filter()` method in JavaScript?",
    "label": "javascript,array,filter",
    "language": "en",
    "context": "The `filter()` method creates a new array with all elements that pass the test implemented by the provided function.",
    "answer": "Steps to use `filter()` method in JavaScript:\n\n1. Define an array:\n```javascript\nlet numbers = [1, 2, 3, 4, 5]\n```\n\n2. Use `filter()` to apply a test to each element:\n```javascript\nlet evenNumbers = numbers.filter(num => num % 2 === 0)\n```\n\n3. Print the result:\n```javascript\nconsole.log(evenNumbers)  // Output: [2, 4]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is the purpose of `async` and `await` in JavaScript?",
    "label": "javascript,async,await,asynchronous",
    "language": "en",
    "context": "`async` and `await` are used to handle asynchronous code in a more synchronous manner, making it easier to write and read.",
    "answer": "Steps to use `async` and `await` in JavaScript: 1. Define an `async` function: 2. Call the `async` function: 3. `await` is used to wait for the promise to resolve before continuing: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 452
  },
  {
    "question": "How to create a class in Python?",
    "label": "python,oop,class",
    "language": "en",
    "context": "In Python, classes are used to define objects with methods and attributes.",
    "answer": "Steps to create a class in Python:\n\n1. Define a class using the `class` keyword:\n```python\nclass Person:\n  def __init__(self, name, age):\n    self.name = name\n    self.age = age\n```\n\n2. Create an instance of the class:\n```python\nperson1 = Person('John', 30)\n```\n\n3. Access class attributes and methods:\n```python\nprint(person1.name)  # Output: John\nperson1.greet()  # Output: Hello, my name is John\n```\n\n📚 Reference: https://docs.python.org/3/tutorial/classes.html",
    "start_char": 0,
    "end_char": 394
  },
  {
    "question": "What is a decorator in Python?",
    "label": "python,decorator,functional-programming",
    "language": "en",
    "context": "A decorator in Python is a function that modifies or enhances another function.",
    "answer": "Steps to use a decorator in Python:\n\n1. Define a simple decorator function:\n```python\ndef decorator_function(func):\n  def wrapper():\n    print('Before the function')\n    func()\n    print('After the function')\n  return wrapper\n```\n\n2. Apply the decorator to a function:\n```python\n@decorator_function\ndef say_hello():\n  print('Hello!')\n```\n\n3. Call the decorated function:\n```python\nsay_hello()\n```\n\n📚 Reference: https://realpython.com/python-decorators/",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "How to handle exceptions in Python?",
    "label": "python,exception,error-handling",
    "language": "en",
    "context": "Python provides a built-in mechanism for handling exceptions with `try`, `except`, `else`, and `finally` blocks.",
    "answer": "Steps to handle exceptions in Python: 1. Use `try-except` to handle errors: 2. Use `else` to execute code when no error occurs: 3. Use `finally` for cleanup: 📚 Reference: https://docs.python.org/3/tutorial/errors.html",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "What is the purpose of `__init__` method in Python?",
    "label": "python,constructor,class",
    "language": "en",
    "context": "The `__init__` method in Python is the constructor method for classes, used to initialize the object's attributes when an instance is created.",
    "answer": "Purpose of `__init__` method in Python:\n\n1. The `__init__` method is automatically called when a new object is created.\n2. It is used to initialize attributes of the object.\n3. Example of `__init__` method:\n```python\nclass Person:\n  def __init__(self, name, age):\n    self.name = name\n    self.age = age\n```\n4. It is not mandatory to define `__init__`, but it is commonly used.\n\n📚 Reference: https://docs.python.org/3/tutorial/classes.html",
    "start_char": 0,
    "end_char": 418
  },
  {
    "question": "How do you merge two dictionaries in Python?",
    "label": "python,dictionary,merge",
    "language": "en",
    "context": "In Python, dictionaries can be merged using different methods such as `update()`, or the `|` operator in Python 3.9 and later.",
    "answer": "Steps to merge two dictionaries in Python:\n\n1. Using `update()` method:\n```python\ndict1 = {'a': 1, 'b': 2}\ndict2 = {'c': 3, 'd': 4}\ndict1.update(dict2)\nprint(dict1)  # Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}\n```\n\n2. Using `|` operator (Python 3.9+):\n```python\ndict1 = {'a': 1, 'b': 2}\ndict2 = {'c': 3, 'd': 4}\nmerged_dict = dict1 | dict2\nprint(merged_dict)  # Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}\n```\n\n📚 Reference: https://docs.python.org/3/library/stdtypes.html#dict.update",
    "start_char": 0,
    "end_char": 424
  },
  {
    "question": "What is the difference between shallow copy and deep copy in Python?",
    "label": "python,copy,shallow-deep",
    "language": "en",
    "context": "A shallow copy creates a new object, but does not create copies of nested objects. A deep copy creates copies of all objects recursively.",
    "answer": "Difference between shallow copy and deep copy in Python: 1. Shallow copy: 2. Deep copy: Example: 📚 Reference: https://docs.python.org/3/library/copy.html#copy.deepcopy",
    "start_char": 0,
    "end_char": 472
  },
  {
    "question": "How do you convert a string to a list in Python?",
    "label": "python,string,list",
    "language": "en",
    "context": "Converting a string to a list in Python can be done using the `list()` function or list comprehension.",
    "answer": "Steps to convert a string to a list in Python:\n\n1. Using `list()` function:\n```python\nstring = 'hello'\nlist_from_string = list(string)\nprint(list_from_string)  # Output: ['h', 'e', 'l', 'l', 'o']\n```\n\n2. Using list comprehension:\n```python\nstring = 'hello'\nlist_from_string = [char for char in string]\nprint(list_from_string)  # Output: ['h', 'e', 'l', 'l', 'o']\n```\n\n📚 Reference: https://docs.python.org/3/library/functions.html#list",
    "start_char": 0,
    "end_char": 402
  },
  {
    "question": "What is the purpose of the `self` parameter in Python?",
    "label": "python,self,object-oriented",
    "language": "en",
    "context": "In Python, the `self` parameter refers to the instance of the object itself within methods in a class.",
    "answer": "Purpose of `self` in Python: 1. `self` is used to refer to the current instance of the class. 2. It is the first parameter of any instance method in a class. 3. It allows access to the object's attributes and methods. Example: 📚 Reference: https://docs.python.org/3/tutorial/classes.html#class-objects",
    "start_char": 0,
    "end_char": 398
  },
  {
    "question": "How to check if a file exists in Python?",
    "label": "python,file-system,os",
    "language": "en",
    "context": "You can check if a file exists in Python using the `os.path` module or `pathlib` module.",
    "answer": "Steps to check if a file exists in Python:\n\n1. Using `os.path` module:\n```python\nimport os\n\nif os.path.exists('file.txt'):\n  print('File exists')\nelse:\n  print('File does not exist')\n```\n\n2. Using `pathlib` module:\n```python\nfrom pathlib import Path\n\nfile = Path('file.txt')\nif file.exists():\n  print('File exists')\nelse:\n  print('File does not exist')\n```\n\n📚 Reference: https://docs.python.org/3/library/os.path.html#os.path.exists",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "What are lambda functions in Python?",
    "label": "python,function,lambdas",
    "language": "en",
    "context": "Lambda functions in Python are anonymous functions defined with the `lambda` keyword, often used for short, throwaway functions.",
    "answer": "Steps to use lambda functions in Python:\n\n1. Basic syntax of a lambda function:\n```python\nlambda arguments: expression\n```\n\n2. Example of lambda function:\n```python\nadd = lambda x, y: x + y\nprint(add(2, 3))  # Output: 5\n```\n\n3. Lambda functions can be used in higher-order functions like `map()`, `filter()`, and `sorted()`.\n\n📚 Reference: https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions",
    "start_char": 0,
    "end_char": 423
  },
  {
    "question": "What is a generator in Python?",
    "label": "python,iterator,generator",
    "language": "en",
    "context": "A generator is a special type of iterator in Python that allows you to iterate through a sequence of values lazily, without storing the entire sequence in memory.",
    "answer": "Steps to create a generator in Python:\n\n1. Define a generator function using `yield` keyword:\n```python\ndef my_generator():\n  yield 1\n  yield 2\n  yield 3\n```\n\n2. Create a generator object:\n```python\ngen = my_generator()\n```\n\n3. Iterate over the generator:\n```python\nfor value in gen:\n  print(value)\n```\n\n📚 Reference: https://docs.python.org/3/tutorial/classes.html#generators",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "How to implement multi-threading in Java?",
    "label": "java, threading",
    "language": "en",
    "context": "Multi-threading allows multiple threads to run concurrently, improving the performance of applications by utilizing CPU more efficiently.",
    "answer": "Steps to implement multi-threading in Java: 1. Create a class that extends the Thread class or implements the Runnable interface. 2. Override the run() method to define the code that will be executed by the thread. 3. Instantiate the thread class and call the start() method. 4. Optionally, use Thread.join() to wait for the threads to finish before continuing.",
    "start_char": 0,
    "end_char": 571
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a platform as a service (PaaS) that allows you to deploy web applications quickly. Node.js applications can be deployed to Heroku for free or at a cost for more advanced features.",
    "answer": "Steps to deploy a Node.js application on Heroku:\n\n1. Create a Heroku account at https://heroku.com.\n2. Install the Heroku CLI: `npm install -g heroku`.\n3. Login to Heroku using `heroku login`.\n4. Initialize a Git repository in your Node.js project folder: `git init`.\n5. Create a Heroku app: `heroku create your-app-name`.\n6. Deploy the app using Git: `git push heroku master`.\n7. Open the app with `heroku open`.\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 563
  },
  {
    "question": "How to implement a custom error handler in Express.js?",
    "label": "backend, nodejs, express, error-handling",
    "language": "en",
    "context": "Custom error handling in Express.js helps manage and respond to errors in a structured way, providing more control over the error response.",
    "answer": "Steps to implement a custom error handler in Express.js: 1. Create an error-handling middleware function. 2. Use `next()` to pass errors to the middleware. 3. Respond to the error in the middleware with a proper message and status code. 4. Throw errors in routes when needed using `next(new Error('message'))`. 📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 566
  },
  {
    "question": "How to use Docker to containerize a Node.js application?",
    "label": "docker, nodejs, containerization",
    "language": "en",
    "context": "Docker is a platform used to develop, ship, and run applications inside containers, making them portable and easier to deploy.",
    "answer": "Steps to use Docker for containerizing a Node.js application: 1. Install Docker on your machine. 2. Create a Dockerfile in the root of your Node.js project: 3. Build the Docker image: 4. Run the container: 5. Your application will now be accessible at http://localhost:3000. 📚 Reference: https://nodejs.org/en/docs/guides/nodejs-docker-webapp/",
    "start_char": 0,
    "end_char": 720
  },
  {
    "question": "How to implement a search feature in a MongoDB database?",
    "label": "mongodb, search, backend",
    "language": "en",
    "context": "MongoDB provides various ways to implement search, from simple text search to full-text search using the Atlas Search service.",
    "answer": "Steps to implement a search feature in MongoDB: 1. Install MongoDB if not already installed. 2. Create a collection and insert documents with searchable fields. 3. For basic search, use the `find` method: 4. For more advanced search, use MongoDB Atlas Search with full-text indexing. 5. Implement text indexing in MongoDB: 6. Query using text search: 📚 Reference: https://docs.mongodb.com/manual/core/text-search/",
    "start_char": 0,
    "end_char": 621
  },
  {
    "question": "How to add pagination to a MongoDB query?",
    "label": "mongodb, pagination, backend",
    "language": "en",
    "context": "Pagination allows you to break down large data sets into smaller, manageable chunks. MongoDB provides the `skip()` and `limit()` methods for pagination.",
    "answer": "Steps to add pagination to a MongoDB query: 1. Use the `skip()` method to specify how many documents to skip. 2. Use the `limit()` method to specify the number of documents to return. 3. Example with pagination parameters: 4. Optionally, sort the results: 📚 Reference: https://docs.mongodb.com/manual/reference/method/cursor.skip/",
    "start_char": 0,
    "end_char": 561
  },
  {
    "question": "How to create a basic authentication system in Node.js?",
    "label": "nodejs, authentication, backend",
    "language": "en",
    "context": "Basic Authentication is a simple authentication scheme built into HTTP. It sends the user's credentials in an HTTP header for each request.",
    "answer": "Steps to create a basic authentication system in Node.js: 1. Install necessary packages: 2. Create a middleware function to check authentication: 3. Use this middleware to protect your routes. 📚 Reference: https://www.npmjs.com/package/basic-auth",
    "start_char": 0,
    "end_char": 516
  },
  {
    "question": "How to validate user input in a Node.js application?",
    "label": "nodejs, validation, backend",
    "language": "en",
    "context": "Validating user input is crucial to avoid malicious data and errors. Node.js provides various libraries and techniques to handle input validation.",
    "answer": "Steps to validate user input in a Node.js application: 1. Install a validation library such as `express-validator`: 2. Use the library in your routes: 3. Handle different types of validation (email, min length, etc.). 📚 Reference: https://express-validator.github.io/",
    "start_char": 0,
    "end_char": 673
  },
  {
    "question": "How to implement a real-time chat application in Node.js?",
    "label": "nodejs, realtime, chat",
    "language": "en",
    "context": "Real-time chat applications can be built using WebSockets, which allow bi-directional communication between the server and clients.",
    "answer": "Steps to implement a real-time chat application in Node.js: 1. Install the required packages: 2. Create a basic server using Express and integrate Socket.IO:",
    "start_char": 0,
    "end_char": 758
  },
  {
    "question": "How to create a RESTful API using Express.js?",
    "label": "express, api, backend",
    "language": "en",
    "context": "A RESTful API provides a standardized way to interact with resources through HTTP requests. Express.js makes it easy to build RESTful APIs.",
    "answer": "Steps to create a RESTful API using Express.js:\n\n1. Install Express:\n```bash\nnpm install express\n```\n\n2. Create an Express server and define routes:\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/users', (req, res) => {\n  res.json([{ id: 1, name: 'John Doe' }]);\n});\n\napp.post('/users', (req, res) => {\n  res.status(201).json({ id: 2, name: 'Jane Doe' });\n});\n\napp.listen(3000, () => {\n  console.log('API server running on http://localhost:3000');\n});\n```",
    "start_char": 0,
    "end_char": 575
  },
  {
    "question": "How to set up a MongoDB replica set?",
    "label": "mongodb, replication, database",
    "language": "en",
    "context": "A MongoDB replica set provides redundancy and high data availability by replicating data across multiple MongoDB servers.",
    "answer": "Steps to set up a MongoDB replica set: 1. Install MongoDB on multiple servers. 2. Start MongoDB instances on each server with `--replSet` option. 3. Connect to the primary node using Mongo shell: 4. Initiate the replica set: 5. Add secondary nodes to the replica set: 6. Verify the replica set status: 7. MongoDB will now replicate data between nodes. 📚 Reference: https://docs.mongodb.com/manual/replication/",
    "start_char": 0,
    "end_char": 611
  },
  {
    "question": "How to optimize a SQL query for better performance?",
    "label": "sql, performance, database",
    "language": "en",
    "context": "SQL query optimization improves the speed and efficiency of queries, helping to reduce load on the database and improve overall application performance.",
    "answer": "Steps to optimize a SQL query for better performance: 1. Use appropriate indexes for the tables involved in the query. 2. Avoid using SELECT * and specify only the necessary columns. 3. Use WHERE clauses to filter rows early in the query. 4. Avoid using subqueries; prefer JOINs instead. 5. Use EXPLAIN to analyze query execution plans and look for inefficiencies. 6. Avoid unnecessary joins and large result sets. 7. Optimize aggregate functions like COUNT and SUM. 📚 Reference: https://use-the-index-luke.com/",
    "start_char": 0,
    "end_char": 580
  },
  {
    "question": "How to use Docker Compose to manage multi-container applications?",
    "label": "docker, docker-compose, containerization",
    "language": "en",
    "context": "Docker Compose is a tool for defining and running multi-container Docker applications. It allows you to configure services, networks, and volumes in a single YAML file.",
    "answer": "Steps to use Docker Compose for managing multi-container applications: 1. Install Docker and Docker Compose. 2. Create a `docker-compose.yml` file: 3. Run `docker-compose up` to start the services defined in the file. 4. Use `docker-compose down` to stop and remove the containers. 5. Docker Compose also supports networking and volumes for persistent data. 📚 Reference: https://docs.docker.com/compose/",
    "start_char": 0,
    "end_char": 669
  },
  {
    "question": "How to handle CORS in a Node.js application?",
    "label": "nodejs, cors, backend",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a mechanism that allows servers to specify which origins are permitted to access resources on the server.",
    "answer": "Steps to handle CORS in a Node.js application: 1. Install the `cors` package: 2. Import and use the CORS middleware in your Express app: 3. You can configure CORS to allow specific origins: 4. For more complex scenarios, you can set additional options like methods and headers. 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 446
  },
  {
    "question": "How to create a JWT-based authentication system in Node.js?",
    "label": "nodejs, authentication, jwt",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are used for securely transmitting information between parties as a JSON object. They are commonly used for authentication and authorization in web applications.",
    "answer": "Steps to create a JWT-based authentication system in Node.js: 1. Install the `jsonwebtoken` package: 2. Create a route to authenticate a user and generate a JWT: 3. Create a middleware to verify the JWT in protected routes: 4. Use this middleware for protected routes. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 751
  },
  {
    "question": "How to integrate Stripe payment gateway in a Node.js application?",
    "label": "nodejs, stripe, payment",
    "language": "en",
    "context": "Stripe is a payment gateway service that allows businesses to accept online payments securely. Integrating Stripe into a Node.js application involves using the Stripe API.",
    "answer": "Steps to integrate Stripe payment gateway in Node.js: 1. Install the `stripe` package: 2. Create a Stripe instance with your secret key: 3. Create a route to handle payment requests: 4. Handle errors and confirm successful payments. 📚 Reference: https://stripe.com/docs/payments/accept-a-payment",
    "start_char": 0,
    "end_char": 618
  },
  {
    "question": "How to use async/await in Node.js for asynchronous programming?",
    "label": "nodejs, async-await, programming",
    "language": "en",
    "context": "Async/await is a syntax for working with promises in JavaScript, allowing you to write asynchronous code in a synchronous-like manner.",
    "answer": "Steps to use async/await in Node.js: 1. Define an asynchronous function using the `async` keyword: 2. Use the `await` keyword to pause execution until a promise resolves: 3. Handle errors using `try/catch`: 4. Async/await simplifies promise chaining and improves code readability. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 643
  },
  {
    "question": "How to configure SSL for a Node.js application?",
    "label": "nodejs, ssl, security",
    "language": "en",
    "context": "Configuring SSL (Secure Sockets Layer) ensures encrypted communication between the server and client, providing security for web applications.",
    "answer": "Steps to configure SSL for a Node.js application: 1. Obtain an SSL certificate from a trusted certificate authority (CA). 2. Install the `https` module in Node.js: 3. Create an HTTPS server by providing the SSL certificate: 4. Ensure that your web server redirects HTTP traffic to HTTPS. 📚 Reference: https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/#https",
    "start_char": 0,
    "end_char": 722
  },
  {
    "question": "How to implement logging in a Node.js application?",
    "label": "nodejs, logging, backend",
    "language": "en",
    "context": "Logging helps to track events, errors, and activities in an application, making it easier to troubleshoot and monitor the system's health.",
    "answer": "Steps to implement logging in a Node.js application: 1. Install a logging library like `winston`: 2. Configure the logger with different log levels: 3. Use the logger in your application: 4. Store logs in files or external services for better tracking. 📚 Reference: https://www.npmjs.com/package/winston",
    "start_char": 0,
    "end_char": 594
  },
  {
    "question": "How to set up continuous integration with GitHub Actions?",
    "label": "github, ci, devops",
    "language": "en",
    "context": "GitHub Actions helps automate workflows, including continuous integration (CI), testing, and deployment directly within GitHub repositories.",
    "answer": "Steps to set up continuous integration with GitHub Actions: 1. Create a `.github/workflows` directory in your repository. 2. Create a YAML file, e.g., `ci.yml`, inside the workflows directory: 3. GitHub will automatically run the defined actions when changes are pushed to the repository. 📚 Reference: https://docs.github.com/en/actions/automating-your-workflow-with-github-actions",
    "start_char": 0,
    "end_char": 772
  },
  {
    "question": "How to implement rate limiting in an Express.js application?",
    "label": "nodejs, express, rate-limiting, security",
    "language": "en",
    "context": "Rate limiting helps to prevent abuse of your API by restricting the number of requests a user can make in a given time period.",
    "answer": "Steps to implement rate limiting in an Express.js application: 1. Install the `express-rate-limit` package: 2. Import and configure the rate limiter middleware: 3. Apply the rate limiter middleware globally or to specific routes: 4. Rate limiting helps to protect your API from DDoS attacks and abuse. 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 578
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a platform-as-a-service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.",
    "answer": "Steps to deploy a Node.js application on Heroku: 1. Install the Heroku CLI: 2. Log in to Heroku CLI: 3. Initialize a git repository if you don't have one: 4. Create a new Heroku app: 5. Deploy the app to Heroku: 6. Open your app in the browser: 7. Use Heroku logs for debugging if necessary: 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 531
  },
  {
    "question": "How to handle file uploads in a Node.js application?",
    "label": "nodejs, file-upload, backend",
    "language": "en",
    "context": "Handling file uploads in a Node.js application involves parsing multipart form data and storing the uploaded files securely.",
    "answer": "Steps to handle file uploads in Node.js: 1. Install the `multer` package: 2. Import `multer` and configure the storage options: 3. Create an endpoint to handle file uploads: 4. Files will be stored in the specified directory (e.g., 'uploads/'). 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 639
  },
  {
    "question": "How to create an API with Express and MongoDB?",
    "label": "nodejs, express, mongodb, api",
    "language": "en",
    "context": "Express is a minimal and flexible Node.js web application framework, and MongoDB is a NoSQL database. Together, they make building APIs easier.",
    "answer": "Steps to create an API with Express and MongoDB: 1. Install the required packages: 2. Set up MongoDB connection: 3. Define a model for your data: 4. Create API routes to interact with MongoDB: 5. Start the Express server: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 824
  },
  {
    "question": "How to add authentication to a Node.js API using Passport.js?",
    "label": "nodejs, passport, authentication",
    "language": "en",
    "context": "Passport.js is a flexible and simple authentication middleware for Node.js, supporting many different types of authentication strategies.",
    "answer": "Steps to add authentication to a Node.js API using Passport.js: 1. Install the required packages: 2. Set up Passport middleware: 3. Initialize Passport and session middleware: 4. Create a login route: 5. Protect routes using `passport.authenticate()`. 📚 Reference: http://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 768
  },
  {
    "question": "How to send emails using Node.js and Nodemailer?",
    "label": "nodejs, email, nodemailer",
    "language": "en",
    "context": "Nodemailer is a module for Node.js applications to send emails. It supports a variety of email services and SMTP protocols.",
    "answer": "Steps to send emails using Node.js and Nodemailer: 1. Install Nodemailer: 2. Set up Nodemailer transport: 3. Send an email using the transport: 4. Ensure you handle errors properly. 📚 Reference: https://nodemailer.com/about/",
    "start_char": 0,
    "end_char": 615
  },
  {
    "question": "How to schedule tasks in a Node.js application?",
    "label": "nodejs, task-scheduling",
    "language": "en",
    "context": "Task scheduling is used to run tasks or jobs at specific times or intervals. In Node.js, libraries like `node-cron` can be used to schedule tasks.",
    "answer": "Steps to schedule tasks in Node.js:\n\n1. Install `node-cron` package:\n```bash\nnpm install node-cron\n```\n2. Import and configure the scheduler:\n```javascript\nconst cron = require('node-cron');\n\ncron.schedule('* * * * *', () => {\n  console.log('Task running every minute');\n});\n```\n3. You can specify more complex schedules with cron expressions.\n4. Cron jobs can be used for tasks like backups, cleaning up logs, or sending emails at intervals.\n\n📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to implement JWT authentication in a Node.js API?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are a compact and self-contained way for securely transmitting information between parties as a JSON object.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install the required packages: 2. Set up JWT secret and middleware: 3. Create a login route that generates a JWT: 4. Protect routes with JWT authentication middleware. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 690
  },
  {
    "question": "How to use WebSockets in Node.js for real-time communication?",
    "label": "nodejs, websockets, real-time",
    "language": "en",
    "context": "WebSockets enable full-duplex communication channels over a single TCP connection, ideal for real-time applications like chat apps and notifications.",
    "answer": "Steps to use WebSockets in Node.js for real-time communication: 1. Install the `ws` package: 2. Create a WebSocket server: 3. Connect to the WebSocket server from a client (browser or Node.js): 4. You can use WebSockets for real-time features like live chat and notifications. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 617
  },
  {
    "question": "How to handle CORS in a Node.js application?",
    "label": "nodejs, cors, backend",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) is a mechanism that allows you to specify who can access your resources and how.",
    "answer": "Steps to handle CORS in a Node.js application:\n\n1. Install the `cors` package:\n```bash\nnpm install cors\n```\n2. Import and use the `cors` middleware:\n```javascript\nconst cors = require('cors');\n\napp.use(cors());\n```\n3. You can configure CORS to allow specific origins or methods if needed:\n```javascript\napp.use(cors({ origin: 'http://example.com' }));\n```\n4. CORS is essential for handling requests from different domains.\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 471
  },
  {
    "question": "How to optimize a Node.js application for performance?",
    "label": "nodejs, performance, optimization",
    "language": "en",
    "context": "Performance optimization is crucial for any web application. Node.js, being an asynchronous event-driven framework, has many tools to help optimize performance.",
    "answer": "Steps to optimize a Node.js application for performance: 1. Use asynchronous and non-blocking code wherever possible. 2. Use a reverse proxy (e.g., Nginx) to offload heavy tasks. 3. Enable HTTP2 to improve request handling speed. 4. Use caching to avoid redundant operations, like database queries. 5. Minimize the number of dependencies to reduce overhead. 6. Use clustering to take advantage of multi-core systems. 7. Profile the application to identify bottlenecks using `clinic.js` or `node-inspect`. 8. C...",
    "start_char": 0,
    "end_char": 676
  },
  {
    "question": "How to set up a MongoDB replica set?",
    "label": "mongodb, replication, database",
    "language": "en",
    "context": "A MongoDB replica set is a group of mongod processes that maintain the same data set, providing redundancy and high availability.",
    "answer": "Steps to set up a MongoDB replica set: 1. Install MongoDB on multiple servers or virtual machines. 2. Start each MongoDB instance with the `--replSet` option: 3. Connect to the primary node using `mongo` shell: 4. Initiate the replica set: 5. Add secondary nodes to the replica set: 6. Verify the replica set status: 7. The replica set provides automatic failover in case the primary node goes down. 📚 Reference: https://docs.mongodb.com/manual/replication/",
    "start_char": 0,
    "end_char": 768
  },
  {
    "question": "How to use environment variables in a Node.js application?",
    "label": "nodejs, environment-variables",
    "language": "en",
    "context": "Environment variables are used to store configuration values outside of the source code. This allows for easier deployment across different environments (development, staging, production).",
    "answer": "Steps to use environment variables in Node.js: 1. Install `dotenv` package: 2. Create a `.env` file in the root of your project and define your variables: 3. Load the environment variables in your application: 4. Access the variables in your code: 5. Never commit `.env` file to version control (add it to `.gitignore`). 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 511
  },
  {
    "question": "How to implement logging in a Node.js application?",
    "label": "nodejs, logging",
    "language": "en",
    "context": "Logging helps track application behavior and diagnose issues. Libraries like `winston` or `morgan` are commonly used in Node.js for logging.",
    "answer": "Steps to implement logging in Node.js using `winston`: 1. Install `winston` package: 2. Set up a logger: 3. Log messages with different levels: 4. Log HTTP requests with `morgan`: 5. Use logs for debugging and monitoring your application. 📚 Reference: https://github.com/winstonjs/winston",
    "start_char": 0,
    "end_char": 688
  },
  {
    "question": "How to implement input validation in a Node.js application?",
    "label": "nodejs, validation",
    "language": "en",
    "context": "Input validation is essential to ensure that data is correct and safe to process. In Node.js, the `express-validator` package is commonly used for input validation.",
    "answer": "Steps to implement input validation in Node.js: 1. Install `express-validator` package: 2. Use the validation middleware in your routes: 3. You can validate different types of input like strings, numbers, dates, etc. 4. Handle validation errors properly and return meaningful messages. 📚 Reference: https://express-validator.github.io/",
    "start_char": 0,
    "end_char": 651
  },
  {
    "question": "How to set up a Redis cache in Node.js?",
    "label": "nodejs, redis, cache",
    "language": "en",
    "context": "Redis is a powerful in-memory data store used to implement caching mechanisms to speed up the performance of applications.",
    "answer": "Steps to set up a Redis cache in Node.js: 1. Install the `redis` package: 2. Create a Redis client: 3. Set a cache value: 4. Get a cached value: 5. You can use Redis to store session data, frequently accessed queries, etc. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 511
  },
  {
    "question": "How to perform a database migration in MongoDB?",
    "label": "mongodb, migration, database",
    "language": "en",
    "context": "Database migrations are used to update the structure of a database. In MongoDB, migrations can be performed by updating collections and documents.",
    "answer": "Steps to perform a database migration in MongoDB: 1. Use a migration tool like `migrate-mongo`: 2. Initialize the migration project: 3. Create a new migration file: 4. Define the migration in the file: 5. Run the migration: 6. Verify that the migration was successful by checking the collection. 📚 Reference: https://www.npmjs.com/package/migrate-mongo",
    "start_char": 0,
    "end_char": 683
  },
  {
    "question": "How to implement pagination in a Node.js application?",
    "label": "nodejs, pagination",
    "language": "en",
    "context": "Pagination is a technique used to divide large datasets into smaller chunks. It is commonly used in applications that display lists of items or data.",
    "answer": "Steps to implement pagination in a Node.js application: 1. Accept `page` and `limit` parameters from the client: 2. Use `skip` and `limit` methods to query the database: 3. Calculate the total number of pages and send it along with the data: 4. Add pagination controls to the frontend to navigate through pages. 📚 Reference: https://mongoosejs.com/docs/api.html",
    "start_char": 0,
    "end_char": 703
  },
  {
    "question": "How to create a cron job in Node.js?",
    "label": "nodejs, cron-job",
    "language": "en",
    "context": "Cron jobs are scheduled tasks that run at specified intervals. In Node.js, you can use the `node-cron` package to set up cron jobs.",
    "answer": "Steps to create a cron job in Node.js using `node-cron`: 1. Install `node-cron` package: 2. Create a cron job: 3. You can use cron expressions to schedule tasks (e.g., `* * * * *` for every minute). 4. Run multiple tasks at different intervals: 5. Cron jobs are useful for periodic tasks like backups, sending reports, etc. 📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 642
  },
  {
    "question": "How to use Docker with a Node.js application?",
    "label": "nodejs, docker",
    "language": "en",
    "context": "Docker is a platform used to develop, ship, and run applications in containers, making it easier to manage dependencies and deploy applications.",
    "answer": "Steps to use Docker with a Node.js application: 1. Create a `Dockerfile` in your Node.js project: 2. Build the Docker image: 3. Run the Docker container: 4. You can test your application by visiting `http://localhost:3000`. 5. Optionally, use `docker-compose` to manage multi-container applications. 📚 Reference: https://nodejs.org/en/docs/guides/dockerizing-nodejs-webapp/",
    "start_char": 0,
    "end_char": 625
  },
  {
    "question": "How to use JWT (JSON Web Tokens) for authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT is a compact and self-contained way for securely transmitting information between parties as a JSON object. It is often used for authentication in web applications.",
    "answer": "Steps to use JWT for authentication in Node.js: 1. Install necessary packages: 2. Create a function to generate a token: 3. Use `bcryptjs` to hash passwords before storing them in the database. 4. Create a login route to authenticate users and issue a token: 5. Protect routes with middleware that verifies the JWT token. 📚 Reference: https://jwt.io/introduction/",
    "start_char": 0,
    "end_char": 766
  },
  {
    "question": "How to manage multiple environments in a Node.js application?",
    "label": "nodejs, environments",
    "language": "en",
    "context": "Managing multiple environments is essential to separate development, staging, and production configurations in your application.",
    "answer": "Steps to manage multiple environments in Node.js: 1. Use `dotenv` to load environment-specific configurations: 2. Create different `.env` files for each environment (e.g., `.env.development`, `.env.production`). 3. Set the environment variable to determine which `.env` file to load: 4. Load the correct environment file in your application: 5. Use environment-specific configurations in your code. 6. You can also use `config` package to manage multiple configurations. 📚 Reference: https://12factor.net/config",
    "start_char": 0,
    "end_char": 542
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a platform as a service (PaaS) that allows developers to build, run, and operate applications entirely in the cloud.",
    "answer": "Steps to deploy a Node.js application to Heroku: 1. Install the Heroku CLI: https://devcenter.heroku.com/articles/heroku-cli 2. Create a Heroku account if you don't have one. 3. Log in to Heroku from your terminal: 4. Create a `Procfile` in your project to tell Heroku how to run your app: 5. Initialize a Git repository and commit your changes: 6. Create a Heroku app: 7. Push your code to Heroku: 8. Open the app in your browser: 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 742
  },
  {
    "question": "How to handle file uploads in a Node.js application?",
    "label": "nodejs, file-uploads",
    "language": "en",
    "context": "Handling file uploads is a common feature in web applications. In Node.js, you can use libraries like `multer` to handle file uploads.",
    "answer": "Steps to handle file uploads in Node.js using `multer`: 1. Install `multer` package: 2. Set up the `multer` middleware in your app: 3. Create an endpoint to accept file uploads: 4. You can handle multiple file uploads by using `upload.array('files', 5)` to allow up to 5 files. 5. Ensure that you check file types and sizes for security purposes. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 682
  },
  {
    "question": "How to use WebSockets in a Node.js application?",
    "label": "nodejs, websockets",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single TCP connection, allowing for real-time communication between a client and server.",
    "answer": "Steps to use WebSockets in a Node.js application: 1. Install `ws` package: 2. Set up the WebSocket server: 3. On the client side, use JavaScript to open a WebSocket connection: 4. Use WebSockets for real-time features like chat, live updates, etc. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 642
  },
  {
    "question": "How to secure a Node.js application?",
    "label": "nodejs, security",
    "language": "en",
    "context": "Security is crucial in web applications. There are various techniques to secure a Node.js application, such as protecting against SQL injection, cross-site scripting (XSS), and using HTTPS.",
    "answer": "Steps to secure a Node.js application: 1. Use HTTPS to encrypt communication between the client and server: 2. Sanitize user inputs to prevent SQL injection and XSS attacks. 3. Use helmet to secure HTTP headers: 4. Set up proper authentication and authorization. 5. Use `express-rate-limit` to prevent brute-force attacks. 6. Regularly update dependencies to avoid vulnerabilities. 📚 Reference: https://expressjs.com/en/advanced/best-practice-security.html",
    "start_char": 0,
    "end_char": 705
  },
  {
    "question": "How to use Redis for session management in Node.js?",
    "label": "nodejs, redis, session",
    "language": "en",
    "context": "Redis can be used to store session data in a Node.js application. It is an in-memory data structure store, often used as a cache or session store.",
    "answer": "Steps to use Redis for session management in Node.js: 1. Install `redis` and `express-session` packages: 2. Set up Redis client and session middleware: 3. Use session in your application: 4. Redis can handle high throughput and large amounts of session data. 📚 Reference: https://www.npmjs.com/package/connect-redis",
    "start_char": 0,
    "end_char": 733
  },
  {
    "question": "How to handle CORS in a Node.js application?",
    "label": "nodejs, cors",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a mechanism that allows restricted resources on a web server to be requested from another domain.",
    "answer": "Steps to handle CORS in Node.js: 1. Install `cors` package: 2. Use `cors` middleware in your application: 3. You can customize CORS settings to allow specific domains or methods: 4. CORS is useful when your frontend and backend are hosted on different domains. 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 634
  },
  {
    "question": "How to implement logging in a Node.js application?",
    "label": "nodejs, logging",
    "language": "en",
    "context": "Logging is an essential practice for tracking application behavior, debugging, and monitoring production systems.",
    "answer": "Steps to implement logging in a Node.js application: 1. Install `winston` package: 2. Set up `winston` logger: 3. Log messages in your application: 4. Use different logging levels (e.g., `info`, `warn`, `error`) to categorize logs. 5. You can also log to external services like Loggly or Papertrail. 📚 Reference: https://www.npmjs.com/package/winston",
    "start_char": 0,
    "end_char": 680
  },
  {
    "question": "How to implement role-based access control (RBAC) in Node.js?",
    "label": "nodejs, rbac, security",
    "language": "en",
    "context": "Role-Based Access Control (RBAC) is a method of restricting system access to authorized users. It is widely used for managing permissions in web applications.",
    "answer": "Steps to implement RBAC in Node.js: 1. Define roles and permissions for your application (e.g., Admin, User). 2. Create a `role` field in your user schema in the database. 3. Assign roles to users during registration or user creation. 4. Create middleware to check permissions: 5. Use the `checkRole` middleware in routes where role-based access control is required: 6. Combine RBAC with authentication middleware to ensure only authorized users access protected routes. 📚 Reference: https://auth0.com/docs/au...",
    "start_char": 0,
    "end_char": 789
  },
  {
    "question": "How to integrate third-party APIs in a Node.js application?",
    "label": "nodejs, api-integration",
    "language": "en",
    "context": "Integrating third-party APIs into your application allows you to extend its functionality without building everything from scratch.",
    "answer": "Steps to integrate third-party APIs in Node.js: 1. Choose the API you want to integrate (e.g., Google Maps API, Twitter API). 2. Install the necessary libraries or use the `axios` package for HTTP requests: 3. Send HTTP requests to the API using `axios`: 4. Handle responses and errors based on the API documentation. 5. You can also use `request` or `node-fetch` for making API requests. 📚 Reference: https://axios-http.com/docs/req_config",
    "start_char": 0,
    "end_char": 648
  },
  {
    "question": "How to create a RESTful API in Node.js?",
    "label": "nodejs, rest, api",
    "language": "en",
    "context": "RESTful APIs follow the principles of Representational State Transfer (REST), making it easy for clients and servers to communicate using HTTP methods.",
    "answer": "Steps to create a RESTful API in Node.js: 1. Install necessary packages: 2. Set up your Express application: 3. Define routes for different HTTP methods (GET, POST, PUT, DELETE): 4. Start the server: 5. You now have a simple RESTful API. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 730
  },
  {
    "question": "How to use MongoDB with Node.js?",
    "label": "nodejs, mongodb",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in JSON-like documents. It integrates easily with Node.js applications.",
    "answer": "Steps to use MongoDB with Node.js: 1. Install `mongoose` package: 2. Set up a connection to the MongoDB database: 3. Define a Mongoose schema for your data: 4. Use Mongoose methods to interact with the database: 5. Perform CRUD operations (Create, Read, Update, Delete) with MongoDB using Mongoose. 📚 Reference: https://mongoosejs.com/docs/guide.html",
    "start_char": 0,
    "end_char": 658
  },
  {
    "question": "How to handle errors in a Node.js application?",
    "label": "nodejs, error-handling",
    "language": "en",
    "context": "Error handling is an essential part of building reliable and maintainable applications. Proper error handling helps identify and fix issues quickly.",
    "answer": "Steps to handle errors in Node.js: 1. Use `try-catch` for synchronous errors: 2. For asynchronous functions, use `try-catch` with `async-await`: 3. Use error-handling middleware in Express: 4. Log errors to an external service like Sentry or Loggly for better tracking. 5. Use proper HTTP status codes to communicate error details to the client. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 739
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is a popular method of securing APIs and authenticating users in a web application.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install the required libraries: 2. Generate a JWT when a user logs in or signs up: 3. Protect routes using middleware: 4. Apply the middleware to protected routes: 5. JWT authentication is now integrated. 📚 Reference: https://www.digitalocean.com/community/tutorials/nodejs-jwt-expressjs",
    "start_char": 0,
    "end_char": 1089
  },
  {
    "question": "How to set up unit testing in Node.js with Mocha and Chai?",
    "label": "nodejs, testing, mocha, chai",
    "language": "en",
    "context": "Unit testing ensures that individual components of your application work as expected. Mocha and Chai are popular libraries for writing and running tests in Node.js.",
    "answer": "Steps to set up unit testing in Node.js with Mocha and Chai: 1. Install Mocha and Chai: 2. Create a test file, e.g., `test/test.js`: 3. Add a test script to `package.json`: 4. Run the tests: 5. You can now write more tests for your functions using Mocha and Chai. 📚 Reference: https://www.digitalocean.com/community/tutorials/mocha-chai-and-sinon-for-nodejs-unit-testing",
    "start_char": 0,
    "end_char": 580
  },
  {
    "question": "How to use async/await in Node.js for asynchronous operations?",
    "label": "nodejs, async-await, asynchronous",
    "language": "en",
    "context": "Async/await is a feature in JavaScript that allows for writing asynchronous code in a more readable manner.",
    "answer": "Steps to use async/await in Node.js: 1. Define an `async` function to handle asynchronous operations: 2. Call the `async` function and handle errors using `try-catch`: 3. Use `await` with asynchronous operations like API requests, reading files, etc. 4. Async/await makes code cleaner and easier to debug compared to callbacks and promises. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 674
  },
  {
    "question": "How to deploy a Node.js application on AWS?",
    "label": "nodejs, aws, deployment",
    "language": "en",
    "context": "AWS (Amazon Web Services) provides scalable infrastructure for deploying Node.js applications in the cloud.",
    "answer": "Steps to deploy a Node.js application on AWS: 1. Set up an AWS EC2 instance (Amazon Linux or Ubuntu). 2. SSH into your instance: 3. Install Node.js on your EC2 instance: 4. Upload your Node.js application files to the EC2 instance. 5. Install application dependencies: 6. Start your application: 7. To keep the application running in the background, use `pm2`: 8. Configure security groups and enable port 80 (HTTP) or 443 (HTTPS) to allow web traffic. 9. Your Node.js application should now be accessible thr...",
    "start_char": 0,
    "end_char": 858
  },
  {
    "question": "How to create a chat application in Node.js?",
    "label": "nodejs, chat-application, socket.io",
    "language": "en",
    "context": "A real-time chat application can be built using WebSockets and libraries like `Socket.io` in Node.js.",
    "answer": "Steps to create a chat application in Node.js: 1. Install `express` and `socket.io`: 2. Set up your Express server and Socket.io: 3. Create a simple frontend to send and display messages: 4. Run the server and open the app in the browser. Multiple users can join the chat. 📚 Reference: https://socket.io/docs/v4/",
    "start_char": 0,
    "end_char": 1157
  },
  {
    "question": "How to implement file upload in Node.js?",
    "label": "nodejs, file-upload",
    "language": "en",
    "context": "Node.js provides modules like `multer` to handle file uploads in web applications.",
    "answer": "Steps to implement file upload in Node.js: 1. Install `multer` to handle file uploads: 2. Set up a basic Express server: 3. Create an HTML form to send the file: 4. The file will be uploaded to the `uploads/` directory. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 645
  },
  {
    "question": "How to implement a search feature in Node.js?",
    "label": "nodejs, search, feature",
    "language": "en",
    "context": "Adding a search feature allows users to search for data in your application.",
    "answer": "Steps to implement a search feature in Node.js: 1. Define a route to handle the search request: 2. Implement the search logic (e.g., search through a database or an array): 3. You can also integrate with a search engine like Elasticsearch for more complex search functionality. 📚 Reference: https://www.digitalocean.com/community/tutorials/express-search-nodejs-mongodb",
    "start_char": 0,
    "end_char": 594
  },
  {
    "question": "How to set up MongoDB with Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database, and it's often used with Node.js to store data in a flexible, document-oriented way.",
    "answer": "Steps to set up MongoDB with Node.js: 1. Install MongoDB in your local machine or use a cloud service like MongoDB Atlas. 2. Install the `mongoose` package to interact with MongoDB: 3. Connect to MongoDB in your Node.js application: 4. Define a schema and model to interact with a collection in MongoDB: 5. Use the model to create and retrieve documents: 6. Now you can use MongoDB with Node.js to store and retrieve data. 📚 Reference: https://mongoosejs.com/docs/index.html",
    "start_char": 0,
    "end_char": 1030
  },
  {
    "question": "How to handle errors in Express.js?",
    "label": "nodejs, express, error-handling",
    "language": "en",
    "context": "Error handling in Express.js is crucial to ensure the stability and usability of your application. Proper handling allows for better debugging and user feedback.",
    "answer": "Steps to handle errors in Express.js: 1. Create a middleware to handle errors globally: 2. Use `next` to pass errors to the error-handling middleware: 3. You can also handle specific errors based on the type of error: 4. For production environments, you may want to log errors to a file or use a service like Sentry to capture error details. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 642
  },
  {
    "question": "How to perform data validation in Node.js?",
    "label": "nodejs, data-validation, validation",
    "language": "en",
    "context": "Data validation is an essential part of any application to ensure that the incoming data is correct and in the expected format.",
    "answer": "Steps to perform data validation in Node.js: 1. Install `express-validator` to handle validation: 2. Use the validation functions in your routes: 3. Use `validationResult` to check for validation errors. 4. You can also validate data before saving it to a database or performing other actions. 📚 Reference: https://www.npmjs.com/package/express-validator",
    "start_char": 0,
    "end_char": 701
  },
  {
    "question": "How to create a REST API in Node.js using Express?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "Creating a REST API with Node.js and Express is a common use case for building web applications and services.",
    "answer": "Steps to create a REST API in Node.js using Express: 1. Install Express: 2. Set up your Express server: 3. Create API endpoints to handle CRUD operations (Create, Read, Update, Delete): 4. Your API is now ready to perform CRUD operations. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 900
  },
  {
    "question": "How to integrate Google Maps API in Node.js?",
    "label": "nodejs, google-maps, api",
    "language": "en",
    "context": "Google Maps API allows you to integrate maps and location services into your Node.js application.",
    "answer": "Steps to integrate Google Maps API in Node.js: 1. Get your Google Maps API key from the Google Cloud Console. 2. Install the `@googlemaps/google-maps-services-js` package: 3. Initialize the Google Maps client in your Node.js application: 4. Use the client to make API requests: 5. You can use various Google Maps services such as Geocoding, Places, Routes, etc. 📚 Reference: https://developers.google.com/maps/documentation/javascript/tutorial",
    "start_char": 0,
    "end_char": 858
  },
  {
    "question": "How to use Redis with Node.js?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory data store often used for caching, session storage, and pub/sub messaging.",
    "answer": "Steps to use Redis with Node.js: 1. Install the `redis` package: 2. Set up a Redis client in your Node.js application: 3. Use Redis to store and retrieve data: 4. Redis is useful for caching frequently accessed data to improve application performance. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 636
  },
  {
    "question": "How to implement OAuth authentication in Node.js?",
    "label": "nodejs, oauth, authentication",
    "language": "en",
    "context": "OAuth is an open standard for authorization, commonly used to allow third-party services to access user data without exposing user credentials.",
    "answer": "Steps to implement OAuth authentication in Node.js: 1. Install the `passport` and `passport-oauth` packages: 2. Set up Passport for OAuth authentication: 3. Configure routes for OAuth authentication: 4. Handle user login and authorization securely using OAuth. 📚 Reference: https://www.digitalocean.com/community/tutorials/passport-oauth2-node-js",
    "start_char": 0,
    "end_char": 964
  },
  {
    "question": "How to create a simple chat application with Socket.io?",
    "label": "nodejs, socket.io, chat",
    "language": "en",
    "context": "Socket.io is a library for real-time web applications, perfect for building chat applications.",
    "answer": "Steps to create a simple chat application with Socket.io: 1. Install Socket.io: 2. Set up the server and client: 3. The chat app is now set up, allowing real-time communication between users. 📚 Reference: https://socket.io/docs/v4/",
    "start_char": 0,
    "end_char": 850
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) is a popular method for securely transmitting information between the client and the server as a JSON object.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install necessary packages: 2. Set up the authentication route: 3. Protect routes with JWT middleware: 4. Now your Node.js app is using JWT for authentication. 📚 Reference: https://www.digitalocean.com/community/tutorials/nodejs-jwt-express",
    "start_char": 0,
    "end_char": 1113
  },
  {
    "question": "How to implement file upload in Express.js?",
    "label": "nodejs, express, file-upload",
    "language": "en",
    "context": "Handling file uploads is a common task when building web applications, especially when users need to upload images or documents.",
    "answer": "Steps to implement file upload in Express.js: 1. Install the `multer` package: 2. Set up multer in your Express app: 3. Create a POST route to handle file uploads: 4. Make sure you send the file in the correct format from the client side. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 621
  },
  {
    "question": "How to connect to MySQL from Node.js?",
    "label": "nodejs, mysql, database",
    "language": "en",
    "context": "MySQL is a widely used relational database management system. You can connect to MySQL from Node.js using the `mysql` package.",
    "answer": "Steps to connect to MySQL from Node.js: 1. Install the `mysql` package: 2. Set up a connection to your MySQL database: 3. Run queries to interact with the database: 4. Remember to close the connection after you're done: 📚 Reference: https://www.npmjs.com/package/mysql",
    "start_char": 0,
    "end_char": 762
  },
  {
    "question": "How to set up environment variables in Node.js?",
    "label": "nodejs, environment-variables",
    "language": "en",
    "context": "Environment variables are used to configure the environment for your Node.js application, such as database connections, API keys, etc.",
    "answer": "Steps to set up environment variables in Node.js: 1. Install the `dotenv` package to load environment variables from a `.env` file: 2. Create a `.env` file in the root of your project with your environment variables: 3. In your Node.js application, load the environment variables using `dotenv`: 4. Use the environment variables in your application, e.g., for database connections. 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 548
  },
  {
    "question": "How to implement a basic authentication in Express.js?",
    "label": "nodejs, express, authentication",
    "language": "en",
    "context": "Basic Authentication is a simple authentication scheme where the client sends the username and password in the `Authorization` header.",
    "answer": "Steps to implement basic authentication in Express.js: 1. Install the `basic-auth` package: 2. Set up basic authentication middleware: 3. Now your application requires the correct username and password for access. 📚 Reference: https://www.npmjs.com/package/basic-auth",
    "start_char": 0,
    "end_char": 614
  },
  {
    "question": "How to use JWT for token-based authentication in Node.js?",
    "label": "nodejs, jwt, token-based-authentication",
    "language": "en",
    "context": "Token-based authentication, particularly JWT, is widely used in modern web applications for securely managing user sessions.",
    "answer": "Steps to use JWT for token-based authentication in Node.js: 1. Install necessary packages: 2. Set up the authentication route to issue a token: 3. Protect your routes with the JWT token: 4. This will ensure secure communication with token-based authentication. 📚 Reference: https://www.digitalocean.com/community/tutorials/nodejs-jwt-express",
    "start_char": 0,
    "end_char": 1161
  },
  {
    "question": "How to set up a Node.js server with Express?",
    "label": "nodejs, express, server-setup",
    "language": "en",
    "context": "Express.js is a minimal web application framework for Node.js, and setting up a basic server with Express is quick and easy.",
    "answer": "Steps to set up a Node.js server with Express: 1. Install Express: 2. Create a basic Express server: 3. Start the server with: 4. Now, your Node.js server with Express is set up and ready to handle requests. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 476
  },
  {
    "question": "How to handle errors in Express.js?",
    "label": "nodejs, express, error-handling",
    "language": "en",
    "context": "Error handling is an important aspect of building robust web applications. Express.js provides a simple way to handle errors using middleware.",
    "answer": "Steps to handle errors in Express.js: 1. Create an error-handling middleware: 2. This middleware should be defined after all routes so it can catch any unhandled errors. 3. Throw errors in your routes or other middlewares when necessary: 4. The error-handling middleware will catch the error and send a response. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 551
  },
  {
    "question": "How to implement pagination in Express.js with MongoDB?",
    "label": "nodejs, express, mongo, pagination",
    "language": "en",
    "context": "Pagination is important for displaying large datasets in a user-friendly manner, and can be implemented using MongoDB and Express.",
    "answer": "Steps to implement pagination in Express.js with MongoDB: 1. Install necessary packages: 2. Set up a MongoDB connection using Mongoose: 3. Create a model for your data: 4. Implement pagination in your route: 5. You can now paginate your data easily with MongoDB and Express. 📚 Reference: https://mongoosejs.com/docs/pagination.html",
    "start_char": 0,
    "end_char": 843
  },
  {
    "question": "How to implement email sending in Node.js?",
    "label": "nodejs, email, nodemailer",
    "language": "en",
    "context": "Sending emails is a common feature in many web applications, such as for account verification or notifications.",
    "answer": "Steps to implement email sending in Node.js using Nodemailer: 1. Install Nodemailer: 2. Set up Nodemailer transport: 3. Send an email: 4. Ensure that you replace the email and password with actual credentials. 📚 Reference: https://www.npmjs.com/package/nodemailer",
    "start_char": 0,
    "end_char": 822
  },
  {
    "question": "How to create a RESTful API in Node.js?",
    "label": "nodejs, express, api, rest",
    "language": "en",
    "context": "RESTful APIs are an important part of web applications, allowing communication between the client and server using standard HTTP methods.",
    "answer": "Steps to create a RESTful API in Node.js with Express: 1. Install Express: 2. Set up a basic Express server: 3. Define routes for the API: 4. Start the server: 5. You now have a basic RESTful API. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 812
  },
  {
    "question": "How to secure an Express.js application?",
    "label": "nodejs, express, security",
    "language": "en",
    "context": "Security is an essential part of web development, especially in production environments.",
    "answer": "Steps to secure an Express.js application: 1. Install Helmet.js to secure HTTP headers: 2. Use Helmet in your Express app: 3. Enable CORS to allow cross-origin requests safely: 4. Use the CORS middleware: 5. Use HTTPS for secure communication (requires SSL certificate). 6. Sanitize user inputs to prevent SQL injection, XSS attacks, etc. 7. Implement proper authentication and authorization. 📚 Reference: https://expressjs.com/en/advanced/best-practice-security.html",
    "start_char": 0,
    "end_char": 742
  },
  {
    "question": "How to set up MongoDB with Mongoose in Node.js?",
    "label": "nodejs, mongodb, mongoose",
    "language": "en",
    "context": "MongoDB is a NoSQL database, and Mongoose is an ODM (Object Data Modeling) library that provides a schema-based solution to model your data in MongoDB.",
    "answer": "Steps to set up MongoDB with Mongoose in Node.js: 1. Install Mongoose: 2. Connect to MongoDB using Mongoose: 3. Define a schema for your data: 4. Use the model to interact with the database: 5. You can now interact with your MongoDB database using Mongoose. 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 780
  },
  {
    "question": "How to set up CORS in Express.js?",
    "label": "nodejs, express, cors",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) allows you to manage how resources on your server can be requested from different domains.",
    "answer": "Steps to set up CORS in Express.js: 1. Install the `cors` package: 2. Use CORS middleware in your Express app: 3. Optionally, customize CORS options to restrict which origins can access your resources: 4. You can now manage CORS settings for your Express app. 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 437
  },
  {
    "question": "How to implement user registration and login in Express.js?",
    "label": "nodejs, express, authentication",
    "language": "en",
    "context": "User authentication is a common feature in most web applications to secure sensitive user data.",
    "answer": "Steps to implement user registration and login in Express.js: 1. Install necessary packages: 2. Set up Express app and user registration route: 3. Set up login route: 4. Now, you have basic registration and login functionality. 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 812
  },
  {
    "question": "How to implement password hashing in Node.js?",
    "label": "nodejs, security, bcrypt",
    "language": "en",
    "context": "Password hashing is a security measure used to protect sensitive user data from being compromised.",
    "answer": "Steps to implement password hashing in Node.js using bcrypt: 1. Install bcrypt: 2. Hash a password: 3. Compare a password with a hashed password: 4. You can now hash and compare passwords securely. 📚 Reference: https://www.npmjs.com/package/bcryptjs",
    "start_char": 0,
    "end_char": 547
  },
  {
    "question": "How to set up JWT authentication in Express.js?",
    "label": "nodejs, express, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) is a secure method for transmitting user identity between the client and server.",
    "answer": "Steps to set up JWT authentication in Express.js: 1. Install necessary packages: 2. Create a route to authenticate users: 3. Create a middleware to verify the token: 4. Use this middleware on protected routes. 5. Your Express.js app is now set up with JWT authentication. 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 865
  },
  {
    "question": "How to implement basic user authentication with Node.js?",
    "label": "nodejs, express, authentication",
    "language": "en",
    "context": "User authentication is critical in securing sensitive information in a web application.",
    "answer": "Steps to implement basic user authentication in Node.js: 1. Install necessary packages: 2. Set up user model and routes: 3. Now, your Node.js app supports basic user authentication. 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 814
  },
  {
    "question": "How to implement logging in Node.js?",
    "label": "nodejs, logging, winston",
    "language": "en",
    "context": "Logging is essential for monitoring and debugging your application in production.",
    "answer": "Steps to implement logging in Node.js using Winston: 1. Install Winston: 2. Set up Winston logger: 3. Log messages at various levels: 4. Use Winston for logging in your application. 📚 Reference: https://www.npmjs.com/package/winston",
    "start_char": 0,
    "end_char": 664
  },
  {
    "question": "How to handle errors in Express.js?",
    "label": "nodejs, express, error-handling",
    "language": "en",
    "context": "Error handling is a crucial part of any web application to ensure that users receive helpful feedback and that errors are logged for debugging.",
    "answer": "Steps to handle errors in Express.js: 1. Define an error-handling middleware: 2. Create custom error messages and statuses for different routes: 3. Use `next` to pass errors to the error handler: 4. You can customize error handling for specific routes or globally. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 663
  },
  {
    "question": "How to set up a custom server in Next.js?",
    "label": "nextjs, server, custom-server",
    "language": "en",
    "context": "A custom server in Next.js allows you to extend the default functionality by integrating with other libraries or handling specific routes.",
    "answer": "Steps to set up a custom server in Next.js: 1. Create a new server file (e.g., `server.js`): 2. Run your custom server: 3. Customize your server with specific routes or integrations. 📚 Reference: https://nextjs.org/docs/advanced-features/custom-server",
    "start_char": 0,
    "end_char": 613
  },
  {
    "question": "How to create a dynamic route in Next.js?",
    "label": "nextjs, dynamic-routes, routing",
    "language": "en",
    "context": "Dynamic routing in Next.js allows you to create pages based on the content, such as user profiles or product details.",
    "answer": "Steps to create a dynamic route in Next.js: 1. Create a folder with the dynamic segment in the file name: 2. Inside the dynamic file, use the `useRouter` hook to access the dynamic parameter: 3. When a user visits `/products/123`, the dynamic segment `[id]` will be replaced with `123`. 📚 Reference: https://nextjs.org/docs/routing/dynamic-routes",
    "start_char": 0,
    "end_char": 606
  },
  {
    "question": "How to implement SSR in Next.js?",
    "label": "nextjs, ssr, server-side-rendering",
    "language": "en",
    "context": "Server-side rendering (SSR) allows you to pre-render a page's content on the server before sending it to the browser.",
    "answer": "Steps to implement SSR in Next.js: 1. In the page component, export an `getServerSideProps` function: 2. In the page component, use the fetched data: 3. This will render the page with data fetched from the server. 📚 Reference: https://nextjs.org/docs/basic-features/pages#server-side-rendering",
    "start_char": 0,
    "end_char": 572
  },
  {
    "question": "How to implement static site generation (SSG) in Next.js?",
    "label": "nextjs, ssg, static-site-generation",
    "language": "en",
    "context": "Static site generation (SSG) allows you to pre-render pages at build time, making them fast to load.",
    "answer": "Steps to implement SSG in Next.js: 1. In the page component, export a `getStaticProps` function: 2. In the page component, use the fetched data: 3. This will render the page with data fetched at build time. 📚 Reference: https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation",
    "start_char": 0,
    "end_char": 561
  },
  {
    "question": "How to add environment variables in Next.js?",
    "label": "nextjs, environment-variables",
    "language": "en",
    "context": "Environment variables allow you to configure your application based on the environment it is running in.",
    "answer": "Steps to add environment variables in Next.js: 1. Create a `.env.local` file in the root directory: 2. Access the environment variable in your application code: 3. You can use this variable for any configuration or API URLs. 4. Next.js supports different environment files for different environments (`.env.local`, `.env.production`, etc.). 📚 Reference: https://nextjs.org/docs/basic-features/environment-variables",
    "start_char": 0,
    "end_char": 563
  },
  {
    "question": "How to configure Babel in Next.js?",
    "label": "nextjs, babel, configuration",
    "language": "en",
    "context": "Babel is a JavaScript compiler that allows you to write modern JavaScript and have it work across different browsers.",
    "answer": "Steps to configure Babel in Next.js: 1. Create a `babel.config.js` file in the root directory: 2. Customize your Babel configuration by adding plugins or presets: 3. You can now use modern JavaScript features that are not natively supported in older browsers. 📚 Reference: https://nextjs.org/docs/advanced-features/customizing-babel-config",
    "start_char": 0,
    "end_char": 611
  },
  {
    "question": "How to implement caching in Node.js?",
    "label": "nodejs, caching, performance",
    "language": "en",
    "context": "Caching is a technique to store frequently accessed data in memory to reduce database load and improve performance.",
    "answer": "Steps to implement caching in Node.js using Redis: 1. Install Redis and the Redis client for Node.js: 2. Set up Redis client: 3. Cache data in Redis: 4. Store data in Redis cache: 5. You can now use caching in your Node.js app to store frequently accessed data. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 730
  },
  {
    "question": "How to create RESTful APIs in Express.js?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "RESTful APIs allow your application to communicate with other systems over HTTP using standard operations like GET, POST, PUT, and DELETE.",
    "answer": "Steps to create RESTful APIs in Express.js: 1. Install Express.js: 2. Set up your Express app: 3. Define RESTful routes: 4. Start the server: 5. You now have a basic RESTful API running in Express. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 732
  },
  {
    "question": "How to deploy a Node.js app on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that simplifies the deployment and scaling of web applications.",
    "answer": "Steps to deploy a Node.js app on Heroku: 1. Install Heroku CLI: 2. Log in to Heroku: 3. Create a `Procfile` in your app's root directory to specify how to run your app: 4. Initialize Git and commit your code: 5. Create a Heroku app and deploy it: 6. Open your app in the browser: 7. Your Node.js app is now live on Heroku! 📚 Reference: https://devcenter.heroku.com/articles/getting-started-with-nodejs",
    "start_char": 0,
    "end_char": 793
  },
  {
    "question": "How to set up a PostgreSQL database with Node.js?",
    "label": "nodejs, postgres, database",
    "language": "en",
    "context": "PostgreSQL is a powerful relational database management system that can be used to store application data.",
    "answer": "Steps to set up a PostgreSQL database with Node.js using the `pg` package: 1. Install the `pg` package: 2. Set up the PostgreSQL client in your app: 3. Perform queries using SQL: 4. You can now interact with your PostgreSQL database from your Node.js app. 📚 Reference: https://node-postgres.com/",
    "start_char": 0,
    "end_char": 724
  },
  {
    "question": "How to use JWT for authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is a compact, URL-safe means of representing claims to be transferred between two parties.",
    "answer": "Steps to use JWT for authentication in Node.js: 1. Install the `jsonwebtoken` package: 2. Create a function to generate JWT: 3. Verify JWT on each request: 4. Secure routes by using the `verifyToken` middleware: 5. Now your Node.js app uses JWT for authentication. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 728
  },
  {
    "question": "How to use MongoDB with Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in a flexible, JSON-like format, ideal for many modern applications.",
    "answer": "Steps to use MongoDB with Node.js using Mongoose: 1. Install Mongoose: 2. Connect to MongoDB: 3. Define a Mongoose model: 4. Create and save data: 5. Query MongoDB: 6. Your Node.js app is now set up with MongoDB. 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 772
  },
  {
    "question": "How to set up a cron job in Node.js?",
    "label": "nodejs, cron-job, scheduling",
    "language": "en",
    "context": "Cron jobs are used to run tasks on a scheduled basis at specified intervals.",
    "answer": "Steps to set up a cron job in Node.js using the `node-cron` package: 1. Install `node-cron`: 2. Set up a cron job: 3. You can customize the schedule to run tasks at specific times (e.g., hourly, daily, etc.). 4. Now your Node.js app will execute the scheduled task based on your cron configuration. 📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 613
  },
  {
    "question": "How to implement pagination in MongoDB with Node.js?",
    "label": "nodejs, mongodb, pagination",
    "language": "en",
    "context": "Pagination helps you load a subset of documents from a database, improving performance and user experience.",
    "answer": "Steps to implement pagination in MongoDB with Node.js: 1. Install Mongoose: 2. Define a Mongoose model and query with pagination: 3. Set up pagination on a route: 4. Your MongoDB query will now return paginated results. 📚 Reference: https://mongoosejs.com/docs/api/query.html#query_Query-skip",
    "start_char": 0,
    "end_char": 790
  },
  {
    "question": "How to use Socket.io with Node.js for real-time communication?",
    "label": "nodejs, socket.io, real-time",
    "language": "en",
    "context": "Socket.io allows for real-time, bi-directional communication between clients and servers over WebSockets.",
    "answer": "Steps to use Socket.io with Node.js: 1. Install `socket.io`: 2. Set up Socket.io server: 3. Emit events and listen for them on the client-side: 4. Your Node.js app now supports real-time communication. 📚 Reference: https://socket.io/docs/",
    "start_char": 0,
    "end_char": 758
  },
  {
    "question": "How to implement file upload in Node.js?",
    "label": "nodejs, file-upload, multer",
    "language": "en",
    "context": "File upload functionality is essential for allowing users to upload files to your application.",
    "answer": "Steps to implement file upload in Node.js using `multer`: 1. Install `multer`: 2. Set up `multer` middleware to handle file uploads: 3. Use the `upload` middleware in a route to handle file uploads: 4. Your Node.js app is now capable of handling file uploads. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 711
  },
  {
    "question": "How to connect to a MySQL database with Node.js?",
    "label": "nodejs, mysql, database",
    "language": "en",
    "context": "MySQL is a widely used relational database management system that is used to store structured data.",
    "answer": "Steps to connect to a MySQL database with Node.js using the `mysql2` package: 1. Install the `mysql2` package: 2. Set up MySQL connection: 3. Execute queries: 4. Close the connection: 5. You can now interact with your MySQL database from Node.js. 📚 Reference: https://www.npmjs.com/package/mysql2",
    "start_char": 0,
    "end_char": 708
  },
  {
    "question": "How to create a middleware in Express.js?",
    "label": "nodejs, express, middleware",
    "language": "en",
    "context": "Middleware in Express.js is a function that gets access to the request, response, and next function in the request-response cycle.",
    "answer": "Steps to create middleware in Express.js: 1. Create a middleware function: 2. Use the middleware function in your Express app: 3. Your middleware will now execute for every request to your Express app. 4. You can also apply middleware to specific routes: 5. You can chain multiple middleware functions to be executed sequentially. 📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 666
  },
  {
    "question": "How to handle errors in Node.js?",
    "label": "nodejs, error-handling",
    "language": "en",
    "context": "Error handling is crucial to ensure that your Node.js application runs smoothly and provides useful feedback to the user.",
    "answer": "Steps to handle errors in Node.js: 1. Use try-catch blocks for synchronous code: 2. For asynchronous code, use `.catch()` to handle promises: 3. You can also use the `process.on('uncaughtException')` event to handle uncaught exceptions: 4. Proper error handling ensures that your Node.js app is more stable and user-friendly. 📚 Reference: https://nodejs.org/en/docs/guides/error-handling/",
    "start_char": 0,
    "end_char": 726
  },
  {
    "question": "How to use Sequelize with Node.js for MySQL?",
    "label": "nodejs, sequelize, mysql",
    "language": "en",
    "context": "Sequelize is an ORM (Object Relational Mapper) that provides an easy-to-use interface for working with relational databases such as MySQL.",
    "answer": "Steps to use Sequelize with Node.js and MySQL: 1. Install Sequelize and MySQL2: 2. Set up Sequelize and connect to MySQL: 3. Define a model: 4. Sync the model with the database: 5. Query the database: 6. Your Node.js app is now set up with Sequelize and MySQL. 📚 Reference: https://sequelize.org/",
    "start_char": 0,
    "end_char": 786
  },
  {
    "question": "How to implement real-time chat with Node.js and Socket.io?",
    "label": "nodejs, socket.io, real-time-chat",
    "language": "en",
    "context": "Real-time chat allows users to exchange messages instantly, often using WebSocket technology for efficient communication.",
    "answer": "Steps to implement real-time chat with Node.js and Socket.io: 1. Install Socket.io: 2. Set up a Socket.io server: 3. On the client-side, connect and listen for messages: 4. Your chat system now broadcasts messages in real-time to all connected clients. 📚 Reference: https://socket.io/docs/v4/",
    "start_char": 0,
    "end_char": 814
  },
  {
    "question": "How to use Redis with Node.js?",
    "label": "nodejs, redis, cache",
    "language": "en",
    "context": "Redis is an in-memory key-value store that can be used for caching and managing session data in web applications.",
    "answer": "Steps to use Redis with Node.js: 1. Install the `redis` package: 2. Set up the Redis client: 3. Set and get data in Redis: 4. Use Redis for caching by storing frequently accessed data in memory. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 598
  },
  {
    "question": "How to create an authentication system in Node.js?",
    "label": "nodejs, authentication, security",
    "language": "en",
    "context": "Authentication is essential for verifying users and providing access to secure areas in a web application.",
    "answer": "Steps to create an authentication system in Node.js: 1. Install necessary libraries: 2. Set up user registration with bcryptjs to hash passwords: 3. Create a login endpoint to issue JSON Web Tokens (JWT): 4. Protect routes using middleware to verify JWT: 5. Your authentication system is now set up with Node.js. 📚 Reference: https://www.npmjs.com/package/bcryptjs",
    "start_char": 0,
    "end_char": 818
  },
  {
    "question": "How to implement user authentication with Passport.js?",
    "label": "nodejs, passport, authentication",
    "language": "en",
    "context": "Passport.js is a middleware for handling user authentication in Node.js applications.",
    "answer": "Steps to implement user authentication with Passport.js: 1. Install necessary libraries: 2. Set up Passport.js in your Express app: 3. Set up login and logout routes: 4. Your authentication system using Passport.js is now set up. 📚 Reference: https://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 819
  },
  {
    "question": "How to send an email using Node.js?",
    "label": "nodejs, email, nodemailer",
    "language": "en",
    "context": "NodeMailer is a module for sending emails from Node.js applications.",
    "answer": "Steps to send an email using Node.js and NodeMailer: 1. Install NodeMailer: 2. Set up NodeMailer transport configuration: 3. Send an email: 4. Your Node.js app can now send emails. 📚 Reference: https://nodemailer.com/",
    "start_char": 0,
    "end_char": 733
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a platform-as-a-service (PaaS) for building, running, and operating applications in various programming languages.",
    "answer": "Steps to deploy a Node.js application to Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n2. Log in to Heroku:\n```bash\nheroku login\n```\n3. Initialize a Git repository if not already initialized:\n```bash\ngit init\n```\n4. Create a Heroku application:\n```bash\nheroku create my-app-name\n```\n5. Deploy the app to Heroku:\n```bash\ngit push heroku master\n```\n6. Your Node.js app is now live on Heroku.\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 786
  },
  {
    "question": "How to set up environment variables in Node.js?",
    "label": "nodejs, environment-variables",
    "language": "en",
    "context": "Environment variables allow you to store configuration settings, such as API keys and database credentials, outside of your codebase.",
    "answer": "Steps to set up environment variables in Node.js: 1. Install `dotenv` package to load environment variables from a `.env` file: 2. Create a `.env` file at the root of your project and add your environment variables: 3. Load environment variables in your app: 4. Use these variables throughout your application: 5. Make sure not to commit the `.env` file to your version control system. 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 563
  },
  {
    "question": "How to install and use MongoDB with Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in flexible, JSON-like documents.",
    "answer": "Steps to install and use MongoDB with Node.js: 1. Install `mongodb` package: 2. Connect to MongoDB using the MongoClient: 3. Create a database and collection, and insert data: 4. Query data from MongoDB: 5. Close the connection: 6. Your Node.js app is now set up with MongoDB. 📚 Reference: https://mongodb.github.io/node-mongodb-native/",
    "start_char": 0,
    "end_char": 794
  },
  {
    "question": "How to implement JWT-based authentication in a Node.js app?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) provide a compact, URL-safe means of representing claims to be transferred between two parties.",
    "answer": "Steps to implement JWT-based authentication in Node.js: 1. Install `jsonwebtoken` package: 2. Set up user login to issue a JWT token: 3. Protect routes using middleware to verify JWT: 4. Apply middleware to protect specific routes: 5. Your app is now using JWT for authentication. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 739
  },
  {
    "question": "How to use Express.js for routing?",
    "label": "nodejs, express, routing",
    "language": "en",
    "context": "Routing in Express.js allows you to define URL paths and associate them with specific actions in your application.",
    "answer": "Steps to use Express.js for routing: 1. Install Express.js: 2. Set up a basic Express app and define routes: 3. Create dynamic routes with route parameters: 4. Use route handling for different HTTP methods (GET, POST, etc.): 5. Your Express app now has routing set up. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 683
  },
  {
    "question": "How to use async/await in Node.js?",
    "label": "nodejs, async-await",
    "language": "en",
    "context": "Async/await provides a cleaner and more readable way to handle asynchronous operations in JavaScript.",
    "answer": "Steps to use async/await in Node.js: 1. Define an asynchronous function using the `async` keyword: 2. Call the asynchronous function with `await` to get the result: 3. Use async/await with promises: 4. You can use `try/catch` blocks for error handling: 5. Async/await helps write clean and manageable asynchronous code. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 759
  },
  {
    "question": "How to use session in Express.js?",
    "label": "nodejs, express, session",
    "language": "en",
    "context": "Sessions allow you to store user data between requests, making them crucial for authentication and storing user-specific information.",
    "answer": "Steps to use sessions in Express.js: 1. Install `express-session` package: 2. Set up session middleware in your Express app: 3. Store data in session variables: 4. Access session data in subsequent requests: 5. Sessions are useful for tracking users' activities and maintaining their state. 📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 635
  },
  {
    "question": "How to set up a static file server with Express.js?",
    "label": "nodejs, express, static-files",
    "language": "en",
    "context": "Static file servers allow you to serve assets like images, CSS, and JavaScript files directly to clients.",
    "answer": "Steps to set up a static file server with Express.js: 1. Set up Express and serve static files: 2. Place your static files (e.g., `index.html`, CSS, JS) in the `public` folder. 3. Now, clients can access the static files by visiting `http://localhost:3000/index.html` or any other file inside the `public` directory. 4. This is ideal for serving frontend assets in a Node.js web app. 📚 Reference: https://expressjs.com/en/starter/static-files.html",
    "start_char": 0,
    "end_char": 611
  },
  {
    "question": "How to use MongoDB with Mongoose in Node.js?",
    "label": "nodejs, mongoose, mongodb",
    "language": "en",
    "context": "Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js that provides a straight-forward way to model and query data.",
    "answer": "Steps to use MongoDB with Mongoose in Node.js: 1. Install Mongoose: 2. Set up Mongoose and connect to MongoDB: 3. Define a schema and model: 4. Create and save a new document: 5. Query the data: 6. Mongoose simplifies data management in MongoDB with its powerful features. 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 751
  },
  {
    "question": "How to implement middleware in Express.js?",
    "label": "nodejs, express, middleware",
    "language": "en",
    "context": "Middleware functions are executed during the request-response cycle and can modify the request or response objects.",
    "answer": "Steps to implement middleware in Express.js: 1. Define a custom middleware function: 2. Use the middleware in your Express app: 3. Middleware can be applied to specific routes or globally: 4. Use built-in middleware (e.g., `express.json()` for parsing JSON): 5. Middleware functions are powerful tools for modifying requests, adding logging, or performing authentication tasks. 📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 777
  },
  {
    "question": "How to deploy a Node.js app on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that lets you build, deliver, monitor, and scale apps. Deploying Node.js apps on Heroku is simple and efficient.",
    "answer": "Steps to deploy a Node.js app on Heroku: 1. Install the Heroku CLI: 2. Log in to Heroku from the terminal: 3. Initialize a git repository and commit your code: 4. Create a new app on Heroku: 5. Push your app to Heroku: 6. Open the app in your browser: 7. Your Node.js app is now deployed on Heroku. 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 558
  },
  {
    "question": "How to use Docker with Node.js?",
    "label": "nodejs, docker, containerization",
    "language": "en",
    "context": "Docker allows you to package your application into a container, ensuring that it runs consistently across different environments.",
    "answer": "Steps to use Docker with Node.js: 1. Install Docker on your system: 2. Create a `Dockerfile` in your Node.js project: 3. Build the Docker image: 4. Run the Docker container: 5. Your Node.js app is now running in a Docker container. 📚 Reference: https://nodejs.org/en/docs/guides/nodejs-docker-webapp/",
    "start_char": 0,
    "end_char": 590
  },
  {
    "question": "How to use MongoDB with Express.js in a MERN stack?",
    "label": "mern, mongodb, express, nodejs",
    "language": "en",
    "context": "The MERN stack (MongoDB, Express, React, Node.js) is a popular stack for building full-stack JavaScript applications.",
    "answer": "Steps to use MongoDB with Express.js in a MERN stack: 1. Set up a Node.js server with Express: 2. Install MongoDB and Mongoose for database interaction: 3. Connect to MongoDB from your Express app: 4. Define a Mongoose model: 5. Use the model in Express routes to save and query data: 6. This completes the integration of MongoDB with Express in the MERN stack. 📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose",
    "start_char": 0,
    "end_char": 898
  },
  {
    "question": "How to use Express.js for creating RESTful APIs?",
    "label": "nodejs, express, api, rest",
    "language": "en",
    "context": "Express.js is a minimal web application framework that allows you to easily build RESTful APIs in Node.js.",
    "answer": "Steps to use Express.js for creating RESTful APIs: 1. Set up Express app: 2. Define API routes for CRUD operations (Create, Read, Update, Delete): 3. Each route corresponds to a different HTTP method (GET, POST, PUT, DELETE). 4. You can interact with a database or other services in your route handlers. 5. Express.js makes it simple to create RESTful APIs in Node.js. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 747
  },
  {
    "question": "How to use Redis with Node.js for caching?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory data structure store, used as a database, cache, and message broker. It is often used in Node.js for caching data.",
    "answer": "Steps to use Redis with Node.js for caching: 1. Install Redis on your system and the `redis` Node.js client: 2. Connect to Redis server in your Node.js app: 3. Set cache values in Redis: 4. Get cache values from Redis: 5. You can now use Redis for caching in your Node.js application. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 750
  },
  {
    "question": "How to handle errors in Express.js?",
    "label": "nodejs, express, error-handling",
    "language": "en",
    "context": "Error handling is a crucial part of any web application to provide proper responses to users when things go wrong.",
    "answer": "Steps to handle errors in Express.js: 1. Define an error-handling middleware: 2. Use `next()` to pass control to the error-handling middleware when an error occurs in a route: 3. You can also handle specific types of errors (e.g., 404 errors) with custom messages: 4. Express makes error-handling easy with middleware functions. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 786
  },
  {
    "question": "How to use JWT for authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) is a compact, URL-safe means of representing claims between two parties. It is commonly used for authentication in Node.js applications.",
    "answer": "Steps to use JWT for authentication in Node.js: 1. Install the `jsonwebtoken` library: 2. Create a function to generate a JWT token: 3. Verify the token in protected routes: 4. Protect your routes by using the `verifyToken` middleware: 5. Your Node.js app now uses JWT for authentication. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 824
  },
  {
    "question": "How to schedule tasks in Node.js?",
    "label": "nodejs, task-scheduling",
    "language": "en",
    "context": "Task scheduling is useful for automating tasks that need to run at specific intervals, such as sending emails or running background jobs.",
    "answer": "Steps to schedule tasks in Node.js: 1. Install the `node-cron` library: 2. Create a cron job to schedule a task: 3. The cron expression can be customized to schedule tasks at different intervals. 4. Task scheduling helps automate background tasks like sending notifications or cleaning up databases. 📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 758
  },
  {
    "question": "How to perform unit testing in Node.js?",
    "label": "nodejs, testing, unit-testing",
    "language": "en",
    "context": "Unit testing helps to verify the correctness of individual units or functions in your application, ensuring that your code works as expected.",
    "answer": "Steps to perform unit testing in Node.js: 1. Install a testing framework like Mocha and Chai: 2. Write unit tests for your functions: 3. Run your tests using Mocha: 4. Unit tests help ensure that each function works as expected. 📚 Reference: https://www.npmjs.com/package/mocha",
    "start_char": 0,
    "end_char": 768
  },
  {
    "question": "How to use GraphQL with Node.js?",
    "label": "nodejs, graphql",
    "language": "en",
    "context": "GraphQL is a query language for APIs, and it provides a runtime for executing those queries with your existing data.",
    "answer": "Steps to use GraphQL with Node.js: 1. Install `express-graphql` and `graphql` packages: 2. Define your GraphQL schema: 3. Set up the GraphQL endpoint with Express: 4. Your Node.js app is now ready to handle GraphQL queries. 📚 Reference: https://graphql.org/graphql-js/",
    "start_char": 0,
    "end_char": 866
  },
  {
    "question": "How to handle asynchronous code in Node.js?",
    "label": "nodejs, async, promises, callback",
    "language": "en",
    "context": "Asynchronous programming is crucial in Node.js to handle non-blocking I/O operations. Using promises or async/await helps to simplify asynchronous code.",
    "answer": "Steps to handle asynchronous code in Node.js: 1. Use callbacks for asynchronous operations: 2. Use promises for handling asynchronous code more cleanly: 3. Use async/await to simplify promise handling: 4. Asynchronous programming is essential for non-blocking operations in Node.js. 📚 Reference: https://nodejs.org/en/docs/guides/blocking-vs-non-blocking/",
    "start_char": 0,
    "end_char": 880
  },
  {
    "question": "How to configure environment variables in Node.js?",
    "label": "nodejs, environment-variables",
    "language": "en",
    "context": "Environment variables are used to store configuration settings that are specific to an environment (development, production, etc.). In Node.js, you can configure them to keep sensitive information secure.",
    "answer": "Steps to configure environment variables in Node.js: 1. Install the `dotenv` package to manage environment variables: 2. Create a `.env` file in the root of your project and add environment variables: 3. Load environment variables in your Node.js app: 4. Use the environment variables securely throughout your app. 5. Add `.env` to `.gitignore` to avoid pushing sensitive information to version control. 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 721
  },
  {
    "question": "How to use WebSockets in Node.js?",
    "label": "nodejs, websocket, real-time",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single TCP connection, making them ideal for real-time applications like chat apps or live notifications.",
    "answer": "Steps to use WebSockets in Node.js: 1. Install the `ws` WebSocket library: 2. Set up a WebSocket server in your Node.js app: 3. Connect a WebSocket client to the server (you can use the browser's WebSocket API): 4. WebSockets enable real-time communication in your Node.js apps. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 819
  },
  {
    "question": "How to validate user input in Node.js?",
    "label": "nodejs, validation, input-validation",
    "language": "en",
    "context": "Validating user input is crucial to ensure that the data received from users is correct and safe to use in your application.",
    "answer": "Steps to validate user input in Node.js: 1. Use a validation library like `express-validator` for input validation: 2. Use `express-validator` to validate and sanitize input: 3. Handle validation errors appropriately to give feedback to users. 📚 Reference: https://www.npmjs.com/package/express-validator",
    "start_char": 0,
    "end_char": 758
  },
  {
    "question": "How to implement OAuth 2.0 in Node.js?",
    "label": "nodejs, oauth2, authentication",
    "language": "en",
    "context": "OAuth 2.0 is a protocol for authorization that allows third-party applications to access user resources without sharing credentials.",
    "answer": "Steps to implement OAuth 2.0 in Node.js: 1. Install OAuth-related libraries like `passport`, `passport-oauth2`: 2. Set up Passport.js with OAuth 2.0 strategy: 3. Add the routes to start the OAuth flow and handle the callback: 4. Your Node.js app is now set up with OAuth 2.0 for authentication. 📚 Reference: https://www.npmjs.com/package/passport-oauth2",
    "start_char": 0,
    "end_char": 879
  },
  {
    "question": "How to use AWS S3 with Node.js?",
    "label": "nodejs, aws, s3, file-upload",
    "language": "en",
    "context": "Amazon S3 is an object storage service that provides scalable, durable, and low-latency storage. It can be used to store files like images, videos, and documents in your Node.js app.",
    "answer": "Steps to use AWS S3 with Node.js: 1. Install the AWS SDK for JavaScript: 2. Configure the AWS SDK with your access keys: 3. Create an S3 instance and upload files: 4. Your Node.js app can now upload files to AWS S3. 📚 Reference: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html",
    "start_char": 0,
    "end_char": 760
  },
  {
    "question": "How to handle rate limiting in Node.js?",
    "label": "nodejs, rate-limiting",
    "language": "en",
    "context": "Rate limiting is used to control the amount of incoming requests to your Node.js application, preventing abuse and ensuring fair usage of resources.",
    "answer": "Steps to handle rate limiting in Node.js: 1. Install the `express-rate-limit` package: 2. Set up rate limiting middleware in your Express app: 3. Customize rate limits based on different routes or IP addresses. 4. Rate limiting helps protect your app from malicious traffic. 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 746
  },
  {
    "question": "How to set up a proxy server in Node.js?",
    "label": "nodejs, proxy-server",
    "language": "en",
    "context": "A proxy server acts as an intermediary between a client and the internet. It can be used to forward requests from your application to external services or handle security features.",
    "answer": "Steps to set up a proxy server in Node.js: 1. Install the `http-proxy-middleware` package: 2. Use the middleware in your Express app to create a proxy: 3. Requests made to `/api` will be forwarded to the external API. 4. Proxy servers are commonly used for security or forwarding requests to external services. 📚 Reference: https://www.npmjs.com/package/http-proxy-middleware",
    "start_char": 0,
    "end_char": 760
  },
  {
    "question": "How to create a RESTful API in Node.js?",
    "label": "nodejs, express, api, rest",
    "language": "en",
    "context": "A RESTful API is a web service that follows the principles of REST (Representational State Transfer) and is used for handling HTTP requests.",
    "answer": "Steps to create a RESTful API in Node.js: 1. Install the `express` package: 2. Create an Express app and define routes for the API: 3. Add more routes for CRUD operations: 4. RESTful APIs use standard HTTP methods such as GET, POST, PUT, DELETE. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 759
  },
  {
    "question": "How to secure a Node.js API?",
    "label": "nodejs, api, security",
    "language": "en",
    "context": "Securing a Node.js API is essential to protect sensitive data and ensure that only authorized users can access your resources.",
    "answer": "Steps to secure a Node.js API: 1. Use HTTPS to encrypt communication between the client and server. 2. Implement authentication using JWT (JSON Web Tokens) for secure user sessions: 3. Use middleware to verify JWT on protected routes: 4. Validate inputs using libraries like `express-validator` to prevent injection attacks. 5. Use rate limiting to prevent abuse of your API. 📚 Reference: https://jwt.io/",
    "start_char": 0,
    "end_char": 836
  },
  {
    "question": "How to manage session in Node.js?",
    "label": "nodejs, session, express",
    "language": "en",
    "context": "Session management is a way to store user-specific data on the server side, ensuring that the user remains authenticated throughout their interactions.",
    "answer": "Steps to manage sessions in Node.js: 1. Install the `express-session` middleware: 2. Set up session middleware in your Express app: 3. Store user data in session: 4. Access session data on protected routes: 5. Use session to manage user state across requests. 📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 797
  },
  {
    "question": "How to implement file upload in Node.js?",
    "label": "nodejs, file-upload, express",
    "language": "en",
    "context": "File upload functionality allows users to upload files to your server. This is commonly used in web applications where users need to upload images, documents, etc.",
    "answer": "Steps to implement file upload in Node.js: 1. Install `multer` middleware for handling multipart form-data: 2. Set up multer middleware to handle file uploads: 3. Create a route for file upload: 4. Ensure the `uploads/` directory exists to store uploaded files. 5. Your app can now handle file uploads. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 774
  },
  {
    "question": "How to connect MongoDB to Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in a flexible, JSON-like format. It can be integrated with Node.js to store and retrieve data.",
    "answer": "Steps to connect MongoDB to Node.js: 1. Install the `mongoose` package for MongoDB integration: 2. Connect to MongoDB using Mongoose: 3. Define a Mongoose model to interact with a MongoDB collection: 4. Perform CRUD operations on the MongoDB collection using Mongoose methods. 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 758
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that allows you to deploy, manage, and scale Node.js applications.",
    "answer": "Steps to deploy a Node.js app to Heroku: 1. Install the Heroku CLI: 2. Log in to Heroku using the CLI: 3. Initialize a Git repository in your Node.js app: 4. Create a new Heroku app: 5. Push the app to Heroku: 6. Open your app in the browser: 7. Your Node.js app is now deployed to Heroku. 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 740
  },
  {
    "question": "How to schedule tasks in Node.js?",
    "label": "nodejs, cron, tasks",
    "language": "en",
    "context": "Scheduling tasks in Node.js allows you to automate periodic jobs, such as sending emails, cleaning up logs, or running backups.",
    "answer": "Steps to schedule tasks in Node.js:\n\n1. Install the `node-cron` package for scheduling tasks:\n```bash\nnpm install node-cron\n```\n2. Set up cron jobs in your Node.js app:\n```javascript\nconst cron = require('node-cron');\n\ncron.schedule('0 0 * * *', () => {\n  console.log('Running task at midnight every day');\n});\n```\n3. You can schedule tasks using cron syntax to specify when they should run.\n4. Use `node-cron` for automation tasks.\n\n📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 723
  },
  {
    "question": "How to use Redis in Node.js?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory data structure store that can be used as a database, cache, and message broker. It is commonly used in Node.js for caching and session management.",
    "answer": "Steps to use Redis in Node.js: 1. Install the `redis` package: 2. Set up a Redis client in your Node.js app: 3. Use Redis for caching: 4. Use Redis for session storage or message queuing. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 742
  },
  {
    "question": "How to handle errors in Node.js?",
    "label": "nodejs, error-handling",
    "language": "en",
    "context": "Error handling is a critical part of Node.js applications. It ensures that your app behaves as expected even when unexpected issues occur.",
    "answer": "Steps to handle errors in Node.js: 1. Use `try...catch` for synchronous errors: 2. Use `Promise.catch()` for asynchronous errors: 3. Handle errors in middleware for Express applications: 4. Log errors to a file or external service for better monitoring. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 752
  },
  {
    "question": "How to handle file compression in Node.js?",
    "label": "nodejs, file-compression",
    "language": "en",
    "context": "File compression reduces the size of files and can be used to save storage space or reduce transmission time over networks.",
    "answer": "Steps to handle file compression in Node.js: 1. Install the `zlib` or `archiver` package for compression: 2. Use `zlib` for compressing files: 3. Use `archiver` for creating zip archives: 4. Compression helps reduce file size for storage or network transfer. 📚 Reference: https://nodejs.org/api/zlib.html",
    "start_char": 0,
    "end_char": 747
  },
  {
    "question": "How to implement authentication using Passport.js in Node.js?",
    "label": "nodejs, passport, authentication",
    "language": "en",
    "context": "Passport.js is a popular authentication middleware for Node.js, supporting many different authentication strategies.",
    "answer": "Steps to implement authentication using Passport.js in Node.js: 1. Install Passport and related dependencies: 2. Set up Passport in your Express app: 3. Set up routes to handle login and session management: 4. Protect routes using `passport.authenticate()` middleware: 5. Use session to store user data between requests. 📚 Reference: http://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 1075
  },
  {
    "question": "How to set up MongoDB with Mongoose in Node.js?",
    "label": "nodejs, mongoose, mongodb",
    "language": "en",
    "context": "Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js that provides a straightforward way to model your data.",
    "answer": "Steps to set up MongoDB with Mongoose in Node.js: 1. Install `mongoose` package: 2. Connect to MongoDB using Mongoose: 3. Define a Mongoose schema and model: 4. Create, read, update, and delete documents using Mongoose methods: 5. Use Mongoose to interact with MongoDB seamlessly. 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 808
  },
  {
    "question": "How to use WebSockets in Node.js?",
    "label": "nodejs, websocket, real-time",
    "language": "en",
    "context": "WebSockets enable bidirectional communication between the server and client, often used for real-time applications such as chat apps.",
    "answer": "Steps to use WebSockets in Node.js: 1. Install `ws` package for WebSocket functionality: 2. Set up a WebSocket server: 3. On the client side, connect to the WebSocket server: 4. WebSockets allow for real-time two-way communication. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 719
  },
  {
    "question": "How to handle file uploads with Multer in Node.js?",
    "label": "nodejs, multer, file-upload",
    "language": "en",
    "context": "Multer is a middleware for handling multipart/form-data, which is used for uploading files in Node.js applications.",
    "answer": "Steps to handle file uploads with Multer in Node.js: 1. Install `multer` middleware: 2. Set up multer for file storage configuration: 3. Create an endpoint to handle file upload: 4. Ensure that `uploads/` directory exists for storing uploaded files. 5. Handle file uploads and implement error handling for invalid file formats. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 748
  },
  {
    "question": "How to enable CORS in Node.js?",
    "label": "nodejs, cors, security",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) is a mechanism that allows restricted resources on a web server to be requested from another domain.",
    "answer": "Steps to enable CORS in Node.js: 1. Install the `cors` middleware: 2. Use CORS middleware in your Express app: 3. Customize CORS options for specific routes or domains: 4. CORS allows safe cross-origin requests from a client to the server. 5. You can also configure CORS to allow specific methods, headers, or credentials. 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 717
  },
  {
    "question": "How to integrate Stripe payment gateway in Node.js?",
    "label": "nodejs, stripe, payment",
    "language": "en",
    "context": "Stripe is a popular payment gateway that allows you to accept payments in your Node.js application.",
    "answer": "Steps to integrate Stripe payment gateway in Node.js: 1. Install the Stripe package: 2. Set up your Stripe secret key in the app: 3. Create a route to handle payments: 4. Implement front-end to handle payment form and send the token to the server. 5. Use Stripe for secure payment processing. 📚 Reference: https://stripe.com/docs/payments",
    "start_char": 0,
    "end_char": 767
  },
  {
    "question": "How to use JWT for user authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are an open standard for securely transmitting information between client and server as a JSON object.",
    "answer": "Steps to use JWT for user authentication in Node.js: 1. Install `jsonwebtoken` package: 2. Create a route for user login and generate a JWT token: 3. Use middleware to verify the JWT token for protected routes: 4. JWT allows stateless authentication without the need to store sessions. 📚 Reference: https://jwt.io/",
    "start_char": 0,
    "end_char": 904
  },
  {
    "question": "How to implement rate limiting in Node.js?",
    "label": "nodejs, rate-limiting",
    "language": "en",
    "context": "Rate limiting is the process of limiting the number of requests a client can make to a server in a given period of time, which helps prevent abuse.",
    "answer": "Steps to implement rate limiting in Node.js: 1. Install `express-rate-limit` middleware: 2. Set up rate limiting for your Express app: 3. Customize rate limiting for specific routes or methods: 4. Rate limiting helps protect your application from DDoS attacks and other forms of abuse. 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 803
  },
  {
    "question": "How to use Redis for session storage in Node.js?",
    "label": "nodejs, redis, session-storage",
    "language": "en",
    "context": "Redis is often used for session storage in Node.js applications due to its fast in-memory data store capabilities.",
    "answer": "Steps to use Redis for session storage in Node.js: 1. Install `express-session` and `redis` packages: 2. Set up Redis store for session storage: 3. Use sessions in your routes: 4. Redis helps store sessions in memory for fast access across multiple instances. 📚 Reference: https://www.npmjs.com/package/connect-redis",
    "start_char": 0,
    "end_char": 878
  },
  {
    "question": "How to implement JWT authentication in a React app?",
    "label": "react, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are commonly used for handling authentication in modern web applications.",
    "answer": "Steps to implement JWT authentication in a React app: 1. Install necessary libraries: 2. Create a login form and send a POST request to the backend to get a JWT token: 3. Use `jwt-decode` to decode the token and check if it's valid: 4. Protect routes in React using a custom hook: 5. Use JWT to maintain a stateless authentication system. 📚 Reference: https://jwt.io/",
    "start_char": 0,
    "end_char": 885
  },
  {
    "question": "How to set up a Redux store in a React app?",
    "label": "react, redux, state-management",
    "language": "en",
    "context": "Redux is a predictable state container for JavaScript apps, commonly used with React for managing application state.",
    "answer": "Steps to set up a Redux store in a React app: 1. Install Redux and React-Redux: 2. Create actions and reducers: 3. Combine reducers and create the store: 4. Provide the Redux store to your React app using `<Provider>`: 5. Use `useSelector` and `useDispatch` hooks to interact with the Redux store. 📚 Reference: https://redux.js.org/introduction/getting-started",
    "start_char": 0,
    "end_char": 1151
  },
  {
    "question": "How to use Axios to make API requests in React?",
    "label": "react, axios, api-requests",
    "language": "en",
    "context": "Axios is a promise-based HTTP client for JavaScript that is commonly used to make API requests in React applications.",
    "answer": "Steps to use Axios to make API requests in React: 1. Install Axios: 2. Import Axios and use it to make a GET or POST request: 3. Use `useEffect` to call the API on component mount: 4. Handle errors with `try...catch` block: 5. Axios can also be used for handling request/response interceptors and cancellation tokens. 📚 Reference: https://axios-http.com/docs/intro",
    "start_char": 0,
    "end_char": 1076
  },
  {
    "question": "How to add routing in a React app using React Router?",
    "label": "react, routing, react-router",
    "language": "en",
    "context": "React Router is a library for handling routing in React applications, enabling navigation between different views or pages.",
    "answer": "Steps to add routing in a React app using React Router: 1. Install React Router DOM: 2. Set up the `BrowserRouter` to wrap your app: 3. Create components for each route: 4. Use the `Link` component for navigation: 5. The `Switch` component ensures only the first matching route is rendered. 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 921
  },
  {
    "question": "How to use the `useState` hook in React?",
    "label": "react, hooks, usestate",
    "language": "en",
    "context": "The `useState` hook is a fundamental part of React, used for managing state in functional components.",
    "answer": "Steps to use the `useState` hook in React: 1. Import `useState` from React: 2. Declare a state variable and its setter function using `useState`: 3. Use the setter function to update the state value: 4. Use the state variable in your JSX: 5. `useState` allows you to manage state in functional components without using class components. 📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 758
  },
  {
    "question": "How to handle asynchronous operations in React using `useEffect`?",
    "label": "react, hooks, useeffect, async",
    "language": "en",
    "context": "The `useEffect` hook in React is used for performing side effects, such as fetching data or subscribing to events.",
    "answer": "Steps to handle asynchronous operations in React using `useEffect`: 1. Define the async function inside `useEffect`: 2. Use `async` functions inside `useEffect` to perform async operations like fetching data. 3. Handle errors inside `useEffect` using `try...catch`: 4. Ensure that `useEffect` is called on component mount or when dependencies change. 5. Use loading and error states to manage UI feedback. 📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 979
  },
  {
    "question": "How to use `useContext` hook in React?",
    "label": "react, hooks, usecontext",
    "language": "en",
    "context": "The `useContext` hook is used to consume context values in React functional components.",
    "answer": "1. Create a context using `createContext`: 2. Use the `MyContext.Provider` to provide the context value in a parent component: 3. Consume the context value in a child component using `useContext`: 4. `useContext` allows you to avoid prop drilling and share state across components. 📚 Reference: https://reactjs.org/docs/context.html",
    "start_char": 0,
    "end_char": 921
  },
  {
    "question": "How to use React Hooks for managing form state?",
    "label": "react, hooks, form-management",
    "language": "en",
    "context": "React Hooks like `useState` and `useEffect` can be used to manage form state efficiently in functional components.",
    "answer": "Steps to use React Hooks for managing form state: 1. Create a form component with `useState` for managing input values: 2. Bind the state variables to form fields: 3. `useState` makes it easy to manage form data in functional components. 4. You can also use `useEffect` to reset the form after submission. 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 1010
  },
  {
    "question": "How to set up and configure ESLint in a React project?",
    "label": "react, eslint, code-quality",
    "language": "en",
    "context": "ESLint is a tool for identifying and reporting on patterns in JavaScript, commonly used to enforce code style and improve code quality in React applications.",
    "answer": "Steps to set up and configure ESLint in a React project: 1. Install ESLint and the required plugins: 2. Initialize the ESLint configuration: 3. Choose the appropriate settings during setup, such as React environment, JavaScript version, and style guide. 4. Create an `.eslintrc.json` file with the following content: 5. Add a script to run ESLint: 6. Run ESLint: 7. ESLint will highlight issues in your code based on the rules you set up. 📚 Reference: https://eslint.org/docs/user-guide/getting-started",
    "start_char": 0,
    "end_char": 888
  },
  {
    "question": "How to set up Redux DevTools in a React project?",
    "label": "react, redux, devtools",
    "language": "en",
    "context": "Redux DevTools is a powerful tool for debugging and inspecting Redux state in real-time.",
    "answer": "Steps to set up Redux DevTools in a React project: 1. Install Redux DevTools extension for Chrome or Firefox from the browser's extension store. 2. Install Redux DevTools extension in your project: 3. Integrate Redux DevTools with your store configuration: 4. After setting up, you can open the Redux DevTools in the browser to inspect actions and state changes. 5. The DevTools provide advanced features like time travel debugging and action replay. 📚 Reference: https://github.com/zalmoxisus/redux-devtools-...",
    "start_char": 0,
    "end_char": 874
  },
  {
    "question": "How to implement lazy loading of components in React?",
    "label": "react, lazy-loading",
    "language": "en",
    "context": "Lazy loading is a technique to load components only when they are needed, improving the performance of large React applications.",
    "answer": "Steps to implement lazy loading of components in React: 1. Use `React.lazy` to dynamically import a component: 2. Wrap the lazy-loaded component inside a `Suspense` component to display a fallback while loading: 3. The component will now be loaded only when it is required (e.g., on route visit or button click). 4. Use `React.lazy` only for components, not for functions or other parts of your application. 📚 Reference: https://reactjs.org/docs/code-splitting.html",
    "start_char": 0,
    "end_char": 620
  },
  {
    "question": "How to handle environment variables in React?",
    "label": "react, environment-variables",
    "language": "en",
    "context": "Environment variables are useful for managing configurations that differ between development, staging, and production environments.",
    "answer": "Steps to handle environment variables in React: 1. Create an `.env` file in the root directory of your React project: 2. Access the environment variables in your code: 3. Prefix all environment variables with `REACT_APP_` to make them accessible in your React code. 4. Use `process.env` to access the variables during build and runtime. 5. To use different values in different environments, create multiple `.env` files like `.env.development`, `.env.production`. 📚 Reference: https://create-react-app.dev/doc...",
    "start_char": 0,
    "end_char": 838
  },
  {
    "question": "How to create custom hooks in React?",
    "label": "react, hooks, custom-hooks",
    "language": "en",
    "context": "Custom hooks in React allow you to reuse stateful logic across multiple components without changing their component hierarchy.",
    "answer": "Steps to create custom hooks in React: 1. Define a function starting with `use` (e.g., `useCounter`) and implement your logic: 2. Use the custom hook in your component: 3. Custom hooks allow you to encapsulate reusable logic and make your components cleaner. 4. You can create hooks for handling form state, API requests, and more. 📚 Reference: https://reactjs.org/docs/hooks-custom.html",
    "start_char": 0,
    "end_char": 938
  },
  {
    "question": "How to manage component lifecycle in React using `useEffect`?",
    "label": "react, hooks, lifecycle, useeffect",
    "language": "en",
    "context": "`useEffect` allows you to handle side effects in functional components, including component lifecycle methods like `componentDidMount`, `componentDidUpdate`, and `componentWillUnmount`.",
    "answer": "Steps to manage component lifecycle in React using `useEffect`: 1. Run a side effect on component mount: 2. Run a side effect on component update: 3. Clean up side effects when a component unmounts (like unsubscribing from an event): 4. `useEffect` combines the behavior of `componentDidMount`, `componentDidUpdate`, and `componentWillUnmount` into one API. 📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 933
  },
  {
    "question": "How to handle forms with multiple input fields in React?",
    "label": "react, forms, multiple-inputs",
    "language": "en",
    "context": "Handling multiple input fields in a form can be done using controlled components in React with `useState`.",
    "answer": "Steps to handle forms with multiple input fields in React: 1. Create a state object to manage multiple input values: 2. Bind each input field to a property in the state object: 3. Use a single `handleChange` function to handle updates for all input fields: 4. This approach allows you to handle dynamic forms with multiple fields and update them efficiently. 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 876
  },
  {
    "question": "How to implement rate limiting in Node.js?",
    "label": "node, rate-limiting, security",
    "language": "en",
    "context": "Rate limiting is essential to protect your server from abuse by limiting the number of requests a user can make in a given period.",
    "answer": "Steps to implement rate limiting in Node.js: 1. Install `express-rate-limit`: 2. Set up the rate limiter middleware in your Express app: 3. Optionally, customize the rate limiter for different routes or user roles. 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 799
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "node, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that enables you to deploy and scale Node.js applications with ease.",
    "answer": "Steps to deploy a Node.js application to Heroku:\n\n1. Install the Heroku CLI and log in:\n```bash\nnpm install -g heroku\nheroku login\n```\n2. Create a `Procfile` in the root of your app:\n```bash\nweb: node app.js\n```\n3. Initialize a Git repository and push your code to Heroku:\n```bash\ngit init\nheroku create\ngit add .\ngit commit -m 'Initial commit'\ngit push heroku master\n```\n4. Access your app at the URL provided by Heroku.\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 751
  },
  {
    "question": "How to handle file uploads in Node.js?",
    "label": "node, file-upload, express",
    "language": "en",
    "context": "Handling file uploads in Node.js is common in applications that require users to upload documents, images, or other files.",
    "answer": "Steps to handle file uploads in Node.js:\n\n1. Install `multer` for handling multipart form-data:\n```bash\nnpm install multer\n```\n2. Set up `multer` in your Express app:\n```javascript\nconst multer = require('multer');\n\nconst upload = multer({ dest: 'uploads/' });\n\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded successfully');\n});\n```\n3. Optionally, configure `multer` for file size limits and storage options.\n\n📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 703
  },
  {
    "question": "How to implement OAuth2 authentication in Node.js?",
    "label": "node, oauth2, authentication",
    "language": "en",
    "context": "OAuth2 is an authorization framework that allows third-party services to exchange credentials securely for access tokens.",
    "answer": "Steps to implement OAuth2 authentication in Node.js: 1. Install `passport`, `passport-oauth2`, and `express-session`: 2. Set up OAuth2 strategy with Passport: 3. Implement login and callback routes: 4. Protect routes with authentication middleware. 📚 Reference: https://www.passportjs.org/packages/passport-oauth2/",
    "start_char": 0,
    "end_char": 1174
  },
  {
    "question": "How to use Redis with Node.js?",
    "label": "node, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory data structure store used as a database, cache, and message broker.",
    "answer": "Steps to use Redis with Node.js: 1. Install `redis` npm package: 2. Create a Redis client and connect to the Redis server: 3. Use Redis commands for caching and storage: 4. Optionally, configure Redis persistence and clustering. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 812
  },
  {
    "question": "How to create a RESTful API in Node.js?",
    "label": "node, rest, api, express",
    "language": "en",
    "context": "RESTful APIs are a set of web services that allow communication between different software systems using HTTP methods.",
    "answer": "Steps to create a RESTful API in Node.js: 1. Install `express`: 2. Set up basic routing in Express: 3. Implement other HTTP methods (PUT, DELETE) for resource management. 4. Optionally, implement authentication, pagination, and input validation. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 876
  },
  {
    "question": "How to deploy a Node.js app with Docker?",
    "label": "node, docker, deployment",
    "language": "en",
    "context": "Docker allows you to package your Node.js application and its dependencies into a container, making it easy to deploy and scale.",
    "answer": "Steps to deploy a Node.js app with Docker:\n\n1. Create a `Dockerfile` in the root of your project:\n```dockerfile\nFROM node:14\nWORKDIR /app\nCOPY . .\nRUN npm install\nCMD ['node', 'app.js']\n```\n2. Build the Docker image:\n```bash\ndocker build -t my-node-app .\n```\n3. Run the Docker container:\n```bash\ndocker run -p 8080:8080 my-node-app\n```\n4. Optionally, configure multi-stage builds and environment variables.\n\n📚 Reference: https://www.docker.com/get-started",
    "start_char": 0,
    "end_char": 734
  },
  {
    "question": "How to secure a Node.js app with HTTPS?",
    "label": "node, security, https",
    "language": "en",
    "context": "HTTPS is a secure version of HTTP that uses SSL/TLS to encrypt communication between the server and the client.",
    "answer": "Steps to secure a Node.js app with HTTPS: 1. Generate an SSL certificate (self-signed or from a CA): 2. Set up HTTPS server in your Node.js app: 3. Redirect HTTP to HTTPS for better security. 📚 Reference: https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/#https",
    "start_char": 0,
    "end_char": 927
  },
  {
    "question": "How to implement file system operations in Node.js?",
    "label": "node, filesystem, fs",
    "language": "en",
    "context": "The `fs` module in Node.js provides a set of file system operations for reading and writing files.",
    "answer": "Steps to implement file system operations in Node.js: 1. Import the `fs` module: 2. Read a file asynchronously: 3. Write to a file asynchronously: 4. Use synchronous versions of the methods for blocking operations. 📚 Reference: https://nodejs.org/dist/latest-v16.x/docs/api/fs.html",
    "start_char": 0,
    "end_char": 814
  },
  {
    "question": "How to optimize performance in Node.js applications?",
    "label": "node, performance, optimization",
    "language": "en",
    "context": "Optimizing performance in Node.js applications is crucial to handle large-scale requests efficiently.",
    "answer": "Steps to optimize performance in Node.js applications: 1. Use asynchronous programming: Utilize non-blocking I/O operations like `fs.readFile`, `setTimeout`, and Promises to avoid blocking the event loop. 2. Utilize clustering: Leverage Node.js clustering to take advantage of multi-core processors. 3. Use caching: Cache frequently accessed data to minimize database queries using Redis. 4. Optimize your database queries: Use indexing, avoid N+1 queries, and minimize joins. 5. Monitor your app: Use tools l...",
    "start_char": 0,
    "end_char": 1263
  },
  {
    "question": "How to integrate WebSocket in a Node.js application?",
    "label": "node, websocket, real-time",
    "language": "en",
    "context": "WebSockets allow full-duplex communication channels over a single TCP connection, making them ideal for real-time applications.",
    "answer": "Steps to integrate WebSocket in a Node.js application: 1. Install `ws` library: 2. Create a WebSocket server in your Node.js app: 3. On the client-side, create a WebSocket connection: 4. Optionally, use a framework like `socket.io` for more features. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 1040
  },
  {
    "question": "How to manage environment variables in Node.js?",
    "label": "node, environment-variables, configuration",
    "language": "en",
    "context": "Environment variables allow you to store configuration values that can vary depending on the environment (development, production, etc.).",
    "answer": "Steps to manage environment variables in Node.js: 1. Install `dotenv` package: 2. Create a `.env` file in the root of your project with key-value pairs: 3. Load environment variables in your application: 4. Optionally, use `dotenv-safe` to ensure required variables are defined. 5. Do not commit the `.env` file to version control for security purposes. 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 754
  },
  {
    "question": "How to set up logging in a Node.js application?",
    "label": "node, logging, debug",
    "language": "en",
    "context": "Logging is crucial for debugging and monitoring the behavior of your application in production.",
    "answer": "Steps to set up logging in a Node.js application: 1. Install `winston` for flexible logging: 2. Set up a basic logger with `winston`: 3. Optionally, use `winston` with other logging frameworks for advanced features like log rotation. 📚 Reference: https://www.npmjs.com/package/winston",
    "start_char": 0,
    "end_char": 757
  },
  {
    "question": "How to use MongoDB with Node.js?",
    "label": "node, mongodb, database",
    "language": "en",
    "context": "MongoDB is a popular NoSQL database that is widely used with Node.js for web applications.",
    "answer": "Steps to use MongoDB with Node.js: 1. Install `mongodb` npm package: 2. Connect to MongoDB from your Node.js app: 3. Interact with the database (e.g., insert data): 4. Use MongoDB queries to fetch, update, and delete data. 📚 Reference: https://www.npmjs.com/package/mongodb",
    "start_char": 0,
    "end_char": 789
  },
  {
    "question": "How to use JWT for authentication in Node.js?",
    "label": "node, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are used for secure transmission of information between parties as a JSON object.",
    "answer": "Steps to use JWT for authentication in Node.js: 1. Install `jsonwebtoken` package: 2. Generate JWT in the login route: 3. Protect routes with JWT middleware: 4. Use JWT for secure authentication in production. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 1070
  },
  {
    "question": "How to deploy a Node.js app to AWS Lambda?",
    "label": "node, aws, lambda, deployment",
    "language": "en",
    "context": "AWS Lambda is a serverless compute service that allows you to run Node.js applications without provisioning or managing servers.",
    "answer": "Steps to deploy a Node.js app to AWS Lambda: 1. Create an AWS Lambda function in the AWS console and select Node.js as the runtime. 2. Set up the AWS CLI and configure your credentials: 3. Create a `handler.js` file for your Lambda function: 4. Deploy the Lambda function using AWS CLI or AWS SDK: 5. Optionally, set up an API Gateway to trigger the Lambda function via HTTP. 📚 Reference: https://docs.aws.amazon.com/lambda/latest/dg/nodejs-handler.html",
    "start_char": 0,
    "end_char": 1059
  },
  {
    "question": "How to use Redis in Node.js for caching?",
    "label": "node, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory data structure store that is often used as a cache to speed up application performance.",
    "answer": "Steps to use Redis in Node.js for caching: 1. Install `redis` npm package: 2. Connect to Redis server: 3. Cache data using Redis: 4. Retrieve cached data: 5. Optionally, set cache expiration times for better memory management. 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 752
  },
  {
    "question": "How to handle file uploads in Node.js?",
    "label": "node, file-upload, express",
    "language": "en",
    "context": "Handling file uploads is a common task in Node.js applications, especially for user-generated content.",
    "answer": "Steps to handle file uploads in Node.js using `multer`: 1. Install `multer` package: 2. Set up `multer` middleware in your Express application: 3. Optionally, set file size limits and validate file types using `multer`'s options. 4. Store the uploaded files in the desired directory or cloud storage. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 731
  },
  {
    "question": "How to implement rate limiting in an Express app?",
    "label": "node, express, rate-limiting",
    "language": "en",
    "context": "Rate limiting is essential to prevent abuse of an API by limiting the number of requests from a particular user within a given time frame.",
    "answer": "Steps to implement rate limiting in an Express app: 1. Install `express-rate-limit` package: 2. Create a rate limit middleware: 3. Optionally, apply rate limiting to specific routes only: 4. Use a Redis store for distributed rate limiting if you're running multiple instances of your app. 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 1034
  },
  {
    "question": "How to handle errors in Express middleware?",
    "label": "node, express, error-handling",
    "language": "en",
    "context": "Error handling in Express middleware is crucial for debugging and ensuring that errors are gracefully returned to the client.",
    "answer": "Steps to handle errors in Express middleware: 1. Create an error handling middleware function: 2. Use the error handler middleware at the end of the middleware stack: 3. Pass errors to the error handler by calling `next(err)` in route handlers or other middleware: 4. Optionally, use custom error classes for better error categorization. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 749
  },
  {
    "question": "How to handle cross-origin requests in Node.js?",
    "label": "node, express, cors",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) is a mechanism that allows resources to be requested from another domain, outside the domain from which the resource originated.",
    "answer": "Steps to handle cross-origin requests in Node.js using CORS: 1. Install `cors` package: 2. Enable CORS in your Express app: 3. Optionally, configure CORS to allow specific domains or methods: 4. Use `cors` only for specific routes if you need more granular control: 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 898
  },
  {
    "question": "How to serve static files in Express?",
    "label": "node, express, static-files",
    "language": "en",
    "context": "Serving static files like images, CSS, and JavaScript is an essential part of building web applications.",
    "answer": "Steps to serve static files in Express:\n\n1. Use the `express.static` middleware:\n```javascript\napp.use(express.static('public'));\n```\n2. Place your static files in the `public` folder (or another folder of your choice).\n3. Access static files by URL:\n```html\n<img src='/images/logo.png' alt='Logo'>\n```\n4. Optionally, set cache control headers to improve performance for static assets.\n\n📚 Reference: https://expressjs.com/en/starter/static-files.html",
    "start_char": 0,
    "end_char": 543
  },
  {
    "question": "How to use async/await in Node.js?",
    "label": "node, async-await, promises",
    "language": "en",
    "context": "Async/await is a modern approach to handling asynchronous operations in JavaScript, making it more readable and manageable.",
    "answer": "Steps to use async/await in Node.js: 1. Define an asynchronous function using the `async` keyword: 2. Inside the async function, use `await` to wait for a Promise to resolve: 3. Handle errors using `try`/`catch` blocks: 4. Use async/await for better code readability compared to chaining Promises. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 1125
  },
  {
    "question": "How to validate user input in Node.js?",
    "label": "node, input-validation, express",
    "language": "en",
    "context": "Validating user input is important for security and ensuring that the data received is correct and in the expected format.",
    "answer": "Steps to validate user input in Node.js using `express-validator`: 1. Install `express-validator` package: 2. Use `express-validator` in your route handlers: 3. Use other validation methods like `isLength`, `isInt`, `matches`, etc., to validate different types of inputs. 4. Handle errors and return appropriate responses when validation fails. 📚 Reference: https://express-validator.github.io/docs/",
    "start_char": 0,
    "end_char": 1065
  },
  {
    "question": "How to create a REST API in Node.js?",
    "label": "node, express, rest-api",
    "language": "en",
    "context": "A RESTful API is an architectural style that uses HTTP methods for communication between client and server.",
    "answer": "Steps to create a REST API in Node.js using Express: 1. Install `express` package: 2. Set up basic routing in Express: 3. Use HTTP methods such as GET, POST, PUT, DELETE to interact with resources. 4. Optionally, use `express.Router()` for more modular route handling. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 602
  },
  {
    "question": "How to secure an Express API with JWT?",
    "label": "node, express, jwt, authentication",
    "language": "en",
    "context": "Securing APIs with JWT is a common practice for authentication and authorization in web applications.",
    "answer": "Steps to secure an Express API with JWT: 1. Install `jsonwebtoken` and `express-jwt` packages: 2. Create a middleware to verify the JWT token: 3. Issue a JWT token when a user logs in: 4. Protect routes by using the JWT verification middleware: 5. Optionally, use token expiration and refresh tokens. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 1041
  },
  {
    "question": "How to connect to a MongoDB database in Node.js?",
    "label": "node, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that is commonly used with Node.js applications.",
    "answer": "Steps to connect to a MongoDB database in Node.js: 1. Install `mongoose` package: 2. Connect to MongoDB using Mongoose: 3. Define your data models using Mongoose schemas. 4. Perform CRUD operations using Mongoose methods. 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 819
  },
  {
    "question": "How to send emails in Node.js?",
    "label": "node, email, nodemailer",
    "language": "en",
    "context": "Sending emails is a common feature in many Node.js applications for notifications and communication.",
    "answer": "Steps to send emails in Node.js using `nodemailer`: 1. Install `nodemailer` package: 2. Set up the transport object with email service details: 3. Send an email using the `sendMail` method: 4. Optionally, use third-party email services for better email deliverability. 📚 Reference: https://www.npmjs.com/package/nodemailer",
    "start_char": 0,
    "end_char": 972
  },
  {
    "question": "How to handle file uploads in Express?",
    "label": "node, express, file-upload",
    "language": "en",
    "context": "Handling file uploads is a common feature in web applications, especially for user-provided media or documents.",
    "answer": "Steps to handle file uploads in Express using `multer`: 1. Install `multer` package: 2. Set up a storage engine with `multer` to define file destination and naming: 3. Create a route for handling file uploads: 4. Optionally, add file size and type validation to `multer` configuration. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 943
  },
  {
    "question": "How to set up a cron job in Node.js?",
    "label": "node, cron-job, scheduling",
    "language": "en",
    "context": "Cron jobs are scheduled tasks that run at specified intervals, useful for background processes like backups or notifications.",
    "answer": "Steps to set up a cron job in Node.js using `node-cron`: 1. Install `node-cron` package: 2. Create a cron job with a specific schedule: 3. Cron syntax follows the pattern `* * * * *` representing minute, hour, day of month, month, and day of week. 4. Optionally, schedule tasks to run at different intervals (e.g., hourly, weekly, monthly). 📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 601
  },
  {
    "question": "How to handle sessions in Node.js?",
    "label": "node, express, sessions",
    "language": "en",
    "context": "Sessions are used to store user data across multiple requests, typically for user authentication and maintaining state in web applications.",
    "answer": "Steps to handle sessions in Node.js using `express-session`: 1. Install `express-session` package: 2. Set up session middleware in Express: 3. Access and modify session data in your routes: 4. Optionally, set the session expiration time and store session data in a database. 📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 778
  },
  {
    "question": "How to set up WebSockets in Node.js?",
    "label": "node, websocket, real-time",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single TCP connection, often used for real-time features like chat applications or notifications.",
    "answer": "Steps to set up WebSockets in Node.js using `ws`: 1. Install `ws` package: 2. Set up a WebSocket server: 3. Connect to the WebSocket server from the client-side using JavaScript's `WebSocket` API: 4. Optionally, use a message broker like Redis to scale WebSocket servers. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 842
  },
  {
    "question": "How to use environment variables in Node.js?",
    "label": "node, environment-variables, config",
    "language": "en",
    "context": "Environment variables allow configuration values to be set outside of the application code, useful for sensitive information like API keys or database credentials.",
    "answer": "Steps to use environment variables in Node.js: 1. Install `dotenv` package to load variables from a `.env` file: 2. Create a `.env` file at the root of your project: 3. Load the `.env` variables into your application: 4. Optionally, use environment variables directly on your hosting platform like Heroku. 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 721
  },
  {
    "question": "How to use promises in Node.js?",
    "label": "node, promises, async-await",
    "language": "en",
    "context": "Promises provide a way to handle asynchronous operations in Node.js, avoiding callback hell.",
    "answer": "Steps to use promises in Node.js: 1. Create a promise using the `Promise` constructor: 2. Use `.then()` to handle successful resolution and `.catch()` to handle errors: 3. Optionally, chain multiple promises using `.then()`. 4. Use `async`/`await` for cleaner syntax when working with promises. 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 841
  },
  {
    "question": "How to create a REST API in Node.js?",
    "label": "node, express, rest-api",
    "language": "en",
    "context": "Creating a REST API is a common task for building backends that interact with frontend applications and handle data exchange.",
    "answer": "Steps to create a REST API in Node.js using Express: 1. Install `express` package: 2. Set up the Express server: 3. Add more routes for your API endpoints (e.g., `POST`, `PUT`, `DELETE`). 4. Optionally, add authentication, validation, and middleware for better security and functionality. 📚 Reference: https://expressjs.com/",
    "start_char": 0,
    "end_char": 799
  },
  {
    "question": "How to set up a Node.js server with HTTPS?",
    "label": "node, https, server",
    "language": "en",
    "context": "Setting up a secure HTTPS server ensures that data is encrypted during transmission, providing a secure communication channel for users.",
    "answer": "Steps to set up a Node.js server with HTTPS: 1. Install `https` module (built-in in Node.js) and `fs` module: 2. Provide SSL certificate and private key: 3. Create an HTTPS server: 4. Optionally, redirect HTTP traffic to HTTPS for security. 📚 Reference: https://nodejs.org/api/https.html",
    "start_char": 0,
    "end_char": 704
  },
  {
    "question": "How to create a REST API using Express.js?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "Express.js is a lightweight framework for building web applications and APIs in Node.js.",
    "answer": "Steps to create a REST API using Express.js:\n\n1. Initialize your project:\n```bash\nnpm init -y\nnpm install express\n```\n\n2. Create `index.js` file:\n```javascript\nconst express = require('express');\nconst app = express();\napp.use(express.json());\n\napp.get('/api', (req, res) => {\n  res.send('Hello API');\n});\n\napp.listen(3000, () => console.log('Server running on port 3000'));\n```\n\n3. Add routes for CRUD operations.\n\n📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 588
  },
  {
    "question": "How does DNS work on the internet?",
    "label": "networking, dns, internet",
    "language": "en",
    "context": "DNS (Domain Name System) translates human-readable domain names into IP addresses.",
    "answer": "DNS working steps:\n\n1. User types a domain (e.g., google.com) into browser.\n2. Browser checks local cache.\n3. If not found, DNS query is sent to recursive DNS resolver.\n4. Resolver queries root DNS server, then TLD server, then authoritative name server.\n5. IP address is returned to the browser.\n6. Browser connects to the IP and loads the site.\n\n📚 Reference: https://www.cloudflare.com/learning/dns/what-is-dns/",
    "start_char": 0,
    "end_char": 529
  },
  {
    "question": "How to use Git to clone a repository and make changes?",
    "label": "git, version-control",
    "language": "en",
    "context": "Git is a distributed version control system used to track changes in source code.",
    "answer": "Steps to clone a repository and make changes using Git:\n\n1. Clone the repo:\n```bash\ngit clone https://github.com/user/repo.git\n```\n\n2. Navigate to the project:\n```bash\ncd repo\n```\n\n3. Make changes to files.\n\n4. Stage and commit changes:\n```bash\ngit add .\ngit commit -m \"Made some changes\"\n```\n\n5. Push to remote:\n```bash\ngit push origin main\n```\n\n📚 Reference: https://git-scm.com/docs",
    "start_char": 0,
    "end_char": 517
  },
  {
    "question": "How does OAuth 2.0 authentication work?",
    "label": "authentication, oauth2, security",
    "language": "en",
    "context": "OAuth 2.0 is an authorization framework that enables applications to obtain limited access to user accounts.",
    "answer": "OAuth 2.0 flow:\n\n1. User requests access via client app.\n2. Client app redirects to authorization server.\n3. User authenticates and grants permission.\n4. Authorization server returns authorization code.\n5. Client app exchanges code for access token.\n6. App uses access token to access protected resources.\n\n📚 Reference: https://oauth.net/2/",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How to containerize an application using Docker?",
    "label": "docker, containers, devops",
    "language": "en",
    "context": "Docker allows applications to run in isolated environments called containers.",
    "answer": "Steps to containerize an app using Docker:\n\n1. Create `Dockerfile`:\n```dockerfile\nFROM node:14\nWORKDIR /app\nCOPY . .\nRUN npm install\nCMD [\"node\", \"index.js\"]\n```\n\n2. Build image:\n```bash\ndocker build -t myapp .\n```\n\n3. Run container:\n```bash\ndocker run -p 3000:3000 myapp\n```\n\n📚 Reference: https://docs.docker.com/get-started/",
    "start_char": 0,
    "end_char": 457
  },
  {
    "question": "How to query data using SQL SELECT statement?",
    "label": "sql, database, query",
    "language": "en",
    "context": "SQL is a standard language used to manage and query relational databases.",
    "answer": "Basic SQL SELECT usage:\n\n1. Select all columns:\n```sql\nSELECT * FROM users;\n```\n\n2. Select specific columns:\n```sql\nSELECT name, email FROM users;\n```\n\n3. Add conditions:\n```sql\nSELECT * FROM users WHERE age > 25;\n```\n\n📚 Reference: https://www.w3schools.com/sql/sql_select.asp",
    "start_char": 0,
    "end_char": 343
  },
  {
    "question": "How to handle form submission in React?",
    "label": "react, forms, frontend",
    "language": "en",
    "context": "React provides a declarative way to build UI and manage form states using hooks.",
    "answer": "Steps to handle form submission in React:\n\n1. Create form component:\n```jsx\nfunction MyForm() {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input value={value} onChange={e => setValue(e.target.value)} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n```\n\n📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 537
  },
  {
    "question": "How to deploy a static website using GitHub Pages?",
    "label": "github, deployment, static-site",
    "language": "en",
    "context": "GitHub Pages allows hosting of static websites directly from a repository.",
    "answer": "Steps to deploy a static site with GitHub Pages:\n\n1. Push code to GitHub repo.\n2. Go to repository Settings > Pages.\n3. Select branch (e.g., `main`) and folder (`/root` or `/docs`).\n4. Click Save.\n5. Wait for GitHub to build and deploy your site.\n6. Access via `https://your-username.github.io/repo-name/`\n\n📚 Reference: https://pages.github.com/",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to perform data preprocessing in Python using pandas?",
    "label": "pandas, data-preprocessing, python",
    "language": "en",
    "context": "Pandas is a powerful library for data manipulation and preprocessing in Python.",
    "answer": "Data preprocessing steps using pandas:\n\n1. Load dataset:\n```python\ndf = pd.read_csv('data.csv')\n```\n\n2. Handle missing values:\n```python\ndf.fillna(0, inplace=True)\n```\n\n3. Convert data types:\n```python\ndf['date'] = pd.to_datetime(df['date'])\n```\n\n4. Filter rows:\n```python\ndf = df[df['value'] > 100]\n```\n\n📚 Reference: https://pandas.pydata.org/",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to implement user authentication in Django?",
    "label": "django, authentication, webdev",
    "language": "en",
    "context": "Django has a built-in authentication system for managing users and permissions.",
    "answer": "Steps to implement authentication in Django:\n\n1. Use built-in `User` model and `auth` views.\n2. Add `django.contrib.auth` to `INSTALLED_APPS`.\n3. Create login form:\n```python\nfrom django.contrib.auth import authenticate, login\n```\n\n4. In views:\n```python\nuser = authenticate(username='john', password='secret')\nif user is not None:\n    login(request, user)\n```\n\n5. Use decorators like `@login_required`.\n\n📚 Reference: https://docs.djangoproject.com/en/stable/topics/auth/",
    "start_char": 0,
    "end_char": 526
  },
  {
    "question": "How to set up environment variables in Node.js?",
    "label": "nodejs, environment, dotenv",
    "language": "en",
    "context": "Environment variables are used to store sensitive data such as API keys and database credentials outside the source code.",
    "answer": "Steps to set up environment variables in Node.js:\n\n1. Install dotenv:\n```bash\nnpm install dotenv\n```\n\n2. Create a `.env` file:\n```\nPORT=3000\nDB_HOST=localhost\n```\n\n3. Load variables in your app:\n```javascript\nrequire('dotenv').config();\nconsole.log(process.env.PORT);\n```\n\n📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 430
  },
  {
    "question": "How to secure passwords in a Node.js application?",
    "label": "nodejs, security, password-hashing",
    "language": "en",
    "context": "Storing passwords securely helps protect user data from being compromised during a data breach.",
    "answer": "Steps to secure passwords:\n\n1. Install bcrypt:\n```bash\nnpm install bcrypt\n```\n\n2. Hash password before saving:\n```javascript\nconst bcrypt = require('bcrypt');\nconst saltRounds = 10;\nconst hashed = await bcrypt.hash('password123', saltRounds);\n```\n\n3. Compare password during login:\n```javascript\nconst match = await bcrypt.compare('password123', hashed);\n```\n\n📚 Reference: https://www.npmjs.com/package/bcrypt",
    "start_char": 0,
    "end_char": 507
  },
  {
    "question": "How to implement dark mode in a React application?",
    "label": "react, dark-mode, ui",
    "language": "en",
    "context": "Dark mode provides a darker color theme to reduce eye strain and improve battery life on devices.",
    "answer": "Steps to implement dark mode in React:\n\n1. Add toggle state:\n```javascript\nconst [darkMode, setDarkMode] = useState(false);\n```\n\n2. Add toggle button:\n```jsx\n<button onClick={() => setDarkMode(!darkMode)}>Toggle</button>\n```\n\n3. Apply class conditionally:\n```jsx\n<div className={darkMode ? 'dark' : ''}>...</div>\n```\n\n4. Use Tailwind CSS or CSS variables to style themes.\n\n📚 Reference: https://tailwindcss.com/docs/dark-mode",
    "start_char": 0,
    "end_char": 476
  },
  {
    "question": "How to connect a Node.js app to MongoDB?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database often used with Node.js to build scalable applications.",
    "answer": "Steps to connect Node.js to MongoDB:\n\n1. Install Mongoose:\n```bash\nnpm install mongoose\n```\n\n2. Connect to MongoDB:\n```javascript\nconst mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost:27017/mydb', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n```\n\n3. Create a schema:\n```javascript\nconst User = mongoose.model('User', { name: String });\n```\n\n📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 472
  },
  {
    "question": "How to create a responsive layout using CSS Grid?",
    "label": "css, grid, responsive",
    "language": "en",
    "context": "CSS Grid is a powerful layout system for creating two-dimensional layouts on the web.",
    "answer": "Steps to create responsive layout using CSS Grid:\n\n1. Define grid container:\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n}\n```\n\n2. Add grid items:\n```html\n<div class=\"container\">\n  <div>Item 1</div>\n  <div>Item 2</div>\n  <div>Item 3</div>\n</div>\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout",
    "start_char": 0,
    "end_char": 489
  },
  {
    "question": "How to write unit tests in JavaScript using Jest?",
    "label": "javascript, testing, jest",
    "language": "en",
    "context": "Unit testing verifies that individual parts of your program work as expected.",
    "answer": "Steps to write unit tests using Jest:\n\n1. Install Jest:\n```bash\nnpm install --save-dev jest\n```\n\n2. Add script to `package.json`:\n```json\n\"scripts\": {\n  \"test\": \"jest\"\n}\n```\n\n3. Create a test file:\n```javascript\nfunction add(a, b) { return a + b; }\ntest('adds 1 + 2 to equal 3', () => {\n  expect(add(1, 2)).toBe(3);\n});\n```\n\n📚 Reference: https://jestjs.io/docs/getting-started",
    "start_char": 0,
    "end_char": 513
  },
  {
    "question": "How to use Axios to fetch data in React?",
    "label": "axios, react, fetch",
    "language": "en",
    "context": "Axios is a promise-based HTTP client for making requests in React applications.",
    "answer": "Steps to use Axios in React:\n\n1. Install Axios:\n```bash\nnpm install axios\n```\n\n2. Use in `useEffect`:\n```jsx\nimport axios from 'axios';\nuseEffect(() => {\n  axios.get('https://api.example.com/data')\n    .then(res => setData(res.data))\n    .catch(err => console.error(err));\n}, []);\n```\n\n📚 Reference: https://axios-http.com/docs/intro",
    "start_char": 0,
    "end_char": 444
  },
  {
    "question": "How to manage state globally in React using Context API?",
    "label": "react, context-api, state-management",
    "language": "en",
    "context": "Context API provides a way to share values between components without passing props manually.",
    "answer": "Steps to use Context API:\n\n1. Create context:\n```javascript\nconst ThemeContext = React.createContext();\n```\n\n2. Provide context:\n```jsx\n<ThemeContext.Provider value={theme}>\n  <App />\n</ThemeContext.Provider>\n```\n\n3. Consume context:\n```jsx\nconst theme = useContext(ThemeContext);\n```\n\n📚 Reference: https://reactjs.org/docs/context.html",
    "start_char": 0,
    "end_char": 438
  },
  {
    "question": "How to set up routing in a React application using React Router?",
    "label": "react, routing, react-router",
    "language": "en",
    "context": "React Router enables navigation among views of a React application.",
    "answer": "Steps to set up routing with React Router:\n\n1. Install React Router:\n```bash\nnpm install react-router-dom\n```\n\n2. Set up routes:\n```jsx\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n<BrowserRouter>\n  <Routes>\n    <Route path=\"/\" element={<Home />} />\n    <Route path=\"/about\" element={<About />} />\n  </Routes>\n</BrowserRouter>\n```\n\n📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 490
  },
  {
    "question": "How to handle file uploads in Node.js using multer?",
    "label": "nodejs, file-upload, multer",
    "language": "en",
    "context": "Multer is a middleware for handling `multipart/form-data`, used for file uploads in Node.js.",
    "answer": "Steps to handle file uploads:\n\n1. Install multer:\n```bash\nnpm install multer\n```\n\n2. Configure multer:\n```javascript\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n```\n\n3. Use in route:\n```javascript\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded');\n});\n```\n\n📚 Reference: https://github.com/expressjs/multer",
    "start_char": 0,
    "end_char": 480
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "nodejs, deployment, heroku",
    "language": "en",
    "context": "Heroku is a cloud platform that enables developers to deploy, manage, and scale apps quickly.",
    "answer": "Steps to deploy Node.js app to Heroku:\n\n1. Install Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Login and create Heroku app:\n```bash\nheroku login\nheroku create my-app\n```\n\n3. Add a `Procfile`:\n```\nweb: node index.js\n```\n\n4. Push code to Heroku:\n```bash\ngit add .\ngit commit -m \"Deploy\"\ngit push heroku main\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/getting-started-with-nodejs",
    "start_char": 0,
    "end_char": 547
  },
  {
    "question": "How to use JSON Web Tokens (JWT) in authentication?",
    "label": "jwt, authentication, nodejs",
    "language": "en",
    "context": "JWT is a compact, URL-safe way of representing claims between two parties, often used in authentication.",
    "answer": "Steps to use JWT in Node.js:\n\n1. Install `jsonwebtoken`:\n```bash\nnpm install jsonwebtoken\n```\n\n2. Sign token:\n```javascript\nconst jwt = require('jsonwebtoken');\nconst token = jwt.sign({ userId: 123 }, 'secretKey', { expiresIn: '1h' });\n```\n\n3. Verify token:\n```javascript\nconst decoded = jwt.verify(token, 'secretKey');\n```\n\n📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 475
  },
  {
    "question": "How to perform form validation in React?",
    "label": "react, form, validation",
    "language": "en",
    "context": "Form validation helps ensure that user input meets required criteria before processing.",
    "answer": "Steps for form validation in React:\n\n1. Use local state:\n```javascript\nconst [email, setEmail] = useState('');\nconst [error, setError] = useState('');\n```\n\n2. Validate input:\n```javascript\nconst validate = () => {\n  if (!email.includes('@')) setError('Invalid email');\n  else setError('');\n};\n```\n\n3. Trigger on change or submit.\n\n📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 439
  },
  {
    "question": "How to use Tailwind CSS in a Next.js project?",
    "label": "nextjs, tailwindcss, setup",
    "language": "en",
    "context": "Tailwind CSS is a utility-first CSS framework that works seamlessly with Next.js for rapid styling.",
    "answer": "Steps to use Tailwind CSS with Next.js:\n\n1. Install dependencies:\n```bash\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\n```\n\n2. Configure `tailwind.config.js`:\n```js\ncontent: ['./pages/**/*.{js,ts,jsx,tsx}', './components/**/*.{js,ts,jsx,tsx}']\n```\n\n3. Add Tailwind to CSS:\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\n📚 Reference: https://tailwindcss.com/docs/guides/nextjs",
    "start_char": 0,
    "end_char": 525
  },
  {
    "question": "How to build a REST API with Express.js?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "Express.js is a minimal web framework for Node.js that makes it easy to build REST APIs.",
    "answer": "Steps to build REST API with Express:\n\n1. Install Express:\n```bash\nnpm install express\n```\n\n2. Create server:\n```javascript\nconst express = require('express');\nconst app = express();\napp.use(express.json());\n```\n\n3. Define routes:\n```javascript\napp.get('/api/users', (req, res) => res.send(users));\napp.post('/api/users', (req, res) => res.send(req.body));\n```\n\n4. Start server:\n```javascript\napp.listen(3000);\n```\n\n📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 548
  },
  {
    "question": "How to paginate data in a Node.js API?",
    "label": "pagination, nodejs, api",
    "language": "en",
    "context": "Pagination improves performance and UX by limiting the amount of data returned in one request.",
    "answer": "Steps for pagination in Node.js:\n\n1. Accept query params:\n```javascript\nconst page = parseInt(req.query.page) || 1;\nconst limit = parseInt(req.query.limit) || 10;\nconst start = (page - 1) * limit;\n```\n\n2. Fetch limited data:\n```javascript\nconst results = data.slice(start, start + limit);\nres.json(results);\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Page_Lifecycle_API",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "How to upload multiple files using multer?",
    "label": "nodejs, multer, multiple-files",
    "language": "en",
    "context": "Uploading multiple files at once is useful in forms like image galleries or bulk document upload.",
    "answer": "Steps to upload multiple files:\n\n1. Set up multer:\n```javascript\nconst upload = multer({ dest: 'uploads/' });\n```\n\n2. Route for multiple files:\n```javascript\napp.post('/upload', upload.array('files', 5), (req, res) => {\n  res.send('Files uploaded');\n});\n```\n\n📚 Reference: https://github.com/expressjs/multer#arrayfieldname-maxcount",
    "start_char": 0,
    "end_char": 453
  },
  {
    "question": "How to implement search functionality in a React app?",
    "label": "react, search, filter",
    "language": "en",
    "context": "Search allows users to find relevant data by filtering content based on input.",
    "answer": "Steps for search in React:\n\n1. Use local state:\n```javascript\nconst [query, setQuery] = useState('');\nconst [data, setData] = useState([...]);\n```\n\n2. Filter data:\n```javascript\nconst filtered = data.filter(item => item.name.includes(query));\n```\n\n3. Render filtered results dynamically.\n\n📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 437
  },
  {
    "question": "How to use useEffect hook in React?",
    "label": "react, hooks, useEffect",
    "language": "en",
    "context": "The useEffect hook lets you perform side effects such as fetching data or updating the DOM.",
    "answer": "Steps to use useEffect:\n\n1. Import hook:\n```javascript\nimport { useEffect } from 'react';\n```\n\n2. Use inside component:\n```javascript\nuseEffect(() => {\n  // your side effect\n  fetchData();\n}, []);\n```\n\n3. Add dependencies to run conditionally.\n\n📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 425
  },
  {
    "question": "How to configure ESLint in a JavaScript project?",
    "label": "eslint, javascript, linting",
    "language": "en",
    "context": "ESLint is a tool for identifying and fixing problems in JavaScript code.",
    "answer": "Steps to configure ESLint:\n\n1. Install ESLint:\n```bash\nnpm install eslint --save-dev\n```\n\n2. Initialize config:\n```bash\nnpx eslint --init\n```\n\n3. Create `.eslintrc.js`:\n```javascript\nmodule.exports = {\n  env: { browser: true, es2021: true },\n  extends: ['eslint:recommended'],\n  rules: { semi: ['error', 'always'] }\n};\n```\n\n📚 Reference: https://eslint.org/docs/latest/user-guide/getting-started",
    "start_char": 0,
    "end_char": 508
  },
  {
    "question": "How to connect MongoDB with a Node.js application?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database often used with Node.js for full-stack JavaScript development.",
    "answer": "Steps to connect MongoDB with Node.js:\n\n1. Install `mongoose`:\n```bash\nnpm install mongoose\n```\n\n2. Import and connect:\n```javascript\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost/mydb', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n```\n\n3. Handle connection events:\n```javascript\nmongoose.connection.on('connected', () => {\n  console.log('Connected to MongoDB');\n});\n```\n\n📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 521
  },
  {
    "question": "How to implement dark mode in a React application using Tailwind CSS?",
    "label": "react, tailwindcss, darkmode",
    "language": "en",
    "context": "Dark mode improves accessibility and reduces eye strain, often used in modern web apps.",
    "answer": "Steps to implement dark mode with Tailwind:\n\n1. Enable dark mode in Tailwind config:\n```javascript\nmodule.exports = {\n  darkMode: 'class',\n}\n```\n\n2. Add `dark` classes:\n```html\n<div className=\"bg-white dark:bg-gray-800 text-black dark:text-white\">Content</div>\n```\n\n3. Toggle dark mode class on `<body>` using React state or context.\n\n📚 Reference: https://tailwindcss.com/docs/dark-mode",
    "start_char": 0,
    "end_char": 461
  },
  {
    "question": "How to create reusable components in React?",
    "label": "react, components, reusable",
    "language": "en",
    "context": "Reusable components help reduce duplication and make React code more maintainable.",
    "answer": "Steps to create reusable components:\n\n1. Create component file:\n```jsx\nfunction Button({ text, onClick }) {\n  return <button onClick={onClick}>{text}</button>;\n}\n```\n\n2. Use props for customization:\n```jsx\n<Button text=\"Click Me\" onClick={handleClick} />\n```\n\n3. Export and import:\n```jsx\nexport default Button;\n```\n\n📚 Reference: https://reactjs.org/docs/components-and-props.html",
    "start_char": 0,
    "end_char": 437
  },
  {
    "question": "How to configure environment variables in a Node.js project?",
    "label": "nodejs, env, configuration",
    "language": "en",
    "context": "Environment variables are used to store secrets like API keys and database credentials securely.",
    "answer": "Steps to use environment variables:\n\n1. Install dotenv:\n```bash\nnpm install dotenv\n```\n\n2. Create `.env` file:\n```\nPORT=3000\nDB_URL=mongodb://localhost/mydb\n```\n\n3. Load variables:\n```javascript\nrequire('dotenv').config();\nconsole.log(process.env.PORT);\n```\n\n📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "How to implement routing in a React application using React Router?",
    "label": "react, routing, react-router",
    "language": "en",
    "context": "React Router is a standard library for routing in React apps.",
    "answer": "Steps to implement routing:\n\n1. Install React Router:\n```bash\nnpm install react-router-dom\n```\n\n2. Set up routes:\n```jsx\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n<Router>\n  <Routes>\n    <Route path=\"/\" element={<Home />} />\n    <Route path=\"/about\" element={<About />} />\n  </Routes>\n</Router>\n```\n\n📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "How to send emails using Node.js?",
    "label": "nodejs, email, nodemailer",
    "language": "en",
    "context": "Sending emails is common in web applications for verification, notifications, and alerts.",
    "answer": "Steps to send emails:\n\n1. Install nodemailer:\n```bash\nnpm install nodemailer\n```\n\n2. Create transporter:\n```javascript\nconst nodemailer = require('nodemailer');\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: 'you@gmail.com',\n    pass: 'password'\n  }\n});\n```\n\n3. Send email:\n```javascript\ntransporter.sendMail({\n  from: 'you@gmail.com',\n  to: 'friend@example.com',\n  subject: 'Hello',\n  text: 'Hi there!'\n});\n```\n\n📚 Reference: https://nodemailer.com/about/",
    "start_char": 0,
    "end_char": 575
  },
  {
    "question": "How to protect routes in Express using middleware?",
    "label": "nodejs, express, middleware",
    "language": "en",
    "context": "Middleware in Express can be used to protect routes and perform authentication checks.",
    "answer": "Steps to protect routes:\n\n1. Create middleware:\n```javascript\nfunction authMiddleware(req, res, next) {\n  if (req.headers.authorization) next();\n  else res.status(401).send('Unauthorized');\n}\n```\n\n2. Apply middleware to route:\n```javascript\napp.get('/protected', authMiddleware, (req, res) => {\n  res.send('Secret data');\n});\n```\n\n📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 488
  },
  {
    "question": "How to fetch data from an API in React using Axios?",
    "label": "react, axios, fetch",
    "language": "en",
    "context": "Axios is a popular HTTP client for making API calls in React applications.",
    "answer": "Steps to fetch data using Axios:\n\n1. Install Axios:\n```bash\nnpm install axios\n```\n\n2. Use inside useEffect:\n```javascript\nuseEffect(() => {\n  axios.get('https://api.example.com/data')\n    .then(response => setData(response.data))\n    .catch(error => console.error(error));\n}, []);\n```\n\n📚 Reference: https://axios-http.com/",
    "start_char": 0,
    "end_char": 445
  },
  {
    "question": "How to handle 404 errors in an Express.js application?",
    "label": "nodejs, express, error-handling",
    "language": "en",
    "context": "404 errors occur when a requested resource cannot be found. Handling them gracefully improves UX.",
    "answer": "Steps to handle 404 in Express:\n\n1. Add this middleware at the end:\n```javascript\napp.use((req, res, next) => {\n  res.status(404).send('Page not found');\n});\n```\n\n📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 336
  },
  {
    "question": "How to hash passwords in Node.js using bcrypt?",
    "label": "nodejs, bcrypt, security",
    "language": "en",
    "context": "Hashing passwords adds a layer of security by transforming plaintext into irreversible hashes.",
    "answer": "Steps to hash passwords:\n\n1. Install bcrypt:\n```bash\nnpm install bcrypt\n```\n\n2. Hash a password:\n```javascript\nconst bcrypt = require('bcrypt');\nconst hashed = await bcrypt.hash('password123', 10);\n```\n\n3. Compare password:\n```javascript\nconst match = await bcrypt.compare('password123', hashed);\n```\n\n📚 Reference: https://www.npmjs.com/package/bcrypt",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "How to validate user input in Express.js using middleware?",
    "label": "nodejs, express, validation",
    "language": "en",
    "context": "Input validation ensures that the data received by the server is correct and safe.",
    "answer": "Steps to validate input: 1. Install `express-validator`: 2. Use validation middleware: 📚 Reference: https://express-validator.github.io/",
    "start_char": 0,
    "end_char": 651
  },
  {
    "question": "How to use Context API in React?",
    "label": "react, context-api, state-management",
    "language": "en",
    "context": "Context API allows sharing state across components without prop drilling.",
    "answer": "Steps to use Context API:\n\n1. Create a context:\n```javascript\nconst MyContext = React.createContext();\n```\n\n2. Create a provider:\n```jsx\n<MyContext.Provider value={value}>\n  <App />\n</MyContext.Provider>\n```\n\n3. Consume context:\n```jsx\nconst value = useContext(MyContext);\n```\n\n📚 Reference: https://reactjs.org/docs/context.html",
    "start_char": 0,
    "end_char": 405
  },
  {
    "question": "How to deploy a Node.js app on Heroku?",
    "label": "nodejs, deployment, heroku",
    "language": "en",
    "context": "Heroku is a platform-as-a-service used for easy deployment of Node.js apps.",
    "answer": "Steps to deploy on Heroku:\n\n1. Install Heroku CLI and log in:\n```bash\nheroku login\n```\n\n2. Initialize Git repo if needed:\n```bash\ngit init\n```\n\n3. Create a Heroku app:\n```bash\nheroku create myapp-name\n```\n\n4. Push to Heroku:\n```bash\ngit push heroku main\n```\n\n5. Ensure `Procfile` is present:\n```\nweb: node index.js\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/getting-started-with-nodejs",
    "start_char": 0,
    "end_char": 528
  },
  {
    "question": "How to use async/await in JavaScript?",
    "label": "javascript, async, await",
    "language": "en",
    "context": "Async/await syntax simplifies handling asynchronous operations in JavaScript.",
    "answer": "Steps to use async/await:\n\n1. Declare an async function:\n```javascript\nasync function fetchData() {\n  const response = await fetch('https://api.example.com');\n  const data = await response.json();\n  console.log(data);\n}\n```\n\n2. Call the async function:\n```javascript\nfetchData();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Promises",
    "start_char": 0,
    "end_char": 414
  },
  {
    "question": "How to create a REST API using Express.js?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "REST APIs are a standard way to structure web APIs that perform CRUD operations.",
    "answer": "Steps to create a REST API:\n\n1. Install Express:\n```bash\nnpm install express\n```\n\n2. Create a server:\n```javascript\nconst express = require('express');\nconst app = express();\napp.use(express.json());\n\napp.get('/items', (req, res) => res.send([]));\napp.post('/items', (req, res) => res.send('Created'));\n\napp.listen(3000);\n```\n\n📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 489
  },
  {
    "question": "How to upload files using Node.js and Multer?",
    "label": "nodejs, file-upload, multer",
    "language": "en",
    "context": "Multer is a middleware for handling multipart/form-data for file uploads.",
    "answer": "Steps to upload files:\n\n1. Install Multer:\n```bash\nnpm install multer\n```\n\n2. Setup middleware:\n```javascript\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n```\n\n3. Handle route:\n```javascript\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded!');\n});\n```\n\n📚 Reference: https://github.com/expressjs/multer",
    "start_char": 0,
    "end_char": 452
  },
  {
    "question": "How to use Local Storage in JavaScript?",
    "label": "javascript, localstorage, frontend",
    "language": "en",
    "context": "LocalStorage allows storing data in the browser persistently across sessions.",
    "answer": "Steps to use Local Storage:\n\n1. Set item:\n```javascript\nlocalStorage.setItem('key', 'value');\n```\n\n2. Get item:\n```javascript\nconst value = localStorage.getItem('key');\n```\n\n3. Remove item:\n```javascript\nlocalStorage.removeItem('key');\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 372
  },
  {
    "question": "How to use Redux in a React application?",
    "label": "react, redux, state-management",
    "language": "en",
    "context": "Redux helps manage complex state in large React applications using a central store.",
    "answer": "Steps to use Redux:\n\n1. Install packages:\n```bash\nnpm install redux react-redux\n```\n\n2. Create store:\n```javascript\nconst store = createStore(reducer);\n```\n\n3. Provide store:\n```jsx\n<Provider store={store}><App /></Provider>\n```\n\n4. Connect components:\n```javascript\nconst mapStateToProps = state => ({ count: state.count });\n```\n\n📚 Reference: https://redux.js.org/",
    "start_char": 0,
    "end_char": 468
  },
  {
    "question": "How to secure passwords in a Node.js app?",
    "label": "nodejs, security, password",
    "language": "en",
    "context": "Storing passwords securely is essential to prevent unauthorized access and data breaches.",
    "answer": "Steps to secure passwords:\n\n1. Use bcrypt for hashing:\n```bash\nnpm install bcrypt\n```\n\n2. Hash before storing:\n```javascript\nconst hashed = await bcrypt.hash(password, 10);\n```\n\n3. Compare on login:\n```javascript\nconst isMatch = await bcrypt.compare(password, hashed);\n```\n\n📚 Reference: https://www.npmjs.com/package/bcrypt",
    "start_char": 0,
    "end_char": 435
  },
  {
    "question": "How to implement a loading spinner in React?",
    "label": "react, spinner, loading",
    "language": "en",
    "context": "Loading spinners improve user experience by providing visual feedback during async operations.",
    "answer": "Steps to implement spinner:\n\n1. Set loading state:\n```javascript\nconst [loading, setLoading] = useState(true);\n```\n\n2. Show spinner conditionally:\n```jsx\n{loading ? <Spinner /> : <Content />}\n```\n\n3. Change loading state after data loads:\n```javascript\nuseEffect(() => {\n  fetchData().then(() => setLoading(false));\n}, []);\n```\n\n📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How to handle 404 errors in Express.js?",
    "label": "express, error-handling, nodejs",
    "language": "en",
    "context": "Handling 404 errors ensures users get proper feedback when accessing non-existent routes.",
    "answer": "Steps to handle 404 errors:\n\n1. Add a middleware at the end of your route declarations:\n```javascript\napp.use((req, res, next) => {\n  res.status(404).send('Page not found');\n});\n```\n\n2. You can also create a custom error page using a template engine.\n\n📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 366
  },
  {
    "question": "How to create dynamic routes in Next.js?",
    "label": "nextjs, dynamic-routing, react",
    "language": "en",
    "context": "Dynamic routes allow building pages for variable data like blog posts or user profiles.",
    "answer": "Steps to create dynamic routes:\n\n1. Create a file like `[id].js` inside `pages/posts/`:\n```javascript\nexport default function Post({ id }) {\n  return <div>Post ID: {id}</div>;\n}\n```\n\n2. Use `getStaticPaths` and `getStaticProps`:\n```javascript\nexport async function getStaticPaths() {\n  return {\n    paths: [ { params: { id: '1' } } ],\n    fallback: false\n  };\n}\n```\n\n📚 Reference: https://nextjs.org/docs/routing/dynamic-routes",
    "start_char": 0,
    "end_char": 486
  },
  {
    "question": "How to integrate MongoDB with Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database often used in Node.js applications for storing data.",
    "answer": "Steps to integrate MongoDB:\n\n1. Install MongoDB driver:\n```bash\nnpm install mongodb\n```\n\n2. Connect to database:\n```javascript\nconst { MongoClient } = require('mongodb');\nconst client = new MongoClient('mongodb://localhost:27017');\nawait client.connect();\n```\n\n3. Perform operations:\n```javascript\nconst db = client.db('mydb');\nconst users = db.collection('users');\nawait users.insertOne({ name: 'Ly' });\n```\n\n📚 Reference: https://www.mongodb.com/docs/drivers/node/current/",
    "start_char": 0,
    "end_char": 535
  },
  {
    "question": "How to use useEffect hook in React?",
    "label": "react, hooks, useeffect",
    "language": "en",
    "context": "useEffect lets you perform side effects such as data fetching or manual DOM manipulation.",
    "answer": "Steps to use useEffect:\n\n1. Import useEffect:\n```javascript\nimport { useEffect } from 'react';\n```\n\n2. Use it inside a component:\n```javascript\nuseEffect(() => {\n  console.log('Component mounted');\n}, []);\n```\n\n3. Add cleanup (optional):\n```javascript\nuseEffect(() => {\n  return () => console.log('Cleanup');\n}, []);\n```\n\n📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 439
  },
  {
    "question": "How to connect a React app with a REST API?",
    "label": "react, rest-api, frontend",
    "language": "en",
    "context": "Connecting to REST APIs allows React apps to fetch and send data dynamically.",
    "answer": "Steps to connect React to API:\n\n1. Use fetch or axios:\n```javascript\nuseEffect(() => {\n  fetch('https://api.example.com')\n    .then(res => res.json())\n    .then(data => setData(data));\n}, []);\n```\n\n2. Display data:\n```jsx\n<ul>{data.map(item => <li>{item.name}</li>)}</ul>\n```\n\n📚 Reference: https://reactjs.org/docs/faq-ajax.html",
    "start_char": 0,
    "end_char": 426
  },
  {
    "question": "How to handle CORS in Express.js?",
    "label": "express, cors, security",
    "language": "en",
    "context": "CORS is used to allow or block requests from different origins in web applications.",
    "answer": "Steps to handle CORS:\n\n1. Install CORS middleware:\n```bash\nnpm install cors\n```\n\n2. Use it in your app:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. Customize options:\n```javascript\napp.use(cors({ origin: 'http://example.com' }));\n```\n\n📚 Reference: https://expressjs.com/en/resources/middleware/cors.html",
    "start_char": 0,
    "end_char": 399
  },
  {
    "question": "How to use environment variables in Node.js?",
    "label": "nodejs, dotenv, env",
    "language": "en",
    "context": "Environment variables store configuration data and secrets outside source code.",
    "answer": "Steps to use env variables:\n\n1. Install dotenv:\n```bash\nnpm install dotenv\n```\n\n2. Create a `.env` file:\n```\nPORT=3000\nAPI_KEY=abc123\n```\n\n3. Load env variables:\n```javascript\nrequire('dotenv').config();\nconsole.log(process.env.PORT);\n```\n\n📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 403
  },
  {
    "question": "How to implement dark mode in a React app?",
    "label": "react, dark-mode, css",
    "language": "en",
    "context": "Dark mode enhances visual comfort by reducing brightness in low-light environments.",
    "answer": "Steps to add dark mode:\n\n1. Use state to toggle theme:\n```javascript\nconst [dark, setDark] = useState(false);\n```\n\n2. Apply class conditionally:\n```jsx\n<div className={dark ? 'dark' : ''}></div>\n```\n\n3. Define dark CSS:\n```css\n.dark {\n  background-color: black;\n  color: white;\n}\n```\n\n📚 Reference: https://tailwindcss.com/docs/dark-mode",
    "start_char": 0,
    "end_char": 408
  },
  {
    "question": "How to paginate data in MongoDB?",
    "label": "mongodb, pagination, database",
    "language": "en",
    "context": "Pagination helps break large datasets into manageable chunks for performance and UX.",
    "answer": "Steps to paginate in MongoDB:\n\n1. Use `skip()` and `limit()`:\n```javascript\nconst page = 2;\nconst limit = 10;\nconst results = await collection.find().skip((page - 1) * limit).limit(limit).toArray();\n```\n\n2. Optionally return total count for frontend.\n\n📚 Reference: https://www.mongodb.com/docs/manual/reference/method/cursor.skip/",
    "start_char": 0,
    "end_char": 387
  },
  {
    "question": "How to deploy a static site with GitHub Pages?",
    "label": "deployment, github-pages, frontend",
    "language": "en",
    "context": "GitHub Pages is a free service for hosting static websites directly from GitHub.",
    "answer": "Steps to deploy static site:\n\n1. Push your site to GitHub.\n\n2. Go to repo → Settings → Pages.\n\n3. Choose source (e.g., main branch `/root`).\n\n4. GitHub builds and deploys your site automatically.\n\n📚 Reference: https://pages.github.com/",
    "start_char": 0,
    "end_char": 313
  },
  {
    "question": "How to set up a PostgreSQL database with Node.js?",
    "label": "nodejs, postgres, database",
    "language": "en",
    "context": "PostgreSQL is a powerful relational database system. You can connect it to Node.js using the `pg` library.",
    "answer": "Steps to set up PostgreSQL:\n\n1. Install `pg` library:\n```bash\nnpm install pg\n```\n\n2. Set up connection to PostgreSQL:\n```javascript\nconst { Client } = require('pg');\nconst client = new Client({\n  user: 'youruser',\n  host: 'localhost',\n  database: 'mydatabase',\n  password: 'yourpassword',\n  port: 5432,\n});\nclient.connect();\n```\n\n3. Query the database:\n```javascript\nconst res = await client.query('SELECT * FROM users');\nconsole.log(res.rows);\n```\n\n📚 Reference: https://node-postgres.com/",
    "start_char": 0,
    "end_char": 468
  },
  {
    "question": "How to integrate Stripe for payments in a Node.js app?",
    "label": "nodejs, stripe, payments",
    "language": "en",
    "context": "Stripe provides a powerful API for processing payments in web and mobile apps.",
    "answer": "Steps to integrate Stripe:\n\n1. Install `stripe` library:\n```bash\nnpm install stripe\n```\n\n2. Set up Stripe instance:\n```javascript\nconst stripe = require('stripe')('your-secret-key');\n```\n\n3. Create a payment intent:\n```javascript\nconst paymentIntent = await stripe.paymentIntents.create({\n  amount: 2000,\n  currency: 'usd',\n  payment_method: 'your-payment-method-id',\n});\n```\n\n📚 Reference: https://stripe.com/docs/payments",
    "start_char": 0,
    "end_char": 406
  },
  {
    "question": "How to use Context API for state management in React?",
    "label": "react, context-api, state-management",
    "language": "en",
    "context": "React's Context API provides a way to manage global state without the need for third-party libraries.",
    "answer": "Steps to use Context API:\n\n1. Create Context:\n```javascript\nconst ThemeContext = React.createContext();\n```\n\n2. Wrap the app with Context Provider:\n```javascript\n<ThemeContext.Provider value={theme}>...\n</ThemeContext.Provider>\n```\n\n3. Consume context in child components:\n```javascript\nconst theme = useContext(ThemeContext);\n```\n\n📚 Reference: https://reactjs.org/docs/context.html",
    "start_char": 0,
    "end_char": 383
  },
  {
    "question": "How to create a REST API with Django Rest Framework?",
    "label": "django, rest-api, python",
    "language": "en",
    "context": "Django Rest Framework provides tools to easily create web APIs in Django.",
    "answer": "Steps to create REST API: 1. Install Django Rest Framework: 2. Add to `INSTALLED_APPS` in `settings.py`: 3. Create a serializer: 4. Create views and URL routing: 📚 Reference: https://www.django-rest-framework.org/",
    "start_char": 0,
    "end_char": 624
  },
  {
    "question": "How to use async/await in Node.js?",
    "label": "nodejs, async-await, javascript",
    "language": "en",
    "context": "Async/await is a modern JavaScript feature for handling asynchronous code more easily.",
    "answer": "Steps to use async/await:\n\n1. Create an async function:\n```javascript\nasync function fetchData() {\n  const res = await fetch('https://api.example.com');\n  const data = await res.json();\n  console.log(data);\n}\n```\n\n2. Use `try/catch` for error handling:\n```javascript\ntry {\n  await fetchData();\n} catch (err) {\n  console.error('Error:', err);\n}\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 423
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a popular platform-as-a-service for deploying Node.js applications.",
    "answer": "Steps to deploy on Heroku:\n\n1. Install Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Initialize a git repo if you haven't:\n```bash\ngit init\n```\n\n3. Log in to Heroku and create an app:\n```bash\nheroku login\nheroku create your-app-name\n```\n\n4. Push the app to Heroku:\n```bash\ngit push heroku master\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 395
  },
  {
    "question": "How to set up Google Analytics in a website?",
    "label": "analytics, google-analytics, website",
    "language": "en",
    "context": "Google Analytics is a powerful tool for tracking and analyzing web traffic.",
    "answer": "Steps to set up Google Analytics: 1. Create a Google Analytics account at https://analytics.google.com. 2. Add tracking code to your website's HTML: 3. View your data in the Google Analytics dashboard. 📚 Reference: https://support.google.com/analytics/answer/1008015",
    "start_char": 0,
    "end_char": 442
  },
  {
    "question": "How to use Local Storage in JavaScript?",
    "label": "javascript, localstorage, web-storage",
    "language": "en",
    "context": "Local Storage allows you to store data on the client's browser persistently.",
    "answer": "Steps to use Local Storage:\n\n1. Set data:\n```javascript\nlocalStorage.setItem('key', 'value');\n```\n\n2. Get data:\n```javascript\nconst value = localStorage.getItem('key');\nconsole.log(value);\n```\n\n3. Remove data:\n```javascript\nlocalStorage.removeItem('key');\n```\n\n4. Clear all data:\n```javascript\nlocalStorage.clear();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 413
  },
  {
    "question": "How to create a Docker container for a Node.js app?",
    "label": "docker, nodejs, container",
    "language": "en",
    "context": "Docker is a tool for automating the deployment of applications in containers.",
    "answer": "Steps to create Docker container for Node.js app:\n\n1. Create a `Dockerfile` in the root of your project:\n```dockerfile\nFROM node:14\nWORKDIR /app\nCOPY . .\nRUN npm install\nCMD [\"node\", \"index.js\"]\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t node-app .\n```\n\n3. Run the container:\n```bash\ndocker run -p 3000:3000 node-app\n```\n\n📚 Reference: https://www.docker.com/resources/what-container",
    "start_char": 0,
    "end_char": 448
  },
  {
    "question": "How to handle errors in Node.js?",
    "label": "nodejs, error-handling, javascript",
    "language": "en",
    "context": "Error handling in Node.js is essential for ensuring your app runs smoothly and doesn't crash unexpectedly.",
    "answer": "Steps to handle errors in Node.js: 1. Use `try/catch` blocks for synchronous code: 2. Handle asynchronous errors using `catch` for Promises: 3. Use `process.on('uncaughtException')` for uncaught errors: 📚 Reference: https://nodejs.org/en/docs/guides/error-handling/",
    "start_char": 0,
    "end_char": 457
  },
  {
    "question": "How to set up MongoDB with Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that works well with JavaScript and Node.js.",
    "answer": "Steps to set up MongoDB with Node.js: 1. Install `mongoose` library: 2. Connect to MongoDB: 3. Define a schema and model: 4. Use the model to interact with the database: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 495
  },
  {
    "question": "How to use Git for version control?",
    "label": "git, version-control, command-line",
    "language": "en",
    "context": "Git is a distributed version control system that helps in tracking changes in source code during software development.",
    "answer": "Steps to use Git for version control:\n\n1. Initialize a new Git repository:\n```bash\ngit init\n```\n\n2. Add files to staging area:\n```bash\ngit add .\n```\n\n3. Commit changes to the repository:\n```bash\ngit commit -m \"Initial commit\"\n```\n\n4. Push changes to a remote repository (e.g., GitHub):\n```bash\ngit remote add origin https://github.com/yourusername/repository.git\ngit push -u origin master\n```\n\n📚 Reference: https://git-scm.com/book/en/v2",
    "start_char": 0,
    "end_char": 410
  },
  {
    "question": "How to create a JWT token in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is used for secure user authentication in web applications.",
    "answer": "Steps to create a JWT token in Node.js: 1. Install `jsonwebtoken` library: 2. Create a JWT token: 3. Verify a JWT token: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 421
  },
  {
    "question": "How to use React Router for navigation?",
    "label": "react, react-router, navigation",
    "language": "en",
    "context": "React Router is a popular library for handling routing in React applications.",
    "answer": "Steps to use React Router: 1. Install `react-router-dom`: 2. Set up routing in your app: 3. Link to routes: 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 433
  },
  {
    "question": "How to handle CORS in Node.js?",
    "label": "nodejs, cors, middleware",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a security feature implemented by browsers to restrict web pages from making requests to a different domain.",
    "answer": "Steps to handle CORS in Node.js:\n\n1. Install `cors` middleware:\n```bash\nnpm install cors\n```\n\n2. Use `cors` middleware in your Express app:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. Customize CORS options:\n```javascript\nconst corsOptions = {\n  origin: 'https://yourdomain.com',\n  methods: ['GET', 'POST'],\n};\napp.use(cors(corsOptions));\n```\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 396
  },
  {
    "question": "How to create a simple login form with React?",
    "label": "react, form, login",
    "language": "en",
    "context": "Creating a login form in React allows users to input their credentials and authenticate with a backend server.",
    "answer": "Steps to create a login form with React: 1. Create the form component: 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 426
  },
  {
    "question": "How to make an API call in React using Axios?",
    "label": "react, axios, api-call",
    "language": "en",
    "context": "Axios is a popular library for making HTTP requests from React applications.",
    "answer": "Steps to make an API call using Axios:\n\n1. Install `axios` library:\n```bash\nnpm install axios\n```\n\n2. Make an API call in your component:\n```javascript\nimport axios from 'axios';\n\nconst fetchData = async () => {\n  try {\n    const response = await axios.get('https://api.example.com/data');\n    console.log(response.data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\n```\n\n3. Trigger the API call in `useEffect` or an event handler.\n\n📚 Reference: https://axios-http.com/docs/intro",
    "start_char": 0,
    "end_char": 448
  },
  {
    "question": "How to create a responsive layout with CSS Grid?",
    "label": "css, grid, responsive-design",
    "language": "en",
    "context": "CSS Grid Layout allows you to create complex, responsive web designs with ease.",
    "answer": "Steps to create a responsive layout with CSS Grid:\n\n1. Define a grid container:\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n}\n```\n\n2. Add responsive behavior using media queries:\n```css\n@media (max-width: 768px) {\n  .container {\n    grid-template-columns: 1fr;\n  }\n}\n```\n\n3. Add grid items:\n```css\n.item {\n  background-color: #f0f0f0;\n  padding: 20px;\n}\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to set up a simple Express.js server?",
    "label": "express, server, nodejs",
    "language": "en",
    "context": "Express.js is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.",
    "answer": "Steps to set up a simple Express.js server:\n\n1. Install Express.js:\n```bash\nnpm install express\n```\n\n2. Create a server file (e.g., `server.js`):\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/', (req, res) => {\n  res.send('Hello, world!');\n});\n\napp.listen(3000, () => {\n  console.log('Server is running on http://localhost:3000');\n});\n```\n\n3. Run the server:\n```bash\nnode server.js\n```\n\n📚 Reference: https://expressjs.com/",
    "start_char": 0,
    "end_char": 427
  },
  {
    "question": "How to use MongoDB with Mongoose in Node.js?",
    "label": "mongoose, mongodb, nodejs",
    "language": "en",
    "context": "Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js that simplifies data modeling and validation.",
    "answer": "Steps to use MongoDB with Mongoose in Node.js: 1. Install Mongoose: 2. Connect to MongoDB: 3. Define a Schema: 4. Use the model to interact with the database: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 457
  },
  {
    "question": "How to handle authentication using JWT in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is a secure method for user authentication, often used in APIs.",
    "answer": "Steps to handle authentication using JWT in Node.js: 1. Install `jsonwebtoken` and `bcryptjs`: 2. Create a JWT token after user login: 3. Verify the token for protected routes: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "How to perform database migrations in Sequelize?",
    "label": "sequelize, database, migration",
    "language": "en",
    "context": "Sequelize is an ORM for Node.js that works with various SQL-based databases. Database migrations help in managing changes to the database schema.",
    "answer": "Steps to perform database migrations in Sequelize: 1. Install Sequelize CLI: 2. Initialize Sequelize: 3. Create a migration file: 4. Define the migration in the generated file: 5. Run the migration: 📚 Reference: https://sequelize.org/master/manual/migrations.html",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How to perform user validation in Express.js?",
    "label": "express, validation, nodejs",
    "language": "en",
    "context": "User input validation ensures that the data submitted by users is in the correct format and is safe to use in your application.",
    "answer": "Steps to perform user validation in Express.js: 1. Install `express-validator` package: 2. Use `express-validator` in your route handlers: 📚 Reference: https://express-validator.github.io/docs/",
    "start_char": 0,
    "end_char": 402
  },
  {
    "question": "How to deploy a Node.js app on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.",
    "answer": "Steps to deploy a Node.js app on Heroku:\n\n1. Install the Heroku CLI:\n```bash\nbrew install heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Create a Heroku app:\n```bash\nheroku create\n```\n\n4. Push your code to Heroku:\n```bash\ngit push heroku master\n```\n\n5. Access your app via the Heroku URL:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 378
  },
  {
    "question": "How to create a REST API with Express.js?",
    "label": "express, api, nodejs",
    "language": "en",
    "context": "Express.js is widely used to build RESTful APIs in Node.js applications.",
    "answer": "Steps to create a REST API with Express.js: 1. Install Express.js: 2. Set up routes for your API: 3. Test the API using Postman or cURL. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 429
  },
  {
    "question": "How to set up WebSocket communication in Node.js?",
    "label": "nodejs, websocket, communication",
    "language": "en",
    "context": "WebSocket is a protocol that provides full-duplex communication channels over a single TCP connection.",
    "answer": "Steps to set up WebSocket communication in Node.js: 1. Install `ws` package: 2. Set up WebSocket server: 3. Connect to WebSocket server from client: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 439
  },
  {
    "question": "How to use Redux in React?",
    "label": "redux, react, state-management",
    "language": "en",
    "context": "Redux is a predictable state container for JavaScript apps, commonly used with React for state management.",
    "answer": "Steps to use Redux in React: 1. Install Redux and React-Redux: 2. Create a Redux store: 3. Provide the store to the React app: 4. Connect components to Redux store using `connect`: 📚 Reference: https://react-redux.js.org/",
    "start_char": 0,
    "end_char": 484
  },
  {
    "question": "How to set up Redux Toolkit in React?",
    "label": "redux, react, toolkit",
    "language": "en",
    "context": "Redux Toolkit is a set of tools to help you write Redux logic in a simpler way, improving developer experience.",
    "answer": "Steps to set up Redux Toolkit in React: 1. Install Redux Toolkit and React-Redux: 2. Create a Redux slice: 3. Set up the store: 4. Provide the store to your React app: 📚 Reference: https://redux-toolkit.js.org/",
    "start_char": 0,
    "end_char": 485
  },
  {
    "question": "How to deploy a React app using GitHub Pages?",
    "label": "react, github-pages, deployment",
    "language": "en",
    "context": "GitHub Pages allows you to host static websites directly from a GitHub repository. It's a popular way to deploy React apps.",
    "answer": "Steps to deploy a React app using GitHub Pages: 1. Install `gh-pages` package: 2. Add `homepage` property to `package.json`: 3. Modify `scripts` in `package.json` to include deploy commands: 4. Run the deploy command: 5. Visit your React app on GitHub Pages. 📚 Reference: https://create-react-app.dev/docs/deployment/#github-pages",
    "start_char": 0,
    "end_char": 425
  },
  {
    "question": "How to use Docker to containerize a Node.js app?",
    "label": "docker, nodejs, containerization",
    "language": "en",
    "context": "Docker allows you to package your application along with all its dependencies into a container, ensuring consistent environments across different systems.",
    "answer": "Steps to containerize a Node.js app using Docker:\n\n1. Create a `Dockerfile` in your project directory:\n```dockerfile\nFROM node:14\nWORKDIR /app\nCOPY . .\nRUN npm install\nEXPOSE 3000\nCMD [\"node\", \"server.js\"]\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t node-app .\n```\n\n3. Run the container:\n```bash\ndocker run -p 3000:3000 node-app\n```\n\n4. Verify your app is running in the container by visiting `http://localhost:3000`.\n\n📚 Reference: https://docs.docker.com/samples/nodejs/",
    "start_char": 0,
    "end_char": 395
  },
  {
    "question": "How to use async/await in Node.js?",
    "label": "nodejs, async-await, javascript",
    "language": "en",
    "context": "Async/await allows you to handle asynchronous operations in a more readable and structured way, using JavaScript's Promises.",
    "answer": "Steps to use async/await in Node.js: 1. Define an asynchronous function using `async`: 2. Use `await` to wait for asynchronous operations: 3. Use `try/catch` to handle errors in async functions: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 408
  },
  {
    "question": "How to implement JWT authentication in React?",
    "label": "react, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is commonly used for stateless authentication in web applications, where the server generates a token that the client stores and sends for future requests.",
    "answer": "Steps to implement JWT authentication in React: 1. After user logs in, the server sends a JWT token: 2. Store the JWT token in localStorage or sessionStorage on the client: 3. Send the token with every API request by adding it to the request headers: 4. Verify the token on the server for protected routes. 📚 Reference: https://jwt.io/",
    "start_char": 0,
    "end_char": 426
  },
  {
    "question": "How to use React Router for navigation?",
    "label": "react, router, navigation",
    "language": "en",
    "context": "React Router is a standard library for routing in React, allowing you to navigate between views and render different components based on the URL.",
    "answer": "Steps to use React Router for navigation: 1. Install React Router: 2. Set up `BrowserRouter` and `Route` components: 3. Use `Link` component to navigate between routes: 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 419
  },
  {
    "question": "How to use Axios for API requests in React?",
    "label": "react, axios, api",
    "language": "en",
    "context": "Axios is a promise-based HTTP client for the browser and Node.js, often used in React to make API requests.",
    "answer": "Steps to use Axios for API requests in React: 1. Install Axios: 2. Make an API request using Axios in a React component: 3. You can also use `axios.post()` for sending data. 📚 Reference: https://axios-http.com/",
    "start_char": 0,
    "end_char": 392
  },
  {
    "question": "How to use the `useState` hook in React?",
    "label": "react, useState, hooks",
    "language": "en",
    "context": "The `useState` hook is used in React to add state to functional components.",
    "answer": "Steps to use the `useState` hook in React:\n\n1. Import `useState` from React:\n```javascript\nimport { useState } from 'react';\n```\n\n2. Initialize state in your component:\n```javascript\nconst [count, setCount] = useState(0);\n```\n\n3. Use state in your component and update it with `setState`:\n```javascript\n<button onClick={() => setCount(count + 1)}>Increment</button>\n<p>Count: {count}</p>\n```\n\n📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 320
  },
  {
    "question": "How to use the `useEffect` hook in React?",
    "label": "react, useEffect, hooks",
    "language": "en",
    "context": "The `useEffect` hook is used to perform side effects in function components, such as data fetching, setting up subscriptions, and manually changing the DOM.",
    "answer": "Steps to use the `useEffect` hook in React: 1. Import `useEffect` from React: 2. Use `useEffect` for side effects: 3. Optionally clean up after the effect: 📚 Reference: https://reactjs.org/docs/hooks-effect.html",
    "start_char": 0,
    "end_char": 409
  },
  {
    "question": "How to set up Firebase in a React app?",
    "label": "react, firebase, setup",
    "language": "en",
    "context": "Firebase is a platform developed by Google that provides various tools for app development, including real-time databases and authentication services.",
    "answer": "Steps to set up Firebase in a React app: 1. Create a Firebase project in the Firebase Console. 2. Install Firebase SDK: 3. Initialize Firebase in your app: 4. Use Firebase services in your React components (e.g., authentication). 📚 Reference: https://firebase.google.com/docs/web/setup",
    "start_char": 0,
    "end_char": 405
  },
  {
    "question": "How to create a custom hook in React?",
    "label": "react, custom-hook, hooks",
    "language": "en",
    "context": "Custom hooks allow you to reuse stateful logic between components in React.",
    "answer": "Steps to create a custom hook in React: 1. Create a new file for the custom hook (e.g., `useCounter.js`). 2. Define the custom hook function: 3. Use the custom hook in a component: 📚 Reference: https://reactjs.org/docs/hooks-custom.html",
    "start_char": 0,
    "end_char": 484
  },
  {
    "question": "How to create a RESTful API with Express.js?",
    "label": "express, nodejs, api",
    "language": "en",
    "context": "Express.js is a minimal and flexible Node.js web application framework that provides a robust set of features for building web and mobile applications.",
    "answer": "Steps to create a RESTful API with Express.js: 1. Install Express: 2. Set up the basic server: 3. Define routes for your API (e.g., GET, POST, PUT, DELETE): 4. Optionally, use middleware for handling JSON and errors. 📚 Reference: https://expressjs.com/en/starter/installing.html",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to handle file uploads in Node.js?",
    "label": "nodejs, file-upload, express",
    "language": "en",
    "context": "In Node.js, you can handle file uploads using libraries like `multer` to manage file uploads in an Express.js application.",
    "answer": "Steps to handle file uploads in Node.js with Express and Multer: 1. Install Multer: 2. Set up Multer to handle file uploads: 3. Create a POST route to handle file uploads: 4. Optionally, handle multiple files and validation. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 433
  },
  {
    "question": "How to set up a MySQL database with Node.js?",
    "label": "nodejs, mysql, database",
    "language": "en",
    "context": "Node.js can interact with MySQL databases using the `mysql` or `mysql2` package, which allows for querying and manipulating data.",
    "answer": "Steps to set up a MySQL database with Node.js: 1. Install the MySQL package: 2. Create a connection to the MySQL database: 3. Query the database (e.g., SELECT, INSERT, UPDATE, DELETE): 4. Close the connection: 📚 Reference: https://www.npmjs.com/package/mysql2",
    "start_char": 0,
    "end_char": 449
  },
  {
    "question": "How to deploy a Node.js app on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that allows you to deploy and scale applications easily, including Node.js applications.",
    "answer": "Steps to deploy a Node.js app on Heroku:\n\n1. Install the Heroku CLI:\n```bash\nbrew install heroku\n```\n\n2. Log in to your Heroku account:\n```bash\nheroku login\n```\n\n3. Create a new Heroku app:\n```bash\nheroku create\n```\n\n4. Add your code to Git and push to Heroku:\n```bash\ngit add .\ngit commit -m 'Initial commit'\ngit push heroku master\n```\n\n5. Visit your app on Heroku.\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 395
  },
  {
    "question": "How to create a simple web scraper in Node.js?",
    "label": "nodejs, web-scraping, js",
    "language": "en",
    "context": "Web scraping in Node.js can be done using libraries like `cheerio` for parsing HTML and `axios` for making HTTP requests.",
    "answer": "Steps to create a simple web scraper in Node.js:\n\n1. Install the required packages:\n```bash\nnpm install axios cheerio\n```\n\n2. Fetch the HTML content of a webpage using `axios`:\n```javascript\nconst axios = require('axios');\nconst cheerio = require('cheerio');\n\naxios.get('https://example.com').then((response) => {\n  const $ = cheerio.load(response.data);\n  console.log($('title').text());\n});\n```\n\n3. Use `cheerio` to parse and extract data from the HTML.\n\n📚 Reference: https://www.npmjs.com/package/cheerio",
    "start_char": 0,
    "end_char": 397
  },
  {
    "question": "How to implement pagination in a Node.js API?",
    "label": "nodejs, pagination, api",
    "language": "en",
    "context": "Pagination is often needed in APIs to return a subset of data, particularly when dealing with large datasets.",
    "answer": "Steps to implement pagination in a Node.js API: 1. Calculate `page` and `limit` query parameters from the request: 2. Modify your database query to use the `offset` and `limit` for pagination: 3. Return pagination metadata (e.g., total count, current page). 📚 Reference: https://www.sqlshack.com/sql-server-pagination/",
    "start_char": 0,
    "end_char": 449
  },
  {
    "question": "How to use MongoDB with Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in flexible, JSON-like documents. Node.js can interact with MongoDB using the Mongoose library.",
    "answer": "Steps to use MongoDB with Node.js: 1. Install Mongoose: 2. Connect to the MongoDB database: 3. Define a Mongoose schema and model: 4. Perform CRUD operations (e.g., find, save, update, delete). 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 445
  },
  {
    "question": "How to set up WebSocket communication in Node.js?",
    "label": "nodejs, websocket, communication",
    "language": "en",
    "context": "WebSocket is a protocol that allows for full-duplex communication channels over a single TCP connection, often used in real-time applications.",
    "answer": "Steps to set up WebSocket communication in Node.js: 1. Install the `ws` package: 2. Set up the WebSocket server: 3. In the client-side, use the `WebSocket` API to connect to the server and send messages. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "How to use JWT for authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. It's commonly used for authentication in Node.js applications.",
    "answer": "Steps to use JWT for authentication in Node.js: 1. Install the required packages: 2. Generate a JWT after successful login: 3. Use middleware to verify the JWT in protected routes: 4. Protect routes with the `verifyToken` middleware. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 471
  },
  {
    "question": "How to set up a simple Express.js server?",
    "label": "express, nodejs, server",
    "language": "en",
    "context": "Express.js is a web framework for Node.js that allows you to easily set up a server with minimal effort.",
    "answer": "Steps to set up a simple Express.js server: 1. Install Express: 2. Create a basic Express application: 3. Start the server and navigate to `http://localhost:3000` to view the response. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 371
  },
  {
    "question": "How to create an Angular app and set up routing?",
    "label": "angular, routing, frontend",
    "language": "en",
    "context": "Angular is a framework for building single-page applications. Routing allows users to navigate between different views in the app.",
    "answer": "Steps to create an Angular app and set up routing: 1. Install Angular CLI and create a new app: 2. Generate components for different views: 3. Set up routing in the `app-routing.module.ts`: 4. Add `<router-outlet></router-outlet>` to the `app.component.html`. 📚 Reference: https://angular.io/guide/router",
    "start_char": 0,
    "end_char": 541
  },
  {
    "question": "How to implement a basic authentication system in Node.js?",
    "label": "nodejs, authentication, security",
    "language": "en",
    "context": "Authentication is essential for ensuring that users can access their accounts and services securely. Basic authentication can be set up using Passport.js in Node.js.",
    "answer": "Steps to implement basic authentication in Node.js: 1. Install Passport and necessary packages: 2. Set up Passport.js for local authentication: 3. Set up express-session and Passport middleware in your app: 4. Implement the login route to authenticate users: 📚 Reference: https://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 543
  },
  {
    "question": "How to perform input validation in a Node.js application?",
    "label": "nodejs, validation, input",
    "language": "en",
    "context": "Input validation ensures that data provided by users is in the expected format before it is processed or stored.",
    "answer": "Steps to perform input validation in a Node.js application: 1. Install the `express-validator` package: 2. Use `express-validator` to validate request data: 3. Handle errors if validation fails. 📚 Reference: https://express-validator.github.io/docs/",
    "start_char": 0,
    "end_char": 457
  },
  {
    "question": "How to connect Node.js with Redis?",
    "label": "nodejs, redis, database",
    "language": "en",
    "context": "Redis is an in-memory data structure store, often used for caching and session management. You can connect Node.js to Redis using the `redis` package.",
    "answer": "Steps to connect Node.js with Redis: 1. Install the `redis` package: 2. Create a Redis client and connect: 3. Use Redis commands for data manipulation (e.g., `get`, `set`): 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 430
  },
  {
    "question": "How to use Git for version control in a Node.js project?",
    "label": "nodejs, git, version-control",
    "language": "en",
    "context": "Git is a distributed version control system that helps in managing the history of changes to your codebase.",
    "answer": "Steps to use Git for version control in a Node.js project: 1. Initialize a new Git repository: 2. Add files to the staging area: 3. Commit the changes: 4. Create a remote repository and push changes: 5. Use Git branches for feature development: 📚 Reference: https://git-scm.com/book/en/v2",
    "start_char": 0,
    "end_char": 412
  },
  {
    "question": "How to use Sequelize for ORM in Node.js?",
    "label": "nodejs, sequelize, orm",
    "language": "en",
    "context": "Sequelize is an ORM (Object-Relational Mapping) tool for Node.js that allows you to interact with relational databases like MySQL, PostgreSQL, and SQLite.",
    "answer": "Steps to use Sequelize for ORM in Node.js: 1. Install Sequelize and the appropriate database package (e.g., mysql2 for MySQL): 2. Set up Sequelize and connect to the database: 3. Define a model for a table: 4. Sync the models and interact with the database: 📚 Reference: https://sequelize.org/",
    "start_char": 0,
    "end_char": 503
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a platform-as-a-service (PaaS) that enables quick deployment of applications. You can deploy your Node.js app on Heroku with a few simple steps.",
    "answer": "Steps to deploy a Node.js application to Heroku: 1. Install the Heroku CLI: 2. Login to Heroku: 3. Initialize a Git repository and commit your changes: 4. Create a new Heroku app: 5. Deploy the app to Heroku: 6. Open the app in your browser: 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "How to set up WebSocket communication in Node.js?",
    "label": "nodejs, websocket, real-time",
    "language": "en",
    "context": "WebSocket is a protocol that allows for two-way communication between a client and server over a single, long-lived connection.",
    "answer": "Steps to set up WebSocket communication in Node.js: 1. Install the `ws` package: 2. Set up the WebSocket server: 3. In the client-side, use the `WebSocket` API to connect to the server and send messages. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "How to use JWT for authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. It's commonly used for authentication in Node.js applications.",
    "answer": "Steps to use JWT for authentication in Node.js: 1. Install the required packages: 2. Generate a JWT after successful login: 3. Use middleware to verify the JWT in protected routes: 4. Protect routes with the `verifyToken` middleware. 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 471
  },
  {
    "question": "How to set up a MongoDB connection in Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database, which is widely used with Node.js applications due to its flexibility and scalability.",
    "answer": "Steps to set up a MongoDB connection in Node.js: 1. Install the `mongoose` package: 2. Connect to MongoDB using Mongoose: 3. Define a Mongoose model for data interaction: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 387
  },
  {
    "question": "How to create a REST API using Express and Node.js?",
    "label": "express, nodejs, rest-api",
    "language": "en",
    "context": "A REST API allows communication between clients and servers using standard HTTP methods. Express.js simplifies the process of creating APIs in Node.js.",
    "answer": "Steps to create a REST API using Express and Node.js: 1. Install Express: 2. Create a basic Express application with API routes: 3. Test your API using Postman or curl. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "How to use Docker to containerize a Node.js application?",
    "label": "nodejs, docker, containerization",
    "language": "en",
    "context": "Docker allows you to package your Node.js application into containers, which can be run on any machine with Docker installed, ensuring consistent environments across deployments.",
    "answer": "Steps to containerize a Node.js application with Docker: 1. Install Docker on your system. 2. Create a `Dockerfile` in your Node.js project directory: 3. Build the Docker image: 4. Run the container: 5. Your application will be accessible at `http://localhost:3000`. 📚 Reference: https://docs.docker.com/get-started/part2/",
    "start_char": 0,
    "end_char": 404
  },
  {
    "question": "How to create a JWT authentication system in Express.js?",
    "label": "express, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are widely used for securing REST APIs and implementing authentication in web applications.",
    "answer": "Steps to create a JWT authentication system in Express.js: 1. Install the required packages: 2. Set up the JWT authentication logic: 📚 Reference: https://jwt.io/introduction/",
    "start_char": 0,
    "end_char": 561
  },
  {
    "question": "How to configure a proxy server in Node.js?",
    "label": "nodejs, proxy, server",
    "language": "en",
    "context": "A proxy server acts as an intermediary between a client and a destination server. It is commonly used for load balancing, caching, and security.",
    "answer": "Steps to configure a proxy server in Node.js: 1. Install the `http-proxy` package: 2. Create a basic proxy server using the `http-proxy` module: 3. The proxy server will forward incoming requests to `http://localhost:3000`. 📚 Reference: https://www.npmjs.com/package/http-proxy",
    "start_char": 0,
    "end_char": 385
  },
  {
    "question": "How to handle errors in Node.js with middleware?",
    "label": "nodejs, error-handling, middleware",
    "language": "en",
    "context": "In a Node.js application, proper error handling ensures that the application behaves as expected and can recover from unexpected issues.",
    "answer": "Steps to handle errors in Node.js using middleware: 1. Create a custom error-handling middleware: 2. Throw errors in your route handlers as needed: 3. The error-handling middleware will catch the error and send a response with a 500 status code. 📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 359
  },
  {
    "question": "How to use Multer for file uploads in Node.js?",
    "label": "nodejs, multer, file-upload",
    "language": "en",
    "context": "Multer is a middleware for handling file uploads in Node.js applications. It allows for easy file handling and storage options.",
    "answer": "Steps to use Multer for file uploads in Node.js:\n\n1. Install the Multer package:\n```bash\nnpm install multer\n```\n\n2. Set up Multer middleware in your application:\n```javascript\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded successfully');\n});\n```\n\n3. Test the file upload by sending a file using Postman or any HTTP client.\n\n📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 338
  },
  {
    "question": "How to use Redis for caching in Node.js?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Redis is a fast, in-memory key-value store that can be used for caching to improve performance in Node.js applications.",
    "answer": "Steps to use Redis for caching in Node.js: 1. Install the `redis` package: 2. Connect to Redis server: 3. Set and get cache values: 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 366
  },
  {
    "question": "How to use Nodemailer for sending emails in Node.js?",
    "label": "nodejs, nodemailer, email",
    "language": "en",
    "context": "Nodemailer is a popular library for sending emails from Node.js applications, supporting various transport methods such as SMTP, AWS SES, etc.",
    "answer": "Steps to send emails using Nodemailer in Node.js: 1. Install the Nodemailer package: 2. Set up the transport method and send an email: 📚 Reference: https://nodemailer.com/",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How to integrate a payment gateway in Node.js?",
    "label": "nodejs, payment-gateway, integration",
    "language": "en",
    "context": "Integrating a payment gateway into a Node.js application allows you to process online payments securely using services like Stripe, PayPal, or others.",
    "answer": "Steps to integrate a payment gateway (e.g., Stripe) in Node.js: 1. Install the Stripe package: 2. Set up the Stripe API key in your application: 3. Create a payment route to handle payments: 4. Test payment flow using Stripe test cards. 📚 Reference: https://stripe.com/docs/api",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "How to use WebSockets in Node.js?",
    "label": "nodejs, websockets, real-time",
    "language": "en",
    "context": "WebSockets allow for real-time two-way communication between the server and clients, which is useful for applications like chat systems, live notifications, and more.",
    "answer": "Steps to use WebSockets in Node.js: 1. Install the `ws` package for WebSocket support: 2. Set up a WebSocket server: 3. Connect to the WebSocket server from a client-side JavaScript: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 352
  },
  {
    "question": "How to create a real-time chat application using Node.js and Socket.io?",
    "label": "nodejs, socketio, chat-application",
    "language": "en",
    "context": "Socket.io enables real-time, bi-directional communication between web clients and servers, making it ideal for building chat applications.",
    "answer": "Steps to create a real-time chat application using Node.js and Socket.io: 1. Install Socket.io: 2. Set up the server with Socket.io support: 3. Create a client-side script to connect to the server and send/receive messages. 📚 Reference: https://socket.io/docs/v4/",
    "start_char": 0,
    "end_char": 463
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that lets you deploy and manage Node.js applications easily. It abstracts away server management and scales applications automatically.",
    "answer": "Steps to deploy a Node.js application on Heroku: 1. Install the Heroku CLI: https://devcenter.heroku.com/articles/heroku-cli 2. Log in to Heroku from the command line: 3. Create a new Heroku app: 4. Add your project files (including `Procfile` and `package.json`) to Git, commit, and push to Heroku: 5. Access your app at `https://my-app.herokuapp.com`. 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 436
  },
  {
    "question": "How to implement pagination in MongoDB with Node.js?",
    "label": "nodejs, mongodb, pagination",
    "language": "en",
    "context": "Pagination is a common feature for limiting the number of results returned from a database query, especially in applications that deal with large datasets.",
    "answer": "Steps to implement pagination in MongoDB with Node.js: 1. Use the `skip()` and `limit()` methods to implement pagination: 2. Use `countDocuments()` to get the total number of documents: 3. You can now implement front-end pagination. 📚 Reference: https://mongoosejs.com/docs/api.html",
    "start_char": 0,
    "end_char": 379
  },
  {
    "question": "How to schedule tasks with Node-cron in Node.js?",
    "label": "nodejs, cron, task-scheduler",
    "language": "en",
    "context": "Node-cron allows you to schedule tasks to run at specific times in a Node.js application, making it useful for background jobs, automated tasks, and maintenance jobs.",
    "answer": "Steps to schedule tasks using Node-cron:\n\n1. Install Node-cron package:\n```bash\nnpm install node-cron\n```\n\n2. Set up a scheduled task:\n```javascript\nconst cron = require('node-cron');\n\ncron.schedule('0 0 * * *', () => {\n  console.log('Task runs every day at midnight');\n});\n```\n\n3. You can schedule tasks with custom cron syntax.\n\n📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 261
  },
  {
    "question": "How to send an HTTP request using Axios in Node.js?",
    "label": "nodejs, axios, http-request",
    "language": "en",
    "context": "Axios is a promise-based HTTP client for the browser and Node.js, commonly used for making HTTP requests.",
    "answer": "Steps to send an HTTP request using Axios in Node.js:\n\n1. Install Axios:\n```bash\nnpm install axios\n```\n\n2. Send a GET request:\n```javascript\nconst axios = require('axios');\n\naxios.get('https://api.example.com/data')\n  .then(response => {\n    console.log(response.data);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n```\n\n3. You can also send POST, PUT, and DELETE requests using Axios.\n\n📚 Reference: https://axios-http.com/docs/req_config",
    "start_char": 0,
    "end_char": 349
  },
  {
    "question": "How to set up logging in Node.js using Winston?",
    "label": "nodejs, logging, winston",
    "language": "en",
    "context": "Winston is a logging library for Node.js that supports multiple transports (e.g., file, console, remote server). It allows for flexible and advanced logging in applications.",
    "answer": "Steps to set up logging with Winston in Node.js: 1. Install Winston package: 2. Configure Winston logger: 3. You can log to different outputs by adding more transports. 📚 Reference: https://github.com/winstonjs/winston",
    "start_char": 0,
    "end_char": 334
  },
  {
    "question": "How to implement a basic REST API in Node.js with Express?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "Express is a minimal web framework for Node.js that simplifies building REST APIs, providing routing, middleware, and other essential features.",
    "answer": "Steps to implement a basic REST API with Node.js and Express: 1. Install Express: 2. Set up a basic server and routes: 3. You can add more routes (e.g., POST, PUT, DELETE) for the REST API. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 332
  },
  {
    "question": "How to handle file uploads in Node.js?",
    "label": "nodejs, file-upload",
    "language": "en",
    "context": "Handling file uploads in Node.js allows users to upload files (e.g., images, documents) to your server, making it useful for many applications.",
    "answer": "Steps to handle file uploads in Node.js:\n\n1. Install `multer` for file handling:\n```bash\nnpm install multer\n```\n\n2. Set up Multer middleware for handling file uploads:\n```javascript\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded successfully');\n});\n```\n\n3. Access the uploaded file via `req.file`.\n\n📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 348
  },
  {
    "question": "How to authenticate users in Node.js using JWT?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Token (JWT) is a secure way to authenticate users in a Node.js application, often used for user login and authorization.",
    "answer": "Steps to authenticate users with JWT in Node.js: 1. Install `jsonwebtoken` and `bcryptjs` for token generation and password hashing: 2. Create a JWT token after user login: 3. Verify JWT token on subsequent requests: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 442
  },
  {
    "question": "How to set up a Node.js application with MongoDB using Mongoose?",
    "label": "nodejs, mongodb, mongoose",
    "language": "en",
    "context": "Mongoose is a popular ODM (Object Data Modeling) library for MongoDB and Node.js, providing a simple way to interact with MongoDB.",
    "answer": "Steps to set up a Node.js application with MongoDB using Mongoose: 1. Install Mongoose and MongoDB driver: 2. Connect to MongoDB database: 3. Define a Mongoose schema and model: 4. Create, read, update, and delete data using Mongoose models. 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 348
  },
  {
    "question": "How to deploy a Node.js app with Docker?",
    "label": "nodejs, docker, deployment",
    "language": "en",
    "context": "Docker provides a containerized environment for running Node.js applications, ensuring consistency and ease of deployment.",
    "answer": "Steps to deploy a Node.js app with Docker:\n\n1. Create a `Dockerfile` for your Node.js app:\n```Dockerfile\nFROM node:14\nWORKDIR /app\nCOPY . .\nRUN npm install\nCMD ['node', 'index.js']\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t my-node-app .\n```\n\n3. Run the app in a Docker container:\n```bash\ndocker run -p 3000:3000 my-node-app\n```\n\n4. You can push the image to a Docker registry like Docker Hub for easy sharing and deployment.\n\n📚 Reference: https://www.docker.com/",
    "start_char": 0,
    "end_char": 337
  },
  {
    "question": "How to secure a Node.js application using Helmet?",
    "label": "nodejs, security, helmet",
    "language": "en",
    "context": "Helmet is a middleware for securing Node.js applications by setting various HTTP headers that help protect from common security vulnerabilities.",
    "answer": "Steps to secure a Node.js app with Helmet:\n\n1. Install Helmet:\n```bash\nnpm install helmet\n```\n\n2. Use Helmet middleware in your Express app:\n```javascript\nconst helmet = require('helmet');\n\napp.use(helmet());\n```\n\n3. Helmet automatically sets various security headers like Content Security Policy, XSS protection, etc. You can customize it by specifying options:\n```javascript\napp.use(helmet({ contentSecurityPolicy: false }));\n```\n\n📚 Reference: https://helmetjs.github.io/",
    "start_char": 0,
    "end_char": 287
  },
  {
    "question": "How to set up session management in Node.js using Express-session?",
    "label": "nodejs, express-session, session-management",
    "language": "en",
    "context": "Session management is crucial in web applications for keeping track of user information across multiple requests, typically for authentication.",
    "answer": "Steps to set up session management with Express-session: 1. Install Express-session package: 2. Set up session middleware: 3. Use the session to store user-specific data: 📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 355
  },
  {
    "question": "How to set up CORS in a Node.js application?",
    "label": "nodejs, cors, security",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a mechanism to allow or restrict resources from being requested from another domain.",
    "answer": "Steps to set up CORS in Node.js:\n\n1. Install `cors` package:\n```bash\nnpm install cors\n```\n\n2. Use CORS middleware in your Express app:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. You can specify more advanced configurations for CORS, such as allowed origins, methods, and headers:\n```javascript\napp.use(cors({ origin: 'http://example.com', methods: ['GET', 'POST'] }));\n```\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 282
  },
  {
    "question": "How to send emails in Node.js using Nodemailer?",
    "label": "nodejs, nodemailer, email",
    "language": "en",
    "context": "Nodemailer is a module for Node.js that makes it easy to send emails from your application, with support for different email services.",
    "answer": "Steps to send emails in Node.js using Nodemailer: 1. Install Nodemailer: 2. Set up Nodemailer transporter: 3. Send an email: 📚 Reference: https://nodemailer.com/",
    "start_char": 0,
    "end_char": 424
  },
  {
    "question": "How to set up a RESTful API in Node.js with Express?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "A RESTful API allows communication between different systems over HTTP, and Express makes it easy to create RESTful routes and handle requests.",
    "answer": "Steps to set up a RESTful API with Node.js and Express: 1. Install Express: 2. Create RESTful routes for GET, POST, PUT, DELETE requests: 3. Use Express's built-in methods to handle different HTTP methods. 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 376
  },
  {
    "question": "How to create a simple authentication system with Node.js and Passport?",
    "label": "nodejs, passport, authentication",
    "language": "en",
    "context": "Passport is an authentication middleware for Node.js that can be used to manage user login, registration, and authorization.",
    "answer": "Steps to create an authentication system with Passport in Node.js: 1. Install Passport and Passport-local strategy: 2. Set up Passport middleware: 3. Handle login and registration with Passport: 📚 Reference: http://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 401
  },
  {
    "question": "How to implement rate limiting in Node.js?",
    "label": "nodejs, rate-limiting, security",
    "language": "en",
    "context": "Rate limiting helps to prevent abuse of APIs by limiting the number of requests a client can make within a specific time window.",
    "answer": "Steps to implement rate limiting in Node.js: 1. Install `express-rate-limit` package: 2. Set up rate limiter middleware in your Express app: 3. You can configure rate limiting for specific routes or globally. 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 353
  },
  {
    "question": "How to configure environment variables in Node.js?",
    "label": "nodejs, environment-variables, configuration",
    "language": "en",
    "context": "Environment variables allow you to manage configuration settings in a secure and flexible way without hardcoding them into your application.",
    "answer": "Steps to configure environment variables in Node.js:\n\n1. Install `dotenv` package to load environment variables from a `.env` file:\n```bash\nnpm install dotenv\n```\n\n2. Create a `.env` file to store your environment variables:\n```.env\nDATABASE_URL=mongodb://localhost:27017/mydb\nPORT=3000\n```\n\n3. Load the `.env` file in your application:\n```javascript\nrequire('dotenv').config();\n\nconst dbUrl = process.env.DATABASE_URL;\nconst port = process.env.PORT;\n```\n\n📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 303
  },
  {
    "question": "How to set up logging in Node.js using Winston?",
    "label": "nodejs, logging, winston",
    "language": "en",
    "context": "Winston is a popular logging library for Node.js that allows you to log events in your application with different logging levels.",
    "answer": "Steps to set up logging with Winston in Node.js: 1. Install `winston` package: 2. Set up a basic logger: 3. You can customize log levels and formats according to your needs. 📚 Reference: https://github.com/winstonjs/winston",
    "start_char": 0,
    "end_char": 296
  },
  {
    "question": "How to implement file uploads in Node.js using Multer?",
    "label": "nodejs, multer, file-upload",
    "language": "en",
    "context": "Multer is a middleware for handling file uploads in Node.js, providing easy file handling and integration with Express.",
    "answer": "Steps to implement file uploads with Multer in Node.js: 1. Install `multer` package: 2. Set up Multer middleware to handle file uploads: 3. Use Multer middleware in a route to handle the file upload: 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 343
  },
  {
    "question": "How to use MongoDB aggregation framework in Node.js?",
    "label": "nodejs, mongodb, aggregation",
    "language": "en",
    "context": "MongoDB's aggregation framework allows you to perform complex data transformations and calculations directly within the database.",
    "answer": "Steps to use MongoDB aggregation framework in Node.js: 1. Install `mongoose` package: 2. Connect to MongoDB and define a schema: 3. Use aggregation pipeline to perform complex queries: 📚 Reference: https://docs.mongodb.com/manual/reference/aggregation/",
    "start_char": 0,
    "end_char": 448
  },
  {
    "question": "How to handle errors in Express.js using middleware?",
    "label": "nodejs, express, error-handling",
    "language": "en",
    "context": "Error handling middleware in Express allows you to handle errors in a centralized way across your application.",
    "answer": "Steps to handle errors with middleware in Express.js:\n\n1. Define an error handling middleware function:\n```javascript\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something went wrong!');\n});\n```\n\n2. Ensure that the error handler is placed after all your routes and other middleware.\n\n3. You can customize error handling by providing different status codes and messages.\n\n📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 290
  },
  {
    "question": "How to integrate Google OAuth in a Node.js application?",
    "label": "nodejs, google-oauth, authentication",
    "language": "en",
    "context": "Google OAuth allows users to authenticate into your Node.js application using their Google account, simplifying login and improving security.",
    "answer": "Steps to integrate Google OAuth in Node.js: 1. Install required packages: 2. Set up Google OAuth strategy in Passport: 3. Set up routes for authentication and callback: 📚 Reference: http://www.passportjs.org/packages/passport-google-oauth20/",
    "start_char": 0,
    "end_char": 464
  },
  {
    "question": "How to configure file upload limits in Express.js?",
    "label": "nodejs, express, file-upload",
    "language": "en",
    "context": "Limiting the size of file uploads helps to prevent denial of service attacks and ensures the application can handle large files properly.",
    "answer": "Steps to configure file upload limits in Express.js: 1. Install `multer` for file uploads: 2. Set upload size limit with Multer middleware: 3. Handle errors in case the file size exceeds the limit: 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 404
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is a widely used standard for secure user authentication in web applications.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install `jsonwebtoken` package: 2. Create a function to generate JWT tokens: 3. Protect routes with JWT authentication: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 383
  },
  {
    "question": "How to handle CORS in a Node.js application?",
    "label": "nodejs, cors, security",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources from being requested from a different domain than the one the resource originated from.",
    "answer": "Steps to handle CORS in a Node.js application:\n\n1. Install `cors` package:\n```bash\nnpm install cors\n```\n\n2. Use `cors` middleware in your Express app:\n```javascript\nconst cors = require('cors');\n\napp.use(cors());\n```\n\n3. You can configure CORS to allow specific origins, methods, or headers:\n```javascript\napp.use(cors({\n  origin: 'http://example.com',\n  methods: ['GET', 'POST'],\n  allowedHeaders: ['Content-Type']\n}));\n```\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 334
  },
  {
    "question": "How to set up WebSocket communication in Node.js?",
    "label": "nodejs, websocket, communication",
    "language": "en",
    "context": "WebSockets provide a full-duplex communication channel over a single, long-lived connection, commonly used for real-time applications like chat apps or notifications.",
    "answer": "Steps to set up WebSocket communication in Node.js: 1. Install `ws` package for WebSocket server: 2. Set up WebSocket server in your Node.js app: 3. On the client side, create a WebSocket connection: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 404
  },
  {
    "question": "How to deploy a Node.js application on AWS EC2?",
    "label": "nodejs, aws, deployment",
    "language": "en",
    "context": "Deploying a Node.js application on AWS EC2 allows you to host your application in the cloud, providing scalability and reliability.",
    "answer": "Steps to deploy a Node.js application on AWS EC2: 1. Launch an EC2 instance on AWS and connect to it using SSH. 2. Install Node.js and NPM on your EC2 instance: 3. Upload your application code to the EC2 instance using `scp` or any other method. 4. Install dependencies for your application: 5. Start your Node.js application: 6. Optionally, use PM2 to manage your application as a background service: 📚 Reference: https://aws.amazon.com/getting-started/hands-on/deploy-nodejs-web-app/",
    "start_char": 0,
    "end_char": 495
  },
  {
    "question": "How to implement JWT refresh token mechanism in Node.js?",
    "label": "nodejs, jwt, refresh-token",
    "language": "en",
    "context": "A JWT refresh token mechanism is used to keep users logged in for longer periods by allowing them to refresh their authentication tokens without requiring re-login.",
    "answer": "Steps to implement JWT refresh token mechanism in Node.js: 1. Install `jsonwebtoken` package: 2. Create a function to generate a refresh token: 3. Create a route to issue a refresh token when the old token expires: 📚 Reference: https://jwt.io/introduction/",
    "start_char": 0,
    "end_char": 415
  },
  {
    "question": "How to use Redis as a caching layer in a Node.js application?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory data structure store that is commonly used for caching to improve performance in web applications.",
    "answer": "Steps to use Redis as a caching layer in Node.js: 1. Install `redis` package: 2. Set up Redis client in your Node.js app: 3. Use Redis to cache data: 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 360
  },
  {
    "question": "How to implement a simple REST API in Node.js using Express?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "A REST API allows different systems to communicate over HTTP using standard HTTP methods such as GET, POST, PUT, DELETE.",
    "answer": "Steps to implement a simple REST API in Node.js using Express: 1. Install `express` package: 2. Set up an Express server and define routes: 3. Use tools like Postman to test your API. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 331
  },
  {
    "question": "How to implement email sending in Node.js using Nodemailer?",
    "label": "nodejs, nodemailer, email",
    "language": "en",
    "context": "Nodemailer is a popular Node.js module that allows you to send emails from your application using various transport methods like SMTP.",
    "answer": "Steps to implement email sending in Node.js using Nodemailer: 1. Install `nodemailer` package: 2. Set up a Nodemailer transporter: 3. Send an email using the `sendMail` method: 📚 Reference: https://www.npmjs.com/package/nodemailer",
    "start_char": 0,
    "end_char": 377
  },
  {
    "question": "How to integrate Stripe for payments in Node.js?",
    "label": "nodejs, stripe, payments",
    "language": "en",
    "context": "Stripe is a payment gateway that allows businesses to accept payments online, and it can be integrated into a Node.js application to handle online transactions.",
    "answer": "Steps to integrate Stripe in Node.js: 1. Install `stripe` package: 2. Set up Stripe in your Node.js app: 3. Create a route to handle payments: 4. On the frontend, use Stripe.js to handle the payment: 📚 Reference: https://stripe.com/docs/payments/accept-a-payment",
    "start_char": 0,
    "end_char": 453
  },
  {
    "question": "How to schedule tasks in Node.js using node-cron?",
    "label": "nodejs, cron, task-scheduling",
    "language": "en",
    "context": "node-cron is a simple and powerful task scheduler for Node.js applications that allows you to run jobs at specified intervals.",
    "answer": "Steps to schedule tasks in Node.js using node-cron: 1. Install `node-cron` package: 2. Set up a scheduled task in your Node.js app: 3. You can also specify more complex schedules, such as running tasks daily or at specific times: 📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 333
  },
  {
    "question": "How to connect a MongoDB database to a Node.js application?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in JSON-like format, and it can be easily integrated with Node.js using the Mongoose library.",
    "answer": "Steps to connect MongoDB to a Node.js application: 1. Install `mongoose` package: 2. Connect to MongoDB using Mongoose: 3. Define a schema and model for your data: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 385
  },
  {
    "question": "How to set up authentication using Passport.js in a Node.js app?",
    "label": "nodejs, passport, authentication",
    "language": "en",
    "context": "Passport.js is an authentication middleware for Node.js that supports various authentication strategies such as local login, OAuth, and more.",
    "answer": "Steps to set up authentication using Passport.js in Node.js: 1. Install `passport`, `passport-local`, `express-session` packages: 2. Set up Passport.js middleware in your app: 3. Create login and logout routes: 📚 Reference: http://www.passportjs.org/docs/",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that allows you to deploy and manage applications easily. Node.js applications can be deployed on Heroku using Git.",
    "answer": "Steps to deploy a Node.js application on Heroku: 1. Install the Heroku CLI and log in to your Heroku account: 2. Create a `Procfile` in the root of your app: 3. Initialize a Git repository and commit your code: 4. Create a Heroku app and push your code to Heroku: 5. Visit your app URL: 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 402
  },
  {
    "question": "How to handle file uploads in a Node.js application?",
    "label": "nodejs, file-upload",
    "language": "en",
    "context": "Handling file uploads in Node.js can be done using middleware like `multer` to process incoming files in HTTP requests.",
    "answer": "Steps to handle file uploads in Node.js:\n\n1. Install `multer` package:\n```bash\nnpm install multer\n```\n\n2. Set up Multer middleware in your app:\n```javascript\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded successfully');\n});\n```\n\n3. Access the uploaded file:\n```javascript\nconsole.log(req.file); // Information about the uploaded file\n```\n\n📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 353
  },
  {
    "question": "How to create a REST API with MongoDB and Mongoose in Node.js?",
    "label": "nodejs, mongoose, mongodb, rest-api",
    "language": "en",
    "context": "MongoDB and Mongoose are commonly used for handling data in a REST API built with Node.js. Mongoose provides a simple interface for interacting with MongoDB.",
    "answer": "Steps to create a REST API with MongoDB and Mongoose in Node.js: 1. Install `express` and `mongoose`: 2. Set up your MongoDB connection with Mongoose: 3. Define a schema for your data: 4. Create API routes to interact with your data: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 472
  },
  {
    "question": "How to create a custom middleware in Express.js?",
    "label": "express, nodejs, middleware",
    "language": "en",
    "context": "Middleware in Express.js functions as a way to add custom logic to the request-response cycle, allowing for flexible application behavior.",
    "answer": "Steps to create custom middleware in Express.js: 1. Define your custom middleware function: 2. Use the middleware in your Express app: 3. You can also use the middleware for specific routes: 📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 374
  },
  {
    "question": "How to implement WebSockets in a Node.js app?",
    "label": "nodejs, websocket, real-time",
    "language": "en",
    "context": "WebSockets enable real-time, full-duplex communication between the server and clients, making them useful for chat applications, live updates, and more.",
    "answer": "Steps to implement WebSockets in a Node.js app: 1. Install `ws` package: 2. Set up WebSocket server in your app: 3. On the client-side, use the WebSocket API: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 397
  },
  {
    "question": "How to handle CORS issues in a Node.js application?",
    "label": "nodejs, cors, security",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) issues occur when your frontend tries to make a request to a server on a different domain, and the server isn't configured to allow it.",
    "answer": "Steps to handle CORS issues in Node.js: 1. Install `cors` middleware: 2. Use the CORS middleware in your app: 3. You can also specify allowed origins: 4. For more control, configure CORS for specific routes: 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 368
  },
  {
    "question": "How to implement rate limiting in a Node.js application?",
    "label": "nodejs, rate-limiting, security",
    "language": "en",
    "context": "Rate limiting helps prevent abuse of an API by limiting the number of requests a client can make in a given time frame.",
    "answer": "Steps to implement rate limiting in Node.js: 1. Install `express-rate-limit` package: 2. Set up rate limiting middleware in your app: 3. You can also apply rate limiting to specific routes: 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 352
  },
  {
    "question": "How to validate incoming data in a Node.js application?",
    "label": "nodejs, validation, security",
    "language": "en",
    "context": "Data validation ensures that the input received from users or other sources is clean and safe to use in your application.",
    "answer": "Steps to validate incoming data in Node.js: 1. Install `express-validator` package: 2. Use validation middleware in your routes: 📚 Reference: https://www.npmjs.com/package/express-validator",
    "start_char": 0,
    "end_char": 366
  },
  {
    "question": "How to handle file uploads with Multer and store files in AWS S3 in Node.js?",
    "label": "nodejs, multer, aws, file-upload",
    "language": "en",
    "context": "Using Multer to handle file uploads and AWS S3 to store the uploaded files provides a reliable solution for managing files in the cloud.",
    "answer": "Steps to handle file uploads with Multer and store in AWS S3 in Node.js: 1. Install `multer`, `aws-sdk`, and `multer-s3` packages: 2. Set up AWS S3 configuration: 3. Set up Multer with S3 storage: 📚 Reference: https://www.npmjs.com/package/multer-s3",
    "start_char": 0,
    "end_char": 459
  },
  {
    "question": "How to implement password hashing in Node.js?",
    "label": "nodejs, password-hashing, security",
    "language": "en",
    "context": "Password hashing ensures that passwords are stored securely in your database by converting them into a fixed-length string using a cryptographic algorithm.",
    "answer": "Steps to implement password hashing in Node.js: 1. Install `bcryptjs` package: 2. Hash the password before saving it in the database: 3. Compare the entered password with the stored hash: 📚 Reference: https://www.npmjs.com/package/bcryptjs",
    "start_char": 0,
    "end_char": 334
  },
  {
    "question": "How to create a custom error handler in Express.js?",
    "label": "express, nodejs, error-handling",
    "language": "en",
    "context": "Custom error handling allows you to define your own logic for handling errors in Express.js applications, improving debugging and user experience.",
    "answer": "Steps to create a custom error handler in Express.js: 1. Define your error-handling middleware: 2. Use the error handler middleware in your app: 3. You can also create specific error handlers for different error types, such as validation errors: 📚 Reference: https://expressjs.com/en/guide/using-middleware.html#custom-error-handling",
    "start_char": 0,
    "end_char": 372
  },
  {
    "question": "How to implement JWT authentication in a Node.js application?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are used for securely transmitting information between parties, often used for authentication in Node.js applications.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install `jsonwebtoken` and `express-jwt` packages: 2. Create and sign a JWT token on login: 3. Protect routes by verifying the JWT token: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 383
  },
  {
    "question": "How to implement OAuth2 authentication in a Node.js app?",
    "label": "nodejs, oauth2, authentication",
    "language": "en",
    "context": "OAuth2 is a protocol for authorization, often used to give third-party applications access to a user's data without exposing their credentials.",
    "answer": "Steps to implement OAuth2 authentication in Node.js: 1. Install `passport`, `passport-oauth2`, and `express-session` packages: 2. Set up the OAuth2 strategy in Passport.js: 3. Use Passport.js for authentication: 📚 Reference: https://www.npmjs.com/package/passport-oauth2",
    "start_char": 0,
    "end_char": 423
  },
  {
    "question": "How to implement file compression in Node.js?",
    "label": "nodejs, file-compression, utility",
    "language": "en",
    "context": "File compression reduces the file size, making it easier to store or transfer, and is often used for optimizing performance in web applications.",
    "answer": "Steps to implement file compression in Node.js: 1. Install `zlib` (built-in in Node.js) and `fs` modules: 2. Compress a file: 3. Decompress a file: 📚 Reference: https://nodejs.org/api/zlib.html",
    "start_char": 0,
    "end_char": 335
  },
  {
    "question": "How to handle session management in Express.js?",
    "label": "express, session, security",
    "language": "en",
    "context": "Session management helps track user state and data across multiple requests, commonly used for login states, shopping carts, etc.",
    "answer": "Steps to handle session management in Express.js: 1. Install `express-session` package: 2. Set up session middleware in your app: 3. Use the session data in your routes: 📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 368
  },
  {
    "question": "How to set up MongoDB with Mongoose in a Node.js application?",
    "label": "nodejs, mongoose, mongodb",
    "language": "en",
    "context": "Mongoose provides a straightforward way to model and interact with MongoDB databases in Node.js applications.",
    "answer": "Steps to set up MongoDB with Mongoose in Node.js: 1. Install `mongoose` package: 2. Connect to MongoDB using Mongoose: 3. Define a model using Mongoose: 4. Perform database operations: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 512
  },
  {
    "question": "How to use environment variables in Node.js?",
    "label": "nodejs, environment-variables, configuration",
    "language": "en",
    "context": "Environment variables help store configuration information and sensitive data outside of your code, making it easier to manage and more secure.",
    "answer": "Steps to use environment variables in Node.js: 1. Install `dotenv` package to load environment variables from `.env` file: 2. Create a `.env` file to store your variables: 3. Load the environment variables in your app: 4. Use the environment variables in your application logic: 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 367
  },
  {
    "question": "How to configure CORS (Cross-Origin Resource Sharing) in a Node.js app?",
    "label": "nodejs, cors, security",
    "language": "en",
    "context": "CORS is a mechanism that allows web applications to make requests to servers in different domains, improving security by controlling which domains are allowed to access resources.",
    "answer": "Steps to configure CORS in a Node.js app:\n\n1. Install `cors` package:\n```bash\nnpm install cors\n```\n\n2. Set up CORS middleware in your Express app:\n```javascript\nconst cors = require('cors');\n\nconst options = {\n  origin: 'http://example.com',\n  methods: ['GET', 'POST'],\n  allowedHeaders: ['Content-Type', 'Authorization']\n};\n\napp.use(cors(options));\n```\n\n3. You can also allow all origins (not recommended for production):\n```javascript\napp.use(cors());\n```\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 348
  },
  {
    "question": "How to create a RESTful API in Node.js using Express?",
    "label": "nodejs, express, rest-api",
    "language": "en",
    "context": "A RESTful API is an architectural style for designing networked applications that use stateless communication and standard HTTP methods.",
    "answer": "Steps to create a RESTful API in Node.js using Express: 1. Install `express` package: 2. Set up your Express app: 3. Define your API routes: 4. Start the server: 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 375
  },
  {
    "question": "How to use async/await in Node.js for asynchronous programming?",
    "label": "nodejs, async, await",
    "language": "en",
    "context": "Async/await allows you to write asynchronous code that is easier to read and maintain by avoiding callback hell.",
    "answer": "Steps to use async/await in Node.js: 1. Use `async` keyword to define an asynchronous function: 2. Use `await` inside async functions to wait for promises to resolve: 3. Handle errors using `try/catch`: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 376
  },
  {
    "question": "How to set up a logger in a Node.js application?",
    "label": "nodejs, logging, utility",
    "language": "en",
    "context": "Logging helps you track the behavior of your application, making it easier to debug and monitor its performance.",
    "answer": "Steps to set up a logger in Node.js: 1. Install `winston` logging library: 2. Configure the logger: 3. Use the logger in your application: 📚 Reference: https://www.npmjs.com/package/winston",
    "start_char": 0,
    "end_char": 336
  },
  {
    "question": "How to implement pagination in a Node.js API?",
    "label": "nodejs, pagination, api",
    "language": "en",
    "context": "Pagination allows you to split large datasets into smaller, manageable chunks, improving performance and user experience.",
    "answer": "Steps to implement pagination in a Node.js API: 1. Define query parameters for pagination (page number and page size): 2. Use `skip` and `limit` to paginate the data from the database. 📚 Reference: https://mongoosejs.com/docs/api/query.html#query_Query-skip",
    "start_char": 0,
    "end_char": 376
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "nodejs, deployment, heroku",
    "language": "en",
    "context": "Heroku is a platform-as-a-service (PaaS) that allows you to deploy and manage applications with ease.",
    "answer": "Steps to deploy a Node.js app on Heroku: 1. Install the Heroku CLI: 2. Create a new Heroku app: 3. Add your app to Git and push to Heroku: 4. Set environment variables (e.g., for MongoDB connection): 5. Open your app on Heroku: 📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 449
  },
  {
    "question": "How to test a Node.js API using Mocha and Chai?",
    "label": "nodejs, testing, mocha, chai",
    "language": "en",
    "context": "Mocha and Chai are testing frameworks that allow you to write unit and integration tests for your Node.js applications.",
    "answer": "Steps to test a Node.js API using Mocha and Chai: 1. Install Mocha, Chai, and Chai HTTP: 2. Write your test cases: 3. Run the tests: 📚 Reference: https://www.chaijs.com/",
    "start_char": 0,
    "end_char": 443
  },
  {
    "question": "How to secure a Node.js application using Helmet?",
    "label": "nodejs, security, helmet",
    "language": "en",
    "context": "Helmet helps secure your Node.js application by setting various HTTP headers that protect it from well-known vulnerabilities.",
    "answer": "Steps to secure a Node.js application using Helmet:\n\n1. Install the `helmet` package:\n```bash\nnpm install helmet\n```\n\n2. Use Helmet middleware in your Express app:\n```javascript\nconst helmet = require('helmet');\n\napp.use(helmet());\n```\n\n3. Helmet provides various protections like preventing clickjacking, cross-site scripting (XSS), and others by default.\n\n4. You can also customize Helmet’s settings to suit your app's security needs.\n\n📚 Reference: https://helmetjs.github.io/",
    "start_char": 0,
    "end_char": 287
  },
  {
    "question": "How to handle errors in Node.js using middleware?",
    "label": "nodejs, error-handling, middleware",
    "language": "en",
    "context": "Error handling middleware in Node.js helps manage errors in a centralized way and provides a standard response to clients.",
    "answer": "Steps to handle errors in Node.js using middleware: 1. Define an error handling middleware: 2. In your routes, pass errors to the middleware using `next()`: 3. The error handler will capture and respond to the error. 📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 318
  },
  {
    "question": "How to configure a Node.js application for production?",
    "label": "nodejs, production, configuration",
    "language": "en",
    "context": "Configuring your Node.js application for production ensures better performance, security, and scalability in a live environment.",
    "answer": "Steps to configure a Node.js application for production:\n\n1. Set `NODE_ENV` environment variable to 'production':\n```bash\nexport NODE_ENV=production\n```\n\n2. Use a process manager like `PM2` to manage your app:\n```bash\nnpm install pm2 -g\npm2 start app.js\n```\n\n3. Minimize code and assets for faster loading.\n\n4. Use HTTPS instead of HTTP for secure connections.\n\n5. Set up proper logging and monitoring to track errors and performance.\n\n📚 Reference: https://pm2.keymetrics.io/",
    "start_char": 0,
    "end_char": 367
  },
  {
    "question": "How to implement user authentication in Node.js using Passport.js?",
    "label": "nodejs, passport, authentication",
    "language": "en",
    "context": "Passport.js is a flexible and modular authentication middleware for Node.js, making it easy to implement user authentication in your app.",
    "answer": "Steps to implement user authentication in Node.js using Passport.js: 1. Install Passport.js and its local strategy: 2. Set up Passport.js in your Express app: 3. Initialize Passport and use it as middleware: 4. Create login and registration routes to handle user authentication. 📚 Reference: http://www.passportjs.org/",
    "start_char": 0,
    "end_char": 449
  },
  {
    "question": "How to implement file upload in a Node.js application?",
    "label": "nodejs, file-upload, multer",
    "language": "en",
    "context": "File uploads are essential for applications that need to handle media, documents, or other large files from users.",
    "answer": "Steps to implement file upload in Node.js: 1. Install `multer` package for handling multipart form-data: 2. Set up file upload middleware with Multer: 3. Use the middleware in your route to handle file uploads: 4. Make sure to create an 'uploads' directory for storing uploaded files. 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 384
  },
  {
    "question": "How to use Redis for caching in a Node.js application?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory key-value store that can be used to cache data, improving the performance of your Node.js application.",
    "answer": "Steps to use Redis for caching in Node.js: 1. Install Redis client for Node.js: 2. Connect to Redis server: 3. Cache data by storing it in Redis: 4. Retrieve cached data: 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 349
  },
  {
    "question": "How to create a CRUD API using Node.js and MongoDB?",
    "label": "nodejs, mongodb, crud",
    "language": "en",
    "context": "A CRUD (Create, Read, Update, Delete) API allows you to interact with a database to perform basic operations.",
    "answer": "Steps to create a CRUD API using Node.js and MongoDB: 1. Install necessary packages: 2. Set up the Express app and MongoDB connection: 3. Define a model: 4. Implement CRUD routes: 📚 Reference: https://expressjs.com/",
    "start_char": 0,
    "end_char": 523
  },
  {
    "question": "How to use the `map()` function in JavaScript?",
    "label": "javascript, array, map",
    "language": "en",
    "context": "The `map()` function allows you to create a new array by applying a given function to each element in the original array.",
    "answer": "Steps to use the `map()` function in JavaScript:\n\n1. Define an array:\n```javascript\nconst numbers = [1, 2, 3, 4];\n```\n\n2. Call the `map()` function on the array:\n```javascript\nconst doubledNumbers = numbers.map(num => num * 2);\n```\n\n3. The `map()` function returns a new array with the results:\n```javascript\nconsole.log(doubledNumbers); // [2, 4, 6, 8]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    "start_char": 0,
    "end_char": 305
  },
  {
    "question": "How to implement pagination in a Node.js API?",
    "label": "nodejs, pagination, api",
    "language": "en",
    "context": "Pagination helps break down large data sets into smaller, more manageable chunks, improving performance and usability.",
    "answer": "Steps to implement pagination in a Node.js API: 1. Accept page and limit parameters in the query string: 2. Use `skip()` and `limit()` methods in MongoDB to fetch paginated data: 3. Send the paginated data to the client. 📚 Reference: https://www.mongodb.com/docs/manual/reference/method/cursor.skip/",
    "start_char": 0,
    "end_char": 384
  },
  {
    "question": "How to handle cross-origin requests in a Node.js application?",
    "label": "nodejs, cors, cross-origin",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) allows servers to specify which domains are permitted to access resources on the server.",
    "answer": "Steps to handle cross-origin requests in Node.js:\n\n1. Install the `cors` package:\n```bash\nnpm install cors\n```\n\n2. Use the `cors` middleware in your app:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. Optionally, configure CORS to restrict access to specific domains:\n```javascript\napp.use(cors({ origin: 'https://example.com' }));\n```\n\n4. This will allow cross-origin requests from the specified domains.\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 366
  },
  {
    "question": "How to optimize performance in a Node.js application?",
    "label": "nodejs, performance, optimization",
    "language": "en",
    "context": "Optimizing the performance of a Node.js application can reduce response times and resource usage, improving scalability and user experience.",
    "answer": "Steps to optimize performance in a Node.js application: 1. Use asynchronous I/O operations to prevent blocking the event loop. 2. Optimize database queries and use caching mechanisms like Redis for frequently accessed data. 3. Minimize the use of synchronous functions in critical paths. 4. Enable compression to reduce the size of HTTP responses. 5. Use a reverse proxy like Nginx to handle static content. 6. Monitor and profile performance with tools like `clinic.js` or `node-inspect`. 📚 Reference: https:...",
    "start_char": 0,
    "end_char": 398
  },
  {
    "question": "How to handle environment variables in a Node.js application?",
    "label": "nodejs, environment-variables, configuration",
    "language": "en",
    "context": "Environment variables help configure a Node.js application for different environments like development, testing, and production.",
    "answer": "Steps to handle environment variables in Node.js: 1. Install `dotenv` package to load environment variables from a `.env` file: 2. Create a `.env` file in the root of your project: 3. Load the environment variables at the beginning of your app: 4. Access environment variables using `process.env`: 📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 363
  },
  {
    "question": "How to deploy a Node.js application on Heroku?",
    "label": "nodejs, deployment, heroku",
    "language": "en",
    "context": "Heroku is a popular platform-as-a-service (PaaS) for deploying Node.js applications easily to the cloud.",
    "answer": "Steps to deploy a Node.js application on Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Initialize a git repository and commit your code:\n```bash\ngit init\ngit add .\ngit commit -m 'Initial commit'\n```\n\n4. Create a Heroku app:\n```bash\nheroku create\n```\n\n5. Push your code to Heroku:\n```bash\ngit push heroku master\n```\n\n6. Access the deployed app at the URL provided by Heroku.\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 389
  },
  {
    "question": "How to implement rate limiting in a Node.js application?",
    "label": "nodejs, rate-limiting, security",
    "language": "en",
    "context": "Rate limiting is essential for protecting your API from abuse and preventing excessive resource usage by clients.",
    "answer": "Steps to implement rate limiting in a Node.js application: 1. Install the `express-rate-limit` package: 2. Set up rate limiting middleware in your Express app: 3. The rate limiter will now restrict the number of requests a client can make within the specified time window. 📚 Reference: https://www.npmjs.com/package/express-rate-limit",
    "start_char": 0,
    "end_char": 348
  },
  {
    "question": "How to manage sessions in a Node.js application?",
    "label": "nodejs, session-management, express",
    "language": "en",
    "context": "Session management allows you to track and manage user states in your application.",
    "answer": "Steps to manage sessions in Node.js: 1. Install the `express-session` package: 2. Set up session middleware in your Express app: 3. Use the session object to store user data across requests: 4. Destroy the session when the user logs out: 📚 Reference: https://www.npmjs.com/package/express-session",
    "start_char": 0,
    "end_char": 372
  },
  {
    "question": "How to work with MongoDB in Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that stores data in JSON-like documents. It's easy to work with in Node.js using the Mongoose library.",
    "answer": "Steps to work with MongoDB in Node.js: 1. Install Mongoose to interact with MongoDB: 2. Connect to MongoDB database: 3. Define a schema for your data: 4. Perform CRUD operations on your database: 📚 Reference: https://mongoosejs.com/",
    "start_char": 0,
    "end_char": 396
  },
  {
    "question": "How to create an Express middleware?",
    "label": "nodejs, express, middleware",
    "language": "en",
    "context": "Middleware functions in Express are functions that have access to the request, response, and the next middleware function in the application’s request-response cycle.",
    "answer": "Steps to create an Express middleware: 1. Define a middleware function: 2. Use the middleware in your Express app: 3. You can also apply middleware to specific routes: 4. Middleware can be used for tasks like logging, authentication, or modifying the request/response. 📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 363
  },
  {
    "question": "How to use WebSockets in a Node.js application?",
    "label": "nodejs, websockets, real-time",
    "language": "en",
    "context": "WebSockets provide full-duplex communication channels over a single TCP connection, which is useful for real-time applications like chat apps.",
    "answer": "Steps to use WebSockets in a Node.js application: 1. Install the `ws` package to work with WebSockets: 2. Create a WebSocket server: 3. Connect to the WebSocket server from the client using the WebSocket API. 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "How to implement authentication in a Node.js API?",
    "label": "nodejs, authentication, api",
    "language": "en",
    "context": "Authentication is essential to secure your API and restrict access to authenticated users.",
    "answer": "Steps to implement authentication in a Node.js API: 1. Install `passport` and `passport-local` for local authentication: 2. Configure Passport in your app: 3. Implement login and signup routes using Passport. 4. Secure routes by checking if the user is authenticated using `passport.authenticate('local')`. 📚 Reference: https://www.passportjs.org/",
    "start_char": 0,
    "end_char": 377
  },
  {
    "question": "How to handle file uploads in a Node.js application?",
    "label": "nodejs, file-upload, express",
    "language": "en",
    "context": "Handling file uploads is a common requirement in web applications, such as uploading images, documents, or other files.",
    "answer": "Steps to handle file uploads in Node.js using `multer` middleware: 1. Install the `multer` package: 2. Set up `multer` to store files on the server: 3. Create an endpoint to handle the file upload: 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 384
  },
  {
    "question": "How to set up a MongoDB Atlas cluster and connect it to a Node.js application?",
    "label": "nodejs, mongodb, atlas",
    "language": "en",
    "context": "MongoDB Atlas is a cloud-based database service that allows you to host and manage MongoDB databases easily.",
    "answer": "Steps to set up MongoDB Atlas and connect it to Node.js: 1. Create an account and set up a cluster on MongoDB Atlas at https://cloud.mongodb.com. 2. In the Atlas dashboard, create a new database and a new user with appropriate permissions. 3. Get the connection string from the Atlas dashboard: 4. Install Mongoose in your Node.js app: 5. Connect to the MongoDB Atlas cluster: 📚 Reference: https://www.mongodb.com/cloud/atlas",
    "start_char": 0,
    "end_char": 393
  },
  {
    "question": "How to implement JWT authentication in a Node.js application?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Token) is a popular method for securing APIs and implementing stateless authentication.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install `jsonwebtoken` package: 2. Create a function to generate a JWT token after successful login: 3. In your login route, generate and send the token: 4. Use middleware to protect routes: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 458
  },
  {
    "question": "How to handle CORS in a Node.js application?",
    "label": "nodejs, cors, security",
    "language": "en",
    "context": "CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources to be requested from another domain.",
    "answer": "Steps to handle CORS in a Node.js application:\n\n1. Install `cors` package:\n```bash\nnpm install cors\n```\n\n2. Import and use the CORS middleware in your Express app:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. You can also configure CORS to allow specific origins:\n```javascript\napp.use(cors({ origin: 'https://example.com' }));\n```\n\n4. CORS can be further configured to restrict methods, headers, etc., for added security.\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 360
  },
  {
    "question": "How to implement logging in a Node.js application?",
    "label": "nodejs, logging, monitoring",
    "language": "en",
    "context": "Logging is crucial for tracking application behavior, debugging, and monitoring performance.",
    "answer": "Steps to implement logging in a Node.js application: 1. Install `winston` or another logging library: 2. Create a logger using the `winston` library: 3. Use the logger in your application: 📚 Reference: https://www.npmjs.com/package/winston",
    "start_char": 0,
    "end_char": 363
  },
  {
    "question": "How to create a RESTful API with Node.js and Express?",
    "label": "nodejs, express, api",
    "language": "en",
    "context": "RESTful APIs are widely used for building scalable, flexible web services. Express makes it easy to set up RESTful endpoints.",
    "answer": "Steps to create a RESTful API with Node.js and Express: 1. Initialize a new Node.js project and install Express: 2. Create an Express app and define routes: 3. Test your API endpoints using Postman or cURL. 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 393
  },
  {
    "question": "How to implement password hashing in Node.js?",
    "label": "nodejs, password-hashing, security",
    "language": "en",
    "context": "Password hashing is crucial to secure user credentials and prevent storing plain-text passwords.",
    "answer": "Steps to implement password hashing in Node.js: 1. Install `bcrypt` package: 2. Hash the password before storing it in the database: 3. Compare the provided password with the stored hashed password: 📚 Reference: https://www.npmjs.com/package/bcryptjs",
    "start_char": 0,
    "end_char": 388
  },
  {
    "question": "How to implement file system operations in Node.js?",
    "label": "nodejs, file-system",
    "language": "en",
    "context": "Node.js provides a powerful file system module to interact with files on the server.",
    "answer": "Steps to implement file system operations in Node.js: 1. Import the `fs` (File System) module: 2. Read a file: 3. Write to a file: 4. Append data to a file: 📚 Reference: https://nodejs.org/api/fs.html",
    "start_char": 0,
    "end_char": 366
  },
  {
    "question": "How to handle errors in Node.js applications?",
    "label": "nodejs, error-handling",
    "language": "en",
    "context": "Error handling is essential for building robust Node.js applications and improving their reliability.",
    "answer": "Steps to handle errors in Node.js: 1. Use try-catch blocks for synchronous code: 2. Handle asynchronous errors with `callback` pattern or Promises: 3. Handle global unhandled errors by listening to the `uncaughtException` event: 📚 Reference: https://nodejs.org/api/process.html#process_event_uncaughtexception",
    "start_char": 0,
    "end_char": 426
  },
  {
    "question": "How to set up a cron job in a Node.js application?",
    "label": "nodejs, cron-job, scheduling",
    "language": "en",
    "context": "Cron jobs are used to schedule tasks in a Node.js application at specific intervals.",
    "answer": "Steps to set up a cron job in a Node.js application:\n\n1. Install the `node-cron` package:\n```bash\nnpm install node-cron\n```\n\n2. Schedule a cron job:\n```javascript\nconst cron = require('node-cron');\n\ncron.schedule('* * * * *', () => {\n  console.log('Task running every minute');\n});\n```\n\n3. You can customize the cron schedule to run tasks at specific times.\n\n📚 Reference: https://www.npmjs.com/package/node-cron",
    "start_char": 0,
    "end_char": 373
  },
  {
    "question": "How to implement pagination in a Node.js API?",
    "label": "nodejs, pagination, api",
    "language": "en",
    "context": "Pagination helps limit the number of items returned in a response, making large datasets more manageable and efficient.",
    "answer": "Steps to implement pagination in a Node.js API: 1. Define query parameters for pagination (e.g., `page` and `limit`): 2. Use `skip` and `limit` for pagination in the database query: 3. Include total count of items to calculate total pages. 📚 Reference: https://mongoosejs.com/docs/api/query.html#query_Query-skip",
    "start_char": 0,
    "end_char": 359
  },
  {
    "question": "How to validate user input in a Node.js application?",
    "label": "nodejs, validation, user-input",
    "language": "en",
    "context": "Validating user input ensures that only correct data is processed and prevents malicious data from causing issues.",
    "answer": "Steps to validate user input in Node.js: 1. Install `express-validator` package: 2. Use `check()` or `body()` to validate input: 📚 Reference: https://express-validator.github.io/docs/",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "How to create a file upload feature in React?",
    "label": "react, file-upload, frontend",
    "language": "en",
    "context": "Allowing users to upload files through a React frontend is common for features like image uploads or document submission.",
    "answer": "Steps to create a file upload feature in React: 1. Create a file input element in your component: 2. Handle file input change and store the file: 3. Send the file to the server using a POST request: 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 387
  },
  {
    "question": "How to use React hooks for state management?",
    "label": "react, hooks, state-management",
    "language": "en",
    "context": "React hooks allow you to manage state, side effects, and other logic in functional components.",
    "answer": "Steps to use React hooks for state management:\n\n1. Import `useState` hook to manage state:\n```jsx\nconst [count, setCount] = useState(0);\n```\n\n2. Update state using the setter function:\n```jsx\nsetCount(count + 1);\n```\n\n3. Use `useEffect` to handle side effects like fetching data or manipulating the DOM:\n```jsx\nuseEffect(() => {\n  console.log('Component mounted');\n}, []);\n```\n\n📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 374
  },
  {
    "question": "How to connect a React app to a RESTful API?",
    "label": "react, api, fetch",
    "language": "en",
    "context": "Connecting a React app to an API allows it to retrieve data and interact with backend services.",
    "answer": "Steps to connect a React app to a RESTful API:\n\n1. Use `fetch()` or `axios` to make API requests:\n```jsx\nconst fetchData = async () => {\n  const response = await fetch('/api/data');\n  const data = await response.json();\n  setData(data);\n};\n```\n\n2. Call `fetchData` inside `useEffect` to fetch data when the component mounts:\n```jsx\nuseEffect(() => {\n  fetchData();\n}, []);\n```\n\n📚 Reference: https://reactjs.org/docs/faq-ajax.html",
    "start_char": 0,
    "end_char": 364
  },
  {
    "question": "How to deploy a Node.js app to Heroku?",
    "label": "nodejs, heroku, deployment",
    "language": "en",
    "context": "Heroku is a cloud platform that makes deploying applications easy with a few simple commands.",
    "answer": "Steps to deploy a Node.js app to Heroku:\n\n1. Install the Heroku CLI:\n```bash\nnpm install -g heroku\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Create a new Heroku app:\n```bash\nheroku create\n```\n\n4. Deploy your app using Git:\n```bash\ngit push heroku master\n```\n\n5. Open the app in your browser:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 359
  },
  {
    "question": "How to configure environment variables in Node.js?",
    "label": "nodejs, environment, config",
    "language": "en",
    "context": "Environment variables are used to store configuration values that shouldn't be hardcoded in your application.",
    "answer": "Steps to configure environment variables in Node.js:\n\n1. Install `dotenv` package:\n```bash\nnpm install dotenv\n```\n\n2. Create a `.env` file in the root of your project and define variables:\n```\nDB_HOST=localhost\nDB_USER=user\nDB_PASS=password\n```\n\n3. Load the environment variables in your application:\n```javascript\nrequire('dotenv').config();\n\nconst dbHost = process.env.DB_HOST;\n```\n\n📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 367
  },
  {
    "question": "How to set up a WebSocket connection in a Node.js application?",
    "label": "nodejs, websocket, real-time",
    "language": "en",
    "context": "WebSockets allow you to establish a persistent connection between the client and server for real-time communication.",
    "answer": "Steps to set up a WebSocket connection in Node.js: 1. Install `ws` package: 2. Create a WebSocket server: 3. Connect to the WebSocket server from the client: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 374
  },
  {
    "question": "How to use React Context for global state management?",
    "label": "react, context, state-management",
    "language": "en",
    "context": "React Context allows you to pass data through the component tree without manually passing props at every level.",
    "answer": "Steps to use React Context for global state management: 1. Create a context with `React.createContext()`: 2. Create a provider component that holds the global state: 3. Use the context in any child component with `useContext()`: 📚 Reference: https://reactjs.org/docs/context.html",
    "start_char": 0,
    "end_char": 458
  },
  {
    "question": "How to handle errors in a Node.js API?",
    "label": "nodejs, error-handling, api",
    "language": "en",
    "context": "Error handling is crucial in any API to ensure smooth operation and provide meaningful responses to the client.",
    "answer": "Steps to handle errors in a Node.js API:\n\n1. Create an error-handling middleware:\n```javascript\napp.use((err, req, res, next) => {\n  res.status(500).json({ message: err.message });\n});\n```\n\n2. Handle errors in route handlers:\n```javascript\napp.get('/data', (req, res, next) => {\n  try {\n    const data = getData();\n    res.json(data);\n  } catch (err) {\n    next(err);\n  }\n});\n```\n\n3. Log errors for debugging purposes.\n\n📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "How to use MongoDB with Mongoose in a Node.js application?",
    "label": "nodejs, mongoose, mongodb",
    "language": "en",
    "context": "MongoDB is a NoSQL database, and Mongoose is an ODM (Object Data Modeling) library that makes it easier to interact with MongoDB in Node.js.",
    "answer": "Steps to use MongoDB with Mongoose in Node.js: 1. Install Mongoose package: 2. Connect to the MongoDB database: 3. Define a Mongoose model: 4. Use the model to interact with the database: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 398
  },
  {
    "question": "How to implement JWT authentication in a Node.js API?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) are a secure way to transmit information between parties as a JSON object, commonly used for authentication.",
    "answer": "Steps to implement JWT authentication in a Node.js API: 1. Install `jsonwebtoken` and `bcryptjs` for JWT and password hashing: 2. Create a login route to authenticate and generate a token: 3. Protect routes with a JWT middleware: 📚 Reference: https://jwt.io/",
    "start_char": 0,
    "end_char": 514
  },
  {
    "question": "How to implement role-based access control in Express?",
    "label": "express, access-control, roles",
    "language": "en",
    "context": "Role-based access control (RBAC) helps manage who can access specific parts of an application based on their role.",
    "answer": "Steps to implement RBAC in Express: 1. Define roles and permissions: 2. Create a middleware to check the user's role and permissions: 3. Use the middleware in routes: 📚 Reference: https://en.wikipedia.org/wiki/Role-based_access_control",
    "start_char": 0,
    "end_char": 439
  },
  {
    "question": "How to create a RESTful API with Express?",
    "label": "express, api, rest",
    "language": "en",
    "context": "A RESTful API follows the principles of Representational State Transfer and allows communication between client and server.",
    "answer": "Steps to create a RESTful API with Express: 1. Install Express package: 2. Create an Express application: 3. Define RESTful routes (GET, POST, PUT, DELETE): 4. Start the server: 📚 Reference: https://expressjs.com/en/starter/basic-routing.html",
    "start_char": 0,
    "end_char": 505
  },
  {
    "question": "How to use React Router for navigation in a React app?",
    "label": "react, router, navigation",
    "language": "en",
    "context": "React Router allows for dynamic routing and enables navigation between different views or pages in a React app.",
    "answer": "Steps to use React Router for navigation in a React app: 1. Install `react-router-dom` package: 2. Define routes in your app: 3. Use `Link` or `NavLink` to navigate between routes: 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 403
  },
  {
    "question": "How to use async/await in JavaScript?",
    "label": "javascript, async, await",
    "language": "en",
    "context": "Async/await provides a more readable and synchronous way of handling asynchronous code in JavaScript.",
    "answer": "Steps to use async/await in JavaScript: 1. Use the `async` keyword before a function to make it asynchronous: 2. Use `await` inside an async function to wait for a promise to resolve: 3. Handle errors with try/catch: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 413
  },
  {
    "question": "How to handle errors in a Node.js application?",
    "label": "nodejs, error-handling",
    "language": "en",
    "context": "Error handling in Node.js ensures that your application can gracefully handle and recover from unexpected issues.",
    "answer": "Steps to handle errors in Node.js: 1. Use `try...catch` to handle synchronous errors: 2. For asynchronous code, use `try...catch` inside `async` functions: 3. Use centralized error handling middleware in Express: 📚 Reference: https://nodejs.org/en/docs/guides/error-handling/",
    "start_char": 0,
    "end_char": 688
  },
  {
    "question": "How to set up a basic Express server?",
    "label": "express, server, nodejs",
    "language": "en",
    "context": "Express is a minimal and flexible Node.js web application framework that simplifies the creation of robust APIs and servers.",
    "answer": "Steps to set up a basic Express server: 1. Install Express: 2. Import Express and create an app instance: 3. Set up a route to handle requests: 4. Start the server on a specific port: 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 626
  },
  {
    "question": "How to integrate a MongoDB database with a Node.js application?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database, and Node.js can easily interact with it using the `mongoose` library to perform database operations.",
    "answer": "Steps to integrate MongoDB with Node.js: 1. Install MongoDB and Mongoose: 2. Connect to the MongoDB database using Mongoose: 3. Define a schema and model: 4. Perform CRUD operations (Create, Read, Update, Delete): 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 856
  },
  {
    "question": "How to deploy a React app to GitHub Pages?",
    "label": "react, deployment, github-pages",
    "language": "en",
    "context": "GitHub Pages is a simple way to deploy your static React application to the web.",
    "answer": "Steps to deploy a React app to GitHub Pages:\n\n1. Install `gh-pages` package:\n```bash\nnpm install gh-pages --save-dev\n```\n\n2. Add a `homepage` field in your `package.json`:\n```json\n\"homepage\": \"https://username.github.io/repository-name\"\n```\n\n3. Modify the `scripts` in `package.json` for deployment:\n```json\n\"scripts\": {\n  \"predeploy\": \"npm run build\",\n  \"deploy\": \"gh-pages -d build\"\n}\n```\n\n4. Deploy the app:\n```bash\nnpm run deploy\n```\n\n📚 Reference: https://create-react-app.dev/docs/deployment/#github-pages",
    "start_char": 0,
    "end_char": 721
  },
  {
    "question": "How to enable CORS in a Node.js application?",
    "label": "nodejs, cors, security",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) is a security feature that allows or restricts resources to be requested from another domain.",
    "answer": "Steps to enable CORS in a Node.js app:\n\n1. Install `cors` package:\n```bash\nnpm install cors\n```\n\n2. Use `cors` middleware in your application:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. You can also configure CORS options to allow specific origins:\n```javascript\nconst corsOptions = {\n  origin: 'http://example.com',\n  methods: ['GET', 'POST']\n};\napp.use(cors(corsOptions));\n```\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 509
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT (JSON Web Tokens) is commonly used for authenticating users in a secure manner in web applications.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install `jsonwebtoken` package: 2. Generate a JWT token upon successful login: 3. Verify the JWT token for subsequent requests: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 743
  },
  {
    "question": "How to send an email from a Node.js application?",
    "label": "nodejs, email, nodemailer",
    "language": "en",
    "context": "Sending emails from a Node.js application is often required for notifications, confirmations, etc.",
    "answer": "Steps to send an email in Node.js using `nodemailer`: 1. Install `nodemailer` package: 2. Create a transporter with SMTP settings: 3. Define email options and send email: 📚 Reference: https://www.npmjs.com/package/nodemailer",
    "start_char": 0,
    "end_char": 879
  },
  {
    "question": "How to handle form submissions in React?",
    "label": "react, forms, submission",
    "language": "en",
    "context": "Handling form submissions is crucial for capturing user input and processing it in React applications.",
    "answer": "Steps to handle form submissions in React: 1. Create a form element and use state to track input values: 2. Handle form submission by preventing default behavior and sending data to the backend: 3. Submit the form on a button click: 📚 Reference: https://reactjs.org/docs/forms.html",
    "start_char": 0,
    "end_char": 715
  },
  {
    "question": "How to handle state management in a React application?",
    "label": "react, state-management, hooks",
    "language": "en",
    "context": "State management in React is essential to manage and update the application's state efficiently.",
    "answer": "Steps for state management in React using hooks:\n\n1. Use `useState` to create state variables and update them:\n```jsx\nconst [count, setCount] = useState(0);\nconst increment = () => setCount(count + 1);\n```\n\n2. Use `useEffect` to perform side effects when state changes:\n```jsx\nuseEffect(() => {\n  console.log('Count updated:', count);\n}, [count]);\n```\n\n3. For global state management, consider using Context API or third-party libraries like Redux.\n\n📚 Reference: https://reactjs.org/docs/hooks-state.html",
    "start_char": 0,
    "end_char": 318
  },
  {
    "question": "How to implement React Router in a React application?",
    "label": "react, router, navigation",
    "language": "en",
    "context": "React Router enables navigation among different views or pages within a React application.",
    "answer": "Steps to implement React Router: 1. Install `react-router-dom`: 2. Import and set up the Router in your app: 3. Use `Link` to navigate between pages: 📚 Reference: https://reactrouter.com/",
    "start_char": 0,
    "end_char": 553
  },
  {
    "question": "How to optimize performance in a React application?",
    "label": "react, performance, optimization",
    "language": "en",
    "context": "Performance optimization in React is essential for improving load times and overall user experience.",
    "answer": "Steps to optimize performance in React: 1. Use `React.memo` to prevent unnecessary re-renders of functional components: 2. Implement lazy loading for large components or routes: 3. Avoid anonymous functions in render methods to reduce re-renders: 📚 Reference: https://reactjs.org/docs/optimizing-performance.html",
    "start_char": 0,
    "end_char": 576
  },
  {
    "question": "How to handle authentication in a React application?",
    "label": "react, authentication, jwt",
    "language": "en",
    "context": "Authentication in React apps is typically handled using JWT (JSON Web Tokens) or other methods like OAuth.",
    "answer": "Steps to handle authentication with JWT in React: 1. Send login request to the server and get the token: 2. Store the JWT token in `localStorage` or `sessionStorage`: 3. Include the token in the authorization header for subsequent requests: 📚 Reference: https://jwt.io/introduction/",
    "start_char": 0,
    "end_char": 561
  },
  {
    "question": "How to handle file uploads in a Node.js application?",
    "label": "nodejs, file-upload, multer",
    "language": "en",
    "context": "File uploads are common in web applications, and Node.js provides libraries like `multer` to handle file uploads easily.",
    "answer": "Steps to handle file uploads using `multer` in Node.js: 1. Install `multer` package: 2. Set up `multer` for file handling: 3. Use `upload.single()` or `upload.array()` to handle single or multiple files in routes: 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 399
  },
  {
    "question": "How to integrate Firebase authentication into a React application?",
    "label": "react, firebase, authentication",
    "language": "en",
    "context": "Firebase provides a simple way to handle user authentication in React applications using Firebase Authentication.",
    "answer": "Steps to integrate Firebase authentication in React: 1. Install Firebase: 2. Initialize Firebase in your React app: 3. Create authentication functions (e.g., login, signup): 4. Handle user login and logout: 📚 Reference: https://firebase.google.com/docs/auth/web/start",
    "start_char": 0,
    "end_char": 730
  },
  {
    "question": "How to set up a MongoDB database with Mongoose in Node.js?",
    "label": "nodejs, mongodb, mongoose",
    "language": "en",
    "context": "Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js.",
    "answer": "Steps to set up MongoDB with Mongoose in Node.js: 1. Install Mongoose: 2. Connect to the MongoDB database using Mongoose: 3. Define a schema and model: 4. Perform CRUD operations: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 515
  },
  {
    "question": "How to use WebSockets for real-time communication in Node.js?",
    "label": "nodejs, websockets, real-time",
    "language": "en",
    "context": "WebSockets allow for bi-directional communication between the client and server, making it ideal for real-time applications.",
    "answer": "Steps to use WebSockets in Node.js: 1. Install `ws` package: 2. Set up WebSocket server: 3. Create WebSocket client in the browser: 📚 Reference: https://www.npmjs.com/package/ws",
    "start_char": 0,
    "end_char": 522
  },
  {
    "question": "How to optimize MongoDB queries for better performance?",
    "label": "mongodb, performance, optimization",
    "language": "en",
    "context": "Optimizing MongoDB queries ensures that the database performs well even under heavy load.",
    "answer": "Steps to optimize MongoDB queries:\n\n1. Use indexes for fast lookups:\n```javascript\ndb.users.createIndex({ email: 1 });\n```\n\n2. Limit the number of documents returned by the query:\n```javascript\ndb.users.find({}).limit(10);\n```\n\n3. Avoid using regular expressions or wildcards in queries, as they can be slow.\n\n4. Use projections to return only the fields needed:\n```javascript\ndb.users.find({}, { name: 1, email: 1 });\n```\n\n📚 Reference: https://docs.mongodb.com/manual/reference/method/db.collection.find/",
    "start_char": 0,
    "end_char": 515
  },
  {
    "question": "How to set up OAuth2 authentication in Node.js?",
    "label": "nodejs, oauth2, authentication",
    "language": "en",
    "context": "OAuth2 is a protocol for authorization, allowing secure access to resources from a third-party service.",
    "answer": "Steps to set up OAuth2 authentication in Node.js: 1. Install `passport` and `passport-oauth2`: 2. Set up Passport and OAuth2 strategy: 3. Set up authentication routes: 📚 Reference: https://www.passportjs.org/packages/passport-oauth2/",
    "start_char": 0,
    "end_char": 725
  },
  {
    "question": "How to secure your Node.js application with HTTPS?",
    "label": "nodejs, https, security",
    "language": "en",
    "context": "HTTPS ensures that data transferred between the client and server is encrypted.",
    "answer": "Steps to secure your Node.js application with HTTPS: 1. Install `https` module: 2. Set up an HTTPS server with a valid SSL certificate: 3. Redirect HTTP traffic to HTTPS: 📚 Reference: https://nodejs.org/dist/latest-v16.x/docs/api/https.html",
    "start_char": 0,
    "end_char": 563
  },
  {
    "question": "How to configure CORS in an Express application?",
    "label": "express, cors, configuration",
    "language": "en",
    "context": "Cross-Origin Resource Sharing (CORS) allows web applications to request resources from other domains.",
    "answer": "Steps to configure CORS in Express:\n\n1. Install `cors` package:\n```bash\nnpm install cors\n```\n\n2. Import and use `cors` middleware in your Express app:\n```javascript\nconst cors = require('cors');\napp.use(cors());\n```\n\n3. Configure CORS options to allow specific domains or methods:\n```javascript\nconst corsOptions = {\n  origin: 'https://example.com',\n  methods: ['GET', 'POST']\n};\napp.use(cors(corsOptions));\n```\n\n📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 392
  },
  {
    "question": "How to deploy a Node.js application to Heroku?",
    "label": "nodejs, deployment, heroku",
    "language": "en",
    "context": "Heroku provides a platform for deploying Node.js applications with ease.",
    "answer": "Steps to deploy a Node.js app to Heroku:\n\n1. Install Heroku CLI:\n```bash\ncurl https://cli-assets.heroku.com/install.sh | sh\n```\n\n2. Log in to Heroku:\n```bash\nheroku login\n```\n\n3. Initialize a git repository and create a Heroku app:\n```bash\ngit init\nheroku create\n```\n\n4. Push your app to Heroku:\n```bash\ngit push heroku master\n```\n\n5. Open your app in the browser:\n```bash\nheroku open\n```\n\n📚 Reference: https://devcenter.heroku.com/articles/git",
    "start_char": 0,
    "end_char": 424
  },
  {
    "question": "How to implement pagination in MongoDB queries?",
    "label": "mongodb, pagination, queries",
    "language": "en",
    "context": "Pagination is useful for efficiently handling large datasets by breaking them into smaller chunks.",
    "answer": "Steps to implement pagination in MongoDB:\n\n1. Define the page number and page size:\n```javascript\nconst page = 1;\nconst pageSize = 10;\n```\n\n2. Skip the documents from previous pages and limit the number of documents:\n```javascript\ndb.users.find().skip((page - 1) * pageSize).limit(pageSize);\n```\n\n3. Optionally, add sorting:\n```javascript\ndb.users.find().skip((page - 1) * pageSize).limit(pageSize).sort({ name: 1 });\n```\n\n📚 Reference: https://docs.mongodb.com/manual/reference/method/cursor.skip/",
    "start_char": 0,
    "end_char": 425
  },
  {
    "question": "How to use Docker to containerize a Node.js application?",
    "label": "nodejs, docker, containerization",
    "language": "en",
    "context": "Docker allows you to package applications and their dependencies into a portable container that can run anywhere.",
    "answer": "Steps to containerize a Node.js app using Docker:\n\n1. Create a `Dockerfile` in your project directory:\n```dockerfile\nFROM node:14\nWORKDIR /app\nCOPY . /app\nRUN npm install\nCMD ['node', 'index.js']\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t my-node-app .\n```\n\n3. Run the Docker container:\n```bash\ndocker run -p 3000:3000 my-node-app\n```\n\n📚 Reference: https://docs.docker.com/samples/nodejs/",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "How to implement a RESTful API in Express.js?",
    "label": "express, api, restful",
    "language": "en",
    "context": "Express.js is a minimal and flexible Node.js web application framework that simplifies building RESTful APIs.",
    "answer": "Steps to create a RESTful API in Express.js: 1. Install Express.js: 2. Set up a basic Express server: 3. Create RESTful routes (e.g., GET, POST, PUT, DELETE): 📚 Reference: https://expressjs.com/en/starter/hello-world.html",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "How to handle errors in Express.js?",
    "label": "express, error-handling",
    "language": "en",
    "context": "Handling errors gracefully is an important part of building robust applications.",
    "answer": "Steps to handle errors in Express.js:\n\n1. Create a middleware function for error handling:\n```javascript\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something went wrong!');\n});\n```\n\n2. Use `next()` to pass control to the error handling middleware:\n```javascript\napp.get('/', (req, res) => {\n  next(new Error('Some error!'));\n});\n```\n\n📚 Reference: https://expressjs.com/en/guide/error-handling.html",
    "start_char": 0,
    "end_char": 330
  },
  {
    "question": "How to implement JWT authentication in Node.js?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JSON Web Tokens (JWT) allow you to securely transmit information between the client and server.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install `jsonwebtoken`: 2. Create a function to generate a JWT: 3. Protect routes using JWT middleware: 📚 Reference: https://www.digitalocean.com/community/tutorials",
    "start_char": 0,
    "end_char": 590
  },
  {
    "question": "How to manage environment variables in Node.js?",
    "label": "nodejs, environment-variables, configuration",
    "language": "en",
    "context": "Environment variables are used to configure the application without hardcoding values in the source code.",
    "answer": "Steps to manage environment variables in Node.js:\n\n1. Install `dotenv` package:\n```bash\nnpm install dotenv\n```\n\n2. Create a `.env` file with your variables:\n```env\nDB_HOST=localhost\nDB_USER=root\nDB_PASS=password\n```\n\n3. Load the variables in your application:\n```javascript\nrequire('dotenv').config();\nconsole.log(process.env.DB_HOST);\n```\n\n📚 Reference: https://www.npmjs.com/package/dotenv",
    "start_char": 0,
    "end_char": 325
  },
  {
    "question": "How to implement file upload in Express.js?",
    "label": "express, file-upload",
    "language": "en",
    "context": "Express.js makes it easy to handle file uploads in a web application.",
    "answer": "Steps to implement file upload in Express.js:\n\n1. Install `multer` package:\n```bash\nnpm install multer\n```\n\n2. Set up multer for file storage:\n```javascript\nconst multer = require('multer');\nconst upload = multer({ dest: 'uploads/' });\n```\n\n3. Create an API route to handle file uploads:\n```javascript\napp.post('/upload', upload.single('file'), (req, res) => {\n  res.send('File uploaded successfully');\n});\n```\n\n📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 315
  },
  {
    "question": "How to enable logging in Node.js using Winston?",
    "label": "nodejs, logging, winston",
    "language": "en",
    "context": "Winston is a versatile logging library for Node.js applications.",
    "answer": "Steps to enable logging using Winston in Node.js: 1. Install Winston: 2. Set up Winston logger: 3. Use logger to log messages: 📚 Reference: https://github.com/winstonjs/winston",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "How to use Redis for caching in Node.js?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Redis is an in-memory key-value store that can be used to cache frequently accessed data and improve application performance.",
    "answer": "Steps to use Redis for caching in Node.js:\n\n1. Install `redis` package:\n```bash\nnpm install redis\n```\n\n2. Set up Redis client in your app:\n```javascript\nconst redis = require('redis');\nconst client = redis.createClient();\n```\n\n3. Cache data in Redis:\n```javascript\nclient.set('key', 'value', redis.print);\n```\n\n4. Retrieve cached data:\n```javascript\nclient.get('key', (err, reply) => {\n  console.log(reply); // will print 'value'\n});\n```\n\n📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 395
  },
  {
    "question": "How to use Sequelize ORM for PostgreSQL in Node.js?",
    "label": "nodejs, sequelize, postgresql",
    "language": "en",
    "context": "Sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, and SQLite.",
    "answer": "Steps to use Sequelize with PostgreSQL in Node.js: 1. Install Sequelize and PostgreSQL package: 2. Set up Sequelize instance and connect to PostgreSQL: 3. Define a model: 4. Sync models with database and perform queries: 📚 Reference: https://sequelize.org/",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "How to implement caching with Redis in a Node.js application?",
    "label": "nodejs, redis, caching",
    "language": "en",
    "context": "Caching frequently accessed data using Redis can significantly improve the performance of your application.",
    "answer": "Steps to implement Redis caching in a Node.js application: 1. Install Redis and Redis client: 2. Set up Redis client and connect: 3. Set cache data: 4. Get cached data: 📚 Reference: https://www.npmjs.com/package/redis",
    "start_char": 0,
    "end_char": 350
  },
  {
    "question": "What is the difference between GET and POST HTTP methods?",
    "label": "http, get, post, methods",
    "language": "en",
    "context": "GET and POST are two commonly used HTTP methods that perform different actions in a web application.",
    "answer": "Differences between GET and POST HTTP methods: 1. GET method: 2. POST method: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",
    "start_char": 0,
    "end_char": 450
  },
  {
    "question": "How to create a custom middleware in Express.js?",
    "label": "express, middleware, custom",
    "language": "en",
    "context": "Middleware functions in Express.js are used to modify the request or response objects before reaching the route handler.",
    "answer": "Steps to create custom middleware in Express.js: 1. Define a custom middleware function: 2. Use the middleware in the Express application: 3. Add custom logic in the middleware (e.g., modify the request object or respond early): 📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is the purpose of the `next()` function in Express.js?",
    "label": "express, next, middleware",
    "language": "en",
    "context": "The `next()` function is used in Express.js middleware to pass control to the next middleware or route handler.",
    "answer": "The `next()` function in Express.js serves two primary purposes:\n\n1. It passes control to the next middleware function in the stack.\n\n2. It allows error handling to be triggered in error-handling middleware (if an error is passed to `next()`).\n\nExample:\n```javascript\napp.use((req, res, next) => {\n  console.log('Middleware 1');\n  next(); // Pass control to next middleware\n});\n```\n\n📚 Reference: https://expressjs.com/en/guide/using-middleware.html",
    "start_char": 0,
    "end_char": 330
  },
  {
    "question": "What is the difference between synchronous and asynchronous code in JavaScript?",
    "label": "javascript, synchronous, asynchronous",
    "language": "en",
    "context": "Understanding synchronous and asynchronous code is crucial for handling operations that may take time, like file reading or network requests.",
    "answer": "Differences between synchronous and asynchronous code: 1. Synchronous code: 2. Asynchronous code: 📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous",
    "start_char": 0,
    "end_char": 570
  },
  {
    "question": "How to handle CORS (Cross-Origin Resource Sharing) in Express.js?",
    "label": "express, cors",
    "language": "en",
    "context": "CORS is a security feature implemented by browsers to prevent malicious websites from accessing resources from a different origin.",
    "answer": "Steps to handle CORS in Express.js: 1. Install `cors` middleware: 2. Use CORS in your Express app: 3. Optionally, configure CORS for specific origins: 4. You can also restrict methods and headers: 📚 Reference: https://www.npmjs.com/package/cors",
    "start_char": 0,
    "end_char": 350
  },
  {
    "question": "What is the purpose of the `use()` method in Express.js?",
    "label": "express, use, method",
    "language": "en",
    "context": "The `use()` method in Express.js is used to define middleware or routes in the application.",
    "answer": "The `use()` method is used in Express.js to:\n\n1. Register middleware that is executed for every request to the app.\n\n2. Define routes for different HTTP methods (GET, POST, etc.).\n\nExample (middleware):\n```javascript\napp.use((req, res, next) => {\n  console.log('Request received');\n  next();\n});\n```\n\nExample (route handling):\n```javascript\napp.use('/users', userRoutes);\n```\n\n📚 Reference: https://expressjs.com/en/api.html#app.use",
    "start_char": 0,
    "end_char": 310
  },
  {
    "question": "How do you perform unit testing in Node.js?",
    "label": "nodejs, testing, unit-tests",
    "language": "en",
    "context": "Unit testing is an essential part of ensuring that your Node.js code works as expected.",
    "answer": "Steps to perform unit testing in Node.js:\n\n1. Install testing libraries (e.g., Mocha, Chai):\n```bash\nnpm install mocha chai\n```\n\n2. Create a test file:\n```javascript\nconst assert = require('chai').assert;\nconst myFunction = require('./myFunction');\n\ndescribe('myFunction', () => {\n  it('should return 4 when adding 2 + 2', () => {\n    assert.equal(myFunction(2, 2), 4);\n  });\n});\n```\n\n3. Run the tests:\n```bash\nnpx mocha\n```\n\n📚 Reference: https://mochajs.org/",
    "start_char": 0,
    "end_char": 350
  },
  {
    "question": "How to connect to a MongoDB database from Node.js?",
    "label": "nodejs, mongodb, database",
    "language": "en",
    "context": "MongoDB is a NoSQL database that is commonly used with Node.js for storing and retrieving data.",
    "answer": "Steps to connect to MongoDB from Node.js: 1. Install the MongoDB Node.js driver: 2. Set up a MongoDB client and connect: 3. Perform database operations (e.g., insert, find): 📚 Reference: https://www.mongodb.com/docs/drivers/node/current/",
    "start_char": 0,
    "end_char": 500
  },
  {
    "question": "How to implement JWT (JSON Web Token) authentication in a Node.js application?",
    "label": "nodejs, jwt, authentication",
    "language": "en",
    "context": "JWT is a compact and self-contained way to securely transmit information between parties as a JSON object.",
    "answer": "Steps to implement JWT authentication in Node.js: 1. Install the necessary packages: 2. Create a JWT token: 3. Verify the JWT token in the middleware: 📚 Reference: https://www.npmjs.com/package/jsonwebtoken",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "What is the difference between SQL and NoSQL databases?",
    "label": "sql, nosql, databases",
    "language": "en",
    "context": "SQL and NoSQL are two types of databases that differ in their structure, flexibility, and use cases.",
    "answer": "Differences between SQL and NoSQL databases: 1. SQL Databases: 2. NoSQL Databases: 📚 Reference: https://www.mongodb.com/nosql-explained",
    "start_char": 0,
    "end_char": 410
  },
  {
    "question": "How to use MongoDB with Mongoose in a Node.js application?",
    "label": "nodejs, mongoose, mongodb",
    "language": "en",
    "context": "Mongoose is an Object Data Modeling (ODM) library for MongoDB and Node.js, providing a schema-based solution to model your application data.",
    "answer": "Steps to use MongoDB with Mongoose in Node.js: 1. Install Mongoose: 2. Connect to MongoDB using Mongoose: 3. Create a Mongoose schema and model: 4. Create and save a document: 📚 Reference: https://mongoosejs.com/docs/",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "What is an API (Application Programming Interface) and how is it used in web development?",
    "label": "api, web-development",
    "language": "en",
    "context": "An API is a set of rules that allow different software programs to communicate with each other, acting as an interface for the interaction between systems.",
    "answer": "An API (Application Programming Interface) is a set of protocols and tools that allow different software applications to interact with each other. In web development, APIs are commonly used to send and receive data between the frontend and backend. 1. A REST API exposes endpoints that allow clients to perform CRUD (Create, Read, Update, Delete) operations on resources. 2. Clients (e.g., browsers, mobile apps) can make HTTP requests (GET, POST, PUT, DELETE) to API endpoints to interact with the server. Ex...",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "What is the purpose of the `bind()` method in JavaScript?",
    "label": "javascript, bind, method",
    "language": "en",
    "context": "The `bind()` method in JavaScript is used to set the value of `this` for a function and returns a new function.",
    "answer": "The `bind()` method is used to create a new function that, when called, has its `this` value set to a specific value. This is particularly useful when you want to pass a function as a callback, but ensure that `this` refers to a particular object. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "How to handle file uploads in Node.js using Multer?",
    "label": "nodejs, multer, file-uploads",
    "language": "en",
    "context": "Multer is a middleware for handling `multipart/form-data`, which is used for uploading files in Node.js.",
    "answer": "Steps to handle file uploads using Multer in Node.js: 1. Install Multer: 2. Set up Multer middleware in your Express app: 3. Configure Multer for custom storage options: 📚 Reference: https://www.npmjs.com/package/multer",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "What is the use of the `reduce()` method in JavaScript?",
    "label": "javascript, reduce, array-method",
    "language": "en",
    "context": "The `reduce()` method in JavaScript is used to apply a function to each element of an array to reduce it to a single value.",
    "answer": "The `reduce()` method applies a function to each element of an array and accumulates a single result.\n\nSyntax:\n```javascript\narray.reduce((accumulator, currentValue, index, array) => {\n  return accumulator + currentValue;\n}, initialValue);\n```\n\nExample:\n```javascript\nconst numbers = [1, 2, 3, 4];\nconst sum = numbers.reduce((acc, num) => acc + num, 0);\nconsole.log(sum); // Output: 10\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is the purpose of the `async/await` syntax in JavaScript?",
    "label": "javascript, async, await, promises",
    "language": "en",
    "context": "The `async/await` syntax in JavaScript provides a way to work with asynchronous code in a synchronous-like manner.",
    "answer": "`async/await` is used to handle asynchronous operations in JavaScript more easily, making the code more readable. 1. `async` marks a function as asynchronous and returns a promise. 2. `await` can only be used inside `async` functions and pauses the execution of the function until the promise resolves. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "How to handle errors in asynchronous code in Node.js?",
    "label": "nodejs, asynchronous, error-handling",
    "language": "en",
    "context": "Error handling is crucial in asynchronous code to ensure that the application doesn't crash or behave unexpectedly.",
    "answer": "To handle errors in asynchronous code: 1. Use try-catch blocks with `async/await`: 2. Use `.catch()` with promises: 3. Handle errors in callback functions: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "How does the `map()` method work in JavaScript?",
    "label": "javascript, map, array-method",
    "language": "en",
    "context": "The `map()` method creates a new array populated with the results of calling a provided function on every element in the array.",
    "answer": "The `map()` method is used to create a new array by applying a function to each element of the original array.\n\nSyntax:\n```javascript\narray.map((currentValue, index, array) => {\n  return newElement;\n});\n```\n\nExample:\n```javascript\nconst numbers = [1, 2, 3, 4];\nconst squared = numbers.map(num => num * num);\nconsole.log(squared); // Output: [1, 4, 9, 16]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is a promise in JavaScript?",
    "label": "javascript, promise",
    "language": "en",
    "context": "A Promise is an object representing the eventual completion or failure of an asynchronous operation in JavaScript.",
    "answer": "A promise is an object that represents the result of an asynchronous operation. A promise has three states: 1. Pending: The operation is still ongoing. 2. Fulfilled: The operation completed successfully. 3. Rejected: The operation failed. Example of using a promise: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is a RESTful API?",
    "label": "api, restful, web-development",
    "language": "en",
    "context": "RESTful APIs follow the principles of Representational State Transfer (REST) architecture, commonly used for building web services.",
    "answer": "A RESTful API is an API that adheres to the principles of REST architecture. REST stands for Representational State Transfer and uses standard HTTP methods (GET, POST, PUT, DELETE). Key principles of RESTful APIs: 1. Stateless: Every request is independent, with no session state stored on the server. 2. Client-Server: The client and server are separate entities that communicate via HTTP. 3. Resource-Based: Resources (such as data objects) are identified by URIs (Uniform Resource Identifiers). Example of ...",
    "start_char": 0,
    "end_char": 430
  },
  {
    "question": "What is the difference between `null` and `undefined` in JavaScript?",
    "label": "javascript, null, undefined",
    "language": "en",
    "context": "Both `null` and `undefined` are used to represent absence of value, but they are used in different contexts.",
    "answer": "The differences between `null` and `undefined` are: 1. `undefined`: A variable that has been declared but not assigned a value is `undefined` by default. Example: 2. `null`: `null` is an explicit assignment that represents no value or an empty object reference. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "How to create a simple HTTP server in Node.js?",
    "label": "nodejs, http-server",
    "language": "en",
    "context": "Node.js allows you to create an HTTP server to handle incoming requests and send responses.",
    "answer": "To create a simple HTTP server in Node.js: 1. Require the `http` module: 2. Create the server and define the request handler: 3. Start the server to listen on a port: 📚 Reference: https://nodejs.org/en/docs/",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is the difference between `let`, `const`, and `var` in JavaScript?",
    "label": "javascript, let, const, var",
    "language": "en",
    "context": "`let`, `const`, and `var` are used to declare variables, but they behave differently in terms of scope, hoisting, and reassignment.",
    "answer": "The differences between `let`, `const`, and `var` are: 1. `let`: Used to declare variables with block scope, meaning the variable is limited to the block (e.g., within loops or conditionals). Example: 2. `const`: Used to declare constants that cannot be reassigned. It also has block scope. Example: 3. `var`: Used to declare variables with function scope, meaning the variable is limited to the function, or globally if not in a function. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/Ja...",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "What is the purpose of `localStorage` and `sessionStorage` in web development?",
    "label": "web-development, localStorage, sessionStorage",
    "language": "en",
    "context": "`localStorage` and `sessionStorage` are both web storage objects that allow you to store data on the client-side.",
    "answer": "The differences between `localStorage` and `sessionStorage` are: 1. `localStorage`: Stores data with no expiration time. The data persists even after the browser is closed and reopened. Example: 2. `sessionStorage`: Stores data for the duration of the page session. Data is lost when the page or browser is closed. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "What is the purpose of the `fetch()` API in JavaScript?",
    "label": "javascript, fetch, api",
    "language": "en",
    "context": "`fetch()` is a modern JavaScript API for making asynchronous HTTP requests.",
    "answer": "The `fetch()` API is used to make HTTP requests from JavaScript. It returns a promise that resolves to the response of the request. Syntax: Example of making a GET request: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",
    "start_char": 0,
    "end_char": 420
  },
  {
    "question": "How to perform asynchronous operations with callbacks in Node.js?",
    "label": "nodejs, asynchronous, callback",
    "language": "en",
    "context": "Callbacks are functions passed into other functions, to be executed later when the asynchronous operation finishes.",
    "answer": "To perform asynchronous operations with callbacks in Node.js:\n\n1. Define the function with a callback:\n```javascript\nconst fetchData = (callback) => {\n  setTimeout(() => {\n    callback('Data fetched');\n  }, 1000);\n};\n```\n\n2. Pass a callback function to handle the result:\n```javascript\nfetchData((result) => {\n  console.log(result); // Output: Data fetched\n});\n```\n\n📚 Reference: https://nodejs.org/en/docs/",
    "start_char": 0,
    "end_char": 350
  },
  {
    "question": "What is the difference between `==` and `===` in JavaScript?",
    "label": "javascript, comparison, equality",
    "language": "en",
    "context": "`==` and `===` are both used for comparison in JavaScript, but they behave differently when comparing values.",
    "answer": "`==` compares values for equality, but performs type coercion before making the comparison. On the other hand, `===` compares both the value and the type, and does not perform type coercion.\n\nExample:\n```javascript\nconsole.log(5 == '5'); // true\nconsole.log(5 === '5'); // false\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality",
    "start_char": 0,
    "end_char": 300
  },
  {
    "question": "What is an event loop in JavaScript?",
    "label": "javascript, event-loop, asynchronous",
    "language": "en",
    "context": "The event loop is a fundamental concept in JavaScript that enables asynchronous behavior by handling events and executing code in a non-blocking manner.",
    "answer": "The event loop is responsible for executing JavaScript code in a non-blocking, asynchronous manner. It continuously checks the call stack and the message queue to execute code that is ready. 1. When synchronous code is executed, it is placed in the call stack. 2. Asynchronous code (e.g., promises or setTimeout) is handled by the event loop, which places the callback functions in the message queue. 3. The event loop executes the message queue only when the call stack is empty. Example: Output: `Start` -> ...",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "What is the purpose of the `bind()` method in JavaScript?",
    "label": "javascript, bind, function",
    "language": "en",
    "context": "The `bind()` method is used to create a new function that, when called, has its `this` value set to the provided value.",
    "answer": "The `bind()` method returns a new function that, when invoked, has its `this` value set to the value passed as the first argument. Syntax: Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is the purpose of the `this` keyword in JavaScript?",
    "label": "javascript, this",
    "language": "en",
    "context": "The `this` keyword refers to the context in which the current code is executing, often referring to the object that called the method.",
    "answer": "`this` refers to the object that is executing the current function or method. In global scope, `this` refers to the global object (in the browser, it's `window`). Inside a function, `this` refers to the object that called the function. In an event handler, `this` refers to the element that triggered the event. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What are arrow functions in JavaScript?",
    "label": "javascript, arrow-function",
    "language": "en",
    "context": "Arrow functions are a concise way to write functions in JavaScript and they do not have their own `this` context.",
    "answer": "Arrow functions provide a shorter syntax for writing functions. They do not have their own `this`, `arguments`, or `super` binding, and instead inherit them from the outer scope.\n\nSyntax:\n```javascript\nconst functionName = (param1, param2) => { ... }; \n```\n\nExample:\n```javascript\nconst add = (a, b) => a + b;\nconsole.log(add(2, 3)); // Output: 5\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is the difference between synchronous and asynchronous programming?",
    "label": "javascript, synchronous, asynchronous",
    "language": "en",
    "context": "Synchronous and asynchronous are two types of programming models used to handle operations and events in JavaScript.",
    "answer": "Synchronous programming executes code in a sequential manner, where each operation must be completed before the next one starts. In contrast, asynchronous programming allows the program to continue executing other code while waiting for an operation (like reading a file or making a network request) to complete. Example of synchronous code: Example of asynchronous code using `setTimeout`: 📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous",
    "start_char": 0,
    "end_char": 450
  },
  {
    "question": "What is a closure in JavaScript?",
    "label": "javascript, closure",
    "language": "en",
    "context": "A closure is a function that retains access to its lexical scope, even when the function is executed outside that scope.",
    "answer": "A closure is a function that 'remembers' its lexical scope even when it is executed outside that scope.\n\nClosures are created every time a function is created, at function creation time.\n\nExample:\n```javascript\nfunction outer() {\n  let count = 0;\n  return function inner() {\n    count++;\n    console.log(count);\n  };\n}\nconst counter = outer();\ncounter(); // Output: 1\ncounter(); // Output: 2\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "What is the `await` keyword in JavaScript?",
    "label": "javascript, await, async",
    "language": "en",
    "context": "The `await` keyword is used inside an `async` function to wait for a Promise to resolve and get its result.",
    "answer": "`await` is used to pause the execution of an `async` function until a Promise is resolved or rejected. It can only be used inside an `async` function.\n\nExample:\n```javascript\nasync function fetchData() {\n  const response = await fetch('https://api.example.com/data');\n  const data = await response.json();\n  console.log(data);\n}\nfetchData();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is a callback function in JavaScript?",
    "label": "javascript, callback",
    "language": "en",
    "context": "A callback function is a function that is passed into another function as an argument and is executed after the first function completes.",
    "answer": "A callback function is a function that is passed as an argument to another function and executed after the first function finishes its execution.\n\nExample:\n```javascript\nfunction fetchData(callback) {\n  setTimeout(() => {\n    callback('Data fetched');\n  }, 1000);\n}\nfetchData(function(data) {\n  console.log(data); // Output: Data fetched\n});\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/Callback_function",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is an HTTP request in web development?",
    "label": "web-development, http, request",
    "language": "en",
    "context": "An HTTP request is a message sent from the client (usually a web browser) to a server to request data or resources.",
    "answer": "An HTTP request is a message sent to a server, typically from a browser, to request a resource or data. HTTP requests can be made using different methods such as GET, POST, PUT, and DELETE.\n\nExample of an HTTP GET request using JavaScript's `fetch` API:\n```javascript\nfetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data));\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "What is the difference between `null` and `undefined` in JavaScript?",
    "label": "javascript, null, undefined",
    "language": "en",
    "context": "`null` and `undefined` are both primitive values in JavaScript, but they are used in different contexts.",
    "answer": "`null` represents the intentional absence of any object value, while `undefined` indicates that a variable has been declared but has not been assigned a value.\n\nExample:\n```javascript\nlet a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is a promise in JavaScript?",
    "label": "javascript, promise, asynchronous",
    "language": "en",
    "context": "A Promise is an object representing the eventual completion or failure of an asynchronous operation in JavaScript.",
    "answer": "A Promise is used to handle asynchronous operations in JavaScript. It represents a value that may be available now, or in the future, or never. Promises have three states: pending, resolved (fulfilled), or rejected. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 450
  },
  {
    "question": "What is the difference between `let` and `var` in JavaScript?",
    "label": "javascript, let, var",
    "language": "en",
    "context": "`let` and `var` are both used for variable declaration in JavaScript, but they have different scopes and behaviors.",
    "answer": "`let` is block-scoped, meaning it is limited to the block, statement, or expression in which it is defined. `var`, on the other hand, is function-scoped, meaning it is available throughout the entire function. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
    "start_char": 0,
    "end_char": 420
  },
  {
    "question": "What is a higher-order function in JavaScript?",
    "label": "javascript, higher-order-function",
    "language": "en",
    "context": "A higher-order function is a function that takes another function as an argument or returns a function as a result.",
    "answer": "A higher-order function is a function that can accept a function as an argument, return a function as a result, or both. Example of passing a function as an argument: Example of returning a function: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "What is the `localStorage` API in JavaScript?",
    "label": "javascript, localStorage, web-api",
    "language": "en",
    "context": "The `localStorage` API provides a way to store data in the web browser persistently.",
    "answer": "`localStorage` allows you to store key-value pairs in the browser, with data that persists even after the browser is closed. It is part of the Web Storage API.\n\nExample:\n```javascript\nlocalStorage.setItem('username', 'john_doe');\nlet username = localStorage.getItem('username');\nconsole.log(username); // Output: john_doe\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 320
  },
  {
    "question": "What is the `sessionStorage` API in JavaScript?",
    "label": "javascript, sessionStorage, web-api",
    "language": "en",
    "context": "`sessionStorage` is a Web API similar to `localStorage`, but its data is cleared when the browser session ends.",
    "answer": "`sessionStorage` allows you to store key-value pairs in the browser, but the data is cleared when the page session ends (e.g., when the browser or tab is closed).\n\nExample:\n```javascript\nsessionStorage.setItem('username', 'john_doe');\nlet username = sessionStorage.getItem('username');\nconsole.log(username); // Output: john_doe\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is a RESTful API?",
    "label": "web-development, api, rest",
    "language": "en",
    "context": "A RESTful API is an architectural style for designing networked applications using HTTP requests to perform CRUD operations.",
    "answer": "A RESTful API follows the principles of Representational State Transfer (REST) and uses standard HTTP methods like GET, POST, PUT, DELETE to perform CRUD (Create, Read, Update, Delete) operations on resources.\n\nExample of a GET request to a RESTful API:\n```javascript\nfetch('https://api.example.com/resource')\n  .then(response => response.json())\n  .then(data => console.log(data));\n```\n\n📚 Reference: https://restfulapi.net/",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is the difference between `GET` and `POST` methods in HTTP?",
    "label": "web-development, http, methods",
    "language": "en",
    "context": "`GET` and `POST` are two commonly used HTTP methods for retrieving and sending data in web applications.",
    "answer": "`GET` is used to request data from a specified resource, and the data is sent in the URL (query string). It is considered a safe and idempotent method. `POST`, on the other hand, is used to send data to a server, typically for creating or updating resources. The data is sent in the body of the request. Example of GET request: Example of POST request: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "What is the difference between `deep copy` and `shallow copy` in JavaScript?",
    "label": "javascript, deep-copy, shallow-copy",
    "language": "en",
    "context": "In JavaScript, copying objects or arrays can be done in different ways: deep copy and shallow copy.",
    "answer": "A shallow copy creates a new object, but the nested objects or arrays are still references to the original ones. A deep copy creates a new object, including copies of all nested objects or arrays. Example of shallow copy: Example of deep copy: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "What is CORS (Cross-Origin Resource Sharing)?",
    "label": "web-development, cors, security",
    "language": "en",
    "context": "CORS is a security feature implemented by browsers to prevent unauthorized cross-origin requests.",
    "answer": "CORS (Cross-Origin Resource Sharing) is a security mechanism that allows servers to specify who can access their resources. It prevents malicious websites from making unauthorized requests to a different domain. A server specifies allowed origins using the `Access-Control-Allow-Origin` header. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS",
    "start_char": 0,
    "end_char": 430
  },
  {
    "question": "What is the difference between `undefined` and `NaN` in JavaScript?",
    "label": "javascript, undefined, NaN",
    "language": "en",
    "context": "`undefined` and `NaN` are both primitive values in JavaScript, but they represent different concepts.",
    "answer": "`undefined` indicates that a variable has been declared but has not been assigned a value. `NaN` (Not-a-Number) is a special value representing an invalid number or a result of a failed mathematical operation.\n\nExample:\n```javascript\nlet x;\nconsole.log(x); // undefined\nlet y = 0 / 0;\nconsole.log(y); // NaN\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "What is the purpose of the `bind()` method in JavaScript?",
    "label": "javascript, bind, methods",
    "language": "en",
    "context": "The `bind()` method in JavaScript is used to create a new function that, when called, has its `this` value set to a specified object.",
    "answer": "`bind()` is used to bind a function to a specific context, allowing the function to use the `this` keyword correctly even when it is invoked outside of its original context.\n\nExample:\n```javascript\nfunction greet() {\n  console.log(`Hello, ${this.name}`);\n}\nlet person = { name: 'Alice' };\nlet greetPerson = greet.bind(person);\ngreetPerson(); // Output: Hello, Alice\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "What is the event loop in JavaScript?",
    "label": "javascript, event-loop, asynchronous",
    "language": "en",
    "context": "The event loop is a mechanism that allows JavaScript to perform non-blocking asynchronous operations.",
    "answer": "The event loop continuously checks the message queue and pushes events to the call stack for execution. It enables JavaScript to handle asynchronous operations, such as I/O operations, without blocking the execution of other code.\n\nExample:\n```javascript\nconsole.log('Start');\nsetTimeout(() => { console.log('Async Task'); }, 0);\nconsole.log('End');\n```\nOutput:\n```\nStart\nEnd\nAsync Task\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "What is the `async` and `await` syntax in JavaScript?",
    "label": "javascript, async, await",
    "language": "en",
    "context": "The `async` and `await` syntax is used for working with asynchronous functions in JavaScript.",
    "answer": "`async` is used to define a function that returns a promise. `await` can only be used inside an `async` function and is used to wait for the promise to resolve before continuing execution.\n\nExample:\n```javascript\nasync function fetchData() {\n  let response = await fetch('https://api.example.com/data');\n  let data = await response.json();\n  console.log(data);\n}\nfetchData();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 430
  },
  {
    "question": "What is the `filter()` method in JavaScript?",
    "label": "javascript, filter, array-methods",
    "language": "en",
    "context": "The `filter()` method creates a new array with all elements that pass the test implemented by the provided function.",
    "answer": "`filter()` is used to create a new array that contains only the elements that meet a specific condition.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3, 4, 5];\nlet evenNumbers = numbers.filter(num => num % 2 === 0);\nconsole.log(evenNumbers); // Output: [2, 4]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "What is a closure in JavaScript?",
    "label": "javascript, closure",
    "language": "en",
    "context": "A closure is a function that retains access to its lexical scope, even when the function is executed outside of that scope.",
    "answer": "A closure occurs when a function is defined within another function and it retains access to the outer function's variables. Closures are used to maintain state and data privacy.\n\nExample:\n```javascript\nfunction outer() {\n  let count = 0;\n  return function inner() {\n    count++;\n    console.log(count);\n  };\n}\nlet counter = outer();\ncounter(); // Output: 1\ncounter(); // Output: 2\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",
    "start_char": 0,
    "end_char": 420
  },
  {
    "question": "What is a JavaScript module?",
    "label": "javascript, module, es6",
    "language": "en",
    "context": "A JavaScript module is a file that contains code which can be exported and imported into other files.",
    "answer": "JavaScript modules allow you to break up your code into separate files for better organization and reusability. You can export functions, objects, or values from a module and import them into other modules.\n\nExample of exporting and importing:\n```javascript\n// math.js\nexport function add(x, y) {\n  return x + y;\n}\n// app.js\nimport { add } from './math.js';\nconsole.log(add(2, 3)); // Output: 5\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",
    "start_char": 0,
    "end_char": 430
  },
  {
    "question": "What is the difference between `==` and `===` in JavaScript?",
    "label": "javascript, equality, ==, ===",
    "language": "en",
    "context": "`==` and `===` are both comparison operators in JavaScript, but they behave differently.",
    "answer": "`==` is the loose equality operator that performs type coercion before comparing values. `===` is the strict equality operator that checks both value and type.\n\nExample:\n```javascript\nconsole.log(5 == '5'); // true\nconsole.log(5 === '5'); // false\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality",
    "start_char": 0,
    "end_char": 410
  },
  {
    "question": "What is an IIFE (Immediately Invoked Function Expression) in JavaScript?",
    "label": "javascript, IIFE, functions",
    "language": "en",
    "context": "An IIFE is a function that is executed as soon as it is defined in JavaScript.",
    "answer": "An IIFE is defined and invoked immediately, often used to create a local scope to avoid polluting the global namespace.\n\nExample:\n```javascript\n(function() {\n  console.log('IIFE executed');\n})();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/IIFE",
    "start_char": 0,
    "end_char": 380
  },
  {
    "question": "What is the difference between `var`, `let`, and `const` in JavaScript?",
    "label": "javascript, var, let, const",
    "language": "en",
    "context": "`var`, `let`, and `const` are used to declare variables in JavaScript, but they have different behaviors.",
    "answer": "`var` is function-scoped and can be re-declared and updated. `let` is block-scoped and can be updated but not re-declared. `const` is also block-scoped but cannot be updated or re-declared.\n\nExample:\n```javascript\nvar x = 10;\nlet y = 20;\nconst z = 30;\ny = 25; // OK\n// z = 35; // Error: Assignment to constant variable\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/var",
    "start_char": 0,
    "end_char": 440
  },
  {
    "question": "What are JavaScript promises?",
    "label": "javascript, promises, async",
    "language": "en",
    "context": "A JavaScript promise is an object representing the eventual completion or failure of an asynchronous operation.",
    "answer": "A promise allows you to associate handlers with an asynchronous operation's eventual success or failure. It can be in one of three states: pending, resolved, or rejected. Example: 📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 450
  },
  {
    "question": "What is the purpose of the `map()` method in JavaScript?",
    "label": "javascript, map, array-methods",
    "language": "en",
    "context": "The `map()` method creates a new array populated with the results of calling a provided function on every element in the calling array.",
    "answer": "`map()` is used to transform each element in an array by applying a function to it. It returns a new array with the transformed elements.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3, 4, 5];\nlet squaredNumbers = numbers.map(num => num * num);\nconsole.log(squaredNumbers); // Output: [1, 4, 9, 16, 25]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    "start_char": 0,
    "end_char": 420
  },
  {
    "question": "What is the difference between `null` and `undefined` in JavaScript?",
    "label": "javascript, null, undefined",
    "language": "en",
    "context": "`null` and `undefined` are both primitive values in JavaScript, but they represent different concepts.",
    "answer": "`null` is an assignment value, representing the intentional absence of any object value. `undefined` indicates that a variable has been declared but not yet assigned a value.\n\nExample:\n```javascript\nlet a = null;\nlet b;\nconsole.log(a); // null\nconsole.log(b); // undefined\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "start_char": 0,
    "end_char": 420
  },
  {
    "question": "What is a `callback` function in JavaScript?",
    "label": "javascript, callback, functions",
    "language": "en",
    "context": "A callback function is a function passed into another function as an argument to be executed later.",
    "answer": "Callback functions are commonly used in asynchronous programming, where they are called when an operation completes.\n\nExample:\n```javascript\nfunction greet(name, callback) {\n  console.log(`Hello, ${name}!`);\n  callback();\n}\nfunction callbackFunction() {\n  console.log('Callback executed');\n}\ngreet('Alice', callbackFunction);\n```\nOutput:\n```\nHello, Alice!\nCallback executed\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/Callback_function",
    "start_char": 0,
    "end_char": 410
  },
  {
    "question": "What is an arrow function in JavaScript?",
    "label": "javascript, arrow-functions",
    "language": "en",
    "context": "An arrow function is a shorter syntax for writing functions in JavaScript, introduced in ES6.",
    "answer": "Arrow functions allow for a more concise syntax and automatically bind the `this` value.\n\nExample:\n```javascript\nlet add = (a, b) => a + b;\nconsole.log(add(2, 3)); // Output: 5\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "What is the purpose of the `reduce()` method in JavaScript?",
    "label": "javascript, reduce, array-methods",
    "language": "en",
    "context": "The `reduce()` method applies a function against an accumulator and each element in an array (from left to right) to reduce it to a single value.",
    "answer": "`reduce()` is used to iterate through an array and accumulate a single result.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3, 4, 5];\nlet sum = numbers.reduce((acc, num) => acc + num, 0);\nconsole.log(sum); // Output: 15\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",
    "start_char": 0,
    "end_char": 420
  },
  {
    "question": "What is the purpose of the `setTimeout()` method in JavaScript?",
    "label": "javascript, setTimeout, functions",
    "language": "en",
    "context": "The `setTimeout()` method in JavaScript is used to execute a function after a specified delay.",
    "answer": "`setTimeout()` allows you to delay the execution of a function for a specified time.\n\nExample:\n```javascript\nsetTimeout(() => { console.log('Delayed Message'); }, 2000); // Executes after 2 seconds\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/setTimeout",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "What is the purpose of the `localStorage` in JavaScript?",
    "label": "javascript, localStorage, web-storage",
    "language": "en",
    "context": "`localStorage` provides a simple way to store key-value pairs in a web browser that persist even after the browser is closed.",
    "answer": "`localStorage` allows data to be stored on the client's computer and remains accessible across sessions.\n\nExample:\n```javascript\nlocalStorage.setItem('name', 'Alice');\nlet name = localStorage.getItem('name');\nconsole.log(name); // Output: Alice\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "What is the purpose of the `sessionStorage` in JavaScript?",
    "label": "javascript, sessionStorage, web-storage",
    "language": "en",
    "context": "`sessionStorage` is a type of web storage that stores data for the duration of the page session.",
    "answer": "`sessionStorage` stores data for the duration of the page session, meaning it is cleared when the browser or tab is closed.\n\nExample:\n```javascript\nsessionStorage.setItem('name', 'Alice');\nlet name = sessionStorage.getItem('name');\nconsole.log(name); // Output: Alice\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage",
    "start_char": 0,
    "end_char": 410
  },
  {
    "question": "What is the purpose of the `localStorage` in JavaScript?",
    "label": "javascript, localStorage, web-storage",
    "language": "en",
    "context": "`localStorage` provides a simple way to store key-value pairs in a web browser that persist even after the browser is closed.",
    "answer": "`localStorage` allows data to be stored on the client's computer and remains accessible across sessions.\n\nExample:\n```javascript\nlocalStorage.setItem('name', 'Alice');\nlet name = localStorage.getItem('name');\nconsole.log(name); // Output: Alice\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 400
  },
  {
    "question": "How does the `async` and `await` work in JavaScript?",
    "label": "javascript, async, await, promises",
    "language": "en",
    "context": "`async` and `await` are used to work with asynchronous code in a more readable and synchronous-like manner.",
    "answer": "The `async` keyword makes a function return a promise, and the `await` keyword pauses the execution of the function until the promise resolves.\n\nExample:\n```javascript\nasync function fetchData() {\n  const response = await fetch('https://api.example.com');\n  const data = await response.json();\n  console.log(data);\n}\nfetchData();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 508
  },
  {
    "question": "What is the difference between `let`, `const`, and `var` in JavaScript?",
    "label": "javascript, let, const, var",
    "language": "en",
    "context": "`let`, `const`, and `var` are used for variable declaration in JavaScript, but they have different scoping rules and behaviors.",
    "answer": "`let` and `const` have block-level scope, while `var` has function-level scope. `let` allows reassignment, but `const` does not.\n\nExample:\n```javascript\nlet x = 5;\nconst y = 10;\nvar z = 15;\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
    "start_char": 0,
    "end_char": 417
  },
  {
    "question": "How to handle errors using `try`, `catch`, and `finally` in JavaScript?",
    "label": "javascript, error-handling, try-catch",
    "language": "en",
    "context": "`try`, `catch`, and `finally` are used to handle errors in JavaScript to prevent crashes and provide graceful error handling.",
    "answer": "Use `try` to wrap the code that might throw an error, `catch` to handle the error, and `finally` to execute code that runs regardless of success or failure.\n\nExample:\n```javascript\ntry {\n  let result = riskyFunction();\n} catch (error) {\n  console.log('Error:', error);\n} finally {\n  console.log('This will always run');\n}\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch",
    "start_char": 0,
    "end_char": 528
  },
  {
    "question": "What is the purpose of the `filter()` method in JavaScript arrays?",
    "label": "javascript, array, filter",
    "language": "en",
    "context": "`filter()` creates a new array with all elements that pass the test implemented by the provided function.",
    "answer": "`filter()` is used to filter out elements based on a condition.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3, 4, 5];\nlet evenNumbers = numbers.filter(number => number % 2 === 0);\nconsole.log(evenNumbers); // Output: [2, 4]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",
    "start_char": 0,
    "end_char": 463
  },
  {
    "question": "How to convert a string to a number in JavaScript?",
    "label": "javascript, string, number, conversion",
    "language": "en",
    "context": "Converting strings to numbers is necessary for performing arithmetic operations in JavaScript.",
    "answer": "You can use `Number()`, `parseInt()`, or `parseFloat()` to convert strings to numbers.\n\nExample:\n```javascript\nlet str = '42';\nlet num = Number(str);\nconsole.log(num); // Output: 42\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "start_char": 0,
    "end_char": 414
  },
  {
    "question": "What is the purpose of the `reduce()` method in JavaScript arrays?",
    "label": "javascript, array, reduce",
    "language": "en",
    "context": "`reduce()` applies a function against an accumulator and each element in the array to reduce it to a single value.",
    "answer": "`reduce()` is used to iterate through the array and accumulate a single result.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3, 4];\nlet sum = numbers.reduce((acc, num) => acc + num, 0);\nconsole.log(sum); // Output: 10\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",
    "start_char": 0,
    "end_char": 468
  },
  {
    "question": "How to create a simple object in JavaScript?",
    "label": "javascript, object, creation",
    "language": "en",
    "context": "Objects are used to store collections of data and more complex entities in JavaScript.",
    "answer": "Objects can be created using curly braces `{}` or the `new Object()` constructor.\n\nExample:\n```javascript\nlet person = {\n  name: 'John',\n  age: 30\n};\nconsole.log(person.name); // Output: John\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects",
    "start_char": 0,
    "end_char": 408
  },
  {
    "question": "What is the difference between `==` and `===` in JavaScript?",
    "label": "javascript, equality, comparison",
    "language": "en",
    "context": "`==` performs type coercion, while `===` checks both value and type equality in JavaScript.",
    "answer": "`==` checks for equality after type coercion, while `===` checks for equality without type conversion.\n\nExample:\n```javascript\nconsole.log(5 == '5'); // true\nconsole.log(5 === '5'); // false\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality",
    "start_char": 0,
    "end_char": 413
  },
  {
    "question": "How to create a promise in JavaScript?",
    "label": "javascript, promise, async",
    "language": "en",
    "context": "A `Promise` is used for deferred and asynchronous computations in JavaScript.",
    "answer": "Promises are created using the `new Promise()` constructor, which accepts a function with `resolve` and `reject` parameters.\n\nExample:\n```javascript\nlet promise = new Promise((resolve, reject) => {\n  let success = true;\n  if (success) {\n    resolve('Operation successful');\n  } else {\n    reject('Operation failed');\n  }\n});\npromise.then(result => console.log(result)).catch(error => console.log(error));\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 520
  },
  {
    "question": "What is the difference between `null` and `undefined` in JavaScript?",
    "label": "javascript, null, undefined, data-types",
    "language": "en",
    "context": "`null` and `undefined` are both special values in JavaScript that represent the absence of a value, but they are used in different contexts.",
    "answer": "`null` is explicitly assigned to indicate no value, while `undefined` means a variable has been declared but not assigned a value.\n\nExample:\n```javascript\nlet x = null;\nlet y;\nconsole.log(x); // Output: null\nconsole.log(y); // Output: undefined\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "What is a closure in JavaScript?",
    "label": "javascript, closure, functions",
    "language": "en",
    "context": "A closure is a function that has access to its own scope, the scope in which it was created, and the global scope.",
    "answer": "Closures allow functions to remember and access variables from their creation scope even when the function is executed outside that scope.\n\nExample:\n```javascript\nfunction outer() {\n  let outerVar = 'I am outer';\n  function inner() {\n    console.log(outerVar);\n  }\n  return inner;\n}\nlet closureFunc = outer();\nclosureFunc(); // Output: I am outer\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",
    "start_char": 0,
    "end_char": 479
  },
  {
    "question": "What is event delegation in JavaScript?",
    "label": "javascript, event-delegation, events",
    "language": "en",
    "context": "Event delegation is a technique that involves attaching a single event listener to a parent element to manage events on its child elements.",
    "answer": "Event delegation improves performance and memory usage by using event bubbling to catch events at a higher level in the DOM tree.\n\nExample:\n```javascript\ndocument.querySelector('#parent').addEventListener('click', function(event) {\n  if (event.target && event.target.matches('button')) {\n    console.log('Button clicked');\n  }\n});\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Events/Event_delegation",
    "start_char": 0,
    "end_char": 507
  },
  {
    "question": "What is the `bind()` method in JavaScript?",
    "label": "javascript, bind, functions",
    "language": "en",
    "context": "`bind()` is a method that creates a new function that, when called, has its `this` keyword set to a specific value.",
    "answer": "The `bind()` method allows you to set the value of `this` in a function, ensuring that it refers to the specified object.\n\nExample:\n```javascript\nlet person = { name: 'John' };\nfunction greet() {\n  console.log('Hello, ' + this.name);\n}\nlet boundGreet = greet.bind(person);\nboundGreet(); // Output: Hello, John\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Function/bind",
    "start_char": 0,
    "end_char": 469
  },
  {
    "question": "What is the purpose of `setTimeout()` in JavaScript?",
    "label": "javascript, setTimeout, timing",
    "language": "en",
    "context": "`setTimeout()` is used to execute a function after a specified delay in milliseconds.",
    "answer": "`setTimeout()` schedules a single execution of a function after the specified time interval.\n\nExample:\n```javascript\nsetTimeout(() => {\n  console.log('This runs after 2 seconds');\n}, 2000);\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout",
    "start_char": 0,
    "end_char": 428
  },
  {
    "question": "What is the difference between `localStorage` and `sessionStorage` in JavaScript?",
    "label": "javascript, localStorage, sessionStorage",
    "language": "en",
    "context": "`localStorage` and `sessionStorage` both store data in the browser, but they have different lifetimes.",
    "answer": "`localStorage` persists data even when the browser is closed, while `sessionStorage` only keeps data for the duration of the session.\n\nExample:\n```javascript\nlocalStorage.setItem('name', 'Alice');\nsessionStorage.setItem('sessionId', '12345');\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",
    "start_char": 0,
    "end_char": 453
  },
  {
    "question": "What are JavaScript Promises?",
    "label": "javascript, promises, asynchronous",
    "language": "en",
    "context": "A JavaScript Promise represents the eventual completion or failure of an asynchronous operation.",
    "answer": "Promises are used to handle asynchronous operations and allow chaining of methods with `.then()` and `.catch()` for success and error handling.\n\nExample:\n```javascript\nlet promise = new Promise((resolve, reject) => {\n  let success = true;\n  if (success) {\n    resolve('Success');\n  } else {\n    reject('Failure');\n  }\n});\npromise.then(result => console.log(result)).catch(error => console.log(error));\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 516
  },
  {
    "question": "What is the use of `this` keyword in JavaScript?",
    "label": "javascript, this, context",
    "language": "en",
    "context": "`this` refers to the context in which a function is executed, and its value changes depending on how the function is called.",
    "answer": "`this` can refer to the global object, an object, or a function depending on how the function is invoked.\n\nExample:\n```javascript\nfunction show() {\n  console.log(this);\n}\nlet obj = { show: show };\nobj.show(); // Output: obj\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "What is the purpose of `Promise.all()` in JavaScript?",
    "label": "javascript, promises, async",
    "language": "en",
    "context": "`Promise.all()` is used to run multiple promises in parallel and resolve when all promises are fulfilled.",
    "answer": "`Promise.all()` accepts an array of promises and returns a new promise that resolves when all the input promises are resolved.\n\nExample:\n```javascript\nlet promise1 = Promise.resolve('First');\nlet promise2 = Promise.resolve('Second');\nPromise.all([promise1, promise2]).then(results => {\n  console.log(results); // Output: ['First', 'Second']\n});\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all",
    "start_char": 0,
    "end_char": 485
  },
  {
    "question": "What is the `split()` method in JavaScript?",
    "label": "javascript, string, split",
    "language": "en",
    "context": "`split()` is a string method that divides a string into an array of substrings based on a specified delimiter.",
    "answer": "`split()` takes a separator and returns an array of substrings.\n\nExample:\n```javascript\nlet sentence = 'JavaScript is awesome';\nlet words = sentence.split(' ');\nconsole.log(words); // Output: ['JavaScript', 'is', 'awesome']\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split",
    "start_char": 0,
    "end_char": 466
  },
  {
    "question": "What is the purpose of the `filter()` method in JavaScript?",
    "label": "javascript, array, filter",
    "language": "en",
    "context": "`filter()` is an array method that creates a new array with all elements that pass the test implemented by the provided function.",
    "answer": "`filter()` is useful for removing elements from an array based on a specific condition.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3, 4, 5];\nlet evenNumbers = numbers.filter(num => num % 2 === 0);\nconsole.log(evenNumbers); // Output: [2, 4]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",
    "start_char": 0,
    "end_char": 486
  },
  {
    "question": "What is the `map()` method in JavaScript?",
    "label": "javascript, array, map",
    "language": "en",
    "context": "`map()` is an array method that creates a new array with the results of calling a provided function on every element in the array.",
    "answer": "`map()` is used to transform the elements of an array based on a function.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3];\nlet doubled = numbers.map(num => num * 2);\nconsole.log(doubled); // Output: [2, 4, 6]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "What is the purpose of `reduce()` in JavaScript?",
    "label": "javascript, array, reduce",
    "language": "en",
    "context": "`reduce()` is an array method that applies a function to an accumulator and each element in the array (from left to right) to reduce it to a single value.",
    "answer": "`reduce()` is often used to accumulate values such as sums or concatenations.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3];\nlet sum = numbers.reduce((acc, num) => acc + num, 0);\nconsole.log(sum); // Output: 6\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",
    "start_char": 0,
    "end_char": 468
  },
  {
    "question": "What is the purpose of the `forEach()` method in JavaScript?",
    "label": "javascript, array, forEach",
    "language": "en",
    "context": "`forEach()` is an array method that executes a provided function once for each element in the array.",
    "answer": "`forEach()` is useful for performing operations on every element in an array without returning a new array.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3];\nnumbers.forEach(num => console.log(num)); // Output: 1 2 3\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach",
    "start_char": 0,
    "end_char": 464
  },
  {
    "question": "What is `async` and `await` in JavaScript?",
    "label": "javascript, async, await, promises",
    "language": "en",
    "context": "`async` and `await` are used to work with asynchronous code in JavaScript in a more synchronous manner.",
    "answer": "`async` makes a function return a promise, and `await` pauses the execution of the function until the promise is resolved.\n\nExample:\n```javascript\nasync function fetchData() {\n  let response = await fetch('https://api.example.com');\n  let data = await response.json();\n  console.log(data);\n}\nfetchData();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
    "start_char": 0,
    "end_char": 472
  },
  {
    "question": "What is the purpose of `Object.assign()` in JavaScript?",
    "label": "javascript, object, assign",
    "language": "en",
    "context": "`Object.assign()` is used to copy the values of all enumerable properties from one or more source objects to a target object.",
    "answer": "`Object.assign()` allows you to clone objects or merge multiple objects into one.\n\nExample:\n```javascript\nlet obj1 = { a: 1, b: 2 };\nlet obj2 = { b: 3, c: 4 };\nlet merged = Object.assign({}, obj1, obj2);\nconsole.log(merged); // Output: { a: 1, b: 3, c: 4 }\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",
    "start_char": 0,
    "end_char": 469
  },
  {
    "question": "What is the `concat()` method in JavaScript?",
    "label": "javascript, array, concat",
    "language": "en",
    "context": "`concat()` is used to merge two or more arrays into one.",
    "answer": "`concat()` does not modify the original arrays but returns a new array that contains the merged values.\n\nExample:\n```javascript\nlet arr1 = [1, 2];\nlet arr2 = [3, 4];\nlet merged = arr1.concat(arr2);\nconsole.log(merged); // Output: [1, 2, 3, 4]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat",
    "start_char": 0,
    "end_char": 464
  },
  {
    "question": "What is `indexOf()` method in JavaScript?",
    "label": "javascript, array, indexOf",
    "language": "en",
    "context": "`indexOf()` is an array method that returns the first index at which a given element can be found in the array, or `-1` if it is not present.",
    "answer": "`indexOf()` is useful for checking if an element exists in an array and finding its position.\n\nExample:\n```javascript\nlet fruits = ['apple', 'banana', 'cherry'];\nlet index = fruits.indexOf('banana');\nconsole.log(index); // Output: 1\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf",
    "start_char": 0,
    "end_char": 468
  },
  {
    "question": "What is the `join()` method in JavaScript?",
    "label": "javascript, array, join",
    "language": "en",
    "context": "`join()` is an array method that combines all the elements of an array into a single string, separated by a specified separator.",
    "answer": "`join()` can be used to join array elements into a string with a custom separator.\n\nExample:\n```javascript\nlet fruits = ['apple', 'banana', 'cherry'];\nlet result = fruits.join(', ');\nconsole.log(result); // Output: 'apple, banana, cherry'\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join",
    "start_char": 0,
    "end_char": 467
  },
  {
    "question": "What is the `slice()` method in JavaScript?",
    "label": "javascript, array, slice",
    "language": "en",
    "context": "`slice()` is an array method that returns a shallow copy of a portion of an array into a new array object.",
    "answer": "`slice()` can be used to extract a portion of an array without modifying the original array.\n\nExample:\n```javascript\nlet fruits = ['apple', 'banana', 'cherry'];\nlet sliced = fruits.slice(1, 3);\nconsole.log(sliced); // Output: ['banana', 'cherry']\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",
    "start_char": 0,
    "end_char": 472
  },
  {
    "question": "What is the difference between `==` and `===` in JavaScript?",
    "label": "javascript, comparison, equality",
    "language": "en",
    "context": "`==` checks for value equality with type coercion, whereas `===` checks for both value and type equality.",
    "answer": "`==` performs type conversion if the types are different, while `===` does not. This can lead to different outcomes.\n\nExample:\n```javascript\nconsole.log(5 == '5');   // true\nconsole.log(5 === '5');  // false\n```\nUse `===` to avoid unexpected behavior.\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness",
    "start_char": 0,
    "end_char": 408
  },
  {
    "question": "What is a closure in JavaScript?",
    "label": "javascript, closure, functions",
    "language": "en",
    "context": "A closure is a function that has access to its own scope, the scope of the outer function, and the global scope.",
    "answer": "Closures allow functions to retain access to variables from an outer function even after that outer function has returned.\n\nExample:\n```javascript\nfunction outer() {\n  let count = 0;\n  return function inner() {\n    count++;\n    console.log(count);\n  };\n}\nconst counter = outer();\ncounter(); // Output: 1\ncounter(); // Output: 2\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",
    "start_char": 0,
    "end_char": 498
  },
  {
    "question": "What is hoisting in JavaScript?",
    "label": "javascript, hoisting, variables, functions",
    "language": "en",
    "context": "Hoisting is a behavior in JavaScript where variable and function declarations are moved to the top of their scope before code execution.",
    "answer": "Only declarations are hoisted, not initializations. `var` is hoisted differently from `let` and `const`.\n\nExample:\n```javascript\nconsole.log(a); // undefined\nvar a = 5;\n```\nWith `let` or `const`, accessing before declaration causes an error.\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/Hoisting",
    "start_char": 0,
    "end_char": 393
  },
  {
    "question": "What is event bubbling in JavaScript?",
    "label": "javascript, events, bubbling",
    "language": "en",
    "context": "Event bubbling is a concept where an event starts from the target element and bubbles up to its ancestors in the DOM hierarchy.",
    "answer": "In bubbling, if multiple elements are nested, the innermost element's event handler runs first, and then its parent’s, unless propagation is stopped.\n\nExample:\n```javascript\ndiv.addEventListener('click', () => console.log('div'));\nbutton.addEventListener('click', () => console.log('button'));\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "What is the purpose of `preventDefault()` in JavaScript?",
    "label": "javascript, events, preventDefault",
    "language": "en",
    "context": "`preventDefault()` is used to stop the default behavior of an element when an event occurs.",
    "answer": "It is commonly used to stop a form from submitting or a link from navigating.\n\nExample:\n```javascript\ndocument.querySelector('form').addEventListener('submit', function(event) {\n  event.preventDefault();\n  console.log('Form submission prevented');\n});\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault",
    "start_char": 0,
    "end_char": 415
  },
  {
    "question": "What is the difference between `null` and `undefined` in JavaScript?",
    "label": "javascript, types, null, undefined",
    "language": "en",
    "context": "`null` is an assignment value that represents no value, while `undefined` means a variable has been declared but not assigned a value.",
    "answer": "`null` is an intentional absence of value, and `undefined` is the default for uninitialized variables.\n\nExample:\n```javascript\nlet a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#null_and_undefined",
    "start_char": 0,
    "end_char": 433
  },
  {
    "question": "What are template literals in JavaScript?",
    "label": "javascript, strings, template literals",
    "language": "en",
    "context": "Template literals allow embedded expressions and multiline strings using backticks (`).",
    "answer": "They use `${}` to embed expressions and can span multiple lines.\n\nExample:\n```javascript\nlet name = 'Alice';\nlet message = `Hello, ${name}!\nWelcome to JavaScript.`;\nconsole.log(message);\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",
    "start_char": 0,
    "end_char": 388
  },
  {
    "question": "What is the difference between `let`, `const`, and `var` in JavaScript?",
    "label": "javascript, variables, let, const, var",
    "language": "en",
    "context": "`let` and `const` are block-scoped, while `var` is function-scoped.",
    "answer": "`let` allows reassignment, `const` does not. `var` is hoisted and can be redeclared. Prefer `let` and `const` in modern JS.\n\nExample:\n```javascript\nlet a = 1;\nconst b = 2;\nvar c = 3;\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
    "start_char": 0,
    "end_char": 360
  },
  {
    "question": "What is the use of the `typeof` operator in JavaScript?",
    "label": "javascript, typeof, types",
    "language": "en",
    "context": "`typeof` is used to determine the type of a variable or expression in JavaScript.",
    "answer": "It returns a string indicating the type, such as 'number', 'string', 'boolean', etc.\n\nExample:\n```javascript\nconsole.log(typeof 42);       // 'number'\nconsole.log(typeof 'hello');  // 'string'\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof",
    "start_char": 0,
    "end_char": 362
  },
  {
    "question": "What is `NaN` in JavaScript?",
    "label": "javascript, number, NaN",
    "language": "en",
    "context": "`NaN` stands for 'Not a Number' and represents a value that is not a legal number.",
    "answer": "It usually occurs when a math operation fails or when you try to convert a non-numeric string to a number.\n\nExample:\n```javascript\nconsole.log('abc' / 2); // NaN\nconsole.log(isNaN('abc')); // true\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "start_char": 0,
    "end_char": 397
  },
  {
    "question": "What is the `this` keyword in JavaScript?",
    "label": "javascript, this, functions",
    "language": "en",
    "context": "`this` refers to the object from which the function was called.",
    "answer": "The value of `this` depends on the execution context. In a method, `this` refers to the object; alone, it refers to the global object.\n\nExample:\n```javascript\nconst obj = {\n  name: 'Alice',\n  greet() {\n    console.log(this.name);\n  }\n};\nobj.greet(); // Output: Alice\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
    "start_char": 0,
    "end_char": 429
  },
  {
    "question": "What are promises in JavaScript?",
    "label": "javascript, promises, async",
    "language": "en",
    "context": "A Promise is an object representing the eventual completion or failure of an asynchronous operation.",
    "answer": "Promises allow chaining asynchronous operations. They have three states: pending, fulfilled, and rejected.\n\nExample:\n```javascript\nfetch('https://api.example.com')\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error(error));\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises",
    "start_char": 0,
    "end_char": 438
  },
  {
    "question": "What is async/await in JavaScript?",
    "label": "javascript, async, await, promises",
    "language": "en",
    "context": "Async/await is syntax for writing asynchronous code in a synchronous style using Promises.",
    "answer": "`async` functions return a Promise. `await` pauses execution until the Promise resolves.\n\nExample:\n```javascript\nasync function getData() {\n  try {\n    let response = await fetch('https://api.example.com');\n    let data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Promises",
    "start_char": 0,
    "end_char": 489
  },
  {
    "question": "What is the difference between synchronous and asynchronous code in JavaScript?",
    "label": "javascript, async, sync",
    "language": "en",
    "context": "Synchronous code runs sequentially, blocking the thread. Asynchronous code allows non-blocking operations.",
    "answer": "JavaScript uses a single-threaded model, but async operations (e.g., API calls) can run in the background, improving performance.\n\nExample:\n```javascript\nconsole.log('Start');\nsetTimeout(() => console.log('Async'), 1000);\nconsole.log('End');\n```\n\nOutput:\n```\nStart\nEnd\nAsync\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous",
    "start_char": 0,
    "end_char": 471
  },
  {
    "question": "What is an arrow function in JavaScript?",
    "label": "javascript, functions, arrow-function",
    "language": "en",
    "context": "Arrow functions are a concise syntax for writing functions, introduced in ES6.",
    "answer": "Arrow functions do not bind their own `this`, making them ideal for callbacks.\n\nExample:\n```javascript\nconst add = (a, b) => a + b;\nconsole.log(add(2, 3)); // Output: 5\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions",
    "start_char": 0,
    "end_char": 344
  },
  {
    "question": "What are higher-order functions in JavaScript?",
    "label": "javascript, functions, higher-order",
    "language": "en",
    "context": "Higher-order functions are functions that take other functions as arguments or return them.",
    "answer": "They are useful for abstraction and functional programming.\n\nExample:\n```javascript\nfunction greet(name) {\n  return function(message) {\n    console.log(`${message}, ${name}`);\n  }\n}\nconst helloAlice = greet('Alice');\nhelloAlice('Hello');\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/Higher-order_function",
    "start_char": 0,
    "end_char": 401
  },
  {
    "question": "What is the difference between `map()`, `filter()`, and `reduce()` in JavaScript?",
    "label": "javascript, array-methods, functional-programming",
    "language": "en",
    "context": "`map()` transforms each array element, `filter()` removes elements that don’t meet criteria, and `reduce()` accumulates values into one.",
    "answer": "Each serves a different purpose in manipulating arrays.\n\nExample:\n```javascript\nlet numbers = [1, 2, 3, 4];\nlet doubled = numbers.map(n => n * 2);\nlet even = numbers.filter(n => n % 2 === 0);\nlet sum = numbers.reduce((a, b) => a + b, 0);\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "start_char": 0,
    "end_char": 456
  },
  {
    "question": "What is the use of `setTimeout()` in JavaScript?",
    "label": "javascript, timing, setTimeout",
    "language": "en",
    "context": "`setTimeout()` allows you to delay the execution of a function by a specified number of milliseconds.",
    "answer": "It's commonly used to create delays or defer execution.\n\nExample:\n```javascript\nconsole.log('Start');\nsetTimeout(() => console.log('Delayed'), 2000);\nconsole.log('End');\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/setTimeout",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is `JSON.stringify()` and `JSON.parse()` in JavaScript?",
    "label": "javascript, JSON, stringify, parse",
    "language": "en",
    "context": "`JSON.stringify()` converts JavaScript objects into JSON strings. `JSON.parse()` converts JSON strings back into objects.",
    "answer": "They are useful for storing and transmitting data.\n\nExample:\n```javascript\nconst obj = { name: 'Alice' };\nconst json = JSON.stringify(obj);\nconsole.log(json); // '{\"name\":\"Alice\"}'\nconst parsed = JSON.parse(json);\nconsole.log(parsed.name); // Alice\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "What is the event loop in JavaScript?",
    "label": "javascript, event-loop, async",
    "language": "en",
    "context": "The event loop handles the execution of multiple chunks of code over time, coordinating tasks like callbacks, promises, and UI updates.",
    "answer": "JavaScript is single-threaded. The event loop allows non-blocking execution by managing the call stack and the task queue.\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop",
    "start_char": 0,
    "end_char": 324
  },
  {
    "question": "What is a closure in JavaScript?",
    "label": "javascript, closure, scope",
    "language": "en",
    "context": "A closure is a function that remembers the variables from its lexical scope even when the function is executed outside that scope.",
    "answer": "Closures allow functions to access variables from an enclosing scope even after that scope has closed.\n\nExample:\n```javascript\nfunction outer() {\n  let count = 0;\n  return function() {\n    count++;\n    console.log(count);\n  };\n}\nconst counter = outer();\ncounter(); // 1\ncounter(); // 2\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",
    "start_char": 0,
    "end_char": 453
  },
  {
    "question": "What is the difference between `null` and `undefined` in JavaScript?",
    "label": "javascript, null, undefined, types",
    "language": "en",
    "context": "`undefined` means a variable has been declared but not assigned a value. `null` is an assignment value that represents no value.",
    "answer": "`undefined` is the default value of uninitialized variables. `null` is explicitly assigned to indicate 'no value'.\n\nExample:\n```javascript\nlet a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "start_char": 0,
    "end_char": 378
  },
  {
    "question": "What is hoisting in JavaScript?",
    "label": "javascript, hoisting, variables, functions",
    "language": "en",
    "context": "Hoisting is JavaScript’s default behavior of moving declarations to the top of the current scope.",
    "answer": "Variable and function declarations are hoisted to the top of their scope.\n\nExample:\n```javascript\nconsole.log(a); // undefined\nvar a = 5;\n```\n\nFunction declarations are also hoisted:\n```javascript\nhello();\nfunction hello() {\n  console.log('Hi');\n}\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/Hoisting",
    "start_char": 0,
    "end_char": 375
  },
  {
    "question": "What are template literals in JavaScript?",
    "label": "javascript, strings, template-literals",
    "language": "en",
    "context": "Template literals are string literals allowing embedded expressions, denoted by backticks (`).",
    "answer": "They support multi-line strings and interpolation with `${}` syntax.\n\nExample:\n```javascript\nconst name = 'Alice';\nconsole.log(`Hello, ${name}!`); // Hello, Alice!\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",
    "start_char": 0,
    "end_char": 290
  },
  {
    "question": "What is the spread operator in JavaScript?",
    "label": "javascript, spread-operator, es6",
    "language": "en",
    "context": "The spread operator (`...`) allows an iterable to be expanded in places where zero or more arguments or elements are expected.",
    "answer": "It's commonly used for copying arrays or objects, and for combining them.\n\nExample:\n```javascript\nconst arr = [1, 2];\nconst newArr = [...arr, 3];\nconsole.log(newArr); // [1, 2, 3]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "What is destructuring in JavaScript?",
    "label": "javascript, destructuring, es6",
    "language": "en",
    "context": "Destructuring allows unpacking values from arrays or properties from objects into distinct variables.",
    "answer": "It simplifies code by directly extracting needed elements.\n\nExample:\n```javascript\nconst person = { name: 'Alice', age: 25 };\nconst { name, age } = person;\nconsole.log(name, age); // Alice 25\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Destructuring_assignment",
    "start_char": 0,
    "end_char": 343
  },
  {
    "question": "What is the purpose of `use strict` in JavaScript?",
    "label": "javascript, strict-mode",
    "language": "en",
    "context": "`use strict` is a directive that enables strict mode, which helps catch common coding mistakes.",
    "answer": "Strict mode enforces stricter parsing and error handling in your JavaScript code.\n\nExample:\n```javascript\n'use strict';\nx = 3.14; // Error: x is not defined\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode",
    "start_char": 0,
    "end_char": 312
  },
  {
    "question": "What is the difference between `==` and `===` in JavaScript?",
    "label": "javascript, equality, operators",
    "language": "en",
    "context": "`==` checks for value equality with type coercion. `===` checks for strict equality without type coercion.",
    "answer": "`===` is preferred because it avoids unexpected type conversion.\n\nExample:\n```javascript\nconsole.log(5 == '5');  // true\nconsole.log(5 === '5'); // false\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness",
    "start_char": 0,
    "end_char": 330
  },
  {
    "question": "What is the difference between `var`, `let`, and `const`?",
    "label": "javascript, variables, var-let-const",
    "language": "en",
    "context": "`var` has function scope, `let` and `const` have block scope. `const` is used for constants.",
    "answer": "`let` and `const` are preferred in modern JS for scoping and predictability.\n\nExample:\n```javascript\nvar x = 1;\nlet y = 2;\nconst z = 3;\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
    "start_char": 0,
    "end_char": 299
  },
  {
    "question": "What is event delegation in JavaScript?",
    "label": "javascript, dom, event-delegation",
    "language": "en",
    "context": "Event delegation is a technique where a parent element handles events for its children via event bubbling.",
    "answer": "It improves performance by reducing the number of event listeners.\n\nExample:\n```javascript\ndocument.getElementById('list').addEventListener('click', function(e) {\n  if (e.target && e.target.nodeName === 'LI') {\n    console.log('Item clicked:', e.target.textContent);\n  }\n});\n```\n\n📚 Reference: https://javascript.info/event-delegation",
    "start_char": 0,
    "end_char": 437
  },
  {
    "question": "What is the difference between synchronous and asynchronous code in JavaScript?",
    "label": "javascript, asynchronous, synchronous",
    "language": "en",
    "context": "Synchronous code runs in sequence, each step waits for the previous one. Asynchronous code allows tasks to run in the background.",
    "answer": "Synchronous code blocks further execution until the current operation completes. Asynchronous code uses mechanisms like callbacks, promises, and async/await to allow non-blocking behavior.\n\nExample:\n```javascript\nconsole.log('Start');\nsetTimeout(() => console.log('Async!'), 1000);\nconsole.log('End');\n// Output: Start, End, Async!\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous",
    "start_char": 0,
    "end_char": 458
  },
  {
    "question": "What are Promises in JavaScript?",
    "label": "javascript, promises, asynchronous",
    "language": "en",
    "context": "Promises represent a value that may be available now, later, or never. They are used to handle asynchronous operations.",
    "answer": "A Promise is an object representing the eventual completion or failure of an asynchronous operation.\n\nExample:\n```javascript\nlet promise = new Promise((resolve, reject) => {\n  setTimeout(() => resolve('Done!'), 1000);\n});\npromise.then(result => console.log(result));\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "start_char": 0,
    "end_char": 407
  },
  {
    "question": "What is the event loop in JavaScript?",
    "label": "javascript, event-loop, concurrency",
    "language": "en",
    "context": "The event loop is a mechanism that handles asynchronous callbacks in JavaScript.",
    "answer": "JavaScript is single-threaded. The event loop allows non-blocking operations by managing a queue of callback functions.\n\nExample:\n```javascript\nconsole.log('Start');\nsetTimeout(() => console.log('Callback'), 0);\nconsole.log('End');\n// Output: Start, End, Callback\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop",
    "start_char": 0,
    "end_char": 378
  },
  {
    "question": "What is the difference between `call()`, `apply()`, and `bind()` in JavaScript?",
    "label": "javascript, functions, call-apply-bind",
    "language": "en",
    "context": "`call()`, `apply()`, and `bind()` are methods used to set the `this` context of a function.",
    "answer": "`call()` and `apply()` immediately invoke the function, while `bind()` returns a new function with bound context.\n\nExample:\n```javascript\nfunction greet(greeting) {\n  console.log(`${greeting}, ${this.name}`);\n}\nconst person = { name: 'Alice' };\ngreet.call(person, 'Hello');\ngreet.apply(person, ['Hi']);\nconst boundGreet = greet.bind(person);\nboundGreet('Hey');\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "start_char": 0,
    "end_char": 476
  },
  {
    "question": "What is a callback function in JavaScript?",
    "label": "javascript, callback, functions",
    "language": "en",
    "context": "A callback is a function passed into another function as an argument to be executed later.",
    "answer": "Callbacks are used for asynchronous operations or customizing behavior.\n\nExample:\n```javascript\nfunction greet(name, callback) {\n  console.log('Hello, ' + name);\n  callback();\n}\ngreet('Alice', function() {\n  console.log('This is a callback.');\n});\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/Callback_function",
    "start_char": 0,
    "end_char": 354
  },
  {
    "question": "What is the DOM in web development?",
    "label": "html, javascript, dom",
    "language": "en",
    "context": "DOM (Document Object Model) represents the page structure as a tree of objects that JavaScript can interact with.",
    "answer": "The DOM allows dynamic manipulation of web pages with JavaScript.\n\nExample:\n```javascript\ndocument.getElementById('title').textContent = 'New Title';\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model",
    "start_char": 0,
    "end_char": 285
  },
  {
    "question": "What is the difference between `innerText` and `textContent` in JavaScript?",
    "label": "javascript, dom, text",
    "language": "en",
    "context": "`innerText` considers CSS styling and hidden elements. `textContent` returns all text regardless of styling.",
    "answer": "`textContent` is faster and more consistent. `innerText` is more aligned with what the user sees.\n\nExample:\n```javascript\nelement.textContent;\nelement.innerText;\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent",
    "start_char": 0,
    "end_char": 307
  },
  {
    "question": "What is an Immediately Invoked Function Expression (IIFE)?",
    "label": "javascript, iife, functions",
    "language": "en",
    "context": "An IIFE is a function that runs as soon as it is defined.",
    "answer": "IIFEs are used to create a new scope and avoid polluting the global namespace.\n\nExample:\n```javascript\n(function() {\n  console.log('IIFE executed');\n})();\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/IIFE",
    "start_char": 0,
    "end_char": 293
  },
  {
    "question": "What are arrow functions in JavaScript?",
    "label": "javascript, es6, arrow-functions",
    "language": "en",
    "context": "Arrow functions are a shorter syntax for writing functions in ES6 and do not bind their own `this`.",
    "answer": "Arrow functions simplify function syntax and inherit `this` from the surrounding scope.\n\nExample:\n```javascript\nconst add = (a, b) => a + b;\nconsole.log(add(2, 3)); // 5\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions",
    "start_char": 0,
    "end_char": 319
  },
  {
    "question": "What is the difference between `forEach` and `map` in JavaScript?",
    "label": "javascript, arrays, foreach, map",
    "language": "en",
    "context": "`forEach` executes a function for each array element. `map` creates a new array with the result of the function.",
    "answer": "`map` returns a new array; `forEach` does not return anything.\n\nExample:\n```javascript\nconst arr = [1, 2, 3];\narr.forEach(x => console.log(x));\nconst doubled = arr.map(x => x * 2);\nconsole.log(doubled); // [2, 4, 6]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "start_char": 0,
    "end_char": 361
  },
  {
    "question": "What is the purpose of the `querySelector` method in JavaScript?",
    "label": "javascript, dom, selectors",
    "language": "en",
    "context": "`querySelector` allows you to select the first element that matches a specified CSS selector.",
    "answer": "`querySelector` is used to retrieve the first element within the document that matches the given selector.\n\nExample:\n```javascript\nconst title = document.querySelector('#main-title');\nconsole.log(title.textContent);\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector",
    "start_char": 0,
    "end_char": 317
  },
  {
    "question": "What is the use of `addEventListener` in JavaScript?",
    "label": "javascript, dom, events",
    "language": "en",
    "context": "`addEventListener` is used to attach an event handler to an HTML element.",
    "answer": "`addEventListener` allows multiple event handlers for the same event and element, and provides better control over event handling.\n\nExample:\n```javascript\ndocument.getElementById('btn').addEventListener('click', function() {\n  alert('Button clicked!');\n});\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "What are template literals in JavaScript?",
    "label": "javascript, es6, strings",
    "language": "en",
    "context": "Template literals are string literals allowing embedded expressions, denoted by backticks (`).",
    "answer": "Template literals make string formatting and multi-line strings easier.\n\nExample:\n```javascript\nconst name = 'Alice';\nconst greeting = `Hello, ${name}!`;\nconsole.log(greeting); // Hello, Alice!\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",
    "start_char": 0,
    "end_char": 320
  },
  {
    "question": "What is hoisting in JavaScript?",
    "label": "javascript, hoisting, variables",
    "language": "en",
    "context": "Hoisting is JavaScript's default behavior of moving declarations to the top of the current scope.",
    "answer": "Variables and function declarations are hoisted, meaning they are accessible before their declaration in code.\n\nExample:\n```javascript\nconsole.log(x); // undefined\nvar x = 5;\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Glossary/Hoisting",
    "start_char": 0,
    "end_char": 287
  },
  {
    "question": "What is the difference between `let`, `const`, and `var` in JavaScript?",
    "label": "javascript, variables, scope",
    "language": "en",
    "context": "`var` is function-scoped, while `let` and `const` are block-scoped. `const` cannot be reassigned.",
    "answer": "`var` is function-scoped and hoisted. `let` and `const` are block-scoped. `const` is immutable.\n\nExample:\n```javascript\nvar x = 1;\nlet y = 2;\nconst z = 3;\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
    "start_char": 0,
    "end_char": 297
  },
  {
    "question": "What is the spread operator in JavaScript?",
    "label": "javascript, spread, es6",
    "language": "en",
    "context": "The spread operator (`...`) expands elements of an array or object into individual elements.",
    "answer": "It is used to copy, merge, or expand arrays and objects.\n\nExample:\n```javascript\nconst arr1 = [1, 2];\nconst arr2 = [...arr1, 3]; // [1, 2, 3]\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",
    "start_char": 0,
    "end_char": 280
  },
  {
    "question": "What is destructuring in JavaScript?",
    "label": "javascript, destructuring, es6",
    "language": "en",
    "context": "Destructuring allows unpacking values from arrays or properties from objects into variables.",
    "answer": "It provides a concise way to extract values into variables.\n\nExample:\n```javascript\nconst user = { name: 'Alice', age: 25 };\nconst { name, age } = user;\nconsole.log(name); // Alice\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Destructuring_assignment",
    "start_char": 0,
    "end_char": 296
  },
  {
    "question": "What is a closure in JavaScript?",
    "label": "javascript, closure, functions",
    "language": "en",
    "context": "A closure is a function that remembers variables from its outer scope even after the outer function has finished executing.",
    "answer": "Closures allow for data privacy and maintaining state in asynchronous programming.\n\nExample:\n```javascript\nfunction outer() {\n  let counter = 0;\n  return function inner() {\n    counter++;\n    return counter;\n  }\n}\nconst count = outer();\nconsole.log(count()); // 1\nconsole.log(count()); // 2\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",
    "start_char": 0,
    "end_char": 423
  },
  {
    "question": "What are the different types of loops in JavaScript?",
    "label": "javascript, loops",
    "language": "en",
    "context": "JavaScript supports several types of loops including `for`, `while`, `do...while`, `for...in`, and `for...of`.",
    "answer": "`for` loops are used for definite iterations; `while` and `do...while` for indefinite ones. `for...in` iterates over object properties; `for...of` over iterable objects.\n\nExample:\n```javascript\nfor (let i = 0; i < 3; i++) console.log(i);\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration",
    "start_char": 0,
    "end_char": 355
  },
  {
    "question": "What is event delegation in JavaScript?",
    "label": "javascript, events, delegation",
    "language": "en",
    "context": "Event delegation is a technique that uses event bubbling to handle events at a higher level in the DOM.",
    "answer": "It allows a single event handler on a parent element to manage events from multiple child elements.\n\nExample:\n```javascript\ndocument.getElementById('parent').addEventListener('click', function(e) {\n  if (e.target.matches('.child')) {\n    console.log('Child clicked');\n  }\n});\n```\n\n📚 Reference: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events",
    "start_char": 0,
    "end_char": 391
  },
  {
    "question": "What is the difference between a list and a tuple in Python?",
    "label": "python, list, tuple",
    "language": "en",
    "context": "Lists and tuples are both used to store collections of items in Python. However, they have different properties regarding mutability and syntax.",
    "answer": "A list is mutable, meaning its contents can be changed, while a tuple is immutable. Lists use square brackets `[]`, and tuples use parentheses `()`.\n\nExample:\n```python\nmy_list = [1, 2, 3]\nmy_tuple = (1, 2, 3)\nmy_list[0] = 10  # OK\n# my_tuple[0] = 10  # Error\n```\n\n📚 Reference: https://docs.python.org/3/tutorial/datastructures.html",
    "start_char": 0,
    "end_char": 368
  },
  {
    "question": "What is the OSI model in networking?",
    "label": "networking, osi-model",
    "language": "en",
    "context": "The OSI (Open Systems Interconnection) model is a conceptual framework used to understand network interactions in seven distinct layers.",
    "answer": "The OSI model consists of seven layers: Physical, Data Link, Network, Transport, Session, Presentation, and Application. Each layer has specific responsibilities in facilitating communication between systems.\n\n📚 Reference: https://en.wikipedia.org/wiki/OSI_model",
    "start_char": 0,
    "end_char": 330
  },
  {
    "question": "What is a foreign key in a relational database?",
    "label": "database, sql, foreign-key",
    "language": "en",
    "context": "A foreign key is a field in one table that uniquely identifies a row of another table. It is used to establish a relationship between two tables.",
    "answer": "A foreign key helps maintain referential integrity by linking records in different tables. It ensures that the value in one table must exist in another table.\n\nExample:\n```sql\nCREATE TABLE Orders (\n  OrderID INT,\n  CustomerID INT,\n  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)\n);\n```\n\n📚 Reference: https://www.w3schools.com/sql/sql_foreignkey.asp",
    "start_char": 0,
    "end_char": 384
  },
  {
    "question": "What is the difference between TCP and UDP?",
    "label": "networking, tcp, udp",
    "language": "en",
    "context": "TCP and UDP are transport layer protocols. They differ in reliability, speed, and use cases.",
    "answer": "TCP (Transmission Control Protocol) is connection-oriented, ensuring reliable and ordered data delivery. UDP (User Datagram Protocol) is connectionless and faster but does not guarantee delivery or order.\n\nTCP is used for web browsing, emails, etc., while UDP is used for streaming, DNS, and gaming.\n\n📚 Reference: https://www.geeksforgeeks.org/difference-between-tcp-and-udp/",
    "start_char": 0,
    "end_char": 421
  },
  {
    "question": "What is virtual memory in operating systems?",
    "label": "operating-systems, virtual-memory",
    "language": "en",
    "context": "Virtual memory allows an operating system to use hardware and disk space efficiently by simulating more RAM than is physically available.",
    "answer": "Virtual memory enables programs to use more memory than physically installed by temporarily transferring data from RAM to disk storage (swap space). It creates an abstraction for applications, simplifying memory management.\n\n📚 Reference: https://en.wikipedia.org/wiki/Virtual_memory",
    "start_char": 0,
    "end_char": 362
  },
  {
    "question": "What is an index in SQL and why is it used?",
    "label": "database, sql, indexing",
    "language": "en",
    "context": "An index in SQL is a data structure that improves the speed of data retrieval operations on a database table.",
    "answer": "Indexes help in faster query processing by reducing the amount of data scanned. They are created on one or more columns.\n\nExample:\n```sql\nCREATE INDEX idx_name ON Customers (LastName);\n```\nHowever, indexes also slow down write operations (INSERT, UPDATE, DELETE).\n\n📚 Reference: https://www.w3schools.com/sql/sql_create_index.asp",
    "start_char": 0,
    "end_char": 358
  },
  {
    "question": "What is a firewall in computer security?",
    "label": "cybersecurity, firewall",
    "language": "en",
    "context": "A firewall is a network security device or software that monitors and controls incoming and outgoing network traffic.",
    "answer": "Firewalls use predetermined security rules to block or allow traffic. They can be hardware-based, software-based, or a combination of both. Firewalls help protect against unauthorized access and cyberattacks.\n\n📚 Reference: https://www.cloudflare.com/learning/ddos/glossary/firewall/",
    "start_char": 0,
    "end_char": 343
  },
  {
    "question": "What is a Python dictionary?",
    "label": "python, dictionary",
    "language": "en",
    "context": "A dictionary in Python is a collection of key-value pairs. It is unordered, changeable, and indexed by keys.",
    "answer": "Dictionaries are defined using curly braces and provide fast access to values using unique keys.\n\nExample:\n```python\nmy_dict = {'name': 'Alice', 'age': 25}\nprint(my_dict['name'])  # Output: Alice\n```\n\n📚 Reference: https://docs.python.org/3/tutorial/datastructures.html#dictionaries",
    "start_char": 0,
    "end_char": 305
  },
  {
    "question": "What is multithreading in programming?",
    "label": "concurrency, multithreading",
    "language": "en",
    "context": "Multithreading is the ability of a CPU or a single core to provide multiple threads of execution concurrently.",
    "answer": "Multithreading allows a program to perform multiple tasks at once by running code in parallel threads. It improves performance in I/O-bound or parallelizable workloads.\n\n📚 Reference: https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)",
    "start_char": 0,
    "end_char": 326
  },
  {
    "question": "What is the difference between stack and queue data structures?",
    "label": "data-structures, stack, queue",
    "language": "en",
    "context": "Stacks and queues are abstract data types that differ in the order in which elements are accessed and removed.",
    "answer": "A stack follows LIFO (Last In, First Out) while a queue follows FIFO (First In, First Out). Stacks use `push` and `pop` operations, queues use `enqueue` and `dequeue`.\n\n📚 Reference: https://www.geeksforgeeks.org/stack-vs-queue-data-structures/",
    "start_char": 0,
    "end_char": 316
  },
  {
    "question": "What is the purpose of the `with` statement in Python?",
    "label": "python, context-manager",
    "language": "en",
    "context": "The `with` statement simplifies exception handling and ensures that resources are properly managed, like closing a file.",
    "answer": "The `with` statement in Python is used with context managers to handle setup and cleanup actions automatically. It ensures resources like files or database connections are properly closed after use.\n\nExample:\n```python\nwith open('file.txt', 'r') as file:\n    data = file.read()\n```\n\n📚 Reference: https://docs.python.org/3/reference/compound_stmts.html#with",
    "start_char": 0,
    "end_char": 401
  },
  {
    "question": "What is normalization in databases?",
    "label": "database, normalization",
    "language": "en",
    "context": "Normalization is a process used in databases to reduce data redundancy and improve data integrity.",
    "answer": "Normalization involves organizing tables and relationships to minimize duplication and ensure consistency. Common normal forms include 1NF, 2NF, and 3NF.\n\n📚 Reference: https://www.studytonight.com/dbms/database-normalization.php",
    "start_char": 0,
    "end_char": 287
  },
  {
    "question": "What is deadlock in operating systems?",
    "label": "operating-systems, deadlock",
    "language": "en",
    "context": "A deadlock is a situation in which two or more processes are waiting for each other to release resources, leading to a standstill.",
    "answer": "In operating systems, a deadlock happens when each process in a set is waiting for a resource that another process in the set holds. It results in a cycle and no process can proceed.\n\n📚 Reference: https://www.geeksforgeeks.org/deadlock-in-operating-system/",
    "start_char": 0,
    "end_char": 316
  },
  {
    "question": "What is latency in networking?",
    "label": "networking, latency",
    "language": "en",
    "context": "Latency refers to the time it takes for a data packet to travel from the source to the destination across a network.",
    "answer": "Latency measures the delay between sending and receiving data. It is affected by factors such as distance, transmission medium, and processing delays. Lower latency means faster communication.\n\n📚 Reference: https://en.wikipedia.org/wiki/Latency_(engineering)",
    "start_char": 0,
    "end_char": 319
  },
  {
    "question": "What is overfitting in machine learning?",
    "label": "machine-learning, overfitting",
    "language": "en",
    "context": "Overfitting is a modeling error that occurs when a machine learning model learns the noise in the training data instead of the actual pattern.",
    "answer": "Overfitting happens when a model performs well on training data but poorly on unseen data. It captures noise rather than general patterns. Techniques like cross-validation, pruning, and regularization help mitigate it.\n\n📚 Reference: https://www.ibm.com/cloud/learn/overfitting",
    "start_char": 0,
    "end_char": 370
  },
  {
    "question": "What is a hash function and why is it used in security?",
    "label": "cybersecurity, hash-function",
    "language": "en",
    "context": "A hash function converts data into a fixed-size string of characters, which appears random.",
    "answer": "Hash functions are used to verify data integrity. They are deterministic, fast, and hard to reverse. In security, they help store passwords and detect data tampering.\n\nExample algorithms: SHA-256, MD5.\n\n📚 Reference: https://www.cloudflare.com/learning/ssl/what-is-a-hash-function/",
    "start_char": 0,
    "end_char": 331
  },
  {
    "question": "What is Docker and how is it used in DevOps?",
    "label": "devops, docker, containerization",
    "language": "en",
    "context": "Docker is a platform that allows developers to package applications into containers, ensuring consistent environments across different stages of development.",
    "answer": "Docker allows apps and their dependencies to run in isolated environments called containers. It simplifies deployment, scalability, and testing in DevOps pipelines.\n\n📚 Reference: https://docs.docker.com/get-started/overview/",
    "start_char": 0,
    "end_char": 308
  },
  {
    "question": "What is a virtual machine (VM)?",
    "label": "virtualization, operating-systems",
    "language": "en",
    "context": "A virtual machine is a software emulation of a physical computer, running an operating system and applications.",
    "answer": "A VM behaves like a real computer and is run on a host machine using hypervisors. It provides isolation and is used for testing, development, and cloud computing.\n\n📚 Reference: https://azure.microsoft.com/en-us/resources/cloud-computing-dictionary/what-is-a-virtual-machine/",
    "start_char": 0,
    "end_char": 322
  },
  {
    "question": "What is the difference between supervised and unsupervised learning?",
    "label": "machine-learning, ai",
    "language": "en",
    "context": "Supervised and unsupervised learning are two major types of machine learning techniques.",
    "answer": "Supervised learning uses labeled data to train models (e.g., classification), while unsupervised learning finds patterns in unlabeled data (e.g., clustering).\n\n📚 Reference: https://www.ibm.com/cloud/blog/supervised-vs-unsupervised-learning",
    "start_char": 0,
    "end_char": 309
  },
  {
    "question": "What is a RESTful API?",
    "label": "api, web-development, rest",
    "language": "en",
    "context": "RESTful APIs use HTTP requests to perform CRUD operations. They follow REST (Representational State Transfer) architecture principles.",
    "answer": "A RESTful API allows clients to interact with server resources using HTTP methods like GET, POST, PUT, DELETE. It is stateless and uses URIs to access resources.\n\n📚 Reference: https://restfulapi.net/",
    "start_char": 0,
    "end_char": 303
  },
  {
    "question": "What is the difference between a list and a tuple in Python?",
    "label": "python, data-structures",
    "language": "en",
    "context": "In Python, lists and tuples are both used to store collections of items, but they have different properties.",
    "answer": "Lists are mutable, meaning their contents can be changed, while tuples are immutable. Lists use square brackets `[]` and tuples use parentheses `()`.\n\nExample:\n```python\nmy_list = [1, 2, 3]\nmy_tuple = (1, 2, 3)\n```\n\n📚 Reference: https://docs.python.org/3/tutorial/datastructures.html",
    "start_char": 0,
    "end_char": 385
  },
  {
    "question": "What is the function of the `chmod` command in Linux?",
    "label": "linux, chmod, permissions",
    "language": "en",
    "context": "The `chmod` command is used to change the file permissions in Unix and Linux systems.",
    "answer": "`chmod` stands for 'change mode'. It is used to set file permissions (read, write, execute) for user, group, and others.\n\nExample:\n```bash\nchmod 755 script.sh\n```\n\n📚 Reference: https://linuxize.com/post/chmod-command-in-linux/",
    "start_char": 0,
    "end_char": 316
  },
  {
    "question": "What is version control and why is Git popular?",
    "label": "git, version-control",
    "language": "en",
    "context": "Version control helps track changes to code or files, and Git is one of the most widely used systems.",
    "answer": "Version control allows multiple developers to collaborate and track changes. Git is popular because it's distributed, fast, and supports branching and merging efficiently.\n\n📚 Reference: https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control",
    "start_char": 0,
    "end_char": 328
  },
  {
    "question": "What is cloud computing?",
    "label": "cloud-computing, infrastructure",
    "language": "en",
    "context": "Cloud computing provides on-demand access to computing resources over the internet.",
    "answer": "Cloud computing enables users to access services like storage, databases, and servers via the internet. It offers scalability, flexibility, and cost-efficiency.\n\n📚 Reference: https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/",
    "start_char": 0,
    "end_char": 296
  },
  {
    "question": "What is an index in a database?",
    "label": "database, indexing",
    "language": "en",
    "context": "Indexes in databases improve the speed of data retrieval operations on a table.",
    "answer": "An index is a data structure that allows the database to find rows faster. It works similarly to an index in a book. Common types include B-trees and hash indexes.\n\n📚 Reference: https://www.geeksforgeeks.org/indexing-in-databases-set-1/",
    "start_char": 0,
    "end_char": 310
  },
  {
    "question": "What is the difference between IPv4 and IPv6?",
    "label": "networking, ipv4, ipv6",
    "language": "en",
    "context": "IPv4 and IPv6 are two versions of the Internet Protocol used for addressing devices on a network.",
    "answer": "IPv4 uses 32-bit addresses (e.g., 192.168.1.1), while IPv6 uses 128-bit addresses (e.g., 2001:0db8::1). IPv6 offers a vastly larger address space and better routing efficiency.\n\n📚 Reference: https://www.cloudflare.com/learning/network-layer/what-is-ipv6/",
    "start_char": 0,
    "end_char": 318
  },
  {
    "question": "What is the difference between classification and regression in machine learning?",
    "label": "machine-learning, classification, regression",
    "language": "en",
    "context": "Classification and regression are both supervised learning methods used for different types of outputs.",
    "answer": "Classification predicts discrete labels (e.g., spam or not spam), while regression predicts continuous values (e.g., price of a house).\n\n📚 Reference: https://scikit-learn.org/stable/supervised_learning.html",
    "start_char": 0,
    "end_char": 295
  },
  {
    "question": "What is a foreign key in SQL?",
    "label": "sql, database, foreign-key",
    "language": "en",
    "context": "A foreign key is a column or group of columns used to establish a link between the data in two tables.",
    "answer": "A foreign key enforces referential integrity between related tables. It ensures that the value in one table corresponds to a value in another table.\n\n📚 Reference: https://www.w3schools.com/sql/sql_foreignkey.asp",
    "start_char": 0,
    "end_char": 295
  },
  {
    "question": "What is a thread in the context of operating systems?",
    "label": "operating-systems, threads",
    "language": "en",
    "context": "A thread is the smallest sequence of programmed instructions that can be managed independently by a scheduler.",
    "answer": "A thread is a unit of execution within a process. Threads share the same memory space but run independently. Multithreading helps in parallel execution.\n\n📚 Reference: https://www.geeksforgeeks.org/multithreading-c-2/",
    "start_char": 0,
    "end_char": 300
  },
  {
    "question": "What is an API gateway and why is it important in microservices?",
    "label": "api-gateway, microservices, devops",
    "language": "en",
    "context": "An API gateway acts as a single entry point for multiple services in a microservices architecture.",
    "answer": "An API gateway handles requests, routing, authentication, and rate-limiting. It simplifies communication and improves security in microservices.\n\n📚 Reference: https://microservices.io/patterns/apigateway.html",
    "start_char": 0,
    "end_char": 292
  },
  {
    "question": "What is the Global Interpreter Lock (GIL) in Python?",
    "label": "python, GIL, concurrency",
    "language": "en",
    "context": "The Global Interpreter Lock (GIL) is a mutex in CPython that prevents multiple native threads from executing Python bytecodes at once.",
    "answer": "The GIL ensures thread safety in CPython by allowing only one thread to execute at a time. It simplifies memory management but limits performance in CPU-bound multithreaded programs.\n\n📚 Reference: https://realpython.com/python-gil/",
    "start_char": 0,
    "end_char": 325
  },
  {
    "question": "What is a deadlock in operating systems?",
    "label": "operating-systems, concurrency",
    "language": "en",
    "context": "A deadlock is a state in which a set of processes are blocked because each process is holding a resource and waiting for another.",
    "answer": "Deadlock occurs when processes wait indefinitely for resources held by each other, forming a cycle. Deadlock prevention, avoidance, and detection are common strategies to handle it.\n\n📚 Reference: https://www.geeksforgeeks.org/deadlock-in-operating-system/",
    "start_char": 0,
    "end_char": 324
  },
  {
    "question": "What is a firewall and how does it work?",
    "label": "network-security, firewall",
    "language": "en",
    "context": "A firewall is a network security device or software that monitors and controls incoming and outgoing traffic.",
    "answer": "Firewalls enforce security policies by filtering network packets based on IP addresses, ports, or protocols. They can be hardware-based or software-based.\n\n📚 Reference: https://www.cisco.com/c/en/us/products/security/firewalls/what-is-a-firewall.html",
    "start_char": 0,
    "end_char": 311
  },
  {
    "question": "What is Infrastructure as a Service (IaaS) in cloud computing?",
    "label": "cloud-computing, iaas",
    "language": "en",
    "context": "IaaS provides virtualized computing resources over the internet.",
    "answer": "IaaS allows users to rent IT infrastructure—servers, storage, networking, and OS—on a pay-as-you-go basis. Examples include AWS EC2, Google Compute Engine, and Azure Virtual Machines.\n\n📚 Reference: https://azure.microsoft.com/en-us/resources/cloud-computing-dictionary/what-is-iaas/",
    "start_char": 0,
    "end_char": 314
  },
  {
    "question": "What is the difference between synchronous and asynchronous operations?",
    "label": "programming, concurrency",
    "language": "en",
    "context": "Synchronous and asynchronous operations differ in how they handle tasks and wait for results.",
    "answer": "Synchronous operations block execution until a task is complete, while asynchronous operations allow other tasks to run during waiting. Asynchronous models improve efficiency in I/O-heavy applications.\n\n📚 Reference: https://www.baeldung.com/cs/synchronous-vs-asynchronous",
    "start_char": 0,
    "end_char": 323
  },
  {
    "question": "What is containerization in DevOps?",
    "label": "devops, docker, containers",
    "language": "en",
    "context": "Containerization is a lightweight alternative to full machine virtualization that packages code and dependencies together.",
    "answer": "Containers isolate applications in a portable environment, enabling consistent deployment across different platforms. Docker is a leading tool for containerization.\n\n📚 Reference: https://docker.com/resources/what-container",
    "start_char": 0,
    "end_char": 314
  },
  {
    "question": "What is embedded systems programming?",
    "label": "embedded-systems, programming",
    "language": "en",
    "context": "Embedded systems programming involves writing code for specialized computing systems that are part of larger devices.",
    "answer": "It includes programming microcontrollers and handling hardware-specific tasks with efficiency and real-time constraints. C and C++ are commonly used languages.\n\n📚 Reference: https://www.geeksforgeeks.org/introduction-to-embedded-systems/",
    "start_char": 0,
    "end_char": 310
  },
  {
    "question": "What is NAT (Network Address Translation)?",
    "label": "networking, NAT",
    "language": "en",
    "context": "NAT is a technique that allows multiple devices on a local network to share a single public IP address.",
    "answer": "NAT modifies IP address information in packet headers to enable private-to-public IP communication. It's commonly used in routers to conserve global IP addresses.\n\n📚 Reference: https://www.cisco.com/c/en/us/solutions/enterprise-networks/what-is-nat.html",
    "start_char": 0,
    "end_char": 305
  },
  {
    "question": "What is a virtual machine (VM)?",
    "label": "virtualization, vm, computing",
    "language": "en",
    "context": "A virtual machine emulates a computer system, allowing multiple OS instances to run on a single physical machine.",
    "answer": "VMs run isolated operating systems using hypervisors like VMware or VirtualBox. They offer flexibility, security, and efficient resource utilization.\n\n📚 Reference: https://www.vmware.com/topics/glossary/content/virtual-machine.html",
    "start_char": 0,
    "end_char": 303
  },
  {
    "question": "What is the use of the 'cron' utility in Linux?",
    "label": "linux, scheduling, cron",
    "language": "en",
    "context": "The 'cron' utility in Linux is used for scheduling tasks to run automatically at specified times and intervals.",
    "answer": "Cron jobs are defined in crontab files and can automate repetitive tasks like backups, script executions, and maintenance. Syntax includes time fields and the command to run.\n\n📚 Reference: https://opensource.com/article/19/9/cron-linux",
    "start_char": 0,
    "end_char": 317
  },
  {
    "question": "What is the difference between a process and a thread?",
    "label": "operating-systems, processes, threads",
    "language": "en",
    "context": "A process is an independent program in execution, whereas a thread is a unit of execution within a process.",
    "answer": "Processes have their own memory space, while threads share the memory of the process. Threads are lighter and more efficient but less isolated than processes.\n\n📚 Reference: https://www.geeksforgeeks.org/difference-between-process-and-thread/",
    "start_char": 0,
    "end_char": 318
  },
  {
    "question": "What is a DNS (Domain Name System) and how does it work?",
    "label": "networking, DNS",
    "language": "en",
    "context": "DNS is the system that translates human-readable domain names to IP addresses, allowing browsers to load internet resources.",
    "answer": "When you enter a domain name, a DNS query is made to find the corresponding IP address. This allows communication between your browser and the web server.\n\n📚 Reference: https://www.cloudflare.com/learning/dns/what-is-dns/",
    "start_char": 0,
    "end_char": 315
  },
  {
    "question": "What is the difference between HTTP and HTTPS?",
    "label": "networking, HTTP, HTTPS",
    "language": "en",
    "context": "HTTP and HTTPS are protocols used for transferring data over the web, with HTTPS adding a layer of security.",
    "answer": "HTTP sends data in plaintext, whereas HTTPS encrypts data with SSL/TLS, ensuring privacy and security during communication.\n\n📚 Reference: https://www.cloudflare.com/learning/ssl/what-is-https/",
    "start_char": 0,
    "end_char": 268
  },
  {
    "question": "What is a RESTful API?",
    "label": "web-development, API, REST",
    "language": "en",
    "context": "REST (Representational State Transfer) is an architectural style for designing networked applications.",
    "answer": "A RESTful API uses HTTP requests to perform CRUD (Create, Read, Update, Delete) operations on resources, typically in JSON format. It is stateless and scalable.\n\n📚 Reference: https://www.redhat.com/en/topics/api/what-is-a-rest-api",
    "start_char": 0,
    "end_char": 303
  },
  {
    "question": "What is version control and why is it important?",
    "label": "software-development, version-control",
    "language": "en",
    "context": "Version control systems (VCS) are tools that track changes in files and allow multiple contributors to work on the same codebase.",
    "answer": "VCS like Git help manage changes in code, provide backup, and allow collaboration. They enable rollback to previous versions if necessary.\n\n📚 Reference: https://git-scm.com/about",
    "start_char": 0,
    "end_char": 256
  },
  {
    "question": "What is the difference between a compiler and an interpreter?",
    "label": "programming, compilers, interpreters",
    "language": "en",
    "context": "Compilers and interpreters are tools that translate source code into machine code, but they do so in different ways.",
    "answer": "A compiler translates the entire source code into machine code at once, while an interpreter translates the code line by line during execution.\n\n📚 Reference: https://www.geeksforgeeks.org/difference-between-compiler-and-interpreter/",
    "start_char": 0,
    "end_char": 313
  },
  {
    "question": "What is a load balancer in a web server architecture?",
    "label": "web-development, load-balancing, servers",
    "language": "en",
    "context": "A load balancer distributes incoming network traffic across multiple servers to ensure no single server becomes overwhelmed.",
    "answer": "By distributing traffic, a load balancer enhances performance and reliability, ensuring users can access services even during high traffic periods.\n\n📚 Reference: https://www.nginx.com/resources/glossary/load-balancer/",
    "start_char": 0,
    "end_char": 299
  },
  {
    "question": "What is the purpose of the 'chmod' command in Linux?",
    "label": "linux, permissions, command-line",
    "language": "en",
    "context": "'chmod' is a command in Linux and Unix systems used to change file permissions.",
    "answer": "'chmod' sets read, write, and execute permissions for the owner, group, and others. Example: `chmod 755 file.txt` grants full permissions to the owner and read-execute permissions to others.\n\n📚 Reference: https://www.gnu.org/software/coreutils/manual/html_node/chmod-invocation.html",
    "start_char": 0,
    "end_char": 324
  },
  {
    "question": "What is a cloud-native application?",
    "label": "cloud-computing, cloud-native, applications",
    "language": "en",
    "context": "Cloud-native applications are designed to run efficiently in cloud environments, utilizing cloud services and infrastructure.",
    "answer": "These applications are scalable, flexible, and resilient, often built using microservices, containers, and orchestrated with tools like Kubernetes.\n\n📚 Reference: https://www.redhat.com/en/topics/cloud-native-apps/what-are-cloud-native-applications",
    "start_char": 0,
    "end_char": 311
  },
  {
    "question": "What is a subnet mask in networking?",
    "label": "networking, subnetting, IP-addressing",
    "language": "en",
    "context": "A subnet mask is a 32-bit number used to divide an IP address into network and host portions.",
    "answer": "The subnet mask determines the network size and helps routers identify which part of an IP address is the network and which part is the host.\n\n📚 Reference: https://www.cloudflare.com/learning/ddos/glossary/subnet-mask/",
    "start_char": 0,
    "end_char": 306
  },
  {
    "question": "What is the purpose of the 'git merge' command?",
    "label": "git, version-control, command-line",
    "language": "en",
    "context": "'git merge' is used to combine changes from different branches in a Git repository.",
    "answer": "'git merge' integrates the changes from one branch into another. It can create merge conflicts if changes are incompatible.\n\nExample:\n```bash\ngit merge feature-branch\n```\n\n📚 Reference: https://git-scm.com/docs/git-merge",
    "start_char": 0,
    "end_char": 325
  },
  {
    "question": "What is the difference between a stack and a queue in data structures?",
    "label": "data-structures, stack, queue",
    "language": "en",
    "context": "A stack and a queue are both linear data structures used to store and manage elements, but they follow different rules for inserting and removing elements.",
    "answer": "A stack uses LIFO (Last In First Out) and a queue uses FIFO (First In First Out) principles. In a stack, the last element added is the first to be removed, while in a queue, the first element added is the first to be removed.\n\n📚 Reference: https://www.geeksforgeeks.org/difference-between-stack-and-queue/",
    "start_char": 0,
    "end_char": 372
  },
  {
    "question": "What is an index in a database?",
    "label": "databases, index",
    "language": "en",
    "context": "An index is a data structure that improves the speed of data retrieval operations on a database table.",
    "answer": "An index allows quick access to rows based on the value of one or more columns. It is similar to an index in a book.\n\n📚 Reference: https://www.geeksforgeeks.org/indexes-in-database-management-system/",
    "start_char": 0,
    "end_char": 311
  },
  {
    "question": "What is a microservice architecture?",
    "label": "software-architecture, microservices",
    "language": "en",
    "context": "Microservice architecture is a design style where an application is composed of small, independent services that communicate with each other.",
    "answer": "Each microservice is a self-contained unit that performs a specific task. This approach allows for better scalability and maintainability.\n\n📚 Reference: https://www.thoughtworks.com/insights/blog/what-are-microservices",
    "start_char": 0,
    "end_char": 268
  },
  {
    "question": "What is the purpose of the 'git pull' command?",
    "label": "git, version-control, command-line",
    "language": "en",
    "context": "'git pull' is used to fetch changes from a remote repository and merge them into the current branch.",
    "answer": "It is the combination of 'git fetch' and 'git merge' in one command. This ensures your local repository is up to date with the remote.\n\nExample:\n```bash\ngit pull origin main\n```\n\n📚 Reference: https://git-scm.com/docs/git-pull",
    "start_char": 0,
    "end_char": 305
  },
  {
    "question": "What is the role of the operating system in managing hardware?",
    "label": "operating-systems, hardware",
    "language": "en",
    "context": "The operating system (OS) is responsible for managing hardware resources such as CPU, memory, and storage.",
    "answer": "The OS manages hardware through device drivers and system calls. It allocates resources to processes and ensures efficient execution.\n\n📚 Reference: https://www.geeksforgeeks.org/introduction-of-operating-system/",
    "start_char": 0,
    "end_char": 276
  },
  {
    "question": "What is a SQL JOIN and how does it work?",
    "label": "databases, SQL, joins",
    "language": "en",
    "context": "SQL JOINs are used to combine rows from two or more tables based on a related column between them.",
    "answer": "There are different types of JOINs: INNER JOIN, LEFT JOIN, RIGHT JOIN, and FULL JOIN. They determine how the rows are combined depending on whether the related rows exist in both tables.\n\n📚 Reference: https://www.w3schools.com/sql/sql_join.asp",
    "start_char": 0,
    "end_char": 312
  },
  {
    "question": "What is the difference between a class and an object in OOP?",
    "label": "programming, object-oriented, classes, objects",
    "language": "en",
    "context": "In Object-Oriented Programming (OOP), a class is a blueprint for creating objects.",
    "answer": "A class defines properties and methods, while an object is an instance of that class. Objects have actual values and can perform actions defined by the class.\n\n📚 Reference: https://www.geeksforgeeks.org/difference-between-class-and-object-in-oops/",
    "start_char": 0,
    "end_char": 290
  },
  {
    "question": "What is a virtual machine in computing?",
    "label": "virtualization, virtual-machine",
    "language": "en",
    "context": "A virtual machine (VM) is a software emulation of a physical computer that runs an operating system and applications just like a real machine.",
    "answer": "VMs allow for running multiple operating systems on a single physical machine, providing isolation and resource management.\n\n📚 Reference: https://www.vmware.com/topics/glossary/content/virtual-machine",
    "start_char": 0,
    "end_char": 303
  },
  {
    "question": "What is the difference between HTTP and FTP?",
    "label": "networking, HTTP, FTP",
    "language": "en",
    "context": "HTTP and FTP are both protocols for transferring data over the internet, but they serve different purposes.",
    "answer": "HTTP is used for transferring web pages, while FTP is designed for transferring files. FTP supports more features like file uploads and downloads.\n\n📚 Reference: https://www.geeksforgeeks.org/difference-between-http-and-ftp/",
    "start_char": 0,
    "end_char": 288
  },
  {
    "question": "How do I fix 'NameError: name 'x' is not defined' in Python?",
    "label": "python, nameerror, debugging",
    "language": "en",
    "context": "Variable used before being defined.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — NameError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 457
  },
  {
    "question": "How do I fix 'TypeError: 'int' object is not subscriptable' in Python?",
    "label": "python, typeerror, debugging",
    "language": "en",
    "context": "Trying to index an integer.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — TypeError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 449
  },
  {
    "question": "How do I fix 'ValueError: invalid literal for int()' in Python?",
    "label": "python, valueerror, debugging",
    "language": "en",
    "context": "Occurs when converting invalid strings to int.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — ValueError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 469
  },
  {
    "question": "How do I fix 'SyntaxError: invalid syntax' in Python?",
    "label": "python, syntaxerror, debugging",
    "language": "en",
    "context": "Occurs when code has a typo or wrong structure.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — SyntaxError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 471
  },
  {
    "question": "How do I fix 'IndentationError: unexpected indent' in Python?",
    "label": "python, indentationerror, debugging",
    "language": "en",
    "context": "Happens when indentation is inconsistent.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — IndentationError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "How do I fix 'ReferenceError: x is not defined' in JavaScript?",
    "label": "javascript, referenceerror, debugging",
    "language": "en",
    "context": "Accessing a variable that hasn’t been declared.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — ReferenceError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "How do I fix 'SyntaxError: Unexpected token' in JavaScript?",
    "label": "javascript, syntaxerror, debugging",
    "language": "en",
    "context": "Occurs when there’s a typo or misplaced character.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — SyntaxError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 474
  },
  {
    "question": "How do I fix 'TypeError: x is not a function' in JavaScript?",
    "label": "javascript, typeerror, debugging",
    "language": "en",
    "context": "Trying to call a non-function.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — TypeError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 452
  },
  {
    "question": "How do I fix 'TypeError: Cannot read property 'foo' of undefined' in JavaScript?",
    "label": "javascript, typeerror, debugging",
    "language": "en",
    "context": "Trying to access a property of undefined.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — TypeError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 463
  },
  {
    "question": "How do I fix 'RangeError: Maximum call stack size exceeded' in JavaScript?",
    "label": "javascript, rangeerror, debugging",
    "language": "en",
    "context": "Too much recursion.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — RangeError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 442
  },
  {
    "question": "How do I fix 'NullPointerException' in Java?",
    "label": "java, nullpointerexception, debugging",
    "language": "en",
    "context": "Calling methods on a null object.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — NullPointerException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 466
  },
  {
    "question": "How do I fix 'ArrayIndexOutOfBoundsException' in Java?",
    "label": "java, arrayindexoutofboundsexception, debugging",
    "language": "en",
    "context": "Trying to access an index out of array bounds.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — ArrayIndexOutOfBoundsException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 489
  },
  {
    "question": "How do I fix 'NumberFormatException' in Java?",
    "label": "java, numberformatexception, debugging",
    "language": "en",
    "context": "Parsing invalid string to a number.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — NumberFormatException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 469
  },
  {
    "question": "How do I fix 'IllegalArgumentException' in Java?",
    "label": "java, illegalargumentexception, debugging",
    "language": "en",
    "context": "Passing inappropriate arguments.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — IllegalArgumentException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 469
  },
  {
    "question": "How do I fix 'ClassNotFoundException' in Java?",
    "label": "java, classnotfoundexception, debugging",
    "language": "en",
    "context": "JVM can't find the specified class.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — ClassNotFoundException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "How do I fix 'Invalid conversion from ‘int’ to ‘char*’' in C++?",
    "label": "c++, invalid-conversion-from-‘int’-to-‘char*’, debugging",
    "language": "en",
    "context": "Type mismatch.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Invalid conversion from ‘int’ to ‘char*’ gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 467
  },
  {
    "question": "How do I fix 'Undefined reference to 'main'' in C++?",
    "label": "c++, undefined-reference-to-'main', debugging",
    "language": "en",
    "context": "No main function defined.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Undefined reference to 'main' gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 467
  },
  {
    "question": "How do I fix 'Stack overflow' in C++?",
    "label": "c++, stack-overflow, debugging",
    "language": "en",
    "context": "Too much recursion or stack usage.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Stack overflow gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 461
  },
  {
    "question": "How do I fix 'Expected ‘;’ before ‘}’' in C++?",
    "label": "c++, expected-‘;’-before-‘}’, debugging",
    "language": "en",
    "context": "Missing semicolon.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Expected ‘;’ before ‘}’ gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 454
  },
  {
    "question": "How do I fix 'Segmentation fault' in C++?",
    "label": "c++, segmentation-fault, debugging",
    "language": "en",
    "context": "Accessing restricted memory area.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Segmentation fault gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 464
  },
  {
    "question": "How do I fix 'InvalidCastException' in C#?",
    "label": "c#, invalidcastexception, debugging",
    "language": "en",
    "context": "Trying to cast an object to an incompatible type.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — InvalidCastException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 482
  },
  {
    "question": "How do I fix 'CS0246: The type or namespace name could not be found' in C#?",
    "label": "c#, cs0246, debugging",
    "language": "en",
    "context": "Missing using directive or reference.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — CS0246 gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 456
  },
  {
    "question": "How do I fix 'NullReferenceException' in C#?",
    "label": "c#, nullreferenceexception, debugging",
    "language": "en",
    "context": "Accessing members of a null object.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — NullReferenceException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "How do I fix 'CS1002: ; expected' in C#?",
    "label": "c#, cs1002, debugging",
    "language": "en",
    "context": "Missing semicolon.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — CS1002 gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 437
  },
  {
    "question": "How do I fix 'IndexOutOfRangeException' in C#?",
    "label": "c#, indexoutofrangeexception, debugging",
    "language": "en",
    "context": "Array index is out of bounds.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — IndexOutOfRangeException gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 466
  },
  {
    "question": "How do I fix 'Call to undefined function' in PHP?",
    "label": "php, call-to-undefined-function, debugging",
    "language": "en",
    "context": "Function doesn’t exist.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Call to undefined function gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How do I fix 'Headers already sent' in PHP?",
    "label": "php, headers-already-sent, debugging",
    "language": "en",
    "context": "Output before setting headers.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Headers already sent gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 463
  },
  {
    "question": "How do I fix 'Parse error: syntax error' in PHP?",
    "label": "php, parse-error, debugging",
    "language": "en",
    "context": "Syntax issues like missing semicolons.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Parse error gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How do I fix 'Fatal error: Allowed memory size exhausted' in PHP?",
    "label": "php, fatal-error, debugging",
    "language": "en",
    "context": "Script exceeds memory limit.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Fatal error gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 452
  },
  {
    "question": "How do I fix 'Undefined variable' in PHP?",
    "label": "php, undefined-variable, debugging",
    "language": "en",
    "context": "Variable used before initialization.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Undefined variable gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 467
  },
  {
    "question": "How do I fix 'NameError' in Ruby?",
    "label": "ruby, nameerror, debugging",
    "language": "en",
    "context": "Accessing undefined variable.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — NameError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 451
  },
  {
    "question": "How do I fix 'SyntaxError' in Ruby?",
    "label": "ruby, syntaxerror, debugging",
    "language": "en",
    "context": "Code structure issue.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — SyntaxError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 445
  },
  {
    "question": "How do I fix 'ArgumentError' in Ruby?",
    "label": "ruby, argumenterror, debugging",
    "language": "en",
    "context": "Wrong number of arguments.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — ArgumentError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 452
  },
  {
    "question": "How do I fix 'NoMethodError' in Ruby?",
    "label": "ruby, nomethoderror, debugging",
    "language": "en",
    "context": "Calling undefined method on an object.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — NoMethodError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 464
  },
  {
    "question": "How do I fix 'TypeError' in Ruby?",
    "label": "ruby, typeerror, debugging",
    "language": "en",
    "context": "Wrong object type used.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — TypeError gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 445
  },
  {
    "question": "How do I fix 'undefined: x' in Go?",
    "label": "go, undefined, debugging",
    "language": "en",
    "context": "Using variable that is not declared.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — undefined gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 458
  },
  {
    "question": "How do I fix 'invalid memory address or nil pointer dereference' in Go?",
    "label": "go, invalid-memory-address-or-nil-pointer-dereference, debugging",
    "language": "en",
    "context": "Using nil pointer.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — invalid memory address or nil pointer dereference gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 480
  },
  {
    "question": "How do I fix 'too many arguments in function call' in Go?",
    "label": "go, too-many-arguments-in-function-call, debugging",
    "language": "en",
    "context": "Passing more arguments than expected.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — too many arguments in function call gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 485
  },
  {
    "question": "How do I fix 'index out of range' in Go?",
    "label": "go, index-out-of-range, debugging",
    "language": "en",
    "context": "Accessing an invalid index.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — index out of range gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 458
  },
  {
    "question": "How do I fix 'cannot use x (type int) as string' in Go?",
    "label": "go, cannot-use-x-(type-int)-as-string, debugging",
    "language": "en",
    "context": "Type mismatch.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — cannot use x (type int) as string gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "How do I fix 'borrow of moved value' in Rust?",
    "label": "rust, borrow-of-moved-value, debugging",
    "language": "en",
    "context": "Access after move.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — borrow of moved value gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 452
  },
  {
    "question": "How do I fix 'use of moved value' in Rust?",
    "label": "rust, use-of-moved-value, debugging",
    "language": "en",
    "context": "Value ownership transferred.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — use of moved value gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 459
  },
  {
    "question": "How do I fix 'cannot borrow `x` as mutable more than once' in Rust?",
    "label": "rust, cannot-borrow-`x`-as-mutable-more-than-once, debugging",
    "language": "en",
    "context": "Mutable borrow conflict.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — cannot borrow `x` as mutable more than once gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 480
  },
  {
    "question": "How do I fix 'mismatched types' in Rust?",
    "label": "rust, mismatched-types, debugging",
    "language": "en",
    "context": "Wrong type used.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — mismatched types gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 445
  },
  {
    "question": "How do I fix 'expected `()`, found `i32`' in Rust?",
    "label": "rust, expected-`()`,-found-`i32`, debugging",
    "language": "en",
    "context": "Unexpected return type.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — expected `()`, found `i32` gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 462
  },
  {
    "question": "How do I fix 'Property 'x' does not exist on type' in TypeScript?",
    "label": "typescript, property-'x'-does-not-exist-on-type, debugging",
    "language": "en",
    "context": "Accessing non-existent property.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Property 'x' does not exist on type gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 480
  },
  {
    "question": "How do I fix 'Cannot find module' in TypeScript?",
    "label": "typescript, cannot-find-module, debugging",
    "language": "en",
    "context": "Missing import or wrong path.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Cannot find module gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "How do I fix 'Type 'undefined' is not assignable' in TypeScript?",
    "label": "typescript, type-'undefined'-is-not-assignable, debugging",
    "language": "en",
    "context": "Possible undefined value.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Type 'undefined' is not assignable gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 472
  },
  {
    "question": "How do I fix 'Argument of type 'x' is not assignable' in TypeScript?",
    "label": "typescript, argument-of-type-'x'-is-not-assignable, debugging",
    "language": "en",
    "context": "Type incompatibility.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — Argument of type 'x' is not assignable gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 472
  },
  {
    "question": "How do I fix 'A function whose declared type is neither 'void' nor 'any' must return a value' in TypeScript?",
    "label": "typescript, a-function-whose-declared-type-is-neither-'void'-nor-'any'-must-return-a-value, debugging",
    "language": "en",
    "context": "Missing return.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read the message — A function whose declared type is neither 'void' nor 'any' must return a value gives a clue.\n2. **Locate the error line**: Use line number from traceback or console.\n3. **Check surrounding code**: Look for common issues (typos, missing symbols, etc).\n4. **Apply a fix**: Correct the syntax, type, or logic as needed.\n5. **Test again**: Rerun to confirm the issue is resolved.\n\n📚 Reference: Official docs or developer guides.",
    "start_char": 0,
    "end_char": 506
  },
  {
    "question": "How to resolve 'ValueError: could not convert string to float' in Python?",
    "label": "python, valueerror, debugging",
    "language": "en",
    "context": "Occurs when trying to convert a non-numeric string to float.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `ValueError: could not convert string to float` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the...",
    "start_char": 0,
    "end_char": 596
  },
  {
    "question": "How to resolve 'TypeError: unsupported operand type(s)' in Python?",
    "label": "python, typeerror, debugging",
    "language": "en",
    "context": "Trying to use incompatible types in operations.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `TypeError: unsupported operand type(s)` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the offici...",
    "start_char": 0,
    "end_char": 576
  },
  {
    "question": "How to resolve 'IndexError: list index out of range' in Python?",
    "label": "python, indexerror, debugging",
    "language": "en",
    "context": "Accessing an index that doesn't exist in a list.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `IndexError: list index out of range` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official ...",
    "start_char": 0,
    "end_char": 574
  },
  {
    "question": "How to resolve 'ModuleNotFoundError: No module named 'xyz'' in Python?",
    "label": "python, modulenotfounderror, debugging",
    "language": "en",
    "context": "Happens when importing a non-existent or uninstalled module.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `ModuleNotFoundError: No module named 'xyz'` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the of...",
    "start_char": 0,
    "end_char": 593
  },
  {
    "question": "How to resolve 'IndentationError: expected an indented block' in Python?",
    "label": "python, indentationerror, debugging",
    "language": "en",
    "context": "Occurs when code indentation is incorrect.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `IndentationError: expected an indented block` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the ...",
    "start_char": 0,
    "end_char": 577
  },
  {
    "question": "How to resolve 'TypeError: undefined is not a function' in JavaScript?",
    "label": "javascript, typeerror, debugging",
    "language": "en",
    "context": "Calling a variable that is not a function.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `TypeError: undefined is not a function` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the offici...",
    "start_char": 0,
    "end_char": 571
  },
  {
    "question": "How to resolve 'ReferenceError: x is not defined' in JavaScript?",
    "label": "javascript, referenceerror, debugging",
    "language": "en",
    "context": "Using a variable that hasn't been declared.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `ReferenceError: x is not defined` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official doc...",
    "start_char": 0,
    "end_char": 566
  },
  {
    "question": "How to resolve 'SyntaxError: Unexpected token' in JavaScript?",
    "label": "javascript, syntaxerror, debugging",
    "language": "en",
    "context": "Usually a typo or invalid syntax in JS code.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `SyntaxError: Unexpected token` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs o...",
    "start_char": 0,
    "end_char": 564
  },
  {
    "question": "How to resolve 'RangeError: Maximum call stack size exceeded' in JavaScript?",
    "label": "javascript, rangeerror, debugging",
    "language": "en",
    "context": "Caused by infinite recursion or loops.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `RangeError: Maximum call stack size exceeded` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the ...",
    "start_char": 0,
    "end_char": 573
  },
  {
    "question": "How to resolve 'TypeError: Cannot read property 'x' of null' in JavaScript?",
    "label": "javascript, typeerror, debugging",
    "language": "en",
    "context": "Trying to access a property of a null object.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `TypeError: Cannot read property 'x' of null` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the o...",
    "start_char": 0,
    "end_char": 579
  },
  {
    "question": "How to resolve 'NullPointerException' in Java?",
    "label": "java, nullpointerexception, debugging",
    "language": "en",
    "context": "Trying to use a null object reference.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `NullPointerException` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 549
  },
  {
    "question": "How to resolve 'ArrayIndexOutOfBoundsException' in Java?",
    "label": "java, arrayindexoutofboundsexception, debugging",
    "language": "en",
    "context": "Indexing beyond array bounds.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `ArrayIndexOutOfBoundsException` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs ...",
    "start_char": 0,
    "end_char": 550
  },
  {
    "question": "How to resolve 'ClassNotFoundException' in Java?",
    "label": "java, classnotfoundexception, debugging",
    "language": "en",
    "context": "Trying to load a class that isn't available.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `ClassNotFoundException` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 557
  },
  {
    "question": "How to resolve 'IllegalArgumentException' in Java?",
    "label": "java, illegalargumentexception, debugging",
    "language": "en",
    "context": "A method received an inappropriate argument.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `IllegalArgumentException` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or for...",
    "start_char": 0,
    "end_char": 559
  },
  {
    "question": "How to resolve 'NumberFormatException' in Java?",
    "label": "java, numberformatexception, debugging",
    "language": "en",
    "context": "Converting non-numeric string to number.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `NumberFormatException` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 552
  },
  {
    "question": "How to resolve 'NullReferenceException' in C#?",
    "label": "c#, nullreferenceexception, debugging",
    "language": "en",
    "context": "Using a null object reference.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `NullReferenceException` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 543
  },
  {
    "question": "How to resolve 'IndexOutOfRangeException' in C#?",
    "label": "c#, indexoutofrangeexception, debugging",
    "language": "en",
    "context": "Accessing array index out of bounds.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `IndexOutOfRangeException` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or for...",
    "start_char": 0,
    "end_char": 551
  },
  {
    "question": "How to resolve 'InvalidCastException' in C#?",
    "label": "c#, invalidcastexception, debugging",
    "language": "en",
    "context": "Trying to cast to an incompatible type.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `InvalidCastException` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 550
  },
  {
    "question": "How to resolve 'DivideByZeroException' in C#?",
    "label": "c#, dividebyzeroexception, debugging",
    "language": "en",
    "context": "Dividing a number by zero.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `DivideByZeroException` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 538
  },
  {
    "question": "How to resolve 'FormatException' in C#?",
    "label": "c#, formatexception, debugging",
    "language": "en",
    "context": "Invalid format when parsing a string.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `FormatException` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 543
  },
  {
    "question": "How to resolve 'Segmentation fault' in C++?",
    "label": "c++, segmentation-fault, debugging",
    "language": "en",
    "context": "Accessing memory that doesn't belong to you.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `Segmentation fault` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 553
  },
  {
    "question": "How to resolve 'Undefined reference to 'function'' in C++?",
    "label": "c++, undefined-reference-to-'function', debugging",
    "language": "en",
    "context": "Linker error due to missing implementation.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Undefined reference to 'function'` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official do...",
    "start_char": 0,
    "end_char": 567
  },
  {
    "question": "How to resolve 'Stack overflow' in C++?",
    "label": "c++, stack-overflow, debugging",
    "language": "en",
    "context": "Usually due to infinite recursion.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `Stack overflow` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 539
  },
  {
    "question": "How to resolve 'Use of undeclared identifier' in C++?",
    "label": "c++, use-of-undeclared-identifier, debugging",
    "language": "en",
    "context": "Using a variable or function not declared.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Use of undeclared identifier` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or...",
    "start_char": 0,
    "end_char": 561
  },
  {
    "question": "How to resolve 'Expected ';' before '}'' in C++?",
    "label": "c++, expected-';'-before-'}', debugging",
    "language": "en",
    "context": "Syntax error due to missing semicolon.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Expected ';' before '}'` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 552
  },
  {
    "question": "How to resolve 'Cannot find name' in TypeScript?",
    "label": "typescript, cannot-find-name, debugging",
    "language": "en",
    "context": "Using an undeclared variable or import.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `Cannot find name` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 546
  },
  {
    "question": "How to resolve 'Type 'x' is not assignable to type 'y'' in TypeScript?",
    "label": "typescript, type-'x'-is-not-assignable-to-type-'y', debugging",
    "language": "en",
    "context": "Type mismatch in assignment.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Type 'x' is not assignable to type 'y'` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the offici...",
    "start_char": 0,
    "end_char": 557
  },
  {
    "question": "How to resolve 'Property 'x' does not exist on type' in TypeScript?",
    "label": "typescript, property-'x'-does-not-exist-on-type, debugging",
    "language": "en",
    "context": "Accessing non-existing properties.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Property 'x' does not exist on type` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official ...",
    "start_char": 0,
    "end_char": 560
  },
  {
    "question": "How to resolve 'Argument of type 'x' is not assignable' in TypeScript?",
    "label": "typescript, argument-of-type-'x'-is-not-assignable, debugging",
    "language": "en",
    "context": "Passing wrong type to function.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Argument of type 'x' is not assignable` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the offici...",
    "start_char": 0,
    "end_char": 560
  },
  {
    "question": "How to resolve 'A function whose declared type is neither 'void'' in TypeScript?",
    "label": "typescript, a-function-whose-declared-type-is-neither-'void', debugging",
    "language": "en",
    "context": "Mismatch in function return type.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `A function whose declared type is neither 'void'` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to ...",
    "start_char": 0,
    "end_char": 572
  },
  {
    "question": "How to resolve 'undefined: x' in Go?",
    "label": "go, undefined, debugging",
    "language": "en",
    "context": "Using a variable or package not declared.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `undefined: x` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 544
  },
  {
    "question": "How to resolve 'cannot use x (type int) as string' in Go?",
    "label": "go, cannot-use-x-(type-int)-as-string, debugging",
    "language": "en",
    "context": "Type mismatch error.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `cannot use x (type int) as string` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official do...",
    "start_char": 0,
    "end_char": 544
  },
  {
    "question": "How to resolve 'index out of range' in Go?",
    "label": "go, index-out-of-range, debugging",
    "language": "en",
    "context": "Accessing invalid index.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `index out of range` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 533
  },
  {
    "question": "How to resolve 'panic: runtime error' in Go?",
    "label": "go, panic, debugging",
    "language": "en",
    "context": "General runtime panic.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `panic: runtime error` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 533
  },
  {
    "question": "How to resolve 'imported and not used' in Go?",
    "label": "go, imported-and-not-used, debugging",
    "language": "en",
    "context": "Importing packages but not using them.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `imported and not used` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 550
  },
  {
    "question": "How to resolve 'NameError: undefined local variable or method' in Ruby?",
    "label": "ruby, nameerror, debugging",
    "language": "en",
    "context": "Using a variable/method not defined.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `NameError: undefined local variable or method` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the...",
    "start_char": 0,
    "end_char": 572
  },
  {
    "question": "How to resolve 'NoMethodError: undefined method' in Ruby?",
    "label": "ruby, nomethoderror, debugging",
    "language": "en",
    "context": "Calling method that doesn't exist.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `NoMethodError: undefined method` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs...",
    "start_char": 0,
    "end_char": 556
  },
  {
    "question": "How to resolve 'TypeError: no implicit conversion' in Ruby?",
    "label": "ruby, typeerror, debugging",
    "language": "en",
    "context": "Trying to use incompatible types.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `TypeError: no implicit conversion` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official do...",
    "start_char": 0,
    "end_char": 557
  },
  {
    "question": "How to resolve 'ArgumentError: wrong number of arguments' in Ruby?",
    "label": "ruby, argumenterror, debugging",
    "language": "en",
    "context": "Passing wrong arguments to method.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `ArgumentError: wrong number of arguments` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the offi...",
    "start_char": 0,
    "end_char": 565
  },
  {
    "question": "How to resolve 'SyntaxError: unexpected keyword_end' in Ruby?",
    "label": "ruby, syntaxerror, debugging",
    "language": "en",
    "context": "Syntax issues in Ruby script.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `SyntaxError: unexpected keyword_end` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official ...",
    "start_char": 0,
    "end_char": 555
  },
  {
    "question": "How to resolve 'Undefined variable' in PHP?",
    "label": "php, undefined-variable, debugging",
    "language": "en",
    "context": "Accessing variable that hasn't been defined.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `Undefined variable` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 553
  },
  {
    "question": "How to resolve 'Call to undefined function' in PHP?",
    "label": "php, call-to-undefined-function, debugging",
    "language": "en",
    "context": "Calling function that doesn't exist.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Call to undefined function` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or f...",
    "start_char": 0,
    "end_char": 553
  },
  {
    "question": "How to resolve 'Parse error: syntax error' in PHP?",
    "label": "php, parse-error, debugging",
    "language": "en",
    "context": "General syntax error.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Parse error: syntax error` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or fo...",
    "start_char": 0,
    "end_char": 537
  },
  {
    "question": "How to resolve 'Fatal error: Cannot redeclare function' in PHP?",
    "label": "php, fatal-error, debugging",
    "language": "en",
    "context": "Redefining a function that already exists.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Fatal error: Cannot redeclare function` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the offici...",
    "start_char": 0,
    "end_char": 571
  },
  {
    "question": "How to resolve 'Warning: Division by zero' in PHP?",
    "label": "php, warning, debugging",
    "language": "en",
    "context": "Dividing by zero.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `Warning: Division by zero` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or fo...",
    "start_char": 0,
    "end_char": 533
  },
  {
    "question": "How to resolve 'cannot borrow as mutable' in Rust?",
    "label": "rust, cannot-borrow-as-mutable, debugging",
    "language": "en",
    "context": "Borrow checker prevents unsafe access.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `cannot borrow as mutable` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or for...",
    "start_char": 0,
    "end_char": 553
  },
  {
    "question": "How to resolve 'mismatched types' in Rust?",
    "label": "rust, mismatched-types, debugging",
    "language": "en",
    "context": "Assigning wrong types.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `mismatched types` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 529
  },
  {
    "question": "How to resolve 'use of moved value' in Rust?",
    "label": "rust, use-of-moved-value, debugging",
    "language": "en",
    "context": "Using a variable after it’s been moved.",
    "answer": "Step-by-step fix:\n\n1. **Understand the error**: Read and interpret the message — `use of moved value` gives a clue.\n2. **Locate the error line**: Use line number from stack trace or IDE.\n3. **Inspect surrounding code**: Identify what could lead to this error.\n4. **Apply the fix**: Adjust syntax, logic, or type to resolve it.\n5. **Test your fix**: Rerun the program to ensure the error is resolved.\n\n🛠️ Tip: Use documentation and search engines effectively.\n📚 Reference: Refer to the official docs or forums.",
    "start_char": 0,
    "end_char": 548
  },
  {
    "question": "How to resolve 'expected identifier, found keyword' in Rust?",
    "label": "rust, expected-identifier,-found-keyword, debugging",
    "language": "en",
    "context": "Using reserved word incorrectly.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `expected identifier, found keyword` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official d...",
    "start_char": 0,
    "end_char": 557
  },
  {
    "question": "How to resolve 'attempt to divide by zero' in Rust?",
    "label": "rust, attempt-to-divide-by-zero, debugging",
    "language": "en",
    "context": "Mathematical zero division error.",
    "answer": "Step-by-step fix: 1. **Understand the error**: Read and interpret the message — `attempt to divide by zero` gives a clue. 2. **Locate the error line**: Use line number from stack trace or IDE. 3. **Inspect surrounding code**: Identify what could lead to this error. 4. **Apply the fix**: Adjust syntax, logic, or type to resolve it. 5. **Test your fix**: Rerun the program to ensure the error is resolved. 🛠️ Tip: Use documentation and search engines effectively. 📚 Reference: Refer to the official docs or fo...",
    "start_char": 0,
    "end_char": 549
  },
  {
    "question": "Why does my Python script throw a `TypeError: 'int' object is not subscriptable` when I try to access an index?",
    "label": "python",
    "language": "en",
    "context": "Debugging a Python script that throws a TypeError",
    "answer": "This error usually happens when you're trying to use square brackets `[]` to access an element in an object that is an integer. Integers are not subscriptable, meaning they can't be indexed like lists or dictionaries. For example:\n\n```python\nx = 5\ny = x[0]  # ❌ TypeError\n```\nCheck your variables and ensure you're not mistakenly treating an integer as a list or string.",
    "start_char": 0,
    "end_char": 423
  },
  {
    "question": "How can I fix `Uncaught TypeError: Cannot read property 'foo' of undefined` in my React app?",
    "label": "react",
    "language": "en",
    "context": "React error related to undefined property access",
    "answer": "This error means you're trying to access a property on an undefined object. In React, this often happens if a prop or state hasn't been initialized properly. Example:\n\n```js\nconsole.log(this.props.user.name); // but user is undefined\n```\n\nTo fix it:\n- Add optional chaining: `this.props.user?.name`\n- Or check for null/undefined before accessing: `if (this.props.user) { ... }`\n- Make sure you're passing the `user` prop correctly.",
    "start_char": 0,
    "end_char": 470
  },
  {
    "question": "Why is my Node.js server returning 'ECONNREFUSED' when trying to connect to MongoDB?",
    "label": "nodejs",
    "language": "en",
    "context": "MongoDB connection error in Node.js",
    "answer": "`ECONNREFUSED` means the Node.js app failed to connect to MongoDB server. Possible causes:\n\n1. MongoDB is not running: Start it with `mongod` or `docker-compose up`.\n2. Wrong port: Default is 27017. Check the URI.\n3. Firewall or Docker network issue: Allow traffic to the port.\n4. Incorrect connection URI.\n\nDouble-check the MongoDB URI and ensure the database is up and reachable.",
    "start_char": 0,
    "end_char": 410
  },
  {
    "question": "In Java, what causes a NullPointerException when accessing a method on an object?",
    "label": "java",
    "language": "en",
    "context": "Debugging NullPointerException in Java",
    "answer": "A `NullPointerException` occurs when you attempt to call a method or access a field on a variable that is `null`. Example:\n\n```java\nString s = null;\ns.length(); // NullPointerException\n```\n\nTo fix:\n- Check for `null` before accessing the object.\n- Initialize the object properly before use.\n- Use `Optional` if working with nullable values in Java 8+.",
    "start_char": 0,
    "end_char": 386
  },
  {
    "question": "Why does my Docker container exit immediately after starting?",
    "label": "docker",
    "language": "en",
    "context": "Debugging Docker container that exits immediately",
    "answer": "If a Docker container exits right after starting, it likely completed its process. Docker containers run a single command as PID 1. If that command exits, the container stops.\n\nCheck with:\n```bash\ndocker logs <container_id>\n```\n\nCommon issues:\n- Your `CMD` or `ENTRYPOINT` ends quickly (e.g., `python myscript.py` with no loop).\n- Missing environment/config.\n- Crashes inside the container.\n\nUse `docker run -it --entrypoint bash` to debug interactively.",
    "start_char": 0,
    "end_char": 499
  },
  {
    "question": "What causes 'maximum recursion depth exceeded' in Python and how to fix it?",
    "label": "python",
    "language": "en",
    "context": "Python recursion error",
    "answer": "This happens when a function calls itself too many times without a proper base case, causing a stack overflow. Python has a default recursion limit (~1000).\n\nExample:\n```python\ndef recurse():\n    return recurse()\nrecurse()\n```\nFix:\n- Ensure a base case that stops recursion.\n- Consider iterative logic if recursion depth is too large.\n- You can raise the limit with `sys.setrecursionlimit(n)` but be cautious.",
    "start_char": 0,
    "end_char": 484
  },
  {
    "question": "How to resolve 'Permission denied' when writing files in Linux?",
    "label": "linux",
    "language": "en",
    "context": "File system permission issue in Linux",
    "answer": "This error means the user running the command doesn't have write permission in the target directory.\n\nFix:\n- Check ownership: `ls -l`\n- Change permission: `chmod u+w filename`\n- Run with `sudo` if appropriate: `sudo touch file.txt`\n- Ensure directory allows write access\n\nAvoid running everything with `sudo`; manage permissions properly for the current user.",
    "start_char": 0,
    "end_char": 412
  },
  {
    "question": "Why does Jest return 'Test suite failed to run: SyntaxError: Unexpected token'?",
    "label": "jest",
    "language": "en",
    "context": "Jest syntax error during test run",
    "answer": "This often happens when Jest tries to parse code it can't understand (e.g., ES6+ features or TypeScript).\n\nSolutions:\n- Ensure Babel is set up correctly.\n- Add `transform` config in `jest.config.js`:\n```js\ntransform: {\n  '^.+\\\\.jsx?$': 'babel-jest'\n}\n```\n- If using TypeScript, use `ts-jest`.\n\nAlso check if you're importing code outside your project root.",
    "start_char": 0,
    "end_char": 465
  },
  {
    "question": "How to debug a 'Segmentation fault' in C or C++?",
    "label": "cpp",
    "language": "en",
    "context": "C/C++ segmentation fault",
    "answer": "A segmentation fault occurs when your program tries to access memory it shouldn't.\n\nCommon causes:\n- Dereferencing a NULL pointer\n- Accessing out-of-bounds arrays\n- Using uninitialized pointers\n\nFixes:\n- Use tools like `gdb` or `valgrind`\n- Compile with `-g` to get debug symbols\n- Check pointer values and memory allocation\n\nAlways initialize pointers and use memory-safe practices.",
    "start_char": 0,
    "end_char": 480
  },
  {
    "question": "Why does FastAPI return '422 Unprocessable Entity' when sending POST data?",
    "label": "fastapi",
    "language": "en",
    "context": "FastAPI POST request validation error",
    "answer": "This error means the request body didn't match the expected schema (e.g., missing required fields, wrong types).\n\nFixes:\n- Ensure correct headers: `Content-Type: application/json`\n- Check your Pydantic model matches request body\n- Validate input format in your frontend or API client\n\nUse FastAPI docs (auto-generated Swagger UI) to test and debug inputs.",
    "start_char": 0,
    "end_char": 448
  },
  {
    "question": "Why do I get 'SyntaxError: unexpected EOF while parsing' in Python?",
    "label": "python",
    "language": "en",
    "context": "Syntax error in Python code",
    "answer": "This error means that the Python interpreter reached the end of the file (EOF) before it could complete parsing the code. Usually caused by:\n- Missing closing parentheses, brackets, or quotes\n- An incomplete statement (e.g., `if`, `for`, `def`) without a body\n\nFix: Double-check the last few lines of your code to ensure all blocks are complete and syntactically correct.",
    "start_char": 0,
    "end_char": 460
  },
  {
    "question": "Why is my Python `for` loop not executing?",
    "label": "python",
    "language": "en",
    "context": "Python loop seems to be skipped",
    "answer": "If a `for` loop doesn't run, it's often due to the iterable being empty. For example:\n```python\nfor item in []:\n    print(item)  # Won't run\n```\n\nFix:\n- Print the iterable before the loop to confirm it's not empty.\n- Ensure the logic that populates the list or generator works correctly.\n- Check file paths or filters if looping over files or inputs.",
    "start_char": 0,
    "end_char": 417
  },
  {
    "question": "Why does my JavaScript function return undefined even though I use return?",
    "label": "javascript",
    "language": "en",
    "context": "Debugging undefined return in JS",
    "answer": "This often happens due to:\n- A missing return statement in a conditional block\n- A function with no explicit return\n- Arrow function with incorrect syntax\n\nExamples:\n```js\nconst f = () => {\n  'hello'; // ❌ no return\n}\n```\nFix: Use `return 'hello';` or concise syntax: `() => 'hello'`.",
    "start_char": 0,
    "end_char": 387
  },
  {
    "question": "Why does my React component re-render infinitely?",
    "label": "react",
    "language": "en",
    "context": "React infinite render loop",
    "answer": "Infinite re-rendering in React usually happens due to state updates in `useEffect` or during render.\n\nFix:\n- Add proper dependency array to `useEffect`\n- Avoid setting state unconditionally inside `render`\n- Example:\n```js\nuseEffect(() => {\n  setState(...);  // 🛑 infinite loop\n}, []); // ✅ with deps\n```",
    "start_char": 0,
    "end_char": 417
  },
  {
    "question": "Why does my Python script hang when using multiprocessing on Windows?",
    "label": "python",
    "language": "en",
    "context": "Multiprocessing issues in Python on Windows",
    "answer": "On Windows, the `if __name__ == \"__main__\":` guard is required to avoid recursive process spawning. Without it, the script re-executes in each new process, causing a hang or crash.\n\nFix:\n```python\nif __name__ == \"__main__\":\n    multiprocessing.Process(target=foo).start()\n```",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "Why am I getting 'CORS policy: No Access-Control-Allow-Origin' in frontend API calls?",
    "label": "frontend",
    "language": "en",
    "context": "Frontend to backend API call blocked by CORS",
    "answer": "CORS errors occur when the frontend makes a request to a backend with a different origin, and the backend doesn't include the proper CORS headers.\n\nFix:\n- On the server, add the `Access-Control-Allow-Origin` header\n- If using Express:\n```js\napp.use(cors());\n```\n- Or set specific origin: `res.setHeader(\"Access-Control-Allow-Origin\", \"*\")`",
    "start_char": 0,
    "end_char": 466
  },
  {
    "question": "Why is my SQL query returning duplicates?",
    "label": "sql",
    "language": "en",
    "context": "Duplicate results in SQL query",
    "answer": "Duplicates often appear due to:\n- `JOIN` without proper conditions\n- Selecting columns from both tables with many-to-one or many-to-many relationships\n\nFix:\n- Add `DISTINCT` if applicable\n- Refactor joins with aliases and proper keys\n- Double-check the `JOIN ON` clause for accuracy",
    "start_char": 0,
    "end_char": 390
  },
  {
    "question": "Why is my Flask app not seeing changes when I edit the code?",
    "label": "flask",
    "language": "en",
    "context": "Flask development server doesn't reload",
    "answer": "If changes aren't reflected, the Flask app may not be running in debug mode.\n\nFix:\n- Start the app with debug on:\n```python\napp.run(debug=True)\n```\n- Or set environment variable:\n```bash\nexport FLASK_ENV=development\n```\n- Use `flask run` instead of `python app.py`",
    "start_char": 0,
    "end_char": 374
  },
  {
    "question": "What causes 'ModuleNotFoundError' in Python even though I installed the package?",
    "label": "python",
    "language": "en",
    "context": "Python import error despite pip install",
    "answer": "This error happens when:\n- You're using a different interpreter than where the package is installed\n- The package was installed globally but you're running in a virtualenv (or vice versa)\n\nFix:\n- Run `which python` and `which pip` to verify they're aligned\n- Reinstall inside the virtualenv if needed\n- Check spelling and import paths",
    "start_char": 0,
    "end_char": 444
  },
  {
    "question": "Why does my Next.js app show a 404 on refresh for dynamic routes?",
    "label": "nextjs",
    "language": "en",
    "context": "404 on dynamic route refresh in Next.js",
    "answer": "On a refresh, the browser directly accesses the route (e.g., `/post/1`), and if the server doesn't handle that path, it gives a 404.\n\nFix:\n- Use Next.js' `next.config.js` with `rewrites` or `fallback: true` in `getStaticPaths`\n- Deploy using Next.js-compatible hosting (e.g., Vercel)\n- Avoid direct access if server lacks proper routing",
    "start_char": 0,
    "end_char": 450
  },
  {
    "question": "Why am I getting a NullPointerException when calling a method on my Java object?",
    "label": "nullpointerexception",
    "language": "en",
    "context": "A developer is encountering a NullPointerException in Java while calling a method.",
    "answer": "A NullPointerException in Java usually occurs when you try to call a method or access a member on an object that is null.\n\n**Step-by-step fix:**\n1. Identify the line where the exception occurs. The stack trace will tell you this.\n2. Check which object on that line might be null.\n3. Add null checks before calling methods.\n4. Ensure the object is properly initialized before use.\n5. Use IDE breakpoints or logs to debug the object state.\n6. Optionally use `Optional` to avoid nulls in some cases.",
    "start_char": 0,
    "end_char": 531
  },
  {
    "question": "How can I fix a 'TypeError: undefined is not a function' in JavaScript?",
    "label": "typeerror, javascript",
    "language": "en",
    "context": "A JavaScript developer is facing a TypeError related to calling a non-function.",
    "answer": "This error happens when you try to invoke a value that is not a function.\n\n**Steps to fix:**\n1. Identify the line in the stack trace where the error occurs.\n2. Log the variable to check its value before invoking it.\n3. Make sure the variable actually holds a function.\n4. Check if the function is defined and imported correctly.\n5. If it’s an object method, ensure `this` refers to the correct context.\n6. Fix scoping or reassignment issues if any.",
    "start_char": 0,
    "end_char": 517
  }
]